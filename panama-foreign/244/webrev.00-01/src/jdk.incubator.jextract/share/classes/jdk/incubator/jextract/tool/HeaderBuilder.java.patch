diff a/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/tool/HeaderBuilder.java b/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/tool/HeaderBuilder.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/tool/HeaderBuilder.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/tool/HeaderBuilder.java
@@ -38,31 +38,20 @@
 class HeaderBuilder extends JavaSourceBuilder {
     HeaderBuilder(String className, String pkgName, ConstantHelper constantHelper) {
         super(className, pkgName, constantHelper);
     }
 
-    private String getArrayTypeName(Class<?> type) {
-        assert type.isArray();
-        Class<?> elemType = type.getComponentType();
-        return elemType.isArray()? getArrayTypeName(elemType) + "[]" : elemType.getName() + "[]";
-    }
-
     public void addFunctionalInterface(String name, MethodType mtype,  FunctionDescriptor fDesc) {
         incrAlign();
         indent();
         sb.append("public interface " + name + " {\n");
         incrAlign();
         indent();
         sb.append(mtype.returnType().getName() + " apply(");
         String delim = "";
         for (int i = 0 ; i < mtype.parameterCount(); i++) {
-            Class<?> paramType = mtype.parameterType(i);
-            if (paramType.isArray()) {
-                sb.append(delim + getArrayTypeName(paramType) + " x" + i);
-            } else {
-                sb.append(delim + paramType.getName() + " x" + i);
-            }
+            sb.append(delim + mtype.parameterType(i).getName() + " x" + i);
             delim = ", ";
         }
         sb.append(");\n");
         addFunctionalFactory(name, mtype, fDesc);
         decrAlign();
@@ -83,12 +72,11 @@
             String pName = paramNames.get(i);
             if (pName.isEmpty()) {
                 pName = "x" + i;
             }
             pNames.add(pName);
-            Class<?> paramType = mtype.parameterType(i);
-            sb.append(delim + (paramType.isArray()? getArrayTypeName(paramType) : paramType.getName()) + " " + pName);
+            sb.append(delim + mtype.parameterType(i).getName() + " " + pName);
             delim = ", ";
         }
         if (varargs) {
             String lastArg = "x" + numParams;
             if (numParams > 0) {
