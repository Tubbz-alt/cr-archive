diff a/test/jdk/tools/jextract/RepeatedDeclsTest.java b/test/jdk/tools/jextract/RepeatedDeclsTest.java
--- a/test/jdk/tools/jextract/RepeatedDeclsTest.java
+++ b/test/jdk/tools/jextract/RepeatedDeclsTest.java
@@ -80,23 +80,23 @@
             checkIntGetter(cls, "C", 0);
             checkIntGetter(cls, "M", 1);
             checkIntGetter(cls, "Y", 2);
 
             // check Point layout
-            Class<?> pointCls = loader.loadClass("repeatedDecls_h$CPoint");
+            Class<?> pointCls = loader.loadClass("repeatedDecls_h$Point");
             checkPoint(pointCls);
-            Class<?> point_tCls = loader.loadClass("repeatedDecls_h$CPoint_t");
+            Class<?> point_tCls = loader.loadClass("repeatedDecls_h$Point_t");
             checkPoint(point_tCls);
             assertTrue(pointCls.isAssignableFrom(point_tCls));
-            Class<?> point$0Cls = loader.loadClass("repeatedDecls_h$CPOINT$0");
+            Class<?> point$0Cls = loader.loadClass("repeatedDecls_h$POINT$0");
             checkPoint(point$0Cls);
             assertTrue(pointCls.isAssignableFrom(point$0Cls));
 
             // check Point3D layout
-            Class<?> point3DCls = loader.loadClass("repeatedDecls_h$CPoint3D");
+            Class<?> point3DCls = loader.loadClass("repeatedDecls_h$Point3D");
             checkPoint3D(point3DCls);
-            Class<?> point3D_tCls = loader.loadClass("repeatedDecls_h$CPoint3D_t");
+            Class<?> point3D_tCls = loader.loadClass("repeatedDecls_h$Point3D_t");
             checkPoint3D(point3D_tCls);
             assertTrue(point3DCls.isAssignableFrom(point3D_tCls));
         } finally {
             deleteDir(repeatedDeclsOutput);
         }
