diff a/make/hotspot/lib/JvmOverrideFiles.gmk b/make/hotspot/lib/JvmOverrideFiles.gmk
--- a/make/hotspot/lib/JvmOverrideFiles.gmk
+++ b/make/hotspot/lib/JvmOverrideFiles.gmk
@@ -90,13 +90,10 @@
   BUILD_LIBJVM_sharedRuntimeTrans.cpp_CXXFLAGS := $(FDLIBM_CFLAGS) $(LIBJVM_FDLIBM_COPY_OPT_FLAG)
   ifeq ($(TOOLCHAIN_TYPE), clang)
     # NOTE: The old build tested clang version to make sure this workaround
     # for the clang bug was still needed.
     BUILD_LIBJVM_loopTransform.cpp_CXXFLAGS := $(CXX_O_FLAG_NONE)
-    ifneq ($(DEBUG_LEVEL), slowdebug)
-      BUILD_LIBJVM_unsafe.cpp_CXXFLAGS := -O1
-    endif
 
     # The following files are compiled at various optimization
     # levels due to optimization issues encountered at the
     # default level. The Clang compiler issues a compile
     # time error if there is an optimization level specification
@@ -108,11 +105,10 @@
     # need this special handling.
     JVM_PRECOMPILED_HEADER_EXCLUDE := \
         sharedRuntimeTrig.cpp \
         sharedRuntimeTrans.cpp \
         loopTransform.cpp \
-        unsafe.cpp \
         jvmciCompilerToVM.cpp \
         $(OPT_SPEED_SRC) \
         #
   endif
 
