diff a/src/hotspot/share/oops/oopHandle.hpp b/src/hotspot/share/oops/oopHandle.hpp
--- a/src/hotspot/share/oops/oopHandle.hpp
+++ b/src/hotspot/share/oops/oopHandle.hpp
@@ -23,11 +23,13 @@
  */
 
 #ifndef SHARE_OOPS_OOPHANDLE_HPP
 #define SHARE_OOPS_OOPHANDLE_HPP
 
-#include "oops/oop.hpp"
+#include "oops/oopsHierarchy.hpp"
+
+class OopStorage;
 
 // Simple class for encapsulating oop pointers stored in metadata.
 // These are different from Handle.  The Handle class stores pointers
 // to oops on the stack, and manages the allocation from a thread local
 // area in the constructor.
@@ -41,17 +43,16 @@
   oop* _obj;
 
 public:
   OopHandle() : _obj(NULL) {}
   explicit OopHandle(oop* w) : _obj(w) {}
-
-  inline static OopHandle create(oop obj);
+  OopHandle(OopStorage* storage, oop obj);
 
   inline oop resolve() const;
   inline oop peek() const;
 
-  inline void release();
+  inline void release(OopStorage* storage);
 
   // Used only for removing handle.
   oop* ptr_raw() const { return _obj; }
 };
 
