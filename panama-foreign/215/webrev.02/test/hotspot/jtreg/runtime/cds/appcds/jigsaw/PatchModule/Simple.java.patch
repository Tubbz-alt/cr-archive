diff a/test/hotspot/jtreg/runtime/cds/appcds/jigsaw/PatchModule/Simple.java b/test/hotspot/jtreg/runtime/cds/appcds/jigsaw/PatchModule/Simple.java
--- a/test/hotspot/jtreg/runtime/cds/appcds/jigsaw/PatchModule/Simple.java
+++ b/test/hotspot/jtreg/runtime/cds/appcds/jigsaw/PatchModule/Simple.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2016, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2016, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -31,10 +31,11 @@
  * @library /test/lib
  * @build PatchMain
  * @run driver Simple
  */
 
+import jdk.test.lib.cds.CDSTestUtils;
 import jdk.test.lib.compiler.InMemoryJavaCompiler;
 import jdk.test.lib.process.OutputAnalyzer;
 
 public class Simple {
     private static String moduleJar;
@@ -74,7 +75,24 @@
             "--patch-module=java.naming=" + moduleJar,
             "-Xlog:class+load",
             "-Xlog:class+path=info",
             "PatchMain", "javax.naming.spi.NamingManager")
             .assertSilentlyDisabledCDS(0, "I pass!");
+
+        // ========================================
+        if (!CDSTestUtils.DYNAMIC_DUMP) {
+            System.out.println("Dump again without --patch-module");
+            output =
+                TestCommon.dump(null,
+                    TestCommon.list("javax/naming/spi/NamingManager"));
+            output.shouldHaveExitValue(0);
+
+            TestCommon.run(
+                "-XX:+UnlockDiagnosticVMOptions",
+                "--patch-module=java.naming=" + moduleJar,
+                "-Xlog:class+load",
+                "-Xlog:class+path=info",
+                "PatchMain", "javax.naming.spi.NamingManager")
+                .assertSilentlyDisabledCDS(0, "I pass!");
+        }
     }
 }
