diff a/src/hotspot/share/classfile/javaClasses.hpp b/src/hotspot/share/classfile/javaClasses.hpp
--- a/src/hotspot/share/classfile/javaClasses.hpp
+++ b/src/hotspot/share/classfile/javaClasses.hpp
@@ -694,10 +694,11 @@
   static int _clazz_offset;
   static int _name_offset;
   static int _type_offset;
   static int _slot_offset;
   static int _modifiers_offset;
+  static int _trusted_final_offset;
   static int _signature_offset;
   static int _annotations_offset;
 
   static void compute_offsets();
 
@@ -721,10 +722,12 @@
   static void set_slot(oop reflect, int value);
 
   static int modifiers(oop field);
   static void set_modifiers(oop field, int value);
 
+  static void set_trusted_final(oop field);
+
   static void set_signature(oop constructor, oop value);
   static void set_annotations(oop constructor, oop value);
   static void set_parameter_annotations(oop method, oop value);
   static void set_annotation_default(oop method, oop value);
 
@@ -1119,10 +1122,11 @@
     MN_IS_METHOD             = 0x00010000, // method (not constructor)
     MN_IS_CONSTRUCTOR        = 0x00020000, // constructor
     MN_IS_FIELD              = 0x00040000, // field
     MN_IS_TYPE               = 0x00080000, // nested type
     MN_CALLER_SENSITIVE      = 0x00100000, // @CallerSensitive annotation detected
+    MN_TRUSTED_FINAL         = 0x00200000, // trusted final field
     MN_REFERENCE_KIND_SHIFT  = 24, // refKind
     MN_REFERENCE_KIND_MASK   = 0x0F000000 >> MN_REFERENCE_KIND_SHIFT,
     // The SEARCH_* bits are not for MN.flags but for the matchFlags argument of MHN.getMembers:
     MN_SEARCH_SUPERCLASSES   = 0x00100000, // walk super classes
     MN_SEARCH_INTERFACES     = 0x00200000, // walk implemented interfaces
