diff a/src/jdk.jfr/share/classes/jdk/jfr/internal/tool/Summary.java b/src/jdk.jfr/share/classes/jdk/jfr/internal/tool/Summary.java
--- a/src/jdk.jfr/share/classes/jdk/jfr/internal/tool/Summary.java
+++ b/src/jdk.jfr/share/classes/jdk/jfr/internal/tool/Summary.java
@@ -118,10 +118,14 @@
                 while (input.position() < chunkEnd) {
                     long pos = input.position();
                     int size = input.readInt();
                     long eventTypeId = input.readLong();
                     Statistics s = stats.get(eventTypeId);
+                    if (s == null) {
+                        s = new Statistics(eventTypeId + " (missing event metadata)");
+                        stats.put(eventTypeId, s);
+                    }
                     if (s != null) {
                         s.count++;
                         s.size += size;
                     }
                     input.position(pos + size);
@@ -136,11 +140,10 @@
             long adjustNanos = first.getStartNanos() - epochSeconds * 1_000_000_000L;
             println(" Version: " + first.getMajor() + "." + first.getMinor());
             println(" Chunks: " + chunks);
             println(" Start: " + DATE_FORMAT.format(Instant.ofEpochSecond(epochSeconds, adjustNanos)) + " (UTC)");
             println(" Duration: " + (totalDuration + 500_000_000) / 1_000_000_000 + " s");
-
             List<Statistics> statsList = new ArrayList<>(stats.values());
             Collections.sort(statsList, (u, v) -> Long.compare(v.count, u.count));
             println();
             String header = "      Count  Size (bytes) ";
             String typeHeader = " Event Type";
