diff a/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/MemoryAddressImpl.java b/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/MemoryAddressImpl.java
--- a/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/MemoryAddressImpl.java
+++ b/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/MemoryAddressImpl.java
@@ -43,10 +43,15 @@
     private static final InternalForeign foreign = InternalForeign.getInstancePrivileged();
 
     private final MemorySegmentImpl segment;
     private final long offset;
 
+    public MemoryAddressImpl(long offset) {
+        this.segment = MemorySegmentImpl.NOTHING;
+        this.offset = offset;
+    }
+
     public MemoryAddressImpl(MemorySegmentImpl segment, long offset) {
         this.segment = Objects.requireNonNull(segment);
         this.offset = offset;
     }
 
@@ -62,11 +67,14 @@
     }
 
     // MemoryAddress methods
 
     @Override
-    public long offset() {
+    public long segmentOffset() {
+        if (segment() == null) {
+            throw new UnsupportedOperationException("Address does not have a segment");
+        }
         return offset;
     }
 
     @Override
     public long toRawLongValue() {
@@ -76,11 +84,12 @@
         return unsafeGetOffset();
     }
 
     @Override
     public MemorySegment segment() {
-        return segment;
+        return segment != MemorySegmentImpl.NOTHING ?
+                segment : null;
     }
 
     @Override
     public MemoryAddress addOffset(long bytes) {
         return new MemoryAddressImpl(segment, offset + bytes);
