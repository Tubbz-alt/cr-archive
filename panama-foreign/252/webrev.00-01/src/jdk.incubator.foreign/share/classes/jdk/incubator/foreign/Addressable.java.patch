diff a/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/Addressable.java b/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/Addressable.java
--- a/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/Addressable.java
+++ b/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/Addressable.java
@@ -1,10 +1,10 @@
 package jdk.incubator.foreign;
 
 /**
  * Represents a type which is <em>addressable</em>. An addressable type is one which can projected down to
- * a memory address instance (see {@link #address()}. Examples of addressable types are {@link MemorySegment},
+ * a memory address instance (see {@link #address()}). Examples of addressable types are {@link MemorySegment},
  * and {@link MemoryAddress}.
  *
  * @apiNote In the future, if the Java language permits, {@link Addressable}
  * may become a {@code sealed} interface, which would prohibit subclassing except by
  * explicitly permitted types, such as {@link MemorySegment} and {@link MemoryAddress}.
