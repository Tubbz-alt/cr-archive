diff a/test/jdk/java/foreign/TestByteBuffer.java b/test/jdk/java/foreign/TestByteBuffer.java
--- a/test/jdk/java/foreign/TestByteBuffer.java
+++ b/test/jdk/java/foreign/TestByteBuffer.java
@@ -234,22 +234,20 @@
                 checkTuples(base, mbb);
             });
         }
     }
 
-    static final int ALL_ACCESS_MODES = READ | WRITE | CLOSE | ACQUIRE | HANDOFF;
-
     @Test
     public void testDefaultAccessModesMappedSegment() throws Throwable {
         try (MappedMemorySegment segment = MemorySegment.mapFromPath(tempPath, 8, FileChannel.MapMode.READ_WRITE)) {
-            assertTrue(segment.hasAccessModes(ALL_ACCESS_MODES));
-            assertEquals(segment.accessModes(), ALL_ACCESS_MODES);
+            assertTrue(segment.hasAccessModes(DEFAULT_ACCESS));
+            assertEquals(segment.accessModes(), DEFAULT_ACCESS);
         }
 
         try (MappedMemorySegment segment = MemorySegment.mapFromPath(tempPath, 8, FileChannel.MapMode.READ_ONLY)) {
-            assertTrue(segment.hasAccessModes(ALL_ACCESS_MODES & ~WRITE));
-            assertEquals(segment.accessModes(), ALL_ACCESS_MODES& ~WRITE);
+            assertTrue(segment.hasAccessModes(DEFAULT_ACCESS & ~WRITE));
+            assertEquals(segment.accessModes(), DEFAULT_ACCESS & ~WRITE);
         }
     }
 
     @Test
     public void testMappedSegment() throws Throwable {
@@ -463,18 +461,18 @@
 
     @Test
     public void testDefaultAccessModesOfBuffer() {
         ByteBuffer rwBuffer = ByteBuffer.wrap(new byte[4]);
         try (MemorySegment segment = MemorySegment.ofByteBuffer(rwBuffer)) {
-            assertTrue(segment.hasAccessModes(ALL_ACCESS_MODES));
-            assertEquals(segment.accessModes(), ALL_ACCESS_MODES);
+            assertTrue(segment.hasAccessModes(DEFAULT_ACCESS));
+            assertEquals(segment.accessModes(), DEFAULT_ACCESS);
         }
 
         ByteBuffer roBuffer = rwBuffer.asReadOnlyBuffer();
         try (MemorySegment segment = MemorySegment.ofByteBuffer(roBuffer)) {
-            assertTrue(segment.hasAccessModes(ALL_ACCESS_MODES & ~WRITE));
-            assertEquals(segment.accessModes(), ALL_ACCESS_MODES & ~WRITE);
+            assertTrue(segment.hasAccessModes(DEFAULT_ACCESS & ~WRITE));
+            assertEquals(segment.accessModes(), DEFAULT_ACCESS & ~WRITE);
         }
     }
 
     @Test(dataProvider="bufferSources")
     public void testBufferToSegment(ByteBuffer bb, Predicate<MemorySegment> segmentChecker) {
