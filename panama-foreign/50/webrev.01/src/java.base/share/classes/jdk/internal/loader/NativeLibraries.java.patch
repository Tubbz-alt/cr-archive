diff a/src/java.base/share/classes/jdk/internal/loader/NativeLibraries.java b/src/java.base/share/classes/jdk/internal/loader/NativeLibraries.java
--- a/src/java.base/share/classes/jdk/internal/loader/NativeLibraries.java
+++ b/src/java.base/share/classes/jdk/internal/loader/NativeLibraries.java
@@ -298,10 +298,24 @@
             }
             return true;
         }
     }
 
+    public static NativeLibrary defaultLibrary = new NativeLibraryImpl(Object.class, "<default>", true) {
+
+        @Override
+        boolean open() {
+            throw new UnsupportedOperationException("Cannot load default library");
+        }
+
+        @Override
+        public long find(String name) {
+            return NativeLibraries.findEntryInProcess(name);
+        }
+
+    };
+
     /*
      * The run() method will be invoked when this class loader becomes
      * phantom reachable to unload the native library.
      */
     static class Unloader implements Runnable {
@@ -373,6 +387,7 @@
     // and JNI_OnUnload is NativeLibrary class
     private static native boolean load(NativeLibraryImpl impl, String name, boolean isBuiltin);
     private static native void unload(String name, boolean isBuiltin, long handle);
     private static native String findBuiltinLib(String name);
     private static native long findEntry0(NativeLibraryImpl lib, String name);
+    private static native long findEntryInProcess(String name);
 }
