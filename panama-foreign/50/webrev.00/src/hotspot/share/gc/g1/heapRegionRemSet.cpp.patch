diff a/src/hotspot/share/gc/g1/heapRegionRemSet.cpp b/src/hotspot/share/gc/g1/heapRegionRemSet.cpp
--- a/src/hotspot/share/gc/g1/heapRegionRemSet.cpp
+++ b/src/hotspot/share/gc/g1/heapRegionRemSet.cpp
@@ -100,64 +100,24 @@
 
 void OtherRegionsTable::link_to_all(PerRegionTable* prt) {
   // We always append to the beginning of the list for convenience;
   // the order of entries in this list does not matter.
   if (_first_all_fine_prts != NULL) {
-    assert(_first_all_fine_prts->prev() == NULL, "invariant");
-    _first_all_fine_prts->set_prev(prt);
     prt->set_next(_first_all_fine_prts);
   } else {
     // this is the first element we insert. Adjust the "last" pointer
     _last_all_fine_prts = prt;
     assert(prt->next() == NULL, "just checking");
   }
-  // the new element is always the first element without a predecessor
-  prt->set_prev(NULL);
   _first_all_fine_prts = prt;
 
-  assert(prt->prev() == NULL, "just checking");
   assert(_first_all_fine_prts == prt, "just checking");
   assert((_first_all_fine_prts == NULL && _last_all_fine_prts == NULL) ||
          (_first_all_fine_prts != NULL && _last_all_fine_prts != NULL),
          "just checking");
   assert(_last_all_fine_prts == NULL || _last_all_fine_prts->next() == NULL,
          "just checking");
-  assert(_first_all_fine_prts == NULL || _first_all_fine_prts->prev() == NULL,
-         "just checking");
-}
-
-void OtherRegionsTable::unlink_from_all(PerRegionTable* prt) {
-  if (prt->prev() != NULL) {
-    assert(_first_all_fine_prts != prt, "just checking");
-    prt->prev()->set_next(prt->next());
-    // removing the last element in the list?
-    if (_last_all_fine_prts == prt) {
-      _last_all_fine_prts = prt->prev();
-    }
-  } else {
-    assert(_first_all_fine_prts == prt, "just checking");
-    _first_all_fine_prts = prt->next();
-    // list is empty now?
-    if (_first_all_fine_prts == NULL) {
-      _last_all_fine_prts = NULL;
-    }
-  }
-
-  if (prt->next() != NULL) {
-    prt->next()->set_prev(prt->prev());
-  }
-
-  prt->set_next(NULL);
-  prt->set_prev(NULL);
-
-  assert((_first_all_fine_prts == NULL && _last_all_fine_prts == NULL) ||
-         (_first_all_fine_prts != NULL && _last_all_fine_prts != NULL),
-         "just checking");
-  assert(_last_all_fine_prts == NULL || _last_all_fine_prts->next() == NULL,
-         "just checking");
-  assert(_first_all_fine_prts == NULL || _first_all_fine_prts->prev() == NULL,
-         "just checking");
 }
 
 CardIdx_t OtherRegionsTable::card_within_region(OopOrNarrowOopStar within_region, HeapRegion* hr) {
   assert(hr->is_in_reserved(within_region),
          "HeapWord " PTR_FORMAT " is outside of region %u [" PTR_FORMAT ", " PTR_FORMAT ")",
