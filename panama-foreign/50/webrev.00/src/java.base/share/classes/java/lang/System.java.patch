diff a/src/java.base/share/classes/java/lang/System.java b/src/java.base/share/classes/java/lang/System.java
--- a/src/java.base/share/classes/java/lang/System.java
+++ b/src/java.base/share/classes/java/lang/System.java
@@ -60,11 +60,12 @@
 import java.util.Set;
 import java.util.function.Supplier;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.stream.Stream;
 
-import jdk.internal.access.foreign.NativeLibraryProxy;
+import jdk.internal.loader.NativeLibraries;
+import jdk.internal.loader.NativeLibrary;
 import jdk.internal.util.StaticProperty;
 import jdk.internal.module.ModuleBootstrap;
 import jdk.internal.module.ServicesCatalog;
 import jdk.internal.reflect.CallerSensitive;
 import jdk.internal.reflect.Reflection;
@@ -2276,27 +2277,8 @@
             }
 
             public void setCause(Throwable t, Throwable cause) {
                 t.setCause(cause);
             }
-
-            public void loadLibrary(Class<?> caller, String library) {
-                assert library.indexOf(java.io.File.separatorChar) < 0;
-                ClassLoader.loadLibrary(caller, library, false);
-            }
-
-            //Panama
-            @Override
-            public NativeLibraryProxy loadLibrary(MethodHandles.Lookup lookup, String libname) {
-                return Runtime.getRuntime().loadLibrary(lookup, libname);
-            }
-            @Override
-            public NativeLibraryProxy load(MethodHandles.Lookup lookup, String libname) {
-                return Runtime.getRuntime().load0(lookup.lookupClass(), libname);
-            }
-            @Override
-            public NativeLibraryProxy defaultLibrary() {
-                return Runtime.getRuntime().defaultLibrary();
-            }
         });
     }
 }
