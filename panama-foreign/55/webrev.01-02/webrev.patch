diff a/test/jdk/java/foreign/Test8241148.java b/test/jdk/java/foreign/Test8241148.java
--- a/test/jdk/java/foreign/Test8241148.java
+++ b/test/jdk/java/foreign/Test8241148.java
@@ -30,11 +30,10 @@
 import jdk.incubator.foreign.MemoryAddress;
 import jdk.incubator.foreign.SystemABI;
 import jdk.incubator.foreign.unsafe.ForeignUnsafe;
 
 import org.testng.annotations.*;
-import static jdk.incubator.foreign.MemoryAddress.NULL;
 import static jdk.incubator.foreign.MemoryLayouts.*;
 import static org.testng.Assert.*;
 
 /*
  * @test
@@ -70,17 +69,16 @@
     @Test
     public void test() throws Throwable {
         try (var seg = ForeignUnsafe.toCString("java")) {
             assertEquals((int) strlen.invoke(seg.baseAddress()), 4);
         }
-        try (var pathSeg = ForeignUnsafe.toCString("PATH")) {
-            var path = (MemoryAddress) getenv.invoke(pathSeg.baseAddress());
-            if (!path.equals(NULL)) {
-                int len = (int) strlen.invoke(path);
-                var pathStr = ForeignUnsafe.toJavaString(path);
-                assertEquals(pathStr.length(), len);
-                System.out.println("PATH = " + pathStr);
-                assertEquals(pathStr, System.getenv("PATH"));
+        var envMap = System.getenv();
+        for (var entry : envMap.entrySet()) {
+            try (var envVar = ForeignUnsafe.toCString(entry.getKey())) {
+                var envValue = (MemoryAddress) getenv.invoke(envVar.baseAddress());
+                var envValueStr = ForeignUnsafe.toJavaString(envValue);
+                assertEquals(entry.getValue(), envValueStr);
+                System.out.println(entry.getKey() + " = " + envValueStr);
             }
         }
     }
 }
