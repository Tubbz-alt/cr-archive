diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/LibClang.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/LibClang.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/LibClang.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/LibClang.java
@@ -29,11 +29,11 @@
 import jdk.incubator.foreign.LibraryLookup;
 import jdk.incubator.foreign.MemoryAddress;
 import jdk.incubator.foreign.MemorySegment;
 import jdk.incubator.foreign.SystemABI;
 import jdk.internal.clang.libclang.Index_h;
-import jdk.internal.foreign.InternalForeign;
+import jdk.internal.foreign.abi.SharedUtils;
 import jdk.internal.jextract.impl.LayoutUtils;
 
 import java.lang.invoke.MethodHandle;
 import java.lang.invoke.MethodType;
 
@@ -48,11 +48,11 @@
     static {
         if (!CRASH_RECOVERY) {
             //this is an hack - needed because clang_toggleCrashRecovery only takes effect _after_ the
             //first call to createIndex.
             try {
-                SystemABI abi = InternalForeign.getInstancePrivileged().getSystemABI();
+                SystemABI abi = SharedUtils.getSystemABI();
                 String putenv = abi.name().equals(SystemABI.ABI_WINDOWS) ?
                         "_putenv" : "putenv";
                 MethodHandle PUT_ENV = abi.downcallHandle(LibraryLookup.ofDefault().lookup(putenv),
                                 MethodType.methodType(int.class, MemoryAddress.class),
                                 FunctionDescriptor.of(LayoutUtils.C_INT, LayoutUtils.C_POINTER));
