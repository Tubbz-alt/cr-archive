diff a/doc/panama_jextract.md b/doc/panama_jextract.md
--- a/doc/panama_jextract.md
+++ b/doc/panama_jextract.md
@@ -580,12 +580,12 @@
 import static org.sqlite.sqlite3_h.*;
 
 public class SqliteMain {
    public static void main(String[] args) throws Exception {
         try (var scope = new CScope()) {
-            // char** errMsg;
-            var errMsg = Cpointer.allocate(NULL, scope);
+            // char** errMsgPtrPtr;
+            var errMsgPtrPtr = Cpointer.allocate(NULL, scope);
 
             // sqlite3** dbPtrPtr;
             var dbPtrPtr = Cpointer.allocate(NULL, scope);
 
             int rc = sqlite3_open(Cstring.toCString("employee.db",scope), dbPtrPtr);
@@ -604,16 +604,16 @@
                 "CREATE TABLE EMPLOYEE ("  +
                 "  ID INT PRIMARY KEY NOT NULL," +
                 "  NAME TEXT NOT NULL,"    +
                 "  SALARY REAL NOT NULL )", scope);
 
-            rc = sqlite3_exec(dbPtr, sql, NULL, NULL, errMsg);
+            rc = sqlite3_exec(dbPtr, sql, NULL, NULL, errMsgPtrPtr);
 
             if (rc != 0) {
                 System.err.println("sqlite3_exec failed: " + rc);
-                System.err.println("SQL error: " + Cstring.toJavaString(Cpointer.get(errMsg)));
-                //sqlite3_free(errMsg);
+                System.err.println("SQL error: " + Cstring.toJavaString(Cpointer.get(errMsgPtrPtr)));
+                sqlite3_free(Cpointer.get(errMsgPtrPtr));
             } else {
                 System.out.println("employee table created");
             }
 
             // insert two rows
@@ -621,16 +621,16 @@
                 "INSERT INTO EMPLOYEE (ID,NAME,SALARY) " +
                     "VALUES (134, 'Xyz', 200000.0); " +
                 "INSERT INTO EMPLOYEE (ID,NAME,SALARY) " +
                     "VALUES (333, 'Abc', 100000.0);", scope
             );
-            rc = sqlite3_exec(dbPtr, sql, NULL, NULL, errMsg);
+            rc = sqlite3_exec(dbPtr, sql, NULL, NULL, errMsgPtrPtr);
 
             if (rc != 0) {
                 System.err.println("sqlite3_exec failed: " + rc);
-                System.err.println("SQL error: " + Cstring.toJavaString(Cpointer.get(errMsg)));
-                // sqlite3_free(Cpointer.get(errMsg));
+                System.err.println("SQL error: " + Cstring.toJavaString(Cpointer.get(errMsgPtrPtr)));
+                sqlite3_free(Cpointer.get(errMsgPtrPtr));
             } else {
                 System.out.println("rows inserted");
             }
 
             int[] rowNum = new int[1];
@@ -649,24 +649,25 @@
             });
             scope.register(callback);
 
             // select query
             sql = Cstring.toCString("SELECT * FROM EMPLOYEE", scope);
-            rc = sqlite3_exec(dbPtr, sql, callback.baseAddress(), NULL, errMsg);
+            rc = sqlite3_exec(dbPtr, sql, callback.baseAddress(), NULL, errMsgPtrPtr);
 
             if (rc != 0) {
                 System.err.println("sqlite3_exec failed: " + rc);
-                System.err.println("SQL error: " + Cstring.toJavaString(Cpointer.get(errMsg)));
-                // sqlite3_free(Cpointer.get(errMsg));
+                System.err.println("SQL error: " + Cstring.toJavaString(Cpointer.get(errMsgPtrPtr)));
+                sqlite3_free(Cpointer.get(errMsgPtrPtr));
             } else {
                 System.out.println("done");
             }
 
             sqlite3_close(dbPtr);
         }
     }
 }
+
 ```
 
 ### Compiling and running the libgit2 sample
 
 ```sh
