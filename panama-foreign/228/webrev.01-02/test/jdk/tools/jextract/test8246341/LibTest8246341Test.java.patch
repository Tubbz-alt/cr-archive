diff a/test/jdk/tools/jextract/test8246341/LibTest8246341Test.java b/test/jdk/tools/jextract/test8246341/LibTest8246341Test.java
--- a/test/jdk/tools/jextract/test8246341/LibTest8246341Test.java
+++ b/test/jdk/tools/jextract/test8246341/LibTest8246341Test.java
@@ -44,17 +44,10 @@
 public class LibTest8246341Test {
     private static MemoryAddress getPointerAt(MemoryAddress addr, int element) {
         return MemoryAccess.getAddress(addr, element*C_POINTER.byteSize());
     }
 
-    public static MemoryAddress allocatePointer(MemoryAddress value, NativeScope scope) {
-        var addr = scope.allocate(C_POINTER);
-        var handle = C_POINTER.varHandle(long.class);
-        handle.set(addr, value.toRawLongValue());
-        return addr;
-    }
-
     @Test
     public void testPointerArray() {
         boolean[] callbackCalled = new boolean[1];
         try (var callback = func$callback.allocate((argc, argv) -> {
             callbackCalled[0] = true;
@@ -71,11 +64,12 @@
     }
 
     @Test
     public void testPointerAllocate() {
         try (var scope = NativeScope.boundedScope(C_POINTER.byteSize())) {
-            var addr = allocatePointer(MemoryAddress.NULL, scope);
+            var addr = scope.allocate(C_POINTER);
+            MemoryAccess.setAddress(addr, 0, MemoryAddress.NULL);
             fillin(addr);
             assertEquals(toJavaStringRestricted(getPointerAt(addr, 0)), "hello world");
         }
     }
 }
