diff a/doc/panama_jextract.md b/doc/panama_jextract.md
--- a/doc/panama_jextract.md
+++ b/doc/panama_jextract.md
@@ -508,40 +508,34 @@
 
 ### Java program that uses libgit2 to clone github repo
 
 ```java
 
+import jdk.incubator.foreign.MemoryAccess;
 import jdk.incubator.foreign.MemoryAddress;
 import jdk.incubator.foreign.NativeScope;
 import static com.github.git2_h.*;
 import static jdk.incubator.foreign.CSupport.*;
 import static jdk.incubator.foreign.MemoryAddress.NULL;
 
 public class GitClone {
-    private static MemoryAddress allocatePointer(MemoryAddress value, NativeScope scope) {
-        var addr = scope.allocate(C_POINTER);
-        var handle = C_POINTER.varHandle(long.class);
-        handle.set(addr, value.toRawLongValue());
-        return addr;
-    }
-
     public static void main(String[] args) {
           if (args.length != 2) {
               System.err.println("java GitClone <url> <path>");
               System.exit(1);
           }
           git_libgit2_init();
           try (var scope = NativeScope.unboundedScope()) {
-              var repo = allocatePointer(NULL, scope);
+              var repo = scope.allocate(C_POINTER);
+              MemoryAccess.setAddress(repo, 0, NULL);
               var url = toCString(args[0], scope);
               var path = toCString(args[1], scope);
               System.out.println(git_clone(repo, url, path, NULL));
-          }
+          }          
           git_libgit2_shutdown();
     }
 }
-
 ```
 
 ### Compiling and running the libgit2 sample
 
 ```sh
@@ -585,17 +579,10 @@
 import static org.sqlite.sqlite3_h.*;
 import static org.sqlite.RuntimeHelper.*;
 import static jdk.incubator.foreign.CSupport.*;
 
 public class SqliteMain {
-   private static MemoryAddress allocatePointer(MemoryAddress value, NativeScope scope) {
-        var addr = scope.allocate(C_POINTER);
-        var handle = C_POINTER.varHandle(long.class);
-        handle.set(addr, value.toRawLongValue());
-        return addr;
-   }
-
    private static MemoryAddress getPointer(MemoryAddress addr) {
        return getPointer(addr, 0);
    }
 
    private static MemoryAddress getPointer(MemoryAddress addr, int element) {
@@ -603,14 +590,16 @@
    }
 
    public static void main(String[] args) throws Exception {
         try (var scope = NativeScope.unboundedScope()) {
             // char** errMsgPtrPtr;
-            var errMsgPtrPtr = allocatePointer(NULL, scope);
+            var errMsgPtrPtr = scope.allocate(C_POINTER);
+            MemoryAccess.setAddress(errMsgPtrPtr, 0, NULL);
 
             // sqlite3** dbPtrPtr;
-            var dbPtrPtr = allocatePointer(NULL, scope);
+            var dbPtrPtr = scope.allocate(C_POINTER);
+            MemoryAccess.setAddress(dbPtrPtr, 0, NULL);
 
             int rc = sqlite3_open(toCString("employee.db",scope), dbPtrPtr);
             if (rc != 0) {
                 System.err.println("sqlite3_open failed: " + rc);
                 return;
