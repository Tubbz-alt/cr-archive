diff a/test/jdk/tools/jextract/ConstantsTest.java b/test/jdk/tools/jextract/ConstantsTest.java
--- a/test/jdk/tools/jextract/ConstantsTest.java
+++ b/test/jdk/tools/jextract/ConstantsTest.java
@@ -20,10 +20,11 @@
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */
 
 import jdk.incubator.foreign.CSupport;
+import jdk.incubator.foreign.MemorySegment;
 import org.testng.annotations.AfterTest;
 import org.testng.annotations.BeforeTest;
 import org.testng.annotations.DataProvider;
 import org.testng.annotations.Test;
 import java.nio.file.Path;
@@ -95,22 +96,22 @@
                 { "CHAR_VALUE", int.class, equalsTo(104) }, //integer char constants have type int
                 { "MULTICHAR_VALUE", int.class, equalsTo(26728) },  //integer char constants have type int
                 { "BOOL_VALUE", byte.class, equalsTo((byte)1) },
                 { "SUB", int.class, equalsTo( 7 ) },
                 // pointer type values
-                { "STR", MemoryAddress.class, equalsToJavaStr("Hello") },
-                { "QUOTE", MemoryAddress.class, equalsToJavaStr("QUOTE") },
+                { "STR", MemorySegment.class, equalsToJavaStr("Hello") },
+                { "QUOTE", MemorySegment.class, equalsToJavaStr("QUOTE") },
                 { "ZERO_PTR", MemoryAddress.class, equalsPtrContents(0) },
                 { "F_PTR", MemoryAddress.class, equalsPtrContents(0xFFFFFFFFFFFFFFFFL) },
         };
     }
 
     static Consumer<Object> equalsTo(Object expected) {
         return actual -> assertEquals(actual, expected);
     }
 
-    static Consumer<MemoryAddress> equalsToJavaStr(String expected) {
+    static Consumer<MemorySegment> equalsToJavaStr(String expected) {
         return actual -> assertEquals(CSupport.toJavaString(actual), expected);
     }
 
     static Consumer<MemoryAddress> equalsPtrContents(long expected) {
         return actual -> assertEquals(actual.toRawLongValue(), expected);
