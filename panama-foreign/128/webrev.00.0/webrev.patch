diff a/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/MemoryLayouts.java b/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/MemoryLayouts.java
--- a/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/MemoryLayouts.java
+++ b/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/MemoryLayouts.java
@@ -211,10 +211,15 @@
     /**
      * The {@code double} native type.
      */
     public static final ValueLayout C_DOUBLE;
 
+    /**
+     * The {@code long double} native type.
+     */
+    public static final ValueLayout C_LONGDOUBLE;
+
     /**
      * The {@code T*} native type.
      */
     public static final ValueLayout C_POINTER;
 
@@ -234,10 +239,11 @@
                 C_ULONG = SysV.C_ULONG;
                 C_LONGLONG = SysV.C_LONGLONG;
                 C_ULONGLONG = SysV.C_ULONGLONG;
                 C_FLOAT = SysV.C_FLOAT;
                 C_DOUBLE = SysV.C_DOUBLE;
+                C_LONGDOUBLE = SysV.C_LONGDOUBLE;
                 C_POINTER = SysV.C_POINTER;
             }
             case ABI_WINDOWS -> {
                 C_BOOL = WinABI.C_BOOL;
                 C_UCHAR = WinABI.C_UCHAR;
@@ -251,10 +257,11 @@
                 C_ULONG = WinABI.C_ULONG;
                 C_LONGLONG = WinABI.C_LONGLONG;
                 C_ULONGLONG = WinABI.C_ULONGLONG;
                 C_FLOAT = WinABI.C_FLOAT;
                 C_DOUBLE = WinABI.C_DOUBLE;
+                C_LONGDOUBLE = WinABI.C_LONGDOUBLE;
                 C_POINTER = WinABI.C_POINTER;
             }
             case ABI_AARCH64 -> {
                 C_BOOL = AArch64ABI.C_BOOL;
                 C_UCHAR = AArch64ABI.C_UCHAR;
@@ -268,10 +275,11 @@
                 C_ULONG = AArch64ABI.C_ULONG;
                 C_LONGLONG = AArch64ABI.C_LONGLONG;
                 C_ULONGLONG = AArch64ABI.C_ULONGLONG;
                 C_FLOAT = AArch64ABI.C_FLOAT;
                 C_DOUBLE = AArch64ABI.C_DOUBLE;
+                C_LONGDOUBLE = AArch64ABI.C_LONGDOUBLE;
                 C_POINTER = AArch64ABI.C_POINTER;
             }
             default -> throw new IllegalStateException("Unsupported ABI: " + abi.name());
         }
     }
