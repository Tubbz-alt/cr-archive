diff a/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/HeapMemorySegmentImpl.java b/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/HeapMemorySegmentImpl.java
--- a/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/HeapMemorySegmentImpl.java
+++ b/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/HeapMemorySegmentImpl.java
@@ -57,26 +57,26 @@
         this.offset = offset;
         this.baseProvider = baseProvider;
     }
 
     @Override
-    H base() {
+    public H base() {
         return Objects.requireNonNull(baseProvider.get());
     }
 
     @Override
-    long min() {
+    public long min() {
         return offset;
     }
 
     @Override
     HeapMemorySegmentImpl<H> dup(long offset, long size, int mask, MemoryScope scope) {
         return new HeapMemorySegmentImpl<>(this.offset + offset, baseProvider, size, mask, scope);
     }
 
     @Override
-    ByteBuffer makeByteBuffer() {
+    public ByteBuffer makeByteBuffer() {
         if (!(base() instanceof byte[])) {
             throw new UnsupportedOperationException("Not an address to an heap-allocated byte array");
         }
         JavaNioAccess nioAccess = SharedSecrets.getJavaNioAccess();
         return nioAccess.newHeapByteBuffer((byte[]) base(), (int)min() - BYTE_ARR_BASE, (int) byteSize(), this);
