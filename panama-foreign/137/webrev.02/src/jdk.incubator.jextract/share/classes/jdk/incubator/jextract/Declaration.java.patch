diff a/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/Declaration.java b/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/Declaration.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/Declaration.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/Declaration.java
@@ -162,14 +162,10 @@
             UNION,
             /**
              * Bitfields declaration.
              */
             BITFIELDS,
-            /**
-             * Type definition declaration.
-             */
-            TYPEDEF,
             /**
              * Toplevel declaration.
              */
             TOPLEVEL;
         }
@@ -195,10 +191,21 @@
          * @return The scoped declaration kind.
          */
         Kind kind();
     }
 
+    /**
+     * A typedef declaration
+     */
+    interface Typedef extends Declaration {
+        /**
+         * The canonical type associated with this typedef declaration.
+         * @return The canonical type associated with this typedef declaration.
+         */
+        Type type();
+    }
+
     /**
      * A variable declaration.
      */
     interface Variable extends Declaration {
         /**
@@ -295,10 +302,18 @@
          * @param p the visitor parameter.
          * @return the result of visiting the given constant declaration through this visitor object.
          */
         default R visitConstant(Constant d, P p) { return visitDeclaration(d, p); }
 
+        /**
+         * Visit a typedef declaration.
+         * @param d the typedef declaration.
+         * @param p the visitor parameter.
+         * @return the result of visiting the given typedef declaration through this visitor object.
+         */
+        default R visitTypedef(Typedef d, P p) { return visitDeclaration(d, p); }
+
         /**
          * Visit a declaration.
          * @param d the declaration.
          * @param p the visitor parameter.
          * @return the result of visiting the given declaration through this visitor object.
@@ -514,12 +529,12 @@
 
     /**
      * Creates a new typedef declaration with given name and declared type.
      * @param pos the typedef declaration position.
      * @param name the typedef declaration name.
-     * @param decl the typedef declared type
-     * @return a new typedef declaration with given name and declared type.
+     * @param type the typedef type
+     * @return a new type declaration with given name and declared type.
      */
-    static Declaration.Scoped typedef(Position pos, String name, Declaration decl) {
-        return new DeclarationImpl.ScopedImpl(Scoped.Kind.TYPEDEF, List.of(decl), name, pos);
+    static Declaration.Typedef typedef(Position pos, String name, Type type) {
+        return new DeclarationImpl.TypedefImpl(type, name, pos, null);
     }
 }
