diff a/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/Declaration.java b/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/Declaration.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/Declaration.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/Declaration.java
@@ -191,10 +191,21 @@
          * @return The scoped declaration kind.
          */
         Kind kind();
     }
 
+    /**
+     * A typedef declaration
+     */
+    interface Typedef extends Declaration {
+        /**
+         * The canonical type associated with this typedef declaration.
+         * @return The canonical type associated with this typedef declaration.
+         */
+        Type type();
+    }
+
     /**
      * A variable declaration.
      */
     interface Variable extends Declaration {
         /**
@@ -295,10 +306,18 @@
          * @param p the visitor parameter.
          * @return the result of visiting the given constant declaration through this visitor object.
          */
         default R visitConstant(Constant d, P p) { return visitDeclaration(d, p); }
 
+        /**
+         * Visit a typedef declaration.
+         * @param d the typedef declaration.
+         * @param p the visitor parameter.
+         * @return the result of visiting the given typedef declaration through this visitor object.
+         */
+        default R visitTypedef(Typedef d, P p) { return visitDeclaration(d, p); }
+
         /**
          * Visit a declaration.
          * @param d the declaration.
          * @param p the visitor parameter.
          * @return the result of visiting the given declaration through this visitor object.
@@ -517,9 +536,9 @@
      * @param pos the typedef declaration position.
      * @param name the typedef declaration name.
      * @param type the typedef type
      * @return a new type declaration with given name and declared type.
      */
-    static Declaration.Variable typedef(Position pos, String name, Type type) {
-        return new DeclarationImpl.VariableImpl(type, Declaration.Variable.Kind.TYPE, name, pos);
+    static Declaration.Typedef typedef(Position pos, String name, Type type) {
+        return new DeclarationImpl.TypedefImpl(type, name, pos, null);
     }
 }
