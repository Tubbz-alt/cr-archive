diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/Utils.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/Utils.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/Utils.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/Utils.java
@@ -33,10 +33,11 @@
 import jdk.internal.clang.SourceLocation;
 import jdk.internal.clang.Type;
 import jdk.internal.clang.TypeKind;
 
 import javax.lang.model.SourceVersion;
+import java.lang.reflect.Method;
 import java.nio.file.Files;
 import java.nio.file.Path;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.HashMap;
@@ -277,16 +278,14 @@
      */
     private static boolean isPrintableAscii(char ch) {
         return ch >= ' ' && ch <= '~';
     }
 
-    private static HashMap<MemoryLayout, GroupLayout> bitfieldContents = new HashMap<>();
-
     public static Optional<GroupLayout> getContents(MemoryLayout layout) {
-        return Optional.ofNullable(bitfieldContents.remove(layout));
+        return Optional.ofNullable((GroupLayout)jdk.internal.foreign.Utils.getAnnotation(layout, "contents"));
     }
 
+    @SuppressWarnings("unchecked")
     public static <Z extends MemoryLayout> Z addContents(Z layout, GroupLayout contents) {
-        bitfieldContents.put(layout, contents);
-        return layout;
+        return (Z)jdk.internal.foreign.Utils.withAnnotation(layout, "contents", contents);
     }
 }
