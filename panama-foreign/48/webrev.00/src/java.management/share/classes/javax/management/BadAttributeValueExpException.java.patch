diff a/src/java.management/share/classes/javax/management/BadAttributeValueExpException.java b/src/java.management/share/classes/javax/management/BadAttributeValueExpException.java
--- a/src/java.management/share/classes/javax/management/BadAttributeValueExpException.java
+++ b/src/java.management/share/classes/javax/management/BadAttributeValueExpException.java
@@ -43,11 +43,11 @@
     /* Serial version */
     private static final long serialVersionUID = -3105272988410493376L;
 
     /**
      * @serial A string representation of the attribute that originated this exception.
-     * for example, the string value can be the return of {@code attribute.toString()}
+     * For example, the string value can be the return of {@code attribute.toString()}.
      */
     @SuppressWarnings("serial") // See handling in constructor and readObject
     private String val;
 
     /**
@@ -66,10 +66,20 @@
      */
     public String toString()  {
         return "BadAttributeValueException: " + val;
     }
 
+    /**
+     * Restores the fields of a BadAttributeValueExpException from the stream.
+     * If the 'val' field in the stream does not contain a string
+     * it is replaced with an implementation specific string representation
+     * of the value in the stream.
+     *
+     * @param ois an ObjectInput Stream
+     * @throws IOException thrown if an error occurs
+     * @throws ClassNotFoundException if a class can not be found
+     */
     private void readObject(ObjectInputStream ois) throws IOException, ClassNotFoundException {
         ObjectInputStream.GetField gf = ois.readFields();
         Object valObj = gf.get("val", null);
 
         if (valObj instanceof String || valObj == null) {
