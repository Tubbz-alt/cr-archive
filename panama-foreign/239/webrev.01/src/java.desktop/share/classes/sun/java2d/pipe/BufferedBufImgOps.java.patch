diff a/src/java.desktop/share/classes/sun/java2d/pipe/BufferedBufImgOps.java b/src/java.desktop/share/classes/sun/java2d/pipe/BufferedBufImgOps.java
--- a/src/java.desktop/share/classes/sun/java2d/pipe/BufferedBufImgOps.java
+++ b/src/java.desktop/share/classes/sun/java2d/pipe/BufferedBufImgOps.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2007, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2007, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -24,25 +24,22 @@
  */
 
 package sun.java2d.pipe;
 
 import java.awt.color.ColorSpace;
-import java.awt.image.AffineTransformOp;
 import java.awt.image.BufferedImage;
 import java.awt.image.BufferedImageOp;
-import java.awt.image.BufferedImageOp;
 import java.awt.image.ByteLookupTable;
 import java.awt.image.ColorModel;
 import java.awt.image.ConvolveOp;
 import java.awt.image.IndexColorModel;
 import java.awt.image.Kernel;
 import java.awt.image.LookupOp;
 import java.awt.image.LookupTable;
 import java.awt.image.RescaleOp;
 import java.awt.image.ShortLookupTable;
 import sun.java2d.SurfaceData;
-import sun.java2d.loops.CompositeType;
 import static sun.java2d.pipe.BufferedOpCodes.*;
 
 public class BufferedBufImgOps {
 
     public static void enableBufImgOp(RenderQueue rq, SurfaceData srcData,
@@ -135,11 +132,11 @@
             numFactors != srcCM.getNumColorComponents() &&
             numFactors != srcCM.getNumComponents())
         {
             throw new IllegalArgumentException("Number of scaling constants "+
                                                "does not equal the number of"+
-                                               " of color or color/alpha "+
+                                               " color or color/alpha"+
                                                " components");
         }
 
         int csType = srcCM.getColorSpace().getType();
         if (csType != ColorSpace.TYPE_RGB &&
