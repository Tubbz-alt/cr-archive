diff a/src/hotspot/share/gc/shenandoah/shenandoahHeap.inline.hpp b/src/hotspot/share/gc/shenandoah/shenandoahHeap.inline.hpp
--- a/src/hotspot/share/gc/shenandoah/shenandoahHeap.inline.hpp
+++ b/src/hotspot/share/gc/shenandoah/shenandoahHeap.inline.hpp
@@ -324,16 +324,12 @@
     shenandoah_assert_correct(NULL, result);
     return result;
   }
 }
 
-template<bool RESOLVE>
 inline bool ShenandoahHeap::requires_marking(const void* entry) const {
   oop obj = oop(entry);
-  if (RESOLVE) {
-    obj = ShenandoahBarrierSet::resolve_forwarded_not_null(obj);
-  }
   return !_marking_context->is_marked(obj);
 }
 
 inline bool ShenandoahHeap::in_collection_set(oop p) const {
   assert(collection_set() != NULL, "Sanity");
