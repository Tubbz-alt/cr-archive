diff a/src/jdk.incubator.jpackage/share/classes/jdk/incubator/jpackage/internal/PathGroup.java b/src/jdk.incubator.jpackage/share/classes/jdk/incubator/jpackage/internal/PathGroup.java
--- a/src/jdk.incubator.jpackage/share/classes/jdk/incubator/jpackage/internal/PathGroup.java
+++ b/src/jdk.incubator.jpackage/share/classes/jdk/incubator/jpackage/internal/PathGroup.java
@@ -22,11 +22,10 @@
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */
 package jdk.incubator.jpackage.internal;
 
-import java.io.File;
 import java.io.IOException;
 import java.nio.file.Files;
 import java.nio.file.Path;
 import java.util.ArrayList;
 import java.util.Collection;
@@ -198,11 +197,11 @@
         // destination -> source file mapping
         Map<Path, Path> actions = new HashMap<>();
         for (var action: entries) {
             Path src = action.getKey();
             Path dst = action.getValue();
-            if (src.toFile().isDirectory()) {
+            if (Files.isDirectory(src)) {
                try (Stream<Path> stream = Files.walk(src)) {
                    stream.sequential().forEach(path -> actions.put(dst.resolve(
                             src.relativize(path)).normalize(), path));
                }
             } else {
@@ -220,22 +219,22 @@
 
             if (src.equals(dst) || !src.toFile().exists()) {
                 continue;
             }
 
-            if (src.toFile().isDirectory()) {
+            if (Files.isDirectory(src)) {
                 handler.createDirectory(dst);
             } else {
                 handler.copyFile(src, dst);
             }
         }
 
         if (move) {
             // Delete source dirs.
             for (var entry: entries) {
-                File srcFile = entry.getKey().toFile();
-                if (srcFile.isDirectory()) {
+                Path srcFile = entry.getKey();
+                if (Files.isDirectory(srcFile)) {
                     IOUtils.deleteRecursive(srcFile);
                 }
             }
         }
     }
