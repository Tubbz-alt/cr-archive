diff a/src/jdk.incubator.jpackage/macosx/classes/jdk/incubator/jpackage/internal/MacCertificate.java b/src/jdk.incubator.jpackage/macosx/classes/jdk/incubator/jpackage/internal/MacCertificate.java
--- a/src/jdk.incubator.jpackage/macosx/classes/jdk/incubator/jpackage/internal/MacCertificate.java
+++ b/src/jdk.incubator.jpackage/macosx/classes/jdk/incubator/jpackage/internal/MacCertificate.java
@@ -25,15 +25,15 @@
 
 package jdk.incubator.jpackage.internal;
 
 import java.io.ByteArrayInputStream;
 import java.io.ByteArrayOutputStream;
-import java.io.File;
 import java.io.IOException;
 import java.io.PrintStream;
 import java.nio.file.StandardCopyOption;
 import java.nio.file.Files;
+import java.nio.file.Path;
 import java.text.DateFormat;
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Calendar;
@@ -50,12 +50,12 @@
 
     public boolean isValid() {
         return verifyCertificate(this.certificate);
     }
 
-    private static File findCertificate(String certificate) {
-        File result = null;
+    private static Path findCertificate(String certificate) {
+        Path result = null;
 
         List<String> args = new ArrayList<>();
         args.add("security");
         args.add("find-certificate");
         args.add("-c");
@@ -66,14 +66,14 @@
         try (ByteArrayOutputStream baos = new ByteArrayOutputStream();
                 PrintStream ps = new PrintStream(baos)) {
             ProcessBuilder security = new ProcessBuilder(args);
             IOUtils.exec(security, false, ps);
 
-            File output = File.createTempFile("tempfile", ".tmp");
+            Path output = Files.createTempFile("tempfile", ".tmp");
 
             Files.copy(new ByteArrayInputStream(baos.toByteArray()),
-                    output.toPath(), StandardCopyOption.REPLACE_EXISTING);
+                    output, StandardCopyOption.REPLACE_EXISTING);
 
             result = output;
         }
         catch (IOException ignored) {}
 
@@ -109,24 +109,24 @@
 
     private static boolean verifyCertificate(String certificate) {
         boolean result = false;
 
         try {
-            File file = null;
+            Path file = null;
             Date certificateDate = null;
 
             try {
                 file = findCertificate(certificate);
 
                 if (file != null) {
                     certificateDate = findCertificateDate(
-                            file.getCanonicalPath());
+                            file.toFile().getCanonicalPath());
                 }
             }
             finally {
                 if (file != null) {
-                    file.delete();
+                    Files.delete(file);
                 }
             }
 
             if (certificateDate != null) {
                 Calendar c = Calendar.getInstance();
