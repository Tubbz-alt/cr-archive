diff a/test/hotspot/jtreg/gc/g1/TestGCLogMessages.java b/test/hotspot/jtreg/gc/g1/TestGCLogMessages.java
--- a/test/hotspot/jtreg/gc/g1/TestGCLogMessages.java
+++ b/test/hotspot/jtreg/gc/g1/TestGCLogMessages.java
@@ -185,11 +185,11 @@
 
     public static void main(String[] args) throws Exception {
         new TestGCLogMessages().testNormalLogs();
         new TestGCLogMessages().testConcurrentRefinementLogs();
         new TestGCLogMessages().testWithToSpaceExhaustionLogs();
-        new TestGCLogMessages().testWithInitialMark();
+        new TestGCLogMessages().testWithConcurrentStart();
         new TestGCLogMessages().testExpandHeap();
     }
 
     private void testNormalLogs() throws Exception {
 
@@ -264,18 +264,18 @@
         output = new OutputAnalyzer(pb.start());
         checkMessagesAtLevel(output, exhFailureMessages, Level.TRACE);
         output.shouldHaveExitValue(0);
     }
 
-    private void testWithInitialMark() throws Exception {
+    private void testWithConcurrentStart() throws Exception {
         ProcessBuilder pb = ProcessTools.createJavaProcessBuilder("-XX:+UseG1GC",
                                                                   "-Xmx10M",
                                                                   "-Xbootclasspath/a:.",
                                                                   "-Xlog:gc*=debug",
                                                                   "-XX:+UnlockDiagnosticVMOptions",
                                                                   "-XX:+WhiteBoxAPI",
-                                                                  GCTestWithInitialMark.class.getName());
+                                                                  GCTestWithConcurrentStart.class.getName());
 
         OutputAnalyzer output = new OutputAnalyzer(pb.start());
         output.shouldContain("Clear Claimed Marks");
         output.shouldHaveExitValue(0);
     }
@@ -321,11 +321,11 @@
             }
             System.out.println("Done");
         }
     }
 
-    static class GCTestWithInitialMark {
+    static class GCTestWithConcurrentStart {
         public static void main(String [] args) {
             sun.hotspot.WhiteBox WB = sun.hotspot.WhiteBox.getWhiteBox();
             WB.g1StartConcMarkCycle();
         }
     }
