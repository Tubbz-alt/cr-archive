diff a/test/jdk/javax/management/remote/mandatory/connection/MultiThreadDeadLockTest.java b/test/jdk/javax/management/remote/mandatory/connection/MultiThreadDeadLockTest.java
--- a/test/jdk/javax/management/remote/mandatory/connection/MultiThreadDeadLockTest.java
+++ b/test/jdk/javax/management/remote/mandatory/connection/MultiThreadDeadLockTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2008, 2015, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2008, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -38,24 +38,27 @@
 import javax.management.remote.JMXConnectorServer;
 import javax.management.remote.JMXConnectorServerFactory;
 import javax.management.remote.JMXServiceURL;
 import javax.management.remote.rmi.RMIConnectorServer;
 
+import jdk.test.lib.Utils;
+
 /*
  * @test
  * @bug 6697180
  * @summary test on a client notification deadlock.
  * @author Shanliang JIANG
+ * @library /test/lib
  *
  * @run clean MultiThreadDeadLockTest
  * @run build MultiThreadDeadLockTest
  * @run main MultiThreadDeadLockTest
  */
 
 public class MultiThreadDeadLockTest {
 
-    private static long serverTimeout = 500L;
+    private static long serverTimeout = Utils.adjustTimeout(500);
 
     public static void main(String[] args) throws Exception {
         print("Create the MBean server");
         MBeanServer mbs = MBeanServerFactory.createMBeanServer();
 
@@ -120,11 +123,11 @@
 
         print("Allow to create new socket for the reconnection");
         StateMachine.setState(CREATE_SOCKET);
 
         print("Check whether the user thread gets free to call the mbean.");
-        if (!ut.waitDone(5000)) {
+        if (!ut.waitDone(Utils.adjustTimeout(5000))) {
             throw new RuntimeException("Possible deadlock!");
         }
 
         print("Remove the listener.");
         client.getMBeanServerConnection().removeNotificationListener(
