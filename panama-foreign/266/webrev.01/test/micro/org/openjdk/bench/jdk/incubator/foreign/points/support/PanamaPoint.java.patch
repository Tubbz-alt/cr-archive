diff a/test/micro/org/openjdk/bench/jdk/incubator/foreign/points/support/PanamaPoint.java b/test/micro/org/openjdk/bench/jdk/incubator/foreign/points/support/PanamaPoint.java
--- a/test/micro/org/openjdk/bench/jdk/incubator/foreign/points/support/PanamaPoint.java
+++ b/test/micro/org/openjdk/bench/jdk/incubator/foreign/points/support/PanamaPoint.java
@@ -66,11 +66,11 @@
         } catch (NoSuchMethodException e) {
             throw new BootstrapMethodError(e);
         }
     }
 
-    private final MemoryAddress address;
+    private final MemorySegment segment;
 
     public PanamaPoint(int x, int y) {
         this(MemorySegment.allocateNative(LAYOUT), x, y);
     }
 
@@ -79,45 +79,45 @@
         setX(x);
         setY(y);
     }
 
     public PanamaPoint(MemorySegment segment) {
-        this.address = segment.address();
+        this.segment = segment;
     }
 
     public void setX(int x) {
-        VH_x.set(address, x);
+        VH_x.set(segment, x);
     }
 
     public int getX() {
-        return (int) VH_x.get(address);
+        return (int) VH_x.get(segment);
     }
 
     public void setY(int y) {
-        VH_y.set(address, y);
+        VH_y.set(segment, y);
     }
 
     public int getY() {
-        return (int) VH_y.get(address);
+        return (int) VH_y.get(segment);
     }
 
     public double distanceTo(PanamaPoint other) {
         try {
-            return (double) MH_distance.invokeExact(address.segment(), other.address.segment());
+            return (double) MH_distance.invokeExact(segment, other.segment);
         } catch (Throwable throwable) {
             throw new InternalError(throwable);
         }
     }
 
     public double distanceToPtrs(PanamaPoint other) {
         try {
-            return (double) MH_distance_ptrs.invokeExact(address, other.address);
+            return (double) MH_distance_ptrs.invokeExact(segment.address(), other.segment.address());
         } catch (Throwable throwable) {
             throw new InternalError(throwable);
         }
     }
 
     @Override
     public void close() {
-        address.segment().close();
+        segment.close();
     }
 }
