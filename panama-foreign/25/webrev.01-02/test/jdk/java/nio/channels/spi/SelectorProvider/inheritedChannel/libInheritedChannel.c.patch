diff a/test/jdk/java/nio/channels/spi/SelectorProvider/inheritedChannel/libInheritedChannel.c b/test/jdk/java/nio/channels/spi/SelectorProvider/inheritedChannel/libInheritedChannel.c
--- a/test/jdk/java/nio/channels/spi/SelectorProvider/inheritedChannel/libInheritedChannel.c
+++ b/test/jdk/java/nio/channels/spi/SelectorProvider/inheritedChannel/libInheritedChannel.c
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -231,14 +231,16 @@
   (JNIEnv *env, jclass cls, jint sock, jstring name)
 {
     struct sockaddr_un addr;
     const char *nameUtf = (*env)->GetStringUTFChars(env, name, NULL);
     int ret = -1;
+    int length = sizeof(addr.sun_path);
     unlink(nameUtf);
     memset(&addr, 0, sizeof(addr));
     addr.sun_family = AF_UNIX;
-    strncpy(addr.sun_path, nameUtf, strlen(nameUtf));
+    strncpy(addr.sun_path, nameUtf, length);
+    addr.sun_path[length - 1] = '\0';
     ret = bind(sock, (const struct sockaddr*)&addr, sizeof(addr));
     if (ret == -1) {
         ThrowException(env, "java/io/IOException", "socket bind error");
     }
     ret = listen(sock, 5);
@@ -263,13 +265,15 @@
   (JNIEnv *env, jclass cls, jint fd, jstring name)
 {
     struct sockaddr_un addr;
     const char *nameUtf = (*env)->GetStringUTFChars(env, name, NULL);
     int ret = -1;
+    int length = sizeof(addr.sun_path);
     memset(&addr, 0, sizeof(addr));
     addr.sun_family = AF_UNIX;
-    strncpy(addr.sun_path, nameUtf, strlen(nameUtf));
+    strncpy(addr.sun_path, nameUtf, length);
+    addr.sun_path[length - 1] = '\0';
     ret = connect(fd, (const struct sockaddr*)&addr, sizeof(addr));
     if (ret == -1) {
         ThrowException(env, "java/io/IOException", "socket connect error");
     }
     (*env)->ReleaseStringUTFChars(env, name, nameUtf);
