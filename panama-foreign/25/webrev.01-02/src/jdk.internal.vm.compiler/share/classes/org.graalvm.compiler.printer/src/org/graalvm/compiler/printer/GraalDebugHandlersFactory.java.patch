diff a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.printer/src/org/graalvm/compiler/printer/GraalDebugHandlersFactory.java b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.printer/src/org/graalvm/compiler/printer/GraalDebugHandlersFactory.java
--- a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.printer/src/org/graalvm/compiler/printer/GraalDebugHandlersFactory.java
+++ b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.printer/src/org/graalvm/compiler/printer/GraalDebugHandlersFactory.java
@@ -72,18 +72,20 @@
     }
 
     private static class NodeDumper implements DebugDumpHandler {
         @Override
         public void dump(DebugContext debug, Object object, String format, Object... arguments) {
-            if (object instanceof Node) {
-                Node node = (Node) object;
-                String location = GraphUtil.approxSourceLocation(node);
-                String nodeName = node.toString(Verbosity.Debugger);
-                if (location != null) {
-                    debug.log("Context obj %s (approx. location: %s)", nodeName, location);
-                } else {
-                    debug.log("Context obj %s", nodeName);
+            if (debug.isLogEnabled()) {
+                if (object instanceof Node) {
+                    Node node = (Node) object;
+                    String location = GraphUtil.approxSourceLocation(node);
+                    String nodeName = node.toString(Verbosity.Debugger);
+                    if (location != null) {
+                        debug.log("Context obj %s (approx. location: %s)", nodeName, location);
+                    } else {
+                        debug.log("Context obj %s", nodeName);
+                    }
                 }
             }
         }
     }
 
