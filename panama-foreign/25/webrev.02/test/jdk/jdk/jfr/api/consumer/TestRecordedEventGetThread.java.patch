diff a/test/jdk/jdk/jfr/api/consumer/TestRecordedEventGetThread.java b/test/jdk/jdk/jfr/api/consumer/TestRecordedEventGetThread.java
--- a/test/jdk/jdk/jfr/api/consumer/TestRecordedEventGetThread.java
+++ b/test/jdk/jdk/jfr/api/consumer/TestRecordedEventGetThread.java
@@ -47,26 +47,26 @@
     private static final String MY_THREAD_NAME = "MY_THREAD_NAME";
 
     public static void main(String[] args) throws Throwable {
         Thread currentThread = Thread.currentThread();
         currentThread.setName(MY_THREAD_NAME);
-        long expectedThreadId = currentThread.getId();
 
-        Recording r = new Recording();
-        r.start();
-        SimpleEvent t = new SimpleEvent();
-        t.commit();
-        r.stop();
-        List<RecordedEvent> events = Events.fromRecording(r);
-        r.close();
-        Events.hasEvents(events);
-        RecordedEvent event = events.get(0);
-        RecordedThread recordedThread = event.getThread();
+        try (Recording r = new Recording()) {
+            r.start();
+            SimpleEvent t = new SimpleEvent();
+            t.commit();
+            r.stop();
 
-        Asserts.assertNotNull(recordedThread);
-        Asserts.assertEquals(recordedThread.getJavaName(), MY_THREAD_NAME);
-        Asserts.assertEquals(recordedThread.getJavaThreadId(), expectedThreadId);
-        Asserts.assertNotNull(recordedThread.getOSThreadId());
-        Asserts.assertNotNull(recordedThread.getId());
-        Asserts.assertEquals(recordedThread.getOSName(), MY_THREAD_NAME);
+            List<RecordedEvent> events = Events.fromRecording(r);
+            Events.hasEvents(events);
+            RecordedEvent event = events.get(0);
+            RecordedThread recordedThread = event.getThread();
+            Asserts.assertNotNull(recordedThread);
+
+            Asserts.assertEquals(recordedThread.getJavaName(), MY_THREAD_NAME);
+            Asserts.assertEquals(recordedThread.getJavaThreadId(), currentThread.getId());
+            Asserts.assertNotNull(recordedThread.getOSThreadId());
+            Asserts.assertNotNull(recordedThread.getId());
+            Asserts.assertEquals(recordedThread.getOSName(), MY_THREAD_NAME);
+        }
     }
 }
