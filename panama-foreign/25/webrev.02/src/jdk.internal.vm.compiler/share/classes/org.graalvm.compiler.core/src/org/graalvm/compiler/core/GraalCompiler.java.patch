diff a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.core/src/org/graalvm/compiler/core/GraalCompiler.java b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.core/src/org/graalvm/compiler/core/GraalCompiler.java
--- a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.core/src/org/graalvm/compiler/core/GraalCompiler.java
+++ b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.core/src/org/graalvm/compiler/core/GraalCompiler.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2009, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2009, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -179,15 +179,13 @@
             if (graph.name != null && graph.name.contains(methodPattern)) {
                 crashLabel = graph.name;
             }
             if (crashLabel == null) {
                 ResolvedJavaMethod method = graph.method();
-                MethodFilter[] filters = MethodFilter.parse(methodPattern);
-                for (MethodFilter filter : filters) {
-                    if (filter.matches(method)) {
-                        crashLabel = method.format("%H.%n(%p)");
-                    }
+                MethodFilter filter = MethodFilter.parse(methodPattern);
+                if (filter.matches(method)) {
+                    crashLabel = method.format("%H.%n(%p)");
                 }
             }
             if (crashLabel != null) {
                 if (permanentBailout) {
                     throw new PermanentBailoutException("Forced crash after compiling " + crashLabel);
