diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TypeImpl.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TypeImpl.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TypeImpl.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TypeImpl.java
@@ -24,18 +24,17 @@
  *
  */
 
 package jdk.internal.jextract.impl;
 
-import jdk.incubator.foreign.MemoryLayout;
-import jdk.incubator.jextract.Declaration;
-import jdk.incubator.jextract.Type;
-
 import java.util.List;
 import java.util.Optional;
 import java.util.OptionalLong;
 import java.util.function.Supplier;
+import jdk.incubator.foreign.MemoryLayout;
+import jdk.incubator.jextract.Declaration;
+import jdk.incubator.jextract.Type;
 
 public abstract class TypeImpl implements Type {
 
     @Override
     public boolean isErroneous() {
@@ -135,18 +134,21 @@
             return type;
         }
     }
 
     public static class PointerImpl extends DelegatedBase {
-
         private final Supplier<Type> pointeeFactory;
 
         public PointerImpl(Supplier<Type> pointeeFactory) {
             super(Kind.POINTER, Optional.empty());
             this.pointeeFactory = pointeeFactory;
         }
 
+        public PointerImpl(Type pointee) {
+            this(() -> pointee);
+        }
+
         @Override
         public Type type() {
             return pointeeFactory.get();
         }
     }
@@ -244,6 +246,11 @@
         @Override
         public Kind kind() {
             return kind;
         }
     }
+
+    @Override
+    public String toString() {
+        return PrettyPrinter.type(this);
+    }
 }
