diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/Parser.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/Parser.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/Parser.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/Parser.java
@@ -103,10 +103,11 @@
                 }
             });
 
         Declaration.Scoped rv = treeMaker.createHeader(tuCursor, decls);
         treeMaker.freeze();
+        index.close();
         return rv;
     }
 
     private boolean isMacro(Cursor c) {
         return c.isPreprocessing() && c.kind() == CursorKind.MacroDefinition;
diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TreeMaker.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TreeMaker.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TreeMaker.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TreeMaker.java
@@ -123,28 +123,35 @@
         return new CursorPosition(cursor);
     }
 
     static class CursorPosition implements Position {
         private final Cursor cursor;
+        private final Path path;
+        private final int line;
+        private final int column;
 
         CursorPosition(Cursor cursor) {
             this.cursor = cursor;
+            SourceLocation.Location loc = cursor.getSourceLocation().getFileLocation();
+            this.path = loc.path();
+            this.line = loc.line();
+            this.column = loc.column();
         }
 
         @Override
         public Path path() {
-            return cursor.getSourceLocation().getFileLocation().path();
+            return path;
         }
 
         @Override
         public int line() {
-            return cursor.getSourceLocation().getFileLocation().line();
+            return line;
         }
 
         @Override
         public int col() {
-            return cursor.getSourceLocation().getFileLocation().column();
+            return column;
         }
 
         public Cursor cursor() {
             return cursor;
         }
