diff a/test/jdk/java/jextract/JextractApiTestBase.java b/test/jdk/java/jextract/JextractApiTestBase.java
--- a/test/jdk/java/jextract/JextractApiTestBase.java
+++ b/test/jdk/java/jextract/JextractApiTestBase.java
@@ -51,16 +51,27 @@
             assertEquals(struct.members().get(i).name(), fields[i]);
         }
         return struct;
     }
 
+    public static Declaration.Variable checkConstant(Declaration.Scoped scope, String name, Type type) {
+        Declaration.Variable var = findDecl(scope, name, Declaration.Variable.class);
+        assertTypeEquals(type, var.type());
+        return var;
+    }
+
     public static Declaration.Variable checkGlobal(Declaration.Scoped toplevel, String name, Type type) {
-        Declaration.Variable global = findDecl(toplevel, name, Declaration.Variable.class);
-        assertTypeEquals(type, global.type());
+        Declaration.Variable global = checkConstant(toplevel, name, type);
+        assertEquals(global.kind(), Declaration.Variable.Kind.GLOBAL);
         return global;
     }
 
+    public static Declaration.Variable checkField(Declaration.Scoped record, String name, Type type) {
+        Declaration.Variable global = checkConstant(record, name, type);
+        assertEquals(global.kind(), Declaration.Variable.Kind.FIELD);
+        return global;
+    }
     public static Declaration.Function checkFunction(Declaration.Scoped toplevel, String name, Type ret, Type... params) {
         Declaration.Function function = findDecl(toplevel, name, Declaration.Function.class);
         assertTypeEquals(ret, function.type().returnType());
         assertEquals(function.parameters().size(), params.length);
         for (int i = 0 ; i < params.length ; i++) {
