diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TypeImpl.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TypeImpl.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TypeImpl.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TypeImpl.java
@@ -24,19 +24,17 @@
  *
  */
 
 package jdk.internal.jextract.impl;
 
-import java.util.Objects;
-import jdk.incubator.foreign.MemoryLayout;
-import jdk.incubator.jextract.Declaration;
-import jdk.incubator.jextract.Type;
-
 import java.util.List;
 import java.util.Optional;
 import java.util.OptionalLong;
 import java.util.function.Supplier;
+import jdk.incubator.foreign.MemoryLayout;
+import jdk.incubator.jextract.Declaration;
+import jdk.incubator.jextract.Type;
 
 public abstract class TypeImpl implements Type {
 
     @Override
     public boolean isErroneous() {
@@ -137,31 +135,23 @@
         }
     }
 
     public static class PointerImpl extends DelegatedBase {
         private final Supplier<Type> pointeeFactory;
-        private Type pointee;
 
         public PointerImpl(Supplier<Type> pointeeFactory) {
             super(Kind.POINTER, Optional.empty());
             this.pointeeFactory = pointeeFactory;
-            this.pointee = null;
         }
 
         public PointerImpl(Type pointee) {
-            super(Kind.POINTER, Optional.empty());
-            pointeeFactory = null;
-            this.pointee = pointee;
+            this(() -> pointee);
         }
 
         @Override
         public Type type() {
-            if (pointee == null && pointeeFactory != null) {
-                pointee =pointeeFactory.get();
-                Objects.requireNonNull(pointee);
-            }
-            return pointee;
+            return pointeeFactory.get();
         }
     }
 
     public static class DeclaredImpl extends TypeImpl implements Type.Declared {
 
