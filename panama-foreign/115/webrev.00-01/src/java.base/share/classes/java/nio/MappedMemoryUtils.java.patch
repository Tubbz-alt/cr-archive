diff a/src/java.base/share/classes/java/nio/MappedMemoryUtils.java b/src/java.base/share/classes/java/nio/MappedMemoryUtils.java
--- a/src/java.base/share/classes/java/nio/MappedMemoryUtils.java
+++ b/src/java.base/share/classes/java/nio/MappedMemoryUtils.java
@@ -73,10 +73,22 @@
     }
 
     // not used, but a potential target for a store, see load() for details.
     private static byte unused;
 
+    static void unload(long address, boolean isSync, long size) {
+        // no need to load a sync mapped buffer
+        if (isSync) {
+            return;
+        }
+        if ((address == 0) || (size == 0))
+            return;
+        long offset = mappingOffset(address);
+        long length = mappingLength(offset, size);
+        unload0(mappingAddress(address, offset), length);
+    }
+
     static void force(FileDescriptor fd, long address, boolean isSync, long index, long length) {
         if (isSync) {
             // simply force writeback of associated cache lines
             Unsafe.getUnsafe().writebackMemory(address + index, length);
         } else {
@@ -88,10 +100,11 @@
 
     // native methods
 
     private static native boolean isLoaded0(long address, long length, int pageCount);
     private static native void load0(long address, long length);
+    private static native void unload0(long address, long length);
     private static native void force0(FileDescriptor fd, long address, long length);
 
     // utility methods
 
     // Returns the distance (in bytes) of the buffer start from the
