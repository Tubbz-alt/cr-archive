diff a/test/jdk/java/jextract/Test8239490.java b/test/jdk/java/jextract/Test8239490.java
--- a/test/jdk/java/jextract/Test8239490.java
+++ b/test/jdk/java/jextract/Test8239490.java
@@ -39,20 +39,20 @@
         Declaration.Scoped d = parse("Test8239490.h");
         // check Foo
         String[] fooBitfieldNames = { "a", "b", "c" };
         int[] fooBitfieldSizes = { 1, 1, 30 };
         Declaration.Scoped structFoo = checkStruct(d, "Foo", "");
-        Declaration.Scoped bitfieldsFoo = checkStruct(structFoo, "", "a", "b", "c");
+        Declaration.Scoped bitfieldsFoo = checkBitfields(structFoo, "", "a", "b", "c");
         Type intType = ((Declaration.Variable)bitfieldsFoo.members().get(0)).type();
         for (int i = 0 ; i < fooBitfieldNames.length ; i++) {
             checkBitField(bitfieldsFoo, fooBitfieldNames[i], intType, fooBitfieldSizes[i]);
         }
         // check Bar
         String[] barBitfieldNames = { "x", "y" };
         int[] barBitfieldSizes = { 1, 31 };
         Declaration.Scoped structBar = checkStruct(d, "Bar", "", "z");
-        Declaration.Scoped bitfieldsBar = checkStruct(structBar, "", "x", "y");
+        Declaration.Scoped bitfieldsBar = checkBitfields(structBar, "", "x", "y");
         for (int i = 0 ; i < barBitfieldNames.length ; i++) {
             checkBitField(bitfieldsBar, barBitfieldNames[i], intType, barBitfieldSizes[i]);
         }
         checkField(structBar, "z", Type.array(1, Type.declared(structFoo)));
     }
