diff a/test/jdk/java/foreign/TestSegments.java b/test/jdk/java/foreign/TestSegments.java
--- a/test/jdk/java/foreign/TestSegments.java
+++ b/test/jdk/java/foreign/TestSegments.java
@@ -93,10 +93,24 @@
                 assertEquals(0, (byte)byteHandle.get(segment.baseAddress(), i));
             }
         }
     }
 
+    @Test
+    public void testNothingSegmentAccess() {
+        VarHandle longHandle = MemoryLayouts.JAVA_LONG.varHandle(long.class);
+        long[] values = { 0L, Integer.MAX_VALUE - 1, (long)Integer.MAX_VALUE + 1 };
+        for (long value : values) {
+            MemoryAddress addr = MemoryAddress.ofLong(value);
+            try {
+                longHandle.get(addr);
+            } catch (UnsupportedOperationException ex) {
+                assertTrue(ex.getMessage().contains("cannot be dereferenced"));
+            }
+        }
+    }
+
     @Test
     public void testSlices() {
         VarHandle byteHandle = MemoryLayout.ofSequence(MemoryLayouts.JAVA_BYTE)
                 .varHandle(byte.class, MemoryLayout.PathElement.sequenceElement());
         try (MemorySegment segment = MemorySegment.allocateNative(10)) {
