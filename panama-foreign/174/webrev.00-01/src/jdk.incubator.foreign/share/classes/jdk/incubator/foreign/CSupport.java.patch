diff a/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/C.java b/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/CSupport.java
--- a/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/C.java
+++ b/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/CSupport.java
@@ -31,11 +31,11 @@
 import java.nio.ByteOrder;
 
 /**
  * A set of utilities for working with libraries using the C language/ABI
  */
-public class C {
+public class CSupport {
     /**
      * Obtain a linker that uses the de facto C ABI of the current system to do it's linking.
      * <p>
      * This method is <em>restricted</em>. Restricted method are unsafe, and, if used incorrectly, their use might crash
      * the JVM crash or, worse, silently result in memory corruption. Thus, clients should refrain from depending on
@@ -43,11 +43,11 @@
      * @return a linker for this system.
      * @throws IllegalAccessError if the runtime property {@code foreign.restricted} is not set to either
      * {@code permit}, {@code warn} or {@code debug} (the default value is set to {@code deny}).
      */
     public static ForeignLinker getSystemLinker() {
-        Utils.checkRestrictedAccess("C.getSystemLinker");
+        Utils.checkRestrictedAccess("CSupport.getSystemLinker");
         return SharedUtils.getSystemLinker();
     }
 
     /**
      * The {@code _Bool} native type.
