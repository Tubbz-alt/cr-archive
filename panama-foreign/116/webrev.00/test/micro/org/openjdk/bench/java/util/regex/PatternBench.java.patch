diff a/test/micro/org/openjdk/bench/java/util/regex/PatternBench.java b/test/micro/org/openjdk/bench/java/util/regex/PatternBench.java
--- a/test/micro/org/openjdk/bench/java/util/regex/PatternBench.java
+++ b/test/micro/org/openjdk/bench/java/util/regex/PatternBench.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2019, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -44,10 +44,11 @@
 
     public String fileTestString;
     public String flagsString;
 
     public Pattern graphemePattern;
+    public Pattern graphemeBoundaryPattern;
     public Pattern jmodPattern;
     public Pattern jmodCanonicalPattern;
 
     public String charPatternRegex;
     public String[] charPatternStrings;
@@ -55,26 +56,34 @@
 
     @Setup
     public void setup() {
         flagsString = "\ud83c\udde6\ud83c\uddec\ud83c\uddec\ud83c\udde6\ud83c\uddfa\ud83c\uddf8\ud83c\uddeb\ud83c\uddf7";
         fileTestString = "META-INF/providers/org.openjdk.foo_hotspot_nodes_PluginFactory_EndLockScopeNode";
-        graphemePattern = Pattern.compile("\\b{g}");
+        graphemePattern = Pattern.compile("\\X");
+        graphemeBoundaryPattern = Pattern.compile("\\b{g}");
 
         String jmodRegex = "^.*(?:(?:_the\\.[^/]*)|(?:_[^/]*\\.marker)|(?:[^/]*\\.diz)|(?:[^/]*\\.debuginfo)|(?:[^/]*\\.dSYM/.*)|(?:[^/]*\\.dSYM)|(?:[^/]*\\.pdb)|(?:[^/]*\\.map))$";
         jmodCanonicalPattern = Pattern.compile(jmodRegex, Pattern.CANON_EQ);
         jmodPattern = Pattern.compile(jmodRegex);
 
         charPatternRegex = "[ a-zA-Z]*foo[ a-zA-Z0-9]*bar[ a-z]*";
         charPatternStrings = new String[] {"avaaafooddddddbariiii", "lorem ipsum dolor foo bar", "fpp brr lorem ipsum dolor foo bar %", "lorem ipsum dolor foo bar lorem ipsum dolor foo bar lorem ipsum dolor foo bar /"};
         charPattern = Pattern.compile(charPatternRegex);
     }
 
+    @Benchmark
+    @Warmup(iterations = 3)
+    @Measurement(iterations = 3)
+    public long longStringGraphemeMatches() {
+        return graphemePattern.matcher(flagsString.repeat(3)).results().count();
+    }
+
     @Benchmark
     @Warmup(iterations = 3)
     @Measurement(iterations = 3)
     public int splitFlags() {
-        return graphemePattern.split(flagsString).length;
+        return graphemeBoundaryPattern.split(flagsString).length;
     }
 
     @Benchmark
     @Warmup(iterations = 3)
     @Measurement(iterations = 3)
