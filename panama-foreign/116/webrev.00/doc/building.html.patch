diff a/doc/building.html b/doc/building.html
--- a/doc/building.html
+++ b/doc/building.html
@@ -534,11 +534,11 @@
 <li><code>bootcycle-images</code> - Build images twice, second time with newly built JDK (good for testing)</li>
 <li><code>clean</code> - Remove all files generated by make, but not those generated by configure</li>
 <li><code>dist-clean</code> - Remove all files, including configuration</li>
 </ul>
 <p>Run <code>make help</code> to get an up-to-date list of important make targets and make control variables.</p>
-<p>It is possible to build just a single module, a single phase, or a single phase of a single module, by creating make targets according to these followin patterns. A phase can be either of <code>gensrc</code>, <code>gendata</code>, <code>copy</code>, <code>java</code>, <code>launchers</code>, <code>libs</code> or <code>rmic</code>. See <a href="#using-fine-grained-make-targets">Using Fine-Grained Make Targets</a> for more details about this functionality.</p>
+<p>It is possible to build just a single module, a single phase, or a single phase of a single module, by creating make targets according to these followin patterns. A phase can be either of <code>gensrc</code>, <code>gendata</code>, <code>copy</code>, <code>java</code>, <code>launchers</code>, or <code>libs</code>. See <a href="#using-fine-grained-make-targets">Using Fine-Grained Make Targets</a> for more details about this functionality.</p>
 <ul>
 <li><code>&lt;phase&gt;</code> - Build the specified phase and everything it depends on</li>
 <li><code>&lt;module&gt;</code> - Build the specified module and everything it depends on</li>
 <li><code>&lt;module&gt;-&lt;phase&gt;</code> - Compile the specified phase for the specified module and everything it depends on</li>
 </ul>
@@ -927,11 +927,10 @@
 <li><code>gendata</code> (Generate non-source code artifacts)</li>
 <li><code>copy</code> (Copy resource artifacts)</li>
 <li><code>java</code> (Compile Java code)</li>
 <li><code>launchers</code> (Compile native executables)</li>
 <li><code>libs</code> (Compile native libraries)</li>
-<li><code>rmic</code> (Run the <code>rmic</code> tool)</li>
 </ul>
 <p>You can build only a single phase for a module by using the notation <code>$MODULE-$PHASE</code>. For instance, to build the <code>gensrc</code> phase for <code>java.base</code>, use <code>make java.base-gensrc</code>.</p>
 <p>Note that some phases may depend on others, e.g. <code>java</code> depends on <code>gensrc</code> (if present). Make will build all needed prerequisites before building the requested phase.</p>
 <h4 id="skipping-the-dependency-check">Skipping the Dependency Check</h4>
 <p>When using an iterative development style with frequent quick rebuilds, the dependency check made by make can take up a significant portion of the time spent on the rebuild. In such cases, it can be useful to bypass the dependency check in make.</p>
