diff a/src/java.base/share/classes/java/nio/Bits.java b/src/java.base/share/classes/java/nio/Bits.java
--- a/src/java.base/share/classes/java/nio/Bits.java
+++ b/src/java.base/share/classes/java/nio/Bits.java
@@ -24,14 +24,14 @@
  */
 
 package java.nio;
 
 import jdk.internal.access.JavaLangRefAccess;
-import jdk.internal.access.JavaNioAccess;
 import jdk.internal.access.SharedSecrets;
 import jdk.internal.misc.Unsafe;
 import jdk.internal.misc.VM;
+import jdk.internal.misc.VM.BufferPool;
 
 import java.util.concurrent.atomic.AtomicLong;
 
 /**
  * Access to bits, native and otherwise.
@@ -208,11 +208,11 @@
         long reservedMem = RESERVED_MEMORY.addAndGet(-size);
         long totalCap = TOTAL_CAPACITY.addAndGet(-cap);
         assert cnt >= 0 && reservedMem >= 0 && totalCap >= 0;
     }
 
-    static final JavaNioAccess.BufferPool BUFFER_POOL = new JavaNioAccess.BufferPool() {
+    static final BufferPool BUFFER_POOL = new BufferPool() {
         @Override
         public String getName() {
             return "direct";
         }
         @Override
