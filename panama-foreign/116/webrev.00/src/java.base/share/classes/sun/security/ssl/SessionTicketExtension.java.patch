diff a/src/java.base/share/classes/sun/security/ssl/SessionTicketExtension.java b/src/java.base/share/classes/sun/security/ssl/SessionTicketExtension.java
--- a/src/java.base/share/classes/sun/security/ssl/SessionTicketExtension.java
+++ b/src/java.base/share/classes/sun/security/ssl/SessionTicketExtension.java
@@ -445,12 +445,14 @@
                     .engineGetServerSessionContext();
             if (!cache.statelessEnabled()) {
                 return;
             }
 
+            // Regardless of session ticket contents, client allows stateless
+            shc.statelessResumption = true;
+
             if (buffer.remaining() == 0) {
-                shc.statelessResumption = true;
                 if (SSLLogger.isOn && SSLLogger.isOn("ssl,handshake")) {
                     SSLLogger.fine("Client accepts session tickets.");
                 }
                 return;
             }
@@ -459,14 +461,17 @@
             SessionTicketSpec spec = new SessionTicketSpec(shc, buffer);
             ByteBuffer b = spec.decrypt(shc);
             if (b != null) {
                 shc.resumingSession = new SSLSessionImpl(shc, b);
                 shc.isResumption = true;
-                shc.statelessResumption = true;
                 if (SSLLogger.isOn && SSLLogger.isOn("ssl,handshake")) {
                     SSLLogger.fine("Valid stateless session ticket found");
                 }
+            } else {
+                if (SSLLogger.isOn && SSLLogger.isOn("ssl,handshake")) {
+                    SSLLogger.fine("Invalid stateless session ticket found");
+                }
             }
         }
     }
 
 
