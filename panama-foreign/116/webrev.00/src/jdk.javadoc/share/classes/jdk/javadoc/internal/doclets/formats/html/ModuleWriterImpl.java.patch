diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/ModuleWriterImpl.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/ModuleWriterImpl.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/ModuleWriterImpl.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/ModuleWriterImpl.java
@@ -222,14 +222,12 @@
 
     /**
      * Get the summary section header.
      */
     @Override
-    public Content getSummaryHeader() {
-        HtmlTree ul = new HtmlTree(TagName.UL);
-        ul.setStyle(HtmlStyle.blockList);
-        return ul;
+    public Content getSummariesList() {
+        return new HtmlTree(TagName.UL).setStyle(HtmlStyle.summaryList);
     }
 
     /**
      * Get the summary tree.
      *
@@ -481,11 +479,11 @@
                 .setRowScopeColumn(1)
                 .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colSecond, HtmlStyle.colLast);
     }
 
     @Override
-    public void addModulesSummary(Content summaryContentTree) {
+    public void addModulesSummary(Content summariesList) {
         if (display(requires) || display(indirectModules)) {
             TableHeader requiresTableHeader =
                     new TableHeader(contents.modifierLabel, contents.moduleLabel,
                             contents.descriptionLabel);
             HtmlTree section = HtmlTree.SECTION(HtmlStyle.modulesSummary)
@@ -512,11 +510,11 @@
                 Table amrTable = getTable3(amrCaption, amrTableSummary, HtmlStyle.requiresSummary,
                             requiresTableHeader);
                 addModulesList(indirectModules, amrTable);
                 section.add(amrTable);
             }
-            summaryContentTree.add(HtmlTree.LI(section));
+            summariesList.add(HtmlTree.LI(section));
         }
     }
 
     /**
      * Add the list of modules.
@@ -533,11 +531,11 @@
             table.addRow(modifiers, moduleLink, moduleSummary);
         }
     }
 
     @Override
-    public void addPackagesSummary(Content summaryContentTree) {
+    public void addPackagesSummary(Content summariesList) {
         if (display(packages)
                 || display(indirectPackages) || display(indirectOpenPackages)) {
             HtmlTree section = HtmlTree.SECTION(HtmlStyle.packagesSummary)
                     .setId(SectionName.PACKAGES.getName());;
             addSummaryHeader(MarkerComments.START_OF_PACKAGES_SUMMARY, contents.navPackages, section);
@@ -558,11 +556,11 @@
                 Table aopTable = getTable2(new StringContent(aopText), HtmlStyle.packagesSummary,
                         indirectPackagesHeader);
                 addIndirectPackages(aopTable, indirectOpenPackages);
                 section.add(aopTable);
             }
-            summaryContentTree.add(HtmlTree.LI(section));
+            summariesList.add(HtmlTree.LI(section));
         }
     }
 
     /**
      * Add the package summary for the module.
@@ -704,11 +702,11 @@
             table.addRow(moduleLinkContent, list);
         }
     }
 
     @Override
-    public void addServicesSummary(Content summaryContentTree) {
+    public void addServicesSummary(Content summariesList) {
 
         boolean haveUses = displayServices(uses, usesTrees);
         boolean haveProvides = displayServices(provides.keySet(), providesTrees);
 
         if (haveProvides || haveUses) {
@@ -733,11 +731,11 @@
                 addUsesList(table);
                 if (!table.isEmpty()) {
                     section.add(table);
                 }
             }
-            summaryContentTree.add(HtmlTree.LI(section));
+            summariesList.add(HtmlTree.LI(section));
         }
     }
 
     /**
      * Add the uses list for the module.
