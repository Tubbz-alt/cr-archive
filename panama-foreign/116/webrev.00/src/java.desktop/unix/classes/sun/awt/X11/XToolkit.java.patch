diff a/src/java.desktop/unix/classes/sun/awt/X11/XToolkit.java b/src/java.desktop/unix/classes/sun/awt/X11/XToolkit.java
--- a/src/java.desktop/unix/classes/sun/awt/X11/XToolkit.java
+++ b/src/java.desktop/unix/classes/sun/awt/X11/XToolkit.java
@@ -209,11 +209,10 @@
      * limit the maximum size of the window.
      */
     private static volatile int maxWindowWidthInPixels = -1;
     private static volatile int maxWindowHeightInPixels = -1;
 
-    static long awt_defaultFg; // Pixel
     private static XMouseInfoPeer xPeer;
 
     /**
      * Should we check "_NET_WM_STRUT/_NET_WM_STRUT_PARTIAL" during insets
      * calculation.
@@ -338,13 +337,10 @@
             if (XlibWrapper.XSetLocaleModifiers("") == null) {
                 log.finer("X locale modifiers are not supported, using default");
             }
             tryXKB();
 
-            AwtScreenData defaultScreen = new AwtScreenData(XToolkit.getDefaultScreenData());
-            awt_defaultFg = defaultScreen.get_blackpixel();
-
             arrowCursor = XlibWrapper.XCreateFontCursor(XToolkit.getDisplay(),
                 XCursorFontConstants.XC_arrow);
             final String extraButtons = "sun.awt.enableExtraMouseButtons";
             AccessController.doPrivileged((PrivilegedAction<Void>) () -> {
                 areExtraMouseButtonsEnabled =
@@ -1491,11 +1487,10 @@
             awtUnlock();
         }
     }
 
     static native long getDefaultXColormap();
-    static native long getDefaultScreenData();
 
     /**
      * Returns a new input method adapter descriptor for native input methods.
      */
     @Override
@@ -2173,14 +2168,10 @@
             }
             time = timeoutTasks.firstKey();
         }
     }
 
-    static long getAwtDefaultFg() {
-        return awt_defaultFg;
-    }
-
     static boolean isLeftMouseButton(MouseEvent me) {
         switch (me.getID()) {
           case MouseEvent.MOUSE_PRESSED:
           case MouseEvent.MOUSE_RELEASED:
               return (me.getButton() == MouseEvent.BUTTON1);
