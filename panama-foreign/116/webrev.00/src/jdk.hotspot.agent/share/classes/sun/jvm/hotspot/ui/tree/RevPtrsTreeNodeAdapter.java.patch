diff a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/ui/tree/RevPtrsTreeNodeAdapter.java b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/ui/tree/RevPtrsTreeNodeAdapter.java
--- a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/ui/tree/RevPtrsTreeNodeAdapter.java
+++ b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/ui/tree/RevPtrsTreeNodeAdapter.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2002, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2002, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -34,11 +34,11 @@
 /** Who directly points to this node. */
 
 public class RevPtrsTreeNodeAdapter extends FieldTreeNodeAdapter {
   private static FieldIdentifier fid = new NamedFieldIdentifier("_revPtrs");
 
-  private List children;
+  private List<LivenessPathElement> children;
 
   public RevPtrsTreeNodeAdapter(Oop oop) {
     this(oop, false);
   }
 
@@ -50,11 +50,11 @@
   public int getChildCount() {
     return children != null ? children.size() : 0;
   }
 
   public SimpleTreeNode getChild(int index) {
-    LivenessPathElement lpe = (LivenessPathElement)children.get(index);
+    LivenessPathElement lpe = children.get(index);
     IndexableFieldIdentifier ifid = new IndexableFieldIdentifier(index);
     Oop oop = lpe.getObj();
     if (oop != null) {
       return new OopTreeNodeAdapter(oop, ifid, getTreeTableMode());
     } else {
