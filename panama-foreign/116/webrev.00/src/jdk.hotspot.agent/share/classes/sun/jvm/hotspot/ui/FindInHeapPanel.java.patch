diff a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/ui/FindInHeapPanel.java b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/ui/FindInHeapPanel.java
--- a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/ui/FindInHeapPanel.java
+++ b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/ui/FindInHeapPanel.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2002, 2008, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2002, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -47,11 +47,11 @@
   private Address          value;
   private ProgressBarPanel progressBar;
   private HistoryComboBox  addressField;
   private JButton          findButton;
   private JTextArea        textArea;
-  private ArrayList        updates;
+  private ArrayList<String> updates;
   private double           lastFrac;
 
   static final double minUpdateFraction = 0.05;
 
   public FindInHeapPanel() {
@@ -77,11 +77,11 @@
         public void prologue(long used) {
           usedSize = used;
           iterated = 0;
           lastFrac = 0;
           error = false;
-          updates = new ArrayList();
+          updates = new ArrayList<>();
         }
 
         public void visitAddress(Address addr) {
           if (error) return;
 
@@ -195,11 +195,11 @@
     if (updates.size() > 0) {
       Iterator i = updates.iterator();
       while (i.hasNext()) {
         textArea.append((String)i.next());
       }
-      updates = new ArrayList();;
+      updates = new ArrayList<>();;
     }
     pendingUpdate = false;
   }
 
   private void invokeInDispatchThread(Runnable runnable) {
