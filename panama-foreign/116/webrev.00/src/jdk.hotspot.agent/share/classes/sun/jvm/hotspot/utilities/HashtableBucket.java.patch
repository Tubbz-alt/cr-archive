diff a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/utilities/HashtableBucket.java b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/utilities/HashtableBucket.java
--- a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/utilities/HashtableBucket.java
+++ b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/utilities/HashtableBucket.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2012, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -26,10 +26,12 @@
 
 import java.util.*;
 import sun.jvm.hotspot.debugger.*;
 import sun.jvm.hotspot.types.*;
 import sun.jvm.hotspot.runtime.*;
+import sun.jvm.hotspot.utilities.Observable;
+import sun.jvm.hotspot.utilities.Observer;
 
 public class HashtableBucket extends VMObject {
   static {
     VM.registerVMInitializedObserver(new Observer() {
         public void update(Observable o, Object data) {
@@ -44,14 +46,14 @@
   }
 
   // Field
   private static AddressField entryField;
 
-  // Accessor - accepts Class<? extends BasicHashtableEntry>
-  public BasicHashtableEntry getEntry(Class clazz) {
+  // Accessor
+  public BasicHashtableEntry getEntry(Class<? extends BasicHashtableEntry> clazz) {
     Address tmp = entryField.getValue(addr);
-    return (BasicHashtableEntry) VMObjectFactory.newObject(clazz, tmp);
+    return VMObjectFactory.newObject(clazz, tmp);
   }
 
   public BasicHashtableEntry entry() {
     return getEntry(HashtableEntry.class);
   }
