diff a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/utilities/ReversePtrs.java b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/utilities/ReversePtrs.java
--- a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/utilities/ReversePtrs.java
+++ b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/utilities/ReversePtrs.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2002, 2006, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2002, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -28,32 +28,32 @@
 import sun.jvm.hotspot.oops.*;
 
 /** ReversePtrs hashtable. */
 
 public class ReversePtrs  {
-  private HashMap rp;
+  private HashMap<Oop, ArrayList<LivenessPathElement>> rp;
 
   public ReversePtrs() {
-    rp = new HashMap();
+    rp = new HashMap<>();
   }
 
   public void put(LivenessPathElement from, Oop to) {
     if (to == null) return;
-    ArrayList al = (ArrayList) rp.get((Object) to);
-    if (al == null) al = new ArrayList();
+    ArrayList<LivenessPathElement> al = rp.get(to);
+    if (al == null) al = new ArrayList<>();
     // Inserting at the beginning is a hack to change the reported
     // paths from LivenessAnalysis to look more like they used to;
     // otherwise paths through the Finalizer queue to popular objects
     // seem to be preferred
-    al.add(0, (Object) from);
-    rp.put((Object) to, (Object) al);
+    al.add(0, from);
+    rp.put(to, al);
   }
 
   /** Returns an ArrayList of the incoming references to this Oop if
       it is alive, and null if it is dead according to the
       ReversePtrsAnalysis. Currently not all roots are scanned so this
       result is frequently inaccurate for JVM-internal objects, but is
       usually correct for Java-level objects. */
-  public ArrayList/*<LivenessPathElement>*/ get(Oop obj) {
-    return (ArrayList) rp.get((Object)obj);
+  public ArrayList<LivenessPathElement> get(Oop obj) {
+    return rp.get(obj);
   }
 }
