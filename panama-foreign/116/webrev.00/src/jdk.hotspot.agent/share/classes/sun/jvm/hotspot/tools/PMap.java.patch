diff a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/tools/PMap.java b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/tools/PMap.java
--- a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/tools/PMap.java
+++ b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/tools/PMap.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -26,10 +26,11 @@
 
 import java.io.*;
 import java.util.*;
 import sun.jvm.hotspot.debugger.*;
 import sun.jvm.hotspot.debugger.cdbg.*;
+import sun.jvm.hotspot.utilities.PlatformInfo;
 
 public class PMap extends Tool {
 
    public PMap() {
        super();
@@ -51,15 +52,20 @@
    public void run(PrintStream out) {
       run(out, getAgent().getDebugger());
    }
 
    public void run(PrintStream out, Debugger dbg) {
+      if (PlatformInfo.getOS().equals("darwin")) {
+        out.println("Not available on Mac OS X");
+        return;
+      }
+
       CDebugger cdbg = dbg.getCDebugger();
       if (cdbg != null) {
-         List l = cdbg.getLoadObjectList();
-         for (Iterator itr = l.iterator() ; itr.hasNext();) {
-            LoadObject lo = (LoadObject) itr.next();
+         List<LoadObject> l = cdbg.getLoadObjectList();
+         for (Iterator<LoadObject> itr = l.iterator() ; itr.hasNext();) {
+            LoadObject lo = itr.next();
             out.print(lo.getBase() + "\t");
             out.print(lo.getSize()/1024 + "K\t");
             out.println(lo.getName());
          }
       } else {
