diff a/make/jdk/src/classes/build/tools/module/GenModuleInfoSource.java b/make/jdk/src/classes/build/tools/module/GenModuleInfoSource.java
--- a/make/jdk/src/classes/build/tools/module/GenModuleInfoSource.java
+++ b/make/jdk/src/classes/build/tools/module/GenModuleInfoSource.java
@@ -57,15 +57,18 @@
  *
  * @see build.tools.module.ModuleInfoExtraTest for basic testing
  */
 public class GenModuleInfoSource {
     private final static String USAGE =
-        "Usage: GenModuleInfoSource -o <output file> \n" +
-        "  --source-file <module-info-java>\n" +
-        "  --modules <module-name>[,<module-name>...]\n" +
-        "  <module-info.java.extra> ...\n";
+            "Usage: GenModuleInfoSource \n" +
+                    " [-d]\n" +
+                    " -o <output file>\n" +
+                    "  --source-file <module-info-java>\n" +
+                    "  --modules <module-name>[,<module-name>...]\n" +
+                    "  <module-info.java.extra> ...\n";
 
+    static boolean debug = false;
     static boolean verbose = false;
     public static void main(String... args) throws Exception {
         Path outfile = null;
         Path moduleInfoJava = null;
         Set<String> modules = Collections.emptySet();
@@ -73,10 +76,13 @@
         // validate input arguments
         for (int i = 0; i < args.length; i++){
             String option = args[i];
             String arg = i+1 < args.length ? args[i+1] : null;
             switch (option) {
+                case "-d":
+                    debug = true;
+                    break;
                 case "-o":
                     outfile = Paths.get(arg);
                     i++;
                     break;
                 case "--source-file":
@@ -146,14 +152,16 @@
              PrintWriter writer = new PrintWriter(bw)) {
             // write the copyright header and lines up to module declaration
             for (String l : lines) {
                 writer.println(l);
                 if (l.trim().startsWith("module ")) {
-                    // print URI rather than file path to avoid escape
-                    writer.format("    // source file: %s%n", sourceFile.toUri());
-                    for (Path file: extraFiles) {
-                        writer.format("    //              %s%n", file.toUri());
+                    if (debug) {
+                        // print URI rather than file path to avoid escape
+                        writer.format("    // source file: %s%n", sourceFile.toUri());
+                        for (Path file : extraFiles) {
+                            writer.format("    //              %s%n", file.toUri());
+                        }
                     }
                     break;
                 }
             }
 
