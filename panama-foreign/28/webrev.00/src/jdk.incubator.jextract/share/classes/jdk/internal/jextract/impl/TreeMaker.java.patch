diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TreeMaker.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TreeMaker.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TreeMaker.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TreeMaker.java
@@ -91,11 +91,11 @@
             case EnumConstantDecl:
                 return createEnumConstant(c);
             case FieldDecl:
                 return createVar(c.isBitField() ?
                         Declaration.Variable.Kind.BITFIELD : Declaration.Variable.Kind.FIELD, c, Declaration::field);
-            case ParamDecl:
+            case ParmDecl:
                 return createVar(Declaration.Variable.Kind.PARAMETER, c, Declaration::parameter);
             case FunctionDecl:
                 return createFunction(c);
             case StructDecl:
                 return createScoped(c, Declaration.Scoped.Kind.STRUCT, Declaration::struct, Declaration::struct);
@@ -233,11 +233,11 @@
         }
         return null;
     }
 
     private Declaration.Variable createVar(Declaration.Variable.Kind kind, Cursor c, VarFactoryNoLayout varFactory) {
-        checkCursorAny(c, CursorKind.VarDecl, CursorKind.FieldDecl, CursorKind.ParamDecl);
+        checkCursorAny(c, CursorKind.VarDecl, CursorKind.FieldDecl, CursorKind.ParmDecl);
         if (c.isBitField()) {
             return checkCache(c, Declaration.Variable.class,
                     () -> Declaration.bitfield(toPos(c), c.spelling(), toType(c),
                     MemoryLayout.ofValueBits(c.getBitFieldWidth(), ByteOrder.nativeOrder())));
         } else {
