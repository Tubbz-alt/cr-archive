diff a/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/MemorySegment.java b/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/MemorySegment.java
--- a/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/MemorySegment.java
+++ b/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/MemorySegment.java
@@ -289,11 +289,11 @@
      * <p>
      * The resulting memory segment keeps a reference to the backing array, to ensure it remains <em>reachable</em>
      * for the life-time of the segment.
      *
      * @param arr the primitive array backing the array memory segment.
-     * @return a new memory segment backed by an heap memory source.
+     * @return a new memory segment backed by a heap memory source.
      */
     static MemorySegment ofArray(char[] arr) {
         return Utils.makeArraySegment(arr);
     }
 
@@ -315,11 +315,11 @@
      * <p>
      * The resulting memory segment keeps a reference to the backing array, to ensure it remains <em>reachable</em>
      * for the life-time of the segment.
      *
      * @param arr the primitive array backing the array memory segment.
-     * @return a new memory segment backed by an heap memory source.
+     * @return a new memory segment backed by a heap memory source.
      */
     static MemorySegment ofArray(int[] arr) {
         return Utils.makeArraySegment(arr);
     }
 
@@ -341,11 +341,11 @@
      * <p>
      * The resulting memory segment keeps a reference to the backing array, to ensure it remains <em>reachable</em>
      * for the life-time of the segment.
      *
      * @param arr the primitive array backing the array memory segment.
-     * @return a new memory segment backed by an heap memory source.
+     * @return a new memory segment backed by a heap memory source.
      */
     static MemorySegment ofArray(long[] arr) {
         return Utils.makeArraySegment(arr);
     }
 
diff a/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/MemorySource.java b/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/MemorySource.java
--- a/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/MemorySource.java
+++ b/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/MemorySource.java
@@ -75,10 +75,11 @@
      */
     boolean isNative();
 
     /**
      * Return the raw native address from a {@link MemoryAddress} instance associated with this memory source.
+     * @param address the {@link MemoryAddress} instance whose raw native address is to be retrieved.
      * @return the raw native address associated with {@code address}.
      * @throws UnsupportedOperationException if {@link #isNative()} returns {@code false}.
      * @throws IllegalArgumentException if {@code address} is not associated with this memory source.
      */
     long address(MemoryAddress address);
