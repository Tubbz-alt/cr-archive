diff a/src/java.base/share/classes/java/nio/MappedByteBuffer.java b/src/java.base/share/classes/java/nio/MappedByteBuffer.java
--- a/src/java.base/share/classes/java/nio/MappedByteBuffer.java
+++ b/src/java.base/share/classes/java/nio/MappedByteBuffer.java
@@ -28,10 +28,11 @@
 import java.io.FileDescriptor;
 import java.lang.ref.Reference;
 import java.util.Objects;
 
 import jdk.internal.access.foreign.MemorySegmentProxy;
+import jdk.internal.access.foreign.UnmapperProxy;
 import jdk.internal.misc.Unsafe;
 
 
 /**
  * A direct byte buffer whose content is a memory-mapped region of a file.
@@ -107,10 +108,35 @@
         super(mark, pos, lim, cap, segment);
         this.fd = null;
         this.isSync = false;
     }
 
+    UnmapperProxy unmapper() {
+        return fd != null ?
+                new UnmapperProxy() {
+                    @Override
+                    public long address() {
+                        return address;
+                    }
+
+                    @Override
+                    public FileDescriptor fileDescriptor() {
+                        return fd;
+                    }
+
+                    @Override
+                    public boolean isSync() {
+                        return isSync;
+                    }
+
+                    @Override
+                    public void unmap() {
+                        throw new UnsupportedOperationException();
+                    }
+                } : null;
+    }
+
     // Returns the distance (in bytes) of the buffer start from the
     // largest page aligned address of the mapping less than or equal
     // to the start address.
     private long mappingOffset() {
         return mappingOffset(0);
