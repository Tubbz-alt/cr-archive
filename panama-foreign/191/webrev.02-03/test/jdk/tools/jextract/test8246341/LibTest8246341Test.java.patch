diff a/test/jdk/tools/jextract/test8246341/LibTest8246341Test.java b/test/jdk/tools/jextract/test8246341/LibTest8246341Test.java
--- a/test/jdk/tools/jextract/test8246341/LibTest8246341Test.java
+++ b/test/jdk/tools/jextract/test8246341/LibTest8246341Test.java
@@ -21,10 +21,11 @@
  * questions.
  */
 
 import java.util.stream.DoubleStream;
 import java.util.stream.IntStream;
+import jdk.incubator.foreign.MemoryAddress;
 import jdk.incubator.foreign.NativeAllocationScope;
 import org.testng.annotations.Test;
 import test.jextract.test8246341.*;
 import static org.testng.Assert.assertEquals;
 import static org.testng.Assert.assertTrue;
@@ -39,11 +40,11 @@
  * @run driver JtregJextract -l Test8246341 -t test.jextract.test8246341 -- test8246341.h
  * @run testng/othervm -Dforeign.restricted=permit LibTest8246341Test
  */
 public class LibTest8246341Test {
     @Test
-    public void test() {
+    public void testPointerArray() {
         boolean[] callbackCalled = new boolean[1];
         try (var callback = func$callback.allocate((argc, argv) -> {
             callbackCalled[0] = true;
             var addr = Cpointer.asArray(argv, argc);
             assertEquals(argc, 4);
@@ -54,6 +55,21 @@
         })) {
             func(callback.baseAddress());
         }
         assertTrue(callbackCalled[0]);
     }
+
+    @Test
+    public void testPointerAllocate() {
+        try (var scope = NativeAllocationScope.boundedScope(Cpointer.sizeof())) {
+            var addr = Cpointer.allocate(MemoryAddress.NULL, scope);
+            fillin(addr);
+            assertEquals(Cstring.toJavaString(Cpointer.get(addr)), "hello world");
+        }
+
+        try (var seg = Cpointer.allocate(MemoryAddress.NULL)) {
+            var addr = seg.baseAddress();
+            fillin(addr);
+            assertEquals(Cstring.toJavaString(Cpointer.get(addr)), "hello world");
+        }
+    }
 }
