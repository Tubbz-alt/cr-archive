diff a/test/hotspot/jtreg/vmTestbase/vm/jit/LongTransitions/JniArmHFTestGenerator.java.txt b/test/hotspot/jtreg/vmTestbase/vm/jit/LongTransitions/JniArmHFTestGenerator.java.txt
--- a/test/hotspot/jtreg/vmTestbase/vm/jit/LongTransitions/JniArmHFTestGenerator.java.txt
+++ b/test/hotspot/jtreg/vmTestbase/vm/jit/LongTransitions/JniArmHFTestGenerator.java.txt
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2012, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2012, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -188,16 +188,17 @@
         cTxtFileName = className + "_c.txt";
 
         appendToJava("package " + JAVA_PACKAGE_NAME + ";");
         appendToJava("import java.io.*;");
         appendToJava("import java.util.Random;");
+        appendToJava("import jdk.test.lib.Utils;");
         appendToJava("public class " + className);
         appendToJava("{");
         appendToJava("    public static boolean flag = false;");
         appendToJava("    static Random rnd;");
         appendToJava("    static{");
-        appendToJava("        rnd=new Random();");
+        appendToJava("        rnd=Utils.getRandomInstance();");
         appendToJava("        System.loadLibrary(\"" + className + "\");");
         appendToJava("    }");
         //Different randoms
         appendToJava("    public static int getRndInt(){return rnd.nextInt(Integer.MAX_VALUE);}");
         appendToJava("    public static float getRndFloat(){return rnd.nextFloat()*Float.MAX_VALUE;}");
