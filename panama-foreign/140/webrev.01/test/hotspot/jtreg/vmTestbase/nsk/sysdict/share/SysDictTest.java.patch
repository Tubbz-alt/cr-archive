diff a/test/hotspot/jtreg/vmTestbase/nsk/sysdict/share/SysDictTest.java b/test/hotspot/jtreg/vmTestbase/nsk/sysdict/share/SysDictTest.java
--- a/test/hotspot/jtreg/vmTestbase/nsk/sysdict/share/SysDictTest.java
+++ b/test/hotspot/jtreg/vmTestbase/nsk/sysdict/share/SysDictTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2010, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2010, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -28,16 +28,16 @@
 import java.net.URL;
 import java.net.URLClassLoader;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
-import java.util.Random;
 import nsk.share.ClassUnloader;
 import nsk.share.TestFailure;
 import nsk.share.gc.ThreadedGCTest;
 import nsk.share.gc.gp.GarbageUtils;
 import nsk.share.test.ExecutionController;
+import nsk.share.test.LocalRandom;
 
 /**
  * This is the base class for btree & chain tests. It is a standard GCThreaded Test.
  */
 public abstract class SysDictTest extends ThreadedGCTest {
@@ -112,11 +112,11 @@
             this.index = number;
             this.names = new String[classnames.length];
             List<String> listNames = new ArrayList<String>(classnames.length);
             listNames.addAll(Arrays.asList(classnames));
             for (int i = 0; i < classnames.length; i++) {
-                int idx1 = new Random().nextInt(listNames.size());
+                int idx1 = LocalRandom.nextInt(listNames.size());
                 this.names[i] = listNames.remove(idx1);
             }
         }
 
         @Override
