diff a/test/hotspot/jtreg/runtime/InvocationTests/invokespecialTests.java b/test/hotspot/jtreg/runtime/InvocationTests/invokespecialTests.java
--- a/test/hotspot/jtreg/runtime/InvocationTests/invokespecialTests.java
+++ b/test/hotspot/jtreg/runtime/InvocationTests/invokespecialTests.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2019, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -32,20 +32,20 @@
  * @compile shared/AbstractGenerator.java shared/AccessCheck.java shared/AccessType.java
  *          shared/Caller.java shared/ExecutorGenerator.java shared/Utils.java
  *          shared/ByteArrayClassLoader.java shared/Checker.java shared/GenericClassGenerator.java
  * @compile invokespecial/Checker.java invokespecial/ClassGenerator.java invokespecial/Generator.java
  *
- * @run main/othervm/timeout=1800 invokespecialTests
+ * @run driver/timeout=1800 invokespecialTests
  */
 
 import jdk.test.lib.process.ProcessTools;
 import jdk.test.lib.process.OutputAnalyzer;
 import jdk.test.lib.compiler.InMemoryJavaCompiler;
 
 public class invokespecialTests {
 
-    public static void runTest(String classFileVersion, String option) throws Exception {
+    public static void runTest(String classFileVersion, String option) throws Throwable {
         System.out.println("\ninvokespecial invocation tests, option: " + option +
                            ", class file version: " + classFileVersion);
         ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(false, "-Xmx128M", option,
             "--add-exports", "java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED",
             "invokespecial.Generator", "--classfile_version=" + classFileVersion);
@@ -61,11 +61,12 @@
                 " means that an AbstractMethodError exception was thrown but the test" +
                 " case expected method C.m to be invoked.");
             System.out.println(
                 "\nAlso note that passing --dump to invokespecial.Generator will" +
                 " dump the generated classes (for debugging purposes).\n");
-            System.exit(1);
+
+            throw e;
         }
     }
 
     public static void main(String args[]) throws Throwable {
         // Get current major class file version and test with it.
