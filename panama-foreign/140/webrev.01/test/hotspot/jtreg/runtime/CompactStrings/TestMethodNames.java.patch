diff a/test/hotspot/jtreg/runtime/CompactStrings/TestMethodNames.java b/test/hotspot/jtreg/runtime/CompactStrings/TestMethodNames.java
--- a/test/hotspot/jtreg/runtime/CompactStrings/TestMethodNames.java
+++ b/test/hotspot/jtreg/runtime/CompactStrings/TestMethodNames.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2016, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -19,25 +19,21 @@
  * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */
 
-import javax.script.*;
-import java.util.function.*;
-
 /*
  * @test
  * @bug 8164612
  * @summary Test method names containing Latin-1 supplement characters.
+ * @compile methodNames.jcod
  * @run main/othervm -XX:+CompactStrings TestMethodNames
  * @run main/othervm -XX:-CompactStrings TestMethodNames
  */
 public class TestMethodNames {
-    public static void main(String[] args) throws Exception {
-        ScriptEngineManager m = new ScriptEngineManager();
-        ScriptEngine e = m.getEngineByName("nashorn");
 
-        e.eval("({get \"\0\"(){}})[\"\0\"]");
-        e.eval("({get \"\\x80\"(){}})[\"\\x80\"]");
-        e.eval("({get \"\\xff\"(){}})[\"\\xff\"]");
+    public static void main(String[] args) throws Exception {
+        // Load class containing methods with names containing Latin-1
+        // supplement characters.
+        Class newClass = Class.forName("methodNames");
     }
 }
