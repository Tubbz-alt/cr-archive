diff a/test/hotspot/jtreg/runtime/memory/ReadFromNoaccessArea.java b/test/hotspot/jtreg/runtime/memory/ReadFromNoaccessArea.java
--- a/test/hotspot/jtreg/runtime/memory/ReadFromNoaccessArea.java
+++ b/test/hotspot/jtreg/runtime/memory/ReadFromNoaccessArea.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2013, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2013, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -23,30 +23,27 @@
 
 /*
  * @test
  * @summary Test that touching noaccess area in class ReservedHeapSpace results in SIGSEGV/ACCESS_VIOLATION
  * @library /test/lib
+ * @requires vm.bits == 64
  * @modules java.base/jdk.internal.misc
  *          java.management
  * @build sun.hotspot.WhiteBox
  * @run driver ClassFileInstaller sun.hotspot.WhiteBox
- *                              sun.hotspot.WhiteBox$WhiteBoxPermission
- * @run main ReadFromNoaccessArea
+ * @run driver ReadFromNoaccessArea
  */
 
 import jdk.test.lib.Platform;
 import jdk.test.lib.process.ProcessTools;
 import jdk.test.lib.process.OutputAnalyzer;
 import sun.hotspot.WhiteBox;
+import jtreg.SkippedException;
 
 public class ReadFromNoaccessArea {
 
   public static void main(String args[]) throws Exception {
-    if (!Platform.is64bit()) {
-      System.out.println("ReadFromNoaccessArea tests is useful only on 64bit architecture. Passing silently.");
-      return;
-    }
 
     ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(
           "-Xbootclasspath/a:.",
           "-XX:+UnlockDiagnosticVMOptions",
           "-XX:+WhiteBoxAPI",
@@ -61,12 +58,11 @@
     System.out.println(output.getStdout());
     System.out.println("******* Printing stderr for analysis in case of failure *******");
     System.out.println(output.getStderr());
     System.out.println("***************************************************************");
     if (output.getStdout() != null && output.getStdout().contains("WB_ReadFromNoaccessArea method is useless")) {
-      // Test conditions broken. There is no protected page in ReservedHeapSpace in these circumstances. Silently passing test.
-      return;
+      throw new SkippedException("There is no protected page in ReservedHeapSpace in these circumstance");
     }
     if (Platform.isWindows()) {
       output.shouldContain("EXCEPTION_ACCESS_VIOLATION");
     } else if (Platform.isOSX()) {
       output.shouldContain("SIGBUS");
