diff a/test/hotspot/gtest/memory/test_virtualspace.cpp b/test/hotspot/gtest/memory/test_virtualspace.cpp
--- a/test/hotspot/gtest/memory/test_virtualspace.cpp
+++ b/test/hotspot/gtest/memory/test_virtualspace.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2018, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -102,11 +102,11 @@
     ASSERT_PRED2(is_size_aligned, size, os::vm_allocation_granularity()) << "Must be at least AG aligned";
     ASSERT_PRED2(is_size_aligned, size, alignment) << "Must be at least AG aligned";
 
     bool large = maybe_large && UseLargePages && size >= os::large_page_size();
 
-    ReservedSpace rs(size, alignment, large, false);
+    ReservedSpace rs(size, alignment, large);
     MemoryReleaser releaser(&rs);
 
     EXPECT_TRUE(rs.base() != NULL) << "rs.special: " << rs.special();
     EXPECT_EQ(size, rs.size()) << "rs.special: " << rs.special();
 
@@ -216,11 +216,11 @@
         return ReservedSpace(reserve_size_aligned);
       case Disable:
       case Commit:
         return ReservedSpace(reserve_size_aligned,
                              os::vm_allocation_granularity(),
-                             /* large */ false, /* exec */ false);
+                             /* large */ false);
     }
   }
 
   bool initialize_virtual_space(VirtualSpace& vs, ReservedSpace rs, TestLargePages mode) {
     switch(mode) {
@@ -295,11 +295,11 @@
     return;
   }
 
   size_t large_page_size = os::large_page_size();
 
-  ReservedSpace reserved(large_page_size, large_page_size, true, false);
+  ReservedSpace reserved(large_page_size, large_page_size, true);
   ReservedSpaceReleaser releaser(&reserved);
   ASSERT_TRUE(reserved.is_reserved());
 
   VirtualSpace vs;
   ASSERT_TRUE(vs.initialize(reserved, 0)) << "Failed to initialize VirtualSpace";
