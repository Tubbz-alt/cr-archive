diff a/test/lib/jdk/test/lib/process/OutputBuffer.java b/test/lib/jdk/test/lib/process/OutputBuffer.java
--- a/test/lib/jdk/test/lib/process/OutputBuffer.java
+++ b/test/lib/jdk/test/lib/process/OutputBuffer.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2013, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2013, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -21,17 +21,21 @@
  * questions.
  */
 
 package jdk.test.lib.process;
 
+import java.io.BufferedReader;
 import java.io.ByteArrayOutputStream;
 import java.io.InputStream;
+import java.io.StringReader;
 import java.nio.charset.Charset;
 import java.time.Instant;
+import java.util.List;
 import java.util.concurrent.CancellationException;
 import java.util.concurrent.ExecutionException;
 import java.util.concurrent.Future;
+import java.util.stream.Collectors;
 
 public interface OutputBuffer {
   public static class OutputBufferException extends RuntimeException {
     private static final long serialVersionUID = 8528687792643129571L;
 
@@ -44,10 +48,21 @@
    * Returns the stdout result
    *
    * @return stdout result
    */
   public String getStdout();
+
+  /**
+   * Returns the stdout as a list.
+   * Empty List if application produced no output.
+   */
+  default public List<String> getStdoutAsList() {
+    return new BufferedReader(new StringReader(getStdout()))
+            .lines()
+            .collect(Collectors.toList());
+  }
+
   /**
    * Returns the stderr result
    *
    * @return stderr result
    */
