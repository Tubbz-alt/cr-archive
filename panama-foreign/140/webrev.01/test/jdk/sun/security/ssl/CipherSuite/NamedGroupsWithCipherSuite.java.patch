diff a/test/jdk/sun/security/ssl/CipherSuite/NamedGroupsWithCipherSuite.java b/test/jdk/sun/security/ssl/CipherSuite/NamedGroupsWithCipherSuite.java
--- a/test/jdk/sun/security/ssl/CipherSuite/NamedGroupsWithCipherSuite.java
+++ b/test/jdk/sun/security/ssl/CipherSuite/NamedGroupsWithCipherSuite.java
@@ -79,17 +79,17 @@
 
     private SSLSocketTemplate.Cert[] trustedCerts = TRUSTED_CERTS;
     private SSLSocketTemplate.Cert[] endEntityCerts = END_ENTITY_CERTS;
 
     NamedGroupsWithCipherSuite(
-            String protocol,
-            String cipher,
+            Protocol protocol,
+            CipherSuite cipher,
             String namedGroup) {
-        this.protocol = protocol;
-        this.cipher = cipher;
+        this.protocol = protocol.name;
+        this.cipher = cipher.name();
 
-        if (cipher.startsWith("TLS_ECDHE_ECDSA")) {
+        if (cipher.keyExAlgorithm == KeyExAlgorithm.ECDHE_ECDSA) {
             switch (namedGroup) {
             case "secp256r1":
                 trustedCerts = new SSLSocketTemplate.Cert[] {
                         SSLSocketTemplate.Cert.CA_ECDSA_SECP256R1 };
                 endEntityCerts = new SSLSocketTemplate.Cert[] {
@@ -105,10 +105,16 @@
                 trustedCerts = new SSLSocketTemplate.Cert[] {
                         SSLSocketTemplate.Cert.CA_ECDSA_SECP521R1 };
                 endEntityCerts = new SSLSocketTemplate.Cert[] {
                         SSLSocketTemplate.Cert.EE_ECDSA_SECP521R1 };
             }
+        } else if (protocol.id < Protocol.TLSV1_2.id
+                && cipher.keyExAlgorithm == KeyExAlgorithm.DHE_DSS) {
+            trustedCerts = new SSLSocketTemplate.Cert[] {
+                    SSLSocketTemplate.Cert.CA_DSA_1024 };
+            endEntityCerts = new SSLSocketTemplate.Cert[] {
+                    SSLSocketTemplate.Cert.EE_DSA_1024 };
         }
     }
 
     protected SSLContext createClientSSLContext() throws Exception {
         return createSSLContext(trustedCerts, endEntityCerts,
@@ -148,12 +154,12 @@
                                 cipherSuite)) {
                     System.out.printf("Protocol: %s, cipher suite: %s%n",
                             protocol, cipherSuite);
                     // Named group converted to lower case just
                     // to satisfy Test condition
-                    new NamedGroupsWithCipherSuite(protocol.name,
-                            cipherSuite.name(), namedGroup.toLowerCase()).run();
+                    new NamedGroupsWithCipherSuite(protocol,
+                            cipherSuite, namedGroup.toLowerCase()).run();
                 }
             }
         }
     }
 
