diff a/test/jdk/sun/security/ssl/SSLSocketImpl/SSLSocketKeyLimit.java b/test/jdk/sun/security/ssl/SSLSocketImpl/SSLSocketKeyLimit.java
--- a/test/jdk/sun/security/ssl/SSLSocketImpl/SSLSocketKeyLimit.java
+++ b/test/jdk/sun/security/ssl/SSLSocketImpl/SSLSocketKeyLimit.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2018, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -57,11 +57,11 @@
 import java.util.Arrays;
 
 import jdk.test.lib.process.OutputAnalyzer;
 import jdk.test.lib.process.ProcessTools;
 import jdk.test.lib.Utils;
-import sun.security.util.HexDumpEncoder;
+import jdk.test.lib.hexdump.HexPrinter;
 
 public class SSLSocketKeyLimit {
     SSLSocket socket;
     private InputStream in;
     private OutputStream out;
@@ -210,11 +210,11 @@
                 System.out.print("w");
                 for (byte b: buf) {
                     if (b == 0x0A || b == 0x0D) {
                         continue;
                     }
-                    System.out.println("\nData invalid: " + new HexDumpEncoder().encode(buf));
+                    System.out.println("\nData invalid: " + HexPrinter.minimal().toString(buf));
                     break;
                 }
 
                 if (len > 0 && buf[len-1] == 0x0D) {
                     System.out.println("got end byte");
