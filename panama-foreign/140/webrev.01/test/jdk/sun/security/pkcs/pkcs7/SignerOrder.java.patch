diff a/test/jdk/sun/security/pkcs/pkcs7/SignerOrder.java b/test/jdk/sun/security/pkcs/pkcs7/SignerOrder.java
--- a/test/jdk/sun/security/pkcs/pkcs7/SignerOrder.java
+++ b/test/jdk/sun/security/pkcs/pkcs7/SignerOrder.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2015, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -23,10 +23,11 @@
 
 /*
  * @test
  * @bug 8048357
  * @summary test PKCS7 data signing, encoding and verification
+ * @library /test/lib
  * @modules java.base/sun.security.pkcs
  *          java.base/sun.security.util
  *          java.base/sun.security.x509
  * @run main SignerOrder
  */
@@ -38,11 +39,10 @@
 import java.security.PrivateKey;
 import java.security.Signature;
 import java.security.SignatureException;
 import java.security.cert.X509Certificate;
 import java.util.Date;
-import sun.security.util.HexDumpEncoder;
 import sun.security.pkcs.ContentInfo;
 import sun.security.pkcs.PKCS7;
 import sun.security.pkcs.SignerInfo;
 import sun.security.util.DerOutputStream;
 import sun.security.x509.AlgorithmId;
@@ -53,15 +53,14 @@
 import sun.security.x509.CertificateX509Key;
 import sun.security.x509.X500Name;
 import sun.security.x509.X509CertImpl;
 import sun.security.x509.X509CertInfo;
 import sun.security.x509.X509Key;
+import jdk.test.lib.hexdump.HexPrinter;
 
 public class SignerOrder {
 
-    static final HexDumpEncoder hexDump = new HexDumpEncoder();
-
     //signer infos
     static final byte[] data1 = "12345".getBytes();
     static final byte[] data2 = "abcde".getBytes();
 
     public static void main(String[] argv) throws Exception {
@@ -118,22 +117,22 @@
     static void printSignerInfos(SignerInfo signerInfo) throws IOException {
         ByteArrayOutputStream strm = new ByteArrayOutputStream();
         signerInfo.derEncode(strm);
         System.out.println("SignerInfo, length: "
                 + strm.toByteArray().length);
-        System.out.println(hexDump.encode(strm.toByteArray()));
+        HexPrinter.simple().format(strm.toByteArray());
         System.out.println("\n");
         strm.reset();
     }
 
     static void printSignerInfos(SignerInfo[] signerInfos) throws IOException {
         ByteArrayOutputStream strm = new ByteArrayOutputStream();
         for (int i = 0; i < signerInfos.length; i++) {
             signerInfos[i].derEncode(strm);
             System.out.println("SignerInfo[" + i + "], length: "
                     + strm.toByteArray().length);
-            System.out.println(hexDump.encode(strm.toByteArray()));
+            HexPrinter.simple().format(strm.toByteArray());
             System.out.println("\n");
             strm.reset();
         }
     }
 
