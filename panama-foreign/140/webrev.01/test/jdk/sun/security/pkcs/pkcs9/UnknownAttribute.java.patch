diff a/test/jdk/sun/security/pkcs/pkcs9/UnknownAttribute.java b/test/jdk/sun/security/pkcs/pkcs9/UnknownAttribute.java
--- a/test/jdk/sun/security/pkcs/pkcs9/UnknownAttribute.java
+++ b/test/jdk/sun/security/pkcs/pkcs9/UnknownAttribute.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2013, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -23,21 +23,22 @@
 
 /*
  * @test
  * @bug 8011867
  * @summary Accept unknown PKCS #9 attributes
+ * @library /test/lib
  * @modules java.base/sun.security.pkcs
  *          java.base/sun.security.util
  */
 
 import java.io.*;
 import java.util.Arrays;
 
-import sun.security.util.HexDumpEncoder;
 import sun.security.pkcs.PKCS9Attribute;
 import sun.security.util.DerValue;
 import sun.security.util.ObjectIdentifier;
+import jdk.test.lib.hexdump.HexPrinter;
 
 public class UnknownAttribute {
 
     public static void main(String[] args) throws Exception {
         // Unknown attr
@@ -56,11 +57,11 @@
         if (p2.isKnown()) {
             throw new Exception();
         }
         ByteArrayOutputStream bout = new ByteArrayOutputStream();
         p2.derEncode(bout);
-        new HexDumpEncoder().encodeBuffer(bout.toByteArray(), System.err);
+        HexPrinter.simple().dest(System.err).format(bout.toByteArray());
         if (!Arrays.equals(data, bout.toByteArray())) {
             throw new Exception();
         }
         // Unknown attr from value
         try {
