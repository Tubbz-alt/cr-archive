diff a/test/jdk/sun/security/krb5/etype/KerberosAesSha2.java b/test/jdk/sun/security/krb5/etype/KerberosAesSha2.java
--- a/test/jdk/sun/security/krb5/etype/KerberosAesSha2.java
+++ b/test/jdk/sun/security/krb5/etype/KerberosAesSha2.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2017, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -21,21 +21,22 @@
  * questions.
  */
 /*
  * @test
  * @bug 8014628
+ * @library /test/lib
  * @modules java.base/sun.security.util
  *          java.security.jgss/sun.security.krb5.internal.crypto.dk:+open
  * @summary https://tools.ietf.org/html/rfc8009 Test Vectors
  */
 
 import javax.crypto.Cipher;
 import java.lang.reflect.Method;
 import java.util.Arrays;
 
 import sun.security.krb5.internal.crypto.dk.AesSha2DkCrypto;
-import sun.security.util.HexDumpEncoder;
+import jdk.test.lib.hexdump.HexPrinter;
 
 public class KerberosAesSha2 {
 
     public static void main(String[] args) throws Exception {
 
@@ -202,8 +203,8 @@
             throw new Exception("Failure");
         }
     }
 
     private static void dump(byte[] data) throws Exception {
-        new HexDumpEncoder().encodeBuffer(data, System.err);
+        HexPrinter.simple().dest(System.err).format(data);
     }
 }
