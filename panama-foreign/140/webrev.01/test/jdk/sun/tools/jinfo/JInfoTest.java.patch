diff a/test/jdk/sun/tools/jinfo/JInfoTest.java b/test/jdk/sun/tools/jinfo/JInfoTest.java
--- a/test/jdk/sun/tools/jinfo/JInfoTest.java
+++ b/test/jdk/sun/tools/jinfo/JInfoTest.java
@@ -66,12 +66,16 @@
             output.shouldHaveExitValue(0);
             output = jinfo("-flag", "MinHeapFreeRatio", "JInfoTestLingeredApp");
             output.shouldHaveExitValue(0);
             documentMatch(output.getStdout(), ".*MinHeapFreeRatio=1.*MinHeapFreeRatio=1.*");
         } finally {
-            JInfoTestLingeredApp.stopApp(app1);
-            JInfoTestLingeredApp.stopApp(app2);
+            // LingeredApp.stopApp can throw an exception
+            try {
+                JInfoTestLingeredApp.stopApp(app1);
+            } finally {
+                JInfoTestLingeredApp.stopApp(app2);
+            }
         }
     }
 
     private static void setMultipleFlags() throws Exception {
         System.out.println("#### setMultipleFlags ####");
@@ -90,12 +94,16 @@
             OutputAnalyzer output = jinfo("JInfoTestLingeredApp");
             output.shouldHaveExitValue(0);
             // "Runtime Environment" written once per proc
             documentMatch(output.getStdout(), ".*Runtime Environment.*Runtime Environment.*");
         } finally {
-            JInfoTestLingeredApp.stopApp(app1);
-            JInfoTestLingeredApp.stopApp(app2);
+            // LingeredApp.stopApp can throw an exception
+            try {
+                JInfoTestLingeredApp.stopApp(app1);
+            } finally {
+                JInfoTestLingeredApp.stopApp(app2);
+            }
         }
     }
 
     private static void documentMatch(String data, String pattern){
         Matcher matcher = Pattern.compile(pattern, Pattern.DOTALL).matcher(data);
