diff a/test/jdk/javax/net/ssl/interop/ClientHelloBufferUnderflowException.java b/test/jdk/javax/net/ssl/interop/ClientHelloBufferUnderflowException.java
--- a/test/jdk/javax/net/ssl/interop/ClientHelloBufferUnderflowException.java
+++ b/test/jdk/javax/net/ssl/interop/ClientHelloBufferUnderflowException.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2019, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -28,17 +28,19 @@
 
 /*
  * @test
  * @bug 8215790 8219389
  * @summary Verify exception
+ * @library /test/lib
  * @modules java.base/sun.security.util
  * @run main/othervm ClientHelloBufferUnderflowException
  */
 
-import sun.security.util.HexDumpEncoder;
 import javax.net.ssl.SSLHandshakeException;
 
+import jdk.test.lib.hexdump.HexPrinter;
+
 public class ClientHelloBufferUnderflowException extends ClientHelloInterOp {
     /*
      * Main entry point for this test.
      */
     public static void main(String args[]) throws Exception {
@@ -73,11 +75,11 @@
         byte[] bytes = {
             0x16, 0x03, 0x01, 0x00, 0x05, 0x01, 0x00, 0x00, 0x01, 0x03};
 
         System.out.println("The ClientHello message used");
         try {
-            (new HexDumpEncoder()).encodeBuffer(bytes, System.out);
+            HexPrinter.simple().format(bytes);
         } catch (Exception e) {
             // ignore
         }
 
         return bytes;
