diff a/test/jdk/javax/net/ssl/interop/ClientHelloChromeInterOp.java b/test/jdk/javax/net/ssl/interop/ClientHelloChromeInterOp.java
--- a/test/jdk/javax/net/ssl/interop/ClientHelloChromeInterOp.java
+++ b/test/jdk/javax/net/ssl/interop/ClientHelloChromeInterOp.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2016, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2016, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -28,17 +28,19 @@
 
 /*
  * @test
  * @bug 8169362
  * @summary Interop automated testing with Chrome
+ * @library /test/lib
  * @modules jdk.crypto.ec
  *          java.base/sun.security.util
  * @run main/othervm ClientHelloChromeInterOp
  */
 
 import java.util.Base64;
-import sun.security.util.HexDumpEncoder;
+import jdk.test.lib.hexdump.HexPrinter;
+
 
 public class ClientHelloChromeInterOp extends ClientHelloInterOp {
     // The ClientHello message.
     //
     // Captured from Chrome browser (version 54.0.2840.87 m (64-bit)) on
@@ -61,14 +63,13 @@
     protected byte[] createClientHelloMessage() {
         byte[] bytes = Base64.getMimeDecoder().decode(ClientHelloMsg);
 
         // Dump the hex codes of the ClientHello message so that developers
         // can easily check whether the message is captured correct or not.
-        HexDumpEncoder dump = new HexDumpEncoder();
         System.out.println("The ClientHello message used");
         try {
-            dump.encodeBuffer(bytes, System.out);
+            HexPrinter.simple().format(bytes);
         } catch (Exception e) {
             // ignore
         }
 
         return bytes;
