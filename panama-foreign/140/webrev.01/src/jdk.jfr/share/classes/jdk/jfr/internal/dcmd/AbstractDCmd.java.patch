diff a/src/jdk.jfr/share/classes/jdk/jfr/internal/dcmd/AbstractDCmd.java b/src/jdk.jfr/share/classes/jdk/jfr/internal/dcmd/AbstractDCmd.java
--- a/src/jdk.jfr/share/classes/jdk/jfr/internal/dcmd/AbstractDCmd.java
+++ b/src/jdk.jfr/share/classes/jdk/jfr/internal/dcmd/AbstractDCmd.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2012, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2012, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -68,11 +68,11 @@
 
     public String getPid() {
         // Invoking ProcessHandle.current().pid() would require loading more
         // classes during startup so instead JVM.getJVM().getPid() is used.
         // The pid will not be exposed to running Java application, only when starting
-        // JFR from command line (-XX:StartFlightRecordin) or jcmd (JFR.start and JFR.check)
+        // JFR from command line (-XX:StartFlightRecording) or jcmd (JFR.start and JFR.check)
         return JVM.getJVM().getPid();
     }
 
     protected final SafePath resolvePath(Recording recording, String filename) throws InvalidPathException {
         if (filename == null) {
