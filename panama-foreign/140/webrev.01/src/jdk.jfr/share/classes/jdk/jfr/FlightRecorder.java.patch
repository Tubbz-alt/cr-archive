diff a/src/jdk.jfr/share/classes/jdk/jfr/FlightRecorder.java b/src/jdk.jfr/share/classes/jdk/jfr/FlightRecorder.java
--- a/src/jdk.jfr/share/classes/jdk/jfr/FlightRecorder.java
+++ b/src/jdk.jfr/share/classes/jdk/jfr/FlightRecorder.java
@@ -83,29 +83,27 @@
     }
 
     /**
      * Creates a snapshot of all available recorded data.
      * <p>
-     * A snapshot is a synthesized recording in a {@code STOPPPED} state. If no data is
+     * A snapshot is a synthesized recording in a {@code STOPPED} state. If no data is
      * available, a recording with size {@code 0} is returned.
      * <p>
      * A snapshot provides stable access to data for later operations (for example,
      * operations to change the interval or to reduce the data size).
      * <p>
      * The following example shows how to create a snapshot and write a subset of the data to a file.
      *
-     * <pre>
-     * <code>
+     * <pre>{@literal
      * try (Recording snapshot = FlightRecorder.getFlightRecorder().takeSnapshot()) {
-     *   if (snapshot.getSize() &gt; 0) {
+     *   if (snapshot.getSize() > 0) {
      *     snapshot.setMaxSize(100_000_000);
      *     snapshot.setMaxAge(Duration.ofMinutes(5));
      *     snapshot.dump(Paths.get("snapshot.jfr"));
      *   }
      * }
-     * </code>
-     * </pre>
+     * }</pre>
      *
      * The caller must close the recording when access to the data is no longer
      * needed.
      *
      * @return a snapshot of all available recording data, not {@code null}
