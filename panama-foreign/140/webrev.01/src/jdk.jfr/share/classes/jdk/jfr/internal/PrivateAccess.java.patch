diff a/src/jdk.jfr/share/classes/jdk/jfr/internal/PrivateAccess.java b/src/jdk.jfr/share/classes/jdk/jfr/internal/PrivateAccess.java
--- a/src/jdk.jfr/share/classes/jdk/jfr/internal/PrivateAccess.java
+++ b/src/jdk.jfr/share/classes/jdk/jfr/internal/PrivateAccess.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2016, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2016, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -49,14 +49,14 @@
 public abstract class PrivateAccess {
     private volatile static PrivateAccess instance;
 
     public static PrivateAccess getInstance() {
         // Can't be initialized in <clinit> because it may
-        // deadlock with FlightRecordeerPermission.<clinit>
+        // deadlock with FlightRecorderPermission.<clinit>
         if (instance == null) {
             // Will trigger
-            // FlightRecordeerPermission.<clinit>
+            // FlightRecorderPermission.<clinit>
             // which will call PrivateAccess.setPrivateAccess
             new FlightRecorderPermission(Utils.REGISTER_EVENT);
         }
         return instance;
     }
