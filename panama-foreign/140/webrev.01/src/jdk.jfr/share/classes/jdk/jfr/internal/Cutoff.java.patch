diff a/src/jdk.jfr/share/classes/jdk/jfr/internal/Cutoff.java b/src/jdk.jfr/share/classes/jdk/jfr/internal/Cutoff.java
--- a/src/jdk.jfr/share/classes/jdk/jfr/internal/Cutoff.java
+++ b/src/jdk.jfr/share/classes/jdk/jfr/internal/Cutoff.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2016, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2016, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -35,11 +35,11 @@
 
 /**
  * Event annotation, determines the cutoff above which an event should not be
  * recorded, i.e. {@code "20 ms"}.
  *
- * This settings is only supported for JVM events,
+ * This settings is only supported for JVM events.
  *
  * @since 9
  */
 @MetadataDefinition
 @Target({ ElementType.TYPE })
@@ -48,11 +48,11 @@
 public @interface Cutoff {
     /**
      * Settings name {@code "cutoff"} for configuring event cutoffs.
      */
     public final static String NAME = "cutoff";
-    public final static String INIFITY = "infinity";
+    public final static String INFINITY = "infinity";
 
     /**
      * Cutoff, for example {@code "20 ms"}.
      * <p>
      * String representation of a positive {@code Long} value followed by an empty
@@ -65,11 +65,11 @@
      * {@code "m"} (minutes)<br>
      * {@code "h"} (hours)<br>
      * {@code "d"} (days)<br>
      * <p>
      * Example values, {@code "0 ns"}, {@code "10 ms"} and {@code "1 s"}. If the
-     * events has an infinite timespan, the text {@code"infinity"} should be used.
+     * events has an infinite timespan, the text {@code "infinity"} should be used.
      *
      * @return the threshold, default {@code "0 ns"} not {@code null}
      */
-    String value() default "inifity";
+    String value() default "infinity";
 }
