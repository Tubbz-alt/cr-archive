diff a/src/jdk.jfr/share/classes/jdk/jfr/consumer/RecordedObject.java b/src/jdk.jfr/share/classes/jdk/jfr/consumer/RecordedObject.java
--- a/src/jdk.jfr/share/classes/jdk/jfr/consumer/RecordedObject.java
+++ b/src/jdk.jfr/share/classes/jdk/jfr/consumer/RecordedObject.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2016, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2016, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -180,11 +180,11 @@
      * Returns {@code true} if a field with the given name exists, {@code false}
      * otherwise.
      *
      * @param name name of the field to get, not {@code null}
      *
-     * @return {@code true} if the field exists, {@code false} otherwise.
+     * @return {@code true} if the field exists, {@code false} otherwise
      *
      * @see #getFields()
      */
     public boolean hasField(String name) {
         Objects.requireNonNull(name);
@@ -220,12 +220,11 @@
      * A field might change or be removed in a future JDK release. A best practice
      * for callers of this method is to validate the field before attempting access.
      * <p>
      * Example
      *
-     * <pre>
-     * <code>
+     * <pre>{@literal
      * if (event.hasField("intValue")) {
      *   int intValue = event.getValue("intValue");
      *   System.out.println("Int value: " + intValue);
      * }
      *
@@ -234,14 +233,13 @@
      *   System.out.println("Class name: " + clazz.getName());
      * }
      *
      * if (event.hasField("sampledThread")) {
      *   RecordedThread sampledThread = event.getValue("sampledThread");
-     *   System.out.println("Sampled thread: " + sampledThread.getName());
+     *   System.out.println("Sampled thread: " + sampledThread.getJavaName());
      * }
-     * </code>
-     * </pre>
+     * }</pre>
      *
      * @param <T> the return type
      * @param  name of the field to get, not {@code null}
      * @throws IllegalArgumentException if no field called {@code name} exists
      *
