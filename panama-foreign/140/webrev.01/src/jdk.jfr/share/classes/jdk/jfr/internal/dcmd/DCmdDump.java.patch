diff a/src/jdk.jfr/share/classes/jdk/jfr/internal/dcmd/DCmdDump.java b/src/jdk.jfr/share/classes/jdk/jfr/internal/dcmd/DCmdDump.java
--- a/src/jdk.jfr/share/classes/jdk/jfr/internal/dcmd/DCmdDump.java
+++ b/src/jdk.jfr/share/classes/jdk/jfr/internal/dcmd/DCmdDump.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2012, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2012, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -56,11 +56,11 @@
 // Instantiated by native
 final class DCmdDump extends AbstractDCmd {
     /**
      * Execute JFR.dump.
      *
-     * @param name name or id of the recording to dump, or <code>null</code> to dump everything
+     * @param name name or id of the recording to dump, or {@code null} to dump everything
      *
      * @param filename file path where recording should be written, not null
      * @param maxAge how far back in time to dump, may be null
      * @param maxSize how far back in size to dump data from, may be null
      * @param begin point in time to dump data from, may be null
@@ -112,11 +112,11 @@
         Instant beginTime = parseTime(begin, "begin");
         Instant endTime = parseTime(end, "end");
 
         if (beginTime != null && endTime != null) {
             if (endTime.isBefore(beginTime)) {
-                throw new DCmdException("Dump failed, begin must preceed end.");
+                throw new DCmdException("Dump failed, begin must precede end.");
             }
         }
 
         Duration duration = null;
         if (maxAge != null) {
