diff a/src/jdk.jfr/share/classes/jdk/jfr/internal/consumer/JdkJfrConsumer.java b/src/jdk.jfr/share/classes/jdk/jfr/internal/consumer/JdkJfrConsumer.java
--- a/src/jdk.jfr/share/classes/jdk/jfr/internal/consumer/JdkJfrConsumer.java
+++ b/src/jdk.jfr/share/classes/jdk/jfr/internal/consumer/JdkJfrConsumer.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2019, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -47,11 +47,11 @@
 public abstract class JdkJfrConsumer {
 
     private static JdkJfrConsumer instance;
 
     // Initialization will trigger setAccess being called
-    private static void forceInitializetion() {
+    private static void forceInitialization() {
         try {
             Class<?> c = RecordedObject.class;
             Class.forName(c.getName(), true, c.getClassLoader());
         } catch (ClassNotFoundException e) {
             throw new InternalError("Should not happen");
@@ -62,11 +62,11 @@
         instance = access;
     }
 
     public static JdkJfrConsumer instance() {
         if (instance == null) {
-            forceInitializetion();
+            forceInitialization();
         }
         return instance;
     }
 
     public abstract List<Type> readTypes(RecordingFile file) throws IOException;
