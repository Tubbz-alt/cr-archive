diff a/src/jdk.jfr/share/classes/jdk/jfr/MetadataDefinition.java b/src/jdk.jfr/share/classes/jdk/jfr/MetadataDefinition.java
--- a/src/jdk.jfr/share/classes/jdk/jfr/MetadataDefinition.java
+++ b/src/jdk.jfr/share/classes/jdk/jfr/MetadataDefinition.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2016, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2016, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -34,43 +34,40 @@
  * Meta annotation for defining new types of event metadata.
  * <p>
  * In the following example, a transaction event is defined with two
  * user-defined annotations, {@code @Severity} and {@code @TransactionId}.
  *
- * <pre>
- * <code>
- *{@literal @}MetadataDefinition
- *{@literal @}Label("Severity")
- *{@literal @}Description("Value between 0 and 100 that indicates severity. 100 is most severe.")
- *{@literal @}Retention(RetentionPolicy.RUNTIME)
- *{@literal @}Target({ ElementType.TYPE })
- * public {@literal @}interface {@literal @}Severity {
- *   int value() default 50;
+ * <pre>{@literal
+ * @MetadataDefinition
+ * @Label("Severity")
+ * @Description("Value between 0 and 100 that indicates severity. 100 is most severe.")
+ * @Retention(RetentionPolicy.RUNTIME)
+ * @Target({ElementType.TYPE})
+ * public @interface Severity {
+ *     int value() default 50;
  * }
  *
- *{@literal @}MetadataDefinition
- *{@literal @}Label("Transaction Id")
- *{@literal @}Relational
- *{@literal @}Retention(RetentionPolicy.RUNTIME)
- *{@literal @}Target({ ElementType.FIELD })
- * public {@literal @}interface {@literal @}Severity {
+ * @MetadataDefinition
+ * @Label("Transaction Id")
+ * @Relational
+ * @Retention(RetentionPolicy.RUNTIME)
+ * @Target({ElementType.FIELD})
+ * public @interface TransactionId {
  * }
  *
- *{@literal @}Severity(80)
- *{@literal @}Label("Transaction Blocked");
+ * @Severity(80)
+ * @Label("Transaction Blocked")
  * class TransactionBlocked extends Event {
- *  {@literal @}TransactionId
- *  {@literal @}Label("Transaction");
- *   long transactionId;
+ *     @TransactionId
+ *     @Label("Transaction")
+ *     long transactionId1;
  *
- *  {@literal @}TransactionId
- *  {@literal @}Label("Transaction Blocker");
- *   long transactionId;
+ *     @TransactionId
+ *     @Label("Transaction Blocker")
+ *     long transactionId2;
  * }
- *
- * </code>
- * </pre>
+ * }</pre>
  *
  * Adding {@code @MetadataDefinition} to the declaration of {@code @Severity} and {@code @TransactionId}
  * ensures the information is saved by Flight Recorder.
  *
  * @since 9
