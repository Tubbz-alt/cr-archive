diff a/src/jdk.jfr/share/classes/jdk/jfr/consumer/RecordedClass.java b/src/jdk.jfr/share/classes/jdk/jfr/consumer/RecordedClass.java
--- a/src/jdk.jfr/share/classes/jdk/jfr/consumer/RecordedClass.java
+++ b/src/jdk.jfr/share/classes/jdk/jfr/consumer/RecordedClass.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2016, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2016, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -23,12 +23,10 @@
  * questions.
  */
 
 package jdk.jfr.consumer;
 
-import java.lang.reflect.Modifier;
-
 import jdk.jfr.internal.consumer.ObjectContext;
 
 /**
  * A recorded Java type, such as a class or an interface.
  *
@@ -43,24 +41,22 @@
         this.uniqueId = id;
     }
 
     /**
      * Returns the modifiers of the class.
-     * <p>
-     * See {@link java.lang.reflect.Modifier}
      *
      * @return the modifiers
      *
-     * @see Modifier
+     * @see java.lang.reflect.Modifier
      */
     public int getModifiers() {
         return getTyped("modifiers", Integer.class, -1);
     }
 
     /**
      * Returns the class loader that defined the class.
-     * <P>
+     * <p>
      * If the bootstrap class loader is represented as {@code null} in the Java
      * Virtual Machine (JVM), then {@code null} is also the return value of this method.
      *
      * @return the class loader defining this class, can be {@code null}
      */
