diff a/src/jdk.incubator.jpackage/share/classes/jdk/incubator/jpackage/internal/StandardBundlerParam.java b/src/jdk.incubator.jpackage/share/classes/jdk/incubator/jpackage/internal/StandardBundlerParam.java
--- a/src/jdk.incubator.jpackage/share/classes/jdk/incubator/jpackage/internal/StandardBundlerParam.java
+++ b/src/jdk.incubator.jpackage/share/classes/jdk/incubator/jpackage/internal/StandardBundlerParam.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2014, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2014, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -68,10 +68,15 @@
     private static final ResourceBundle I18N = ResourceBundle.getBundle(
             "jdk.incubator.jpackage.internal.resources.MainResources");
     private static final String JAVABASEJMOD = "java.base.jmod";
     private final static String DEFAULT_VERSION = "1.0";
     private final static String DEFAULT_RELEASE = "1";
+    private final static String[] DEFAULT_JLINK_OPTIONS = {
+            "--strip-native-commands",
+            "--strip-debug",
+            "--no-man-pages",
+            "--no-header-files"};
 
     StandardBundlerParam(String id, Class<T> valueType,
             Function<Map<String, ? super Object>, T> defaultValueFunction,
             BiFunction<String, Map<String, ? super Object>, T> stringConverter)
     {
@@ -477,10 +482,18 @@
                     (Class<Set<String>>) (Object) Set.class,
                     p -> new LinkedHashSet<String>(),
                     (s, p) -> new LinkedHashSet<>(Arrays.asList(s.split(",")))
             );
 
+    @SuppressWarnings("unchecked")
+    static final StandardBundlerParam<List<String>> JLINK_OPTIONS =
+            new StandardBundlerParam<>(
+                    Arguments.CLIOptions.JLINK_OPTIONS.getId(),
+                    (Class<List<String>>) (Object) List.class,
+                    p -> Arrays.asList(DEFAULT_JLINK_OPTIONS),
+                    (s, p) -> null);
+
     @SuppressWarnings("unchecked")
     static final BundlerParamInfo<Set<String>> LIMIT_MODULES =
             new StandardBundlerParam<>(
                     "limit-modules",
                     (Class<Set<String>>) (Object) Set.class,
