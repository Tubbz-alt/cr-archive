diff a/src/java.base/share/classes/jdk/internal/loader/ClassLoaders.java b/src/java.base/share/classes/jdk/internal/loader/ClassLoaders.java
--- a/src/java.base/share/classes/jdk/internal/loader/ClassLoaders.java
+++ b/src/java.base/share/classes/jdk/internal/loader/ClassLoaders.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2015, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2015, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -130,20 +130,10 @@
         }
 
         PlatformClassLoader(BootClassLoader parent) {
             super("platform", parent, null);
         }
-
-        /**
-         * Called by the VM to support define package for AppCDS.
-         *
-         * Shared classes are returned in ClassLoader::findLoadedClass
-         * that bypass the defineClass call.
-         */
-        private Package definePackage(String pn, Module module) {
-            return JLA.definePackage(this, pn, module);
-        }
     }
 
     /**
      * The application class loader that is a {@code BuiltinClassLoader} with
      * customizations to be compatible with long standing behavior.
@@ -192,20 +182,10 @@
          */
         void appendToClassPathForInstrumentation(String path) {
             ucp.addFile(path);
         }
 
-        /**
-         * Called by the VM to support define package for AppCDS
-         *
-         * Shared classes are returned in ClassLoader::findLoadedClass
-         * that bypass the defineClass call.
-         */
-        private Package definePackage(String pn, Module module) {
-            return JLA.definePackage(this, pn, module);
-        }
-
         /**
          * Called by the VM to support define package for AppCDS
          */
         protected Package defineOrCheckPackage(String pn, Manifest man, URL url) {
             return super.defineOrCheckPackage(pn, man, url);
