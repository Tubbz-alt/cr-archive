diff a/make/JrtfsJar.gmk b/make/JrtfsJar.gmk
--- a/make/JrtfsJar.gmk
+++ b/make/JrtfsJar.gmk
@@ -1,7 +1,7 @@
 #
-# Copyright (c) 2014, 2017, Oracle and/or its affiliates. All rights reserved.
+# Copyright (c) 2014, 2020, Oracle and/or its affiliates. All rights reserved.
 # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 #
 # This code is free software; you can redistribute it and/or modify it
 # under the terms of the GNU General Public License version 2 only, as
 # published by the Free Software Foundation.  Oracle designates this
@@ -25,12 +25,12 @@
 
 default: all
 
 include $(SPEC)
 include MakeBase.gmk
+include JavaCompilation.gmk
 include JarArchive.gmk
-include SetupJavaCompilers.gmk
 include TextFileProcessing.gmk
 
 # This rule will be depended on due to the MANIFEST line
 $(eval $(call SetupTextFileProcessing, BUILD_JAVA_MANIFEST, \
   SOURCE_FILES := $(TOPDIR)/make/data/mainmanifest/manifest.mf, \
@@ -45,26 +45,28 @@
     jdk/internal/jimage \
     jdk/internal/jrtfs \
     #
 
 $(eval $(call SetupJavaCompilation, BUILD_JRTFS, \
-    SETUP := GENERATE_8_BYTECODE, \
+    COMPILER := bootjdk, \
+    TARGET_RELEASE := $(TARGET_RELEASE_JDK8), \
     SRC := $(TOPDIR)/src/java.base/share/classes, \
     EXCLUDE_FILES := module-info.java, \
     INCLUDES := $(JIMAGE_PKGS), \
-    BIN := $(SUPPORT_OUTPUTDIR)/jrtfs_classes))
+    BIN := $(SUPPORT_OUTPUTDIR)/jrtfs_classes, \
+))
 
 # Because of the explicit INCLUDES in the compilation setup above, the service provider
 # file will not be copied unless META-INF/services would also be added to the INCLUDES.
 # Adding META-INF/services would include all files in that directory when only the one
 # is needed, which is why this explicit copy is defined instead.
 $(eval $(call SetupCopyFiles, COPY_JIMAGE_SERVICE_PROVIDER, \
     SRC := $(TOPDIR)/src/java.base/share/classes, \
     DEST := $(SUPPORT_OUTPUTDIR)/jrtfs_classes, \
     FILES := META-INF/services/java.nio.file.spi.FileSystemProvider))
 
-$(eval $(call SetupJarArchive,BUILD_JRTFS_JAR, \
+$(eval $(call SetupJarArchive, BUILD_JRTFS_JAR, \
     DEPENDENCIES := $(BUILD_JRTFS) $(COPY_JIMAGE_SERVICE_PROVIDER), \
     SRCS := $(SUPPORT_OUTPUTDIR)/jrtfs_classes, \
     JAR := $(SUPPORT_OUTPUTDIR)/modules_libs/java.base/jrt-fs.jar, \
     MANIFEST := $(SUPPORT_OUTPUTDIR)/java-main-manifest.mf, \
 ))
