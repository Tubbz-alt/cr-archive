diff a/make/autoconf/bootcycle-spec.gmk.in b/make/autoconf/bootcycle-spec.gmk.in
--- a/make/autoconf/bootcycle-spec.gmk.in
+++ b/make/autoconf/bootcycle-spec.gmk.in
@@ -33,14 +33,10 @@
 ifeq ($(firstword $(JAVA)),$(FIXPATH))
   JAVA_EXEC_POS=2
 else
   JAVA_EXEC_POS=1
 endif
-ifneq ($(word $(JAVA_EXEC_POS),$(SJAVAC_SERVER_JAVA)),$(word $(JAVA_EXEC_POS),$(JAVA)))
-  $(error Bootcycle builds are not possible if --with-sjavac-server-java is specified)
-endif
-
 
 # Override specific values to do a boot cycle build
 
 # Use a different Boot JDK
 BOOT_JDK := $(JDK_IMAGE_DIR)
@@ -52,16 +48,10 @@
 
 JAVA_CMD:=$(BOOT_JDK)/bin/java
 JAVAC_CMD:=$(BOOT_JDK)/bin/javac
 JAR_CMD:=$(BOOT_JDK)/bin/jar
 JARSIGNER_CMD:=$(BOOT_JDK)/bin/jarsigner
-SJAVAC_SERVER_JAVA_CMD:=$(JAVA_CMD)
-# When building a 32bit target, make sure the sjavac server flags are compatible
-# with a 32bit JVM.
-ifeq ($(OPENJDK_TARGET_CPU_BITS), 32)
-  SJAVAC_SERVER_JAVA_FLAGS := @BOOTCYCLE_JVM_ARGS_BIG@
-endif
 # The bootcycle JVM arguments may differ from the original boot jdk.
 JAVA_FLAGS_BIG := @BOOTCYCLE_JVM_ARGS_BIG@
 # Any CDS settings generated for the bootjdk are invalid in the bootcycle build.
 # By filtering out those JVM args, the bootcycle JVM will use its default
 # settings for CDS.
