diff a/test/lib/jdk/test/lib/net/IPSupport.java b/test/lib/jdk/test/lib/net/IPSupport.java
--- a/test/lib/jdk/test/lib/net/IPSupport.java
+++ b/test/lib/jdk/test/lib/net/IPSupport.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2019, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -27,11 +27,10 @@
 import java.io.IOException;
 import java.io.PrintStream;
 import java.io.UncheckedIOException;
 import java.net.InetAddress;
 import java.net.InetSocketAddress;
-import java.net.ServerSocket;
 import java.net.Socket;
 import java.net.SocketException;
 import java.net.UnknownHostException;
 import java.security.AccessController;
 import java.security.PrivilegedActionException;
@@ -45,10 +44,11 @@
 public class IPSupport {
 
     private static final boolean hasIPv4;
     private static final boolean hasIPv6;
     private static final boolean preferIPv4Stack;
+    private static final boolean preferIPv6Addresses;
 
     static {
         try {
             InetAddress loopbackIPv4 = InetAddress.getByAddress(
                     new byte[] {0x7F, 0x00, 0x00, 0x01});
@@ -62,10 +62,12 @@
         } catch (UnknownHostException e) {
             throw new AssertionError(e);
         }
         preferIPv4Stack = runPrivilegedAction(() -> Boolean.parseBoolean(
             System.getProperty("java.net.preferIPv4Stack")));
+        preferIPv6Addresses = runPrivilegedAction(() -> Boolean.parseBoolean(
+            System.getProperty("java.net.preferIPv6Addresses")));
         if (!preferIPv4Stack && !hasIPv4 && !hasIPv6) {
             throw new AssertionError("IPv4 and IPv6 both not available and java.net.preferIPv4Stack is not true");
         }
     }
 
@@ -110,10 +112,17 @@
      */
     public static final boolean preferIPv4Stack() {
         return preferIPv4Stack;
     }
 
+    /**
+     * Whether or not the "java.net.preferIPv6Addresses" system property is set.
+     */
+    public static final boolean preferIPv6Addresses() {
+        return preferIPv6Addresses;
+    }
+
 
     /**
      * Whether or not the current networking configuration is valid or not.
      *
      * If preferIPv4Stack is true but there is no IPv4 support, the configuration is invalid.
@@ -150,8 +159,9 @@
      */
     public static void printPlatformSupport(PrintStream out) {
         out.println("IPSupport - IPv4: " + hasIPv4());
         out.println("IPSupport - IPv6: " + hasIPv6());
         out.println("preferIPv4Stack: " + preferIPv4Stack());
+        out.println("preferIPv6Addresses: " + preferIPv6Addresses());
     }
 
 }
