diff a/src/hotspot/share/gc/shenandoah/shenandoahHeapRegion.hpp b/src/hotspot/share/gc/shenandoah/shenandoahHeapRegion.hpp
--- a/src/hotspot/share/gc/shenandoah/shenandoahHeapRegion.hpp
+++ b/src/hotspot/share/gc/shenandoah/shenandoahHeapRegion.hpp
@@ -259,10 +259,12 @@
   uint64_t _seqnum_last_alloc_gc;
 
   volatile size_t _live_data;
   volatile size_t _critical_pins;
 
+  HeapWord* volatile _update_watermark;
+
   // Claim some space at the end to protect next region
   DEFINE_PAD_MINUS_SIZE(0, DEFAULT_CACHE_LINE_SIZE, 0);
 
 public:
   ShenandoahHeapRegion(ShenandoahHeap* heap, HeapWord* start, size_t size_words, size_t index, bool committed);
@@ -426,10 +428,20 @@
 
   uint64_t seqnum_last_alloc_gc()  const {
     return _seqnum_last_alloc_gc;
   }
 
+  HeapWord* get_update_watermark() const {
+    assert(bottom() <= _update_watermark && _update_watermark <= top(), "within bounds");
+    return Atomic::load_acquire(&_update_watermark);
+  }
+
+  void set_update_watermark(HeapWord* w) {
+    assert(bottom() <= w && w <= top(), "within bounds");
+    Atomic::release_store(&_update_watermark, w);
+  }
+
 private:
   void do_commit();
   void do_uncommit();
 
   void oop_iterate_objects(OopIterateClosure* cl);
