diff a/src/hotspot/share/gc/shenandoah/shenandoahUtils.hpp b/src/hotspot/share/gc/shenandoah/shenandoahUtils.hpp
--- a/src/hotspot/share/gc/shenandoah/shenandoahUtils.hpp
+++ b/src/hotspot/share/gc/shenandoah/shenandoahUtils.hpp
@@ -54,27 +54,36 @@
   ~ShenandoahGCSession();
 };
 
 class ShenandoahGCPhase : public StackObj {
 private:
-  static const ShenandoahPhaseTimings::Phase _invalid_phase = ShenandoahPhaseTimings::_num_phases;
-  static ShenandoahPhaseTimings::Phase       _current_phase;
+  static ShenandoahPhaseTimings::Phase  _current_phase;
 
-  ShenandoahHeap* const _heap;
+  ShenandoahPhaseTimings* const         _timings;
   const ShenandoahPhaseTimings::Phase   _phase;
   ShenandoahPhaseTimings::Phase         _parent_phase;
+  double _start;
+
 public:
   ShenandoahGCPhase(ShenandoahPhaseTimings::Phase phase);
   ~ShenandoahGCPhase();
 
   static ShenandoahPhaseTimings::Phase current_phase() { return _current_phase; }
 
-  static bool is_valid_phase(ShenandoahPhaseTimings::Phase phase);
-  static bool is_current_phase_valid() { return is_valid_phase(current_phase()); }
+  static bool is_current_phase_valid();
   static bool is_root_work_phase();
 };
 
+class ShenandoahGCWorkerPhase : public StackObj {
+private:
+  ShenandoahPhaseTimings* const       _timings;
+  const ShenandoahPhaseTimings::Phase _phase;
+public:
+  ShenandoahGCWorkerPhase(ShenandoahPhaseTimings::Phase phase);
+  ~ShenandoahGCWorkerPhase();
+};
+
 // Aggregates all the things that should happen before/after the pause.
 class ShenandoahGCPauseMark : public StackObj {
 private:
   ShenandoahHeap* const _heap;
   const GCIdMark                _gc_id_mark;
@@ -97,11 +106,10 @@
     if (vm_op == NULL) return false;
 
     VM_Operation::VMOp_Type type = vm_op->type();
     return type == VM_Operation::VMOp_ShenandoahInitMark ||
            type == VM_Operation::VMOp_ShenandoahFinalMarkStartEvac ||
-           type == VM_Operation::VMOp_ShenandoahFinalEvac ||
            type == VM_Operation::VMOp_ShenandoahInitTraversalGC ||
            type == VM_Operation::VMOp_ShenandoahFinalTraversalGC ||
            type == VM_Operation::VMOp_ShenandoahInitUpdateRefs ||
            type == VM_Operation::VMOp_ShenandoahFinalUpdateRefs ||
            type == VM_Operation::VMOp_ShenandoahFullGC ||
