diff a/src/hotspot/share/gc/shenandoah/heuristics/shenandoahAdaptiveHeuristics.cpp b/src/hotspot/share/gc/shenandoah/heuristics/shenandoahAdaptiveHeuristics.cpp
--- a/src/hotspot/share/gc/shenandoah/heuristics/shenandoahAdaptiveHeuristics.cpp
+++ b/src/hotspot/share/gc/shenandoah/heuristics/shenandoahAdaptiveHeuristics.cpp
@@ -31,14 +31,11 @@
 #include "logging/log.hpp"
 #include "logging/logTag.hpp"
 #include "utilities/quickSort.hpp"
 
 ShenandoahAdaptiveHeuristics::ShenandoahAdaptiveHeuristics() :
-  ShenandoahHeuristics(),
-  _cycle_gap_history(new TruncatedSeq(5)),
-  _conc_mark_duration_history(new TruncatedSeq(5)),
-  _conc_uprefs_duration_history(new TruncatedSeq(5)) {}
+  ShenandoahHeuristics() {}
 
 ShenandoahAdaptiveHeuristics::~ShenandoahAdaptiveHeuristics() {}
 
 void ShenandoahAdaptiveHeuristics::choose_collection_set_from_regiondata(ShenandoahCollectionSet* cset,
                                                                          RegionData* data, size_t size,
@@ -100,20 +97,10 @@
   }
 }
 
 void ShenandoahAdaptiveHeuristics::record_cycle_start() {
   ShenandoahHeuristics::record_cycle_start();
-  double last_cycle_gap = (_cycle_start - _last_cycle_end);
-  _cycle_gap_history->add(last_cycle_gap);
-}
-
-void ShenandoahAdaptiveHeuristics::record_phase_time(ShenandoahPhaseTimings::Phase phase, double secs) {
-  if (phase == ShenandoahPhaseTimings::conc_mark) {
-    _conc_mark_duration_history->add(secs);
-  } else if (phase == ShenandoahPhaseTimings::conc_update_refs) {
-    _conc_uprefs_duration_history->add(secs);
-  } // Else ignore
 }
 
 bool ShenandoahAdaptiveHeuristics::should_start_gc() const {
   ShenandoahHeap* heap = ShenandoahHeap::heap();
   size_t capacity = heap->max_capacity();
@@ -174,33 +161,10 @@
   }
 
   return ShenandoahHeuristics::should_start_gc();
 }
 
-bool ShenandoahAdaptiveHeuristics::should_start_update_refs() {
-  if (! _update_refs_adaptive) {
-    return _update_refs_early;
-  }
-
-  double cycle_gap_avg = _cycle_gap_history->avg();
-  double conc_mark_avg = _conc_mark_duration_history->avg();
-  double conc_uprefs_avg = _conc_uprefs_duration_history->avg();
-
-  if (_update_refs_early) {
-    double threshold = ShenandoahMergeUpdateRefsMinGap / 100.0;
-    if (conc_mark_avg + conc_uprefs_avg > cycle_gap_avg * threshold) {
-      _update_refs_early = false;
-    }
-  } else {
-    double threshold = ShenandoahMergeUpdateRefsMaxGap / 100.0;
-    if (conc_mark_avg + conc_uprefs_avg < cycle_gap_avg * threshold) {
-      _update_refs_early = true;
-    }
-  }
-  return _update_refs_early;
-}
-
 const char* ShenandoahAdaptiveHeuristics::name() {
   return "adaptive";
 }
 
 bool ShenandoahAdaptiveHeuristics::is_diagnostic() {
