diff a/src/hotspot/share/gc/shenandoah/shenandoahVMOperations.hpp b/src/hotspot/share/gc/shenandoah/shenandoahVMOperations.hpp
--- a/src/hotspot/share/gc/shenandoah/shenandoahVMOperations.hpp
+++ b/src/hotspot/share/gc/shenandoah/shenandoahVMOperations.hpp
@@ -31,11 +31,10 @@
 //
 // VM_ShenandoahOperation
 //   - VM_ShenandoahInitMark: initiate concurrent marking
 //   - VM_ShenandoahReferenceOperation:
 //       - VM_ShenandoahFinalMarkStartEvac: finish up concurrent marking, and start evacuation
-//       - VM_ShenandoahFinalEvac: finish concurrent evacuation
 //       - VM_ShenandoahInitUpdateRefs: initiate update references
 //       - VM_ShenandoahFinalUpdateRefs: finish up update references
 //       - VM_ShenandoahFullGC: do full GC
 //       - VM_ShenandoahInitTraversalGC: init traversal GC
 //       - VM_ShenandoahFinalTraversalGC: finish traversal GC
@@ -68,18 +67,10 @@
   VM_Operation::VMOp_Type type() const { return VMOp_ShenandoahFinalMarkStartEvac; }
   const char* name()             const { return "Shenandoah Final Mark and Start Evacuation"; }
   virtual  void doit();
 };
 
-class VM_ShenandoahFinalEvac: public VM_ShenandoahOperation {
-public:
-  VM_ShenandoahFinalEvac() : VM_ShenandoahOperation() {};
-  VM_Operation::VMOp_Type type() const { return VMOp_ShenandoahFinalEvac; }
-  const char* name()             const { return "Shenandoah Final Evacuation"; }
-  virtual  void doit();
-};
-
 class VM_ShenandoahDegeneratedGC: public VM_ShenandoahReferenceOperation {
 private:
   // Really the ShenandoahHeap::ShenandoahDegenerationPoint, but casted to int here
   // in order to avoid dependency on ShenandoahHeap
   int _point;
