diff a/src/jdk.hotspot.agent/linux/native/libsaproc/salibelf.h b/src/jdk.hotspot.agent/linux/native/libsaproc/salibelf.h
--- a/src/jdk.hotspot.agent/linux/native/libsaproc/salibelf.h
+++ b/src/jdk.hotspot.agent/linux/native/libsaproc/salibelf.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -27,10 +27,15 @@
 
 #include <elf.h>
 #include "elfmacros.h"
 #include "libproc_impl.h"
 
+struct elf_section {
+  ELF_SHDR   *c_shdr;
+  void       *c_data;
+};
+
 // read ELF file header.
 int read_elf_header(int fd, ELF_EHDR* ehdr);
 
 // is given file descriptor corresponds to an ELF file?
 bool is_elf_file(int fd);
@@ -47,6 +52,12 @@
 // result pointer after use. NULL on failure.
 void* read_section_data(int fd, ELF_EHDR* ehdr, ELF_SHDR* shdr);
 
 // find the base address at which the library wants to load itself
 uintptr_t find_base_address(int fd, ELF_EHDR* ehdr);
+
+// Find an ELF section.
+struct elf_section *find_section_by_name(char *name,
+                                         int fd,
+                                         ELF_EHDR *ehdr,
+                                         struct elf_section *scn_cache);
 #endif /* _SALIBELF_H_ */
