diff a/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/MemoryScope.java b/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/MemoryScope.java
--- a/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/MemoryScope.java
+++ b/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/MemoryScope.java
@@ -199,11 +199,11 @@
      * @throws IllegalStateException if this scope is already closed
      */
     @ForceInline
     private static void checkAliveConfined(MemoryScope scope) {
         if (scope.closed) {
-            throw new IllegalStateException("This scope is already closed");
+            throw new IllegalStateException("This segment is already closed");
         }
     }
 
     private static final class Root extends MemoryScope {
         private final StampedLock lock = new StampedLock();
@@ -307,6 +307,6 @@
                 // plain write gets flushed too (which is important for isAliveThreadSafe())
                 Root.this.acquired.decrement();
             }
         }
     }
-}
+}
