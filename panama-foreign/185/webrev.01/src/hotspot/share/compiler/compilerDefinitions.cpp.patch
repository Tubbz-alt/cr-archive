diff a/src/hotspot/share/compiler/compilerDefinitions.cpp b/src/hotspot/share/compiler/compilerDefinitions.cpp
--- a/src/hotspot/share/compiler/compilerDefinitions.cpp
+++ b/src/hotspot/share/compiler/compilerDefinitions.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2016, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2016, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -515,5 +515,44 @@
     // blind guess
     LoopStripMiningIterShortLoop = LoopStripMiningIter / 10;
   }
 #endif // COMPILER2
 }
+
+static CompLevel highest_compile_level() {
+  return TieredCompilation ? MIN2((CompLevel) TieredStopAtLevel, CompLevel_highest_tier) : CompLevel_highest_tier;
+}
+
+bool is_c1_or_interpreter_only() {
+  if (Arguments::is_interpreter_only()) {
+    return true;
+  }
+
+#if INCLUDE_AOT
+  if (UseAOT) {
+    return false;
+  }
+#endif
+
+  if (highest_compile_level() < CompLevel_full_optimization) {
+#if INCLUDE_JVMCI
+    if (TieredCompilation) {
+       return true;
+    }
+    // This happens on jvm variant with C2 disabled and JVMCI
+    // enabled.
+    return !UseJVMCICompiler;
+#else
+    return true;
+#endif
+  }
+
+#ifdef TIERED
+  // The quick-only compilation mode is c1 only. However,
+  // CompilationModeFlag only takes effect with TieredCompilation
+  // enabled.
+  if (TieredCompilation && CompilationModeFlag::quick_only()) {
+    return true;
+  }
+#endif
+  return false;
+}
