diff a/src/java.base/windows/native/libjli/java_md.c b/src/java.base/windows/native/libjli/java_md.c
--- a/src/java.base/windows/native/libjli/java_md.c
+++ b/src/java.base/windows/native/libjli/java_md.c
@@ -457,11 +457,11 @@
  */
 static jboolean counterAvailable = JNI_FALSE;
 static jboolean counterInitialized = JNI_FALSE;
 static LARGE_INTEGER counterFrequency;
 
-jlong CounterGet()
+jlong CurrentTimeMicros()
 {
     LARGE_INTEGER count;
 
     if (!counterInitialized) {
         counterAvailable = QueryPerformanceFrequency(&counterFrequency);
@@ -469,20 +469,14 @@
     }
     if (!counterAvailable) {
         return 0;
     }
     QueryPerformanceCounter(&count);
-    return (jlong)(count.QuadPart);
-}
 
-jlong Counter2Micros(jlong counts)
-{
-    if (!counterAvailable || !counterInitialized) {
-        return 0;
-    }
-    return (counts * 1000 * 1000)/counterFrequency.QuadPart;
+    return (jlong)(count.QuadPart * 1000 * 1000 / counterFrequency.QuadPart);
 }
+
 /*
  * windows snprintf does not guarantee a null terminator in the buffer,
  * if the computed size is equal to or greater than the buffer size,
  * as well as error conditions. This function guarantees a null terminator
  * under all these conditions. An unreasonable buffer or size will return
