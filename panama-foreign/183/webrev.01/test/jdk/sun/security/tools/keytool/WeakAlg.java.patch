diff a/test/jdk/sun/security/tools/keytool/WeakAlg.java b/test/jdk/sun/security/tools/keytool/WeakAlg.java
--- a/test/jdk/sun/security/tools/keytool/WeakAlg.java
+++ b/test/jdk/sun/security/tools/keytool/WeakAlg.java
@@ -431,13 +431,13 @@
         }
         if (weakSigAlgCA != null) {
             // The following 2 commands still have a warning on why not using
             // the -cacerts option directly.
             kt("-list -keystore " + KeyStoreUtil.getCacerts())
-                    .shouldNotContain("risk");
+                    .shouldNotMatch("signature algorithm.*risk");
             kt("-list -v -keystore " + KeyStoreUtil.getCacerts())
-                    .shouldNotContain("risk");
+                    .shouldNotMatch("signature algorithm.*risk");
 
             // -printcert will always show warnings
             kt("-printcert -file ca.cert")
                     .shouldContain("name: " + weakSigAlgCA + " (disabled)")
                     .shouldContain("Warning")
@@ -449,14 +449,14 @@
 
             // Importing with -trustcacerts ignore CA cert's sig alg
             kt("-delete -alias d");
             kt("-importcert -alias d -trustcacerts -file ca.cert", "no")
                     .shouldContain("Certificate already exists in system-wide CA")
-                    .shouldNotContain("risk")
+                    .shouldNotMatch("signature algorithm.*risk")
                     .shouldContain("Do you still want to add it to your own keystore?");
             kt("-importcert -alias d -trustcacerts -file ca.cert -noprompt")
-                    .shouldNotContain("risk")
+                    .shouldNotMatch("signature algorithm.*risk")
                     .shouldNotContain("[no]");
 
             // but not without -trustcacerts
             kt("-delete -alias d");
             kt("-importcert -alias d -file ca.cert", "no")
