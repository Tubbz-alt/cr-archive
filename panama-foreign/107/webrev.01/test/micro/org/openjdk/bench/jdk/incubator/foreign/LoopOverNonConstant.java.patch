diff a/test/micro/org/openjdk/bench/jdk/incubator/foreign/LoopOverNonConstant.java b/test/micro/org/openjdk/bench/jdk/incubator/foreign/LoopOverNonConstant.java
--- a/test/micro/org/openjdk/bench/jdk/incubator/foreign/LoopOverNonConstant.java
+++ b/test/micro/org/openjdk/bench/jdk/incubator/foreign/LoopOverNonConstant.java
@@ -124,10 +124,30 @@
             sum += (int) VH_int.get(base, (long) i);
         }
         return sum;
     }
 
+    @Benchmark
+    public int segment_loop_slice() {
+        int sum = 0;
+        MemoryAddress base = segment.asSlice(0, segment.byteSize()).baseAddress();
+        for (int i = 0; i < ELEM_SIZE; i++) {
+            sum += (int) VH_int.get(base, (long) i);
+        }
+        return sum;
+    }
+
+    @Benchmark
+    public int segment_loop_readonly() {
+        int sum = 0;
+        MemoryAddress base = segment.withAccessModes(MemorySegment.READ).baseAddress();
+        for (int i = 0; i < ELEM_SIZE; i++) {
+            sum += (int) VH_int.get(base, (long) i);
+        }
+        return sum;
+    }
+
     @Benchmark
     public int BB_loop() {
         int sum = 0;
         ByteBuffer bb = byteBuffer;
         for (int i = 0; i < ELEM_SIZE; i++) {
