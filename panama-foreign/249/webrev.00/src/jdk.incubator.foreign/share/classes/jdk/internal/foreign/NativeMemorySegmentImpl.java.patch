diff a/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/NativeMemorySegmentImpl.java b/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/NativeMemorySegmentImpl.java
--- a/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/NativeMemorySegmentImpl.java
+++ b/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/NativeMemorySegmentImpl.java
@@ -40,10 +40,13 @@
  * Implementation for native memory segments. A native memory segment is essentially a wrapper around
  * a native long address.
  */
 public class NativeMemorySegmentImpl extends AbstractMemorySegmentImpl {
 
+    public static final MemorySegment EVERYTHING = NativeMemorySegmentImpl.makeNativeSegmentUnchecked(MemoryAddress.NULL,
+            Long.MAX_VALUE, null, null, null).withAccessModes(READ | WRITE);
+
     private static final Unsafe unsafe = Unsafe.getUnsafe();
 
     // The maximum alignment supported by malloc - typically 16 on
     // 64-bit platforms and 8 on 32-bit platforms.
     private final static long MAX_ALIGN = Unsafe.ADDRESS_SIZE == 4 ? 8 : 16;
