diff a/src/java.base/share/classes/com/sun/crypto/provider/BlowfishCrypt.java b/src/java.base/share/classes/com/sun/crypto/provider/BlowfishCrypt.java
--- a/src/java.base/share/classes/com/sun/crypto/provider/BlowfishCrypt.java
+++ b/src/java.base/share/classes/com/sun/crypto/provider/BlowfishCrypt.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1998, 2007, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1998, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -128,11 +128,10 @@
      * <p>The subclass that implements Cipher should ensure that
      * <code>init</code> has been called before this method is called.
      *
      * @param plain the buffer with the input data to be encrypted
      * @param plainOffset the offset in <code>plain</code>
-     * @param plainLen the length of the input data
      * @param cipher the buffer for the result
      * @param cipherOffset the offset in <code>cipher</code>
      */
     void encryptBlock(byte[] plain, int plainOffset,
                  byte[] cipher, int cipherOffset)
@@ -152,11 +151,10 @@
      * <p>The subclass that implements Cipher should ensure that
      * <code>init</code> has been called before this method is called.
      *
      * @param cipher the buffer with the input data to be decrypted
      * @param cipherOffset the offset in <code>cipherOffset</code>
-     * @param cipherLen the length of the input data
      * @param plain the buffer for the result
      * @param plainOffset the offset in <code>plain</code>
      */
     void decryptBlock(byte[] cipher, int cipherOffset,
                  byte[] plain, int plainOffset)
