diff a/src/java.base/share/classes/sun/security/ssl/SSLConfiguration.java b/src/java.base/share/classes/sun/security/ssl/SSLConfiguration.java
--- a/src/java.base/share/classes/sun/security/ssl/SSLConfiguration.java
+++ b/src/java.base/share/classes/sun/security/ssl/SSLConfiguration.java
@@ -49,11 +49,11 @@
 /**
  * SSL/(D)TLS configuration.
  */
 final class SSLConfiguration implements Cloneable {
     // configurations with SSLParameters
-    AlgorithmConstraints        algorithmConstraints;
+    AlgorithmConstraints        userSpecifiedAlgorithmConstraints;
     List<ProtocolVersion>       enabledProtocols;
     List<CipherSuite>           enabledCipherSuites;
     ClientAuthType              clientAuthType;
     String                      identificationProtocol;
     List<SNIServerName>         serverNames;
@@ -114,11 +114,12 @@
     }
 
     SSLConfiguration(SSLContextImpl sslContext, boolean isClientMode) {
 
         // Configurations with SSLParameters, default values.
-        this.algorithmConstraints = SSLAlgorithmConstraints.DEFAULT;
+        this.userSpecifiedAlgorithmConstraints =
+                SSLAlgorithmConstraints.DEFAULT;
         this.enabledProtocols =
                 sslContext.getDefaultProtocolVersions(!isClientMode);
         this.enabledCipherSuites =
                 sslContext.getDefaultCipherSuites(!isClientMode);
         this.clientAuthType = ClientAuthType.CLIENT_AUTH_NONE;
@@ -151,11 +152,11 @@
     }
 
     SSLParameters getSSLParameters() {
         SSLParameters params = new SSLParameters();
 
-        params.setAlgorithmConstraints(this.algorithmConstraints);
+        params.setAlgorithmConstraints(this.userSpecifiedAlgorithmConstraints);
         params.setProtocols(ProtocolVersion.toStringArray(enabledProtocols));
         params.setCipherSuites(CipherSuite.namesOf(enabledCipherSuites));
         switch (this.clientAuthType) {
             case CLIENT_AUTH_REQUIRED:
                 params.setNeedClientAuth(true);
@@ -191,11 +192,11 @@
     }
 
     void setSSLParameters(SSLParameters params) {
         AlgorithmConstraints ac = params.getAlgorithmConstraints();
         if (ac != null) {
-            this.algorithmConstraints = ac;
+            this.userSpecifiedAlgorithmConstraints = ac;
         }   // otherwise, use the default value
 
         String[] sa = params.getCipherSuites();
         if (sa != null) {
             this.enabledCipherSuites = CipherSuite.validValuesOf(sa);
