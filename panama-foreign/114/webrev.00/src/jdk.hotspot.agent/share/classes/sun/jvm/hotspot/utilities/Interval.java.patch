diff a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/utilities/Interval.java b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/utilities/Interval.java
--- a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/utilities/Interval.java
+++ b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/utilities/Interval.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2000, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -50,20 +50,20 @@
   }
 
   /** This takes the Interval to compare against as well as a
       Comparator which will be applied to the low and high endpoints
       of the given intervals. */
-  public boolean overlaps(Interval arg, Comparator endpointComparator) {
+  public boolean overlaps(Interval arg, Comparator<Object> endpointComparator) {
     return overlaps(arg.getLowEndpoint(), arg.getHighEndpoint(), endpointComparator);
   }
 
   /** Routine which can be used instead of the one taking an interval,
       for the situation where the endpoints are being retrieved from
       different data structures */
   public boolean overlaps(Object otherLowEndpoint,
                           Object otherHighEndpoint,
-                          Comparator endpointComparator) {
+                          Comparator<Object> endpointComparator) {
     if (endpointComparator.compare(highEndpoint, otherLowEndpoint) <= 0) {
       return false;
     }
     if (endpointComparator.compare(lowEndpoint, otherHighEndpoint) >= 0) {
       return false;
