diff a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/debugger/linux/LinuxCDebugger.java b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/debugger/linux/LinuxCDebugger.java
--- a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/debugger/linux/LinuxCDebugger.java
+++ b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/debugger/linux/LinuxCDebugger.java
@@ -47,15 +47,15 @@
 
   LinuxCDebugger(LinuxDebugger dbg) {
     this.dbg = dbg;
   }
 
-  public List getThreadList() throws DebuggerException {
+  public List<ThreadProxy> getThreadList() throws DebuggerException {
     return dbg.getThreadList();
   }
 
-  public List/*<LoadObject>*/ getLoadObjectList() throws DebuggerException {
+  public List<LoadObject> getLoadObjectList() throws DebuggerException {
     return dbg.getLoadObjectList();
   }
 
   public LoadObject loadObjectContainingPC(Address pc) throws DebuggerException {
     if (pc == null) {
@@ -63,11 +63,11 @@
     }
 
     /* Typically we have about ten loaded objects here. So no reason to do
       sort/binary search here. Linear search gives us acceptable performance.*/
 
-    List objs = getLoadObjectList();
+    List<LoadObject> objs = getLoadObjectList();
 
     for (int i = 0; i < objs.size(); i++) {
       LoadObject ob = (LoadObject) objs.get(i);
       Address base = ob.getBase();
       long size = ob.getSize();
