diff a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/ui/ObjectHistogramPanel.java b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/ui/ObjectHistogramPanel.java
--- a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/ui/ObjectHistogramPanel.java
+++ b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/ui/ObjectHistogramPanel.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2000, 2002, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -57,11 +57,11 @@
 public class ObjectHistogramPanel extends JPanel implements ActionListener {
     private ObjectHistogramTableModel dataModel;
     private ObjectHistogramToolBar toolbar;
     private StatusBar statusBar;
     private JTable     table;
-    private java.util.List listeners;
+    private java.util.List<Listener> listeners;
 
     public ObjectHistogramPanel(ObjectHistogram histo) {
         dataModel = new ObjectHistogramTableModel(histo);
         statusBar = new StatusBar();
 
@@ -193,13 +193,13 @@
 
         public Object getValueForColumn(Object obj, int col) {
             ObjectHistogramElement el = (ObjectHistogramElement)obj;
             switch (col) {
             case 0:
-                return new Long(el.getSize());
+                return el.getSize();
             case 1:
-                return new Long(el.getCount());
+                return el.getCount();
             case 2:
                 return el.getDescription();
             default:
                 throw new RuntimeException("Index (" + col + ") out of bounds");
             }
@@ -261,11 +261,11 @@
         public void showObjectsOfType(Klass type);
     }
 
     public void addPanelListener(Listener listener) {
         if (listeners == null) {
-            listeners = new ArrayList();
+            listeners = new ArrayList<>();
         }
         listeners.add(listener);
     }
 
     public void removePanelListener(Listener listener) {
