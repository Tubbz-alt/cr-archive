diff a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/utilities/Hashtable.java b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/utilities/Hashtable.java
--- a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/utilities/Hashtable.java
+++ b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/utilities/Hashtable.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -27,10 +27,12 @@
 import java.util.*;
 import sun.jvm.hotspot.debugger.*;
 import sun.jvm.hotspot.types.*;
 import sun.jvm.hotspot.oops.*;
 import sun.jvm.hotspot.runtime.*;
+import sun.jvm.hotspot.utilities.Observable;
+import sun.jvm.hotspot.utilities.Observer;
 
 public class Hashtable extends BasicHashtable {
   static {
     VM.registerVMInitializedObserver(new Observer() {
         public void update(Observable o, Object data) {
@@ -42,12 +44,11 @@
   private static synchronized void initialize(TypeDataBase db) {
     // just to confirm that type exists
     Type type = db.lookupType("IntptrHashtable");
   }
 
-  // derived class may return Class<? extends HashtableEntry>
-  protected Class getHashtableEntryClass() {
+  protected Class<? extends HashtableEntry> getHashtableEntryClass() {
     return HashtableEntry.class;
   }
 
   public long computeHash(Symbol name) {
     return name.identityHash();
