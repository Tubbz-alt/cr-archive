diff a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/debugger/cdbg/basic/BasicCompoundType.java b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/debugger/cdbg/basic/BasicCompoundType.java
--- a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/debugger/cdbg/basic/BasicCompoundType.java
+++ b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/debugger/cdbg/basic/BasicCompoundType.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2001, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2001, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -29,12 +29,12 @@
 import sun.jvm.hotspot.debugger.cdbg.*;
 import sun.jvm.hotspot.utilities.Assert;
 
 public class BasicCompoundType extends BasicType implements CompoundType {
   private CompoundTypeKind kind;
-  private List baseClasses;
-  private List fields;
+  private List<BaseClass> baseClasses;
+  private List<Field> fields;
 
   public BasicCompoundType(String name, int size, CompoundTypeKind kind) {
     this(name, size, kind, 0);
   }
 
@@ -55,11 +55,11 @@
     return (BaseClass) baseClasses.get(i);
   }
 
   public void addBaseClass(BaseClass b) {
     if (baseClasses == null) {
-      baseClasses = new ArrayList();
+      baseClasses = new ArrayList<>();
     }
     baseClasses.add(b);
   }
 
   public int   getNumFields() {
@@ -69,11 +69,11 @@
     return (Field) fields.get(i);
   }
 
   public void addField(Field f) {
     if (fields == null) {
-      fields = new ArrayList();
+      fields = new ArrayList<>();
     }
     fields.add(f);
   }
 
   public boolean isClass()  { return (kind == CompoundTypeKind.CLASS); }
