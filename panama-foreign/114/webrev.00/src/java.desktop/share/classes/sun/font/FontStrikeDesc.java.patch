diff a/src/java.desktop/share/classes/sun/font/FontStrikeDesc.java b/src/java.desktop/share/classes/sun/font/FontStrikeDesc.java
--- a/src/java.desktop/share/classes/sun/font/FontStrikeDesc.java
+++ b/src/java.desktop/share/classes/sun/font/FontStrikeDesc.java
@@ -108,10 +108,20 @@
      * only 4 values : OFF, ON, LCD_HRGB, LCD_VRGB.
      * Font and ptSize are needed to resolve the 'gasp' table. The ptSize
      * must therefore include device and font transforms.
      */
     public static int getAAHintIntVal(Object aa, Font2D font2D, int ptSize) {
+
+        if (FontUtilities.isMacOSX14 &&
+            (aa == VALUE_TEXT_ANTIALIAS_OFF ||
+             aa == VALUE_TEXT_ANTIALIAS_DEFAULT ||
+             aa == VALUE_TEXT_ANTIALIAS_ON ||
+             aa == VALUE_TEXT_ANTIALIAS_GASP))
+        {
+             return INTVAL_TEXT_ANTIALIAS_ON;
+        }
+
         if (aa == VALUE_TEXT_ANTIALIAS_OFF ||
             aa == VALUE_TEXT_ANTIALIAS_DEFAULT) {
             return INTVAL_TEXT_ANTIALIAS_OFF;
         } else if (aa == VALUE_TEXT_ANTIALIAS_ON) {
             return INTVAL_TEXT_ANTIALIAS_ON;
@@ -140,10 +150,20 @@
      * already calculated the glyph device point size.
      */
     public static int getAAHintIntVal(Font2D font2D, Font font,
                                       FontRenderContext frc) {
         Object aa = frc.getAntiAliasingHint();
+
+        if (FontUtilities.isMacOSX14 &&
+            (aa == VALUE_TEXT_ANTIALIAS_OFF ||
+             aa == VALUE_TEXT_ANTIALIAS_DEFAULT ||
+             aa == VALUE_TEXT_ANTIALIAS_ON ||
+             aa == VALUE_TEXT_ANTIALIAS_GASP))
+        {
+             return INTVAL_TEXT_ANTIALIAS_ON;
+        }
+
         if (aa == VALUE_TEXT_ANTIALIAS_OFF ||
             aa == VALUE_TEXT_ANTIALIAS_DEFAULT) {
             return INTVAL_TEXT_ANTIALIAS_OFF;
         } else if (aa == VALUE_TEXT_ANTIALIAS_ON) {
             return INTVAL_TEXT_ANTIALIAS_ON;
