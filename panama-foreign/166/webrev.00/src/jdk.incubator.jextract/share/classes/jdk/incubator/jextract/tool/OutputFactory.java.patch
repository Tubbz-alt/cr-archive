diff a/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/tool/OutputFactory.java b/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/tool/OutputFactory.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/tool/OutputFactory.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/tool/OutputFactory.java
@@ -367,23 +367,23 @@
         boolean isSegment = clazz == MemorySegment.class;
         MemoryLayout treeLayout = tree.layout().orElseThrow();
         if (parent != null) { //struct field
             MemoryLayout parentLayout = parentLayout(parent);
             if (isSegment) {
-                structBuilder.addAddressOf(fieldName, tree.name(), treeLayout, clazz, parentLayout);
+                structBuilder.addAddressGetter(fieldName, tree.name(), treeLayout, parentLayout);
             } else {
                 structBuilder.addVarHandleGetter(fieldName, tree.name(), treeLayout, clazz, parentLayout);
                 structBuilder.addGetter(fieldName, tree.name(), treeLayout, clazz, parentLayout);
                 structBuilder.addSetter(fieldName, tree.name(), treeLayout, clazz, parentLayout);
             }
         } else {
             if (isSegment) {
-                builder.addAddressOf(fieldName, tree.name(), treeLayout, clazz, null);
+                builder.addAddressGetter(fieldName, tree.name(), treeLayout, null);
             } else {
                 builder.addLayoutGetter(fieldName, layout);
                 builder.addVarHandleGetter(fieldName, tree.name(), treeLayout, clazz,null);
-                builder.addAddressGetter(fieldName, tree.name(), treeLayout);
+                builder.addAddressGetter(fieldName, tree.name(), treeLayout, null);
                 builder.addGetter(fieldName, tree.name(), treeLayout, clazz, null);
                 builder.addSetter(fieldName, tree.name(), treeLayout, clazz, null);
             }
         }
 
