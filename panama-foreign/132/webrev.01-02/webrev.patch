diff a/test/micro/org/openjdk/bench/jdk/incubator/foreign/CallOverhead.java b/test/micro/org/openjdk/bench/jdk/incubator/foreign/CallOverhead.java
--- a/test/micro/org/openjdk/bench/jdk/incubator/foreign/CallOverhead.java
+++ b/test/micro/org/openjdk/bench/jdk/incubator/foreign/CallOverhead.java
@@ -55,11 +55,11 @@
 
     static {
         System.loadLibrary("CallOverheadJNI");
 
         try {
-            LibraryLookup ll = LibraryLookup.ofLibrary(MethodHandles.lookup(), "CallOverhead");
+            LibraryLookup ll = LibraryLookup.ofLibrary("CallOverhead");
             func = abi.downcallHandle(ll.lookup("func"),
                     MethodType.methodType(void.class),
                     FunctionDescriptor.ofVoid());
             identity = abi.downcallHandle(ll.lookup("identity"),
                     MethodType.methodType(int.class, int.class),
diff a/test/micro/org/openjdk/bench/jdk/incubator/foreign/points/support/PanamaPoint.java b/test/micro/org/openjdk/bench/jdk/incubator/foreign/points/support/PanamaPoint.java
--- a/test/micro/org/openjdk/bench/jdk/incubator/foreign/points/support/PanamaPoint.java
+++ b/test/micro/org/openjdk/bench/jdk/incubator/foreign/points/support/PanamaPoint.java
@@ -51,11 +51,11 @@
     private static final MethodHandle MH_distance_ptrs;
 
     static {
         try {
             SystemABI abi = SystemABI.getSystemABI();
-            LibraryLookup lookup = LibraryLookup.ofLibrary(MethodHandles.lookup(), "Point");
+            LibraryLookup lookup = LibraryLookup.ofLibrary("Point");
             MH_distance = abi.downcallHandle(
                 lookup.lookup("distance"),
                 methodType(double.class, MemorySegment.class, MemorySegment.class),
                 FunctionDescriptor.of(C_DOUBLE, LAYOUT, LAYOUT)
             );
