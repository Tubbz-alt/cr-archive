diff a/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/LibrariesHelper.java b/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/LibrariesHelper.java
--- a/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/LibrariesHelper.java
+++ b/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/LibrariesHelper.java
@@ -88,11 +88,11 @@
     }
 
     synchronized static LibraryLookupImpl lookup(Supplier<NativeLibrary> librarySupplier, String notFoundMsg) {
         NativeLibrary library = librarySupplier.get();
         if (library == null) {
-            throw new IllegalArgumentException("Library not found: " + notFoundMsg);
+            throw new IllegalArgumentException(notFoundMsg);
         }
         AtomicInteger refCount = loadedLibraries.computeIfAbsent(library, lib -> new AtomicInteger());
         refCount.incrementAndGet();
         LibraryLookupImpl lookup = new LibraryLookupImpl(library);
         CleanerFactory.cleaner().register(lookup, () -> tryUnload(library));
