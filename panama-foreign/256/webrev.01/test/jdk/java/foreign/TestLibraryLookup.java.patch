diff a/test/jdk/java/foreign/TestLibraryLookup.java b/test/jdk/java/foreign/TestLibraryLookup.java
--- a/test/jdk/java/foreign/TestLibraryLookup.java
+++ b/test/jdk/java/foreign/TestLibraryLookup.java
@@ -53,28 +53,27 @@
         LibraryLookup.ofPath(Path.of("NonExistent").toAbsolutePath().toString());
     }
 
     @Test
     public void testSimpleLookup() throws Throwable {
-        MemoryAddress symbol = null;
+        LibraryLookup.Symbol symbol = null;
         LibraryLookup lookup = LibraryLookup.ofLibrary("LookupTest");
         symbol = lookup.lookup("f");
-        assertTrue(symbol.segment().isAlive());
+        assertEquals(symbol.name(), "f");
         assertEquals(LibrariesHelper.numLoadedLibraries(), 1);
         lookup = null;
         symbol = null;
         waitUnload();
     }
 
     @Test
     public void testMultiLookupSameLoader() throws Throwable {
-        List<MemoryAddress> symbols = new ArrayList<>();
+        List<LibraryLookup.Symbol> symbols = new ArrayList<>();
         List<LibraryLookup> lookups = new ArrayList<>();
         for (int i = 0 ; i < 5 ; i++) {
             LibraryLookup lookup = LibraryLookup.ofLibrary("LookupTest");
-            MemoryAddress symbol = lookup.lookup("f");
-            assertTrue(symbol.segment().isAlive());
+            LibraryLookup.Symbol symbol = lookup.lookup("f");
             lookups.add(lookup);
             symbols.add(symbol);
             assertEquals(LibrariesHelper.numLoadedLibraries(), 1);
         }
         lookups = null;
@@ -128,11 +127,11 @@
         }
     }
 
     static class Holder {
         public static LibraryLookup lookup;
-        public static MemoryAddress symbol;
+        public static LibraryLookup.Symbol symbol;
 
         static {
             try {
                 lookup = LibraryLookup.ofLibrary("LookupTest");
                 symbol = lookup.lookup("f");
