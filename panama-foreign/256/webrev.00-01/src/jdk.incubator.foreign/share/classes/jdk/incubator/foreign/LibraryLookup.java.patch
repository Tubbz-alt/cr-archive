diff a/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/LibraryLookup.java b/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/LibraryLookup.java
--- a/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/LibraryLookup.java
+++ b/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/LibraryLookup.java
@@ -49,10 +49,17 @@
 public interface LibraryLookup {
 
     /**
      * A symbol retrieved during a library lookup. A lookup symbol has a <em>name</em> and can be projected
      * into a memory address (see {@link #name()} and {@link #address()}, respectively).
+     *
+     * @apiNote In the future, if the Java language permits, {@link Symbol}
+     * may become a {@code sealed} interface, which would prohibit subclassing except by
+     * explicitly permitted types.
+     *
+     * @implSpec
+     * Implementations of this interface are immutable, thread-safe and <a href="{@docRoot}/java.base/java/lang/doc-files/ValueBased.html">value-based</a>.
      */
     interface Symbol extends Addressable {
         /**
          * The name of this lookup symbol.
          * @return the name of this lookup symbol.
