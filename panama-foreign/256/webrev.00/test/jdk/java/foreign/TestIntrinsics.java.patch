diff a/test/jdk/java/foreign/TestIntrinsics.java b/test/jdk/java/foreign/TestIntrinsics.java
--- a/test/jdk/java/foreign/TestIntrinsics.java
+++ b/test/jdk/java/foreign/TestIntrinsics.java
@@ -68,20 +68,20 @@
     private static final MethodHandle MH_identity_va;
     private static final MethodHandle MH_invoke_consumer;
 
     private static MethodHandle linkIndentity(String name, Class<?> carrier, MemoryLayout layout)
             throws NoSuchMethodException {
-        MemoryAddress ma = lookup.lookup(name);
+        LibraryLookup.Symbol ma = lookup.lookup(name);
         MethodType mt = methodType(carrier, carrier);
         FunctionDescriptor fd = FunctionDescriptor.of(layout, layout);
         return abi.downcallHandle(ma, mt, fd);
     }
 
     static {
         try {
             {
-                MemoryAddress ma = lookup.lookup("empty");
+                LibraryLookup.Symbol ma = lookup.lookup("empty");
                 MethodType mt = methodType(void.class);
                 FunctionDescriptor fd = FunctionDescriptor.ofVoid();
                 MH_empty = abi.downcallHandle(ma, mt, fd);
             }
             MH_identity_char = linkIndentity("identity_char", byte.class, C_CHAR);
@@ -89,18 +89,18 @@
             MH_identity_int = linkIndentity("identity_int", int.class, C_INT);
             MH_identity_long = linkIndentity("identity_long", long.class, C_LONGLONG);
             MH_identity_float = linkIndentity("identity_float", float.class, C_FLOAT);
             MH_identity_double = linkIndentity("identity_double", double.class, C_DOUBLE);
             {
-                MemoryAddress ma = lookup.lookup("identity_va");
+                LibraryLookup.Symbol ma = lookup.lookup("identity_va");
                 MethodType mt = methodType(int.class, int.class, double.class, int.class, float.class, long.class);
                 FunctionDescriptor fd = FunctionDescriptor.of(C_INT, C_INT, asVarArg(C_DOUBLE),
                         asVarArg(C_INT), asVarArg(C_FLOAT), asVarArg(C_LONGLONG));
                 MH_identity_va = abi.downcallHandle(ma, mt, fd);
             }
             {
-                MemoryAddress ma = lookup.lookup("invoke_consumer");
+                LibraryLookup.Symbol ma = lookup.lookup("invoke_consumer");
                 MethodType mt = methodType(void.class, int.class, double.class, long.class, float.class, byte.class,
                         short.class, char.class);
                 FunctionDescriptor fd = FunctionDescriptor.ofVoid(C_INT, C_DOUBLE, C_LONGLONG, C_FLOAT, C_CHAR,
                         C_SHORT, C_SHORT);
                 MH_invoke_consumer = abi.downcallHandle(ma, mt, fd);
