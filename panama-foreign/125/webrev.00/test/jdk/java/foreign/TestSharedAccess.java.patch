diff a/test/jdk/java/foreign/TestSharedAccess.java b/test/jdk/java/foreign/TestSharedAccess.java
--- a/test/jdk/java/foreign/TestSharedAccess.java
+++ b/test/jdk/java/foreign/TestSharedAccess.java
@@ -139,11 +139,12 @@
     }
 
     @Test(expectedExceptions=IllegalStateException.class)
     public void testBadCloseWithPendingAcquireBuffer() throws InterruptedException {
         MemorySegment segment = MemorySegment.allocateNative(16);
-        Spliterator<MemorySegment> spliterator = segment.spliterator(MemoryLayout.ofSequence(16, MemoryLayouts.JAVA_BYTE));
+        Spliterator<MemorySegment> spliterator = MemorySegment.spliterator(segment,
+                MemoryLayout.ofSequence(16, MemoryLayouts.JAVA_BYTE));
         Runnable r = () -> spliterator.forEachRemaining(s -> {
             try {
                 Thread.sleep(5000 * 100);
             } catch (InterruptedException ex) {
                 throw new AssertionError(ex);
