diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/LibClang.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/LibClang.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/LibClang.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/LibClang.java
@@ -29,16 +29,16 @@
 import jdk.incubator.foreign.MemorySegment;
 import jdk.internal.clang.libclang.Index_h;
 
 public class LibClang {
     private static final boolean DEBUG = Boolean.getBoolean("libclang.debug");
-    private static final boolean NO_CRASH_RECOVERY = Boolean.getBoolean("libclang.disable_crash_recovery");
+    private static final boolean CRASH_RECOVERY = Boolean.getBoolean("libclang.crash_recovery");
 
     public static Index createIndex(boolean local) {
         Index index = new Index(Index_h.clang_createIndex(local ? 1 : 0, 0));
-        Index_h.clang_toggleCrashRecovery(NO_CRASH_RECOVERY ? 0 : 1);
-        if (DEBUG && NO_CRASH_RECOVERY) {
+        Index_h.clang_toggleCrashRecovery(CRASH_RECOVERY ? 1 : 0);
+        if (DEBUG && !CRASH_RECOVERY) {
             System.err.println("LibClang crash recovery disabled");
         }
         return index;
     }
 
diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/TranslationUnit.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/TranslationUnit.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/TranslationUnit.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/TranslationUnit.java
@@ -62,11 +62,11 @@
 
     public final void save(Path path) throws TranslationUnitSaveException {
         try (MemorySegment pathStr = Utils.toNativeString(path.toAbsolutePath().toString())) {
             SaveError res = SaveError.valueOf(Index_h.clang_saveTranslationUnit(tu, pathStr.baseAddress(), 0));
             if (res != SaveError.None) {
-                throw new TranslationUnitSaveException(path);
+                throw new TranslationUnitSaveException(path, res);
             }
         }
     }
 
     void processDiagnostics(Consumer<Diagnostic> dh) {
@@ -208,10 +208,13 @@
 
     public static class TranslationUnitSaveException extends IOException {
 
         static final long serialVersionUID = 1L;
 
-        TranslationUnitSaveException(Path path) {
-            super("Cannot save translation unit to: " + path.toAbsolutePath());
+        private final SaveError error;
+
+        TranslationUnitSaveException(Path path, SaveError error) {
+            super("Cannot save translation unit to: " + path.toAbsolutePath() + ". Error: " + error);
+            this.error = error;
         }
     }
 }
