diff a/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/MemorySegment.java b/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/MemorySegment.java
--- a/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/MemorySegment.java
+++ b/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/MemorySegment.java
@@ -422,6 +422,32 @@
             throw new IllegalArgumentException("Invalid alignment constraint : " + alignmentBytes);
         }
 
         return Utils.makeNativeSegment(bytesSize, alignmentBytes);
     }
+
+    /**
+     * Returns a new native memory segment with given base address and size. The returned segment has its own temporal
+     * bounds, and can therefore be closed; closing such a segment does <em>not</em> result in any resource being
+     * deallocated.
+     * <p>
+     * This method is <em>unsafe</em>. Its use can result in putting the VM in a corrupt state when used incorrectly,
+     * and is provided solely to cover use-cases that can not otherwise be addressed safely. When used incorrectly, there
+     * are no guarantees made about the behaviour of the program. More specifically, incorrect uses of this method might
+     * result in a JVM crash or, worse, might silently result in memory corruption.
+     * <p>
+     * This method allows for making an otherwise in-accessible memory region accessible. However, there
+     * is no guarantee that this memory is safe to access, or that the given size for the new segment is not too large,
+     * potentially resulting in out-of-bounds accesses. The developer is trusted to make the judgement that the use of the
+     * returned memory segment is safe.
+     *
+     * @param base the desired base address
+     * @param byteSize the desired size.
+     * @return a new native memory segment with given base address and size.
+     * @throws IllegalArgumentException if {@code base} does not encapsulate a native memory address.
+     * @throws IllegalAccessError if the permission jkd.incubator.foreign.restrictedMethods is set to 'deny'
+     */
+    static MemorySegment ofNativeUnchecked(MemoryAddress base, long byteSize) throws IllegalAccessError {
+        Utils.checkUnsafeAccess("jdk.incubator.foreign.MemorySegment#ofNativeUnchecked");
+        return Utils.makeNativeSegmentUnchecked(base, byteSize);
+    }
 }
