diff a/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/abi/ABIDescriptor.java b/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/abi/ABIDescriptor.java
--- a/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/abi/ABIDescriptor.java
+++ b/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/abi/ABIDescriptor.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2019 Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2019, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -20,26 +20,33 @@
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */
 package jdk.internal.foreign.abi;
 
-public class ABIDescriptor {
+import jdk.internal.invoke.ABIDescriptorProxy;
+
+public class ABIDescriptor implements ABIDescriptorProxy {
     final Architecture arch;
 
     public final VMStorage[][] inputStorage;
     public final VMStorage[][] outputStorage;
 
     final VMStorage[][] volatileStorage;
 
     final int stackAlignment;
     final int shadowSpace;
 
-    public ABIDescriptor(Architecture arch, jdk.internal.foreign.abi.VMStorage[][] inputStorage, jdk.internal.foreign.abi.VMStorage[][] outputStorage,
+    public ABIDescriptor(Architecture arch, VMStorage[][] inputStorage, VMStorage[][] outputStorage,
                          VMStorage[][] volatileStorage, int stackAlignment, int shadowSpace) {
         this.arch = arch;
         this.inputStorage = inputStorage;
         this.outputStorage = outputStorage;
         this.volatileStorage = volatileStorage;
         this.stackAlignment = stackAlignment;
         this.shadowSpace = shadowSpace;
     }
+
+    @Override
+    public int shadowSpaceBytes() {
+        return shadowSpace;
+    }
 }
