diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/SourceLocation.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/SourceLocation.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/SourceLocation.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/SourceLocation.java
@@ -53,20 +53,20 @@
         try (MemorySegment file = MemorySegment.allocateNative(CSupport.C_POINTER);
              MemorySegment line = MemorySegment.allocateNative(CSupport.C_INT);
              MemorySegment col = MemorySegment.allocateNative(CSupport.C_INT);
              MemorySegment offset = MemorySegment.allocateNative(CSupport.C_INT)) {
 
-            fn.get(loc, file.baseAddress(), line.baseAddress(), col.baseAddress(), offset.baseAddress());
-            MemoryAddress fname = Utils.getPointer(file.baseAddress());
+            fn.get(loc, file.address(), line.address(), col.address(), offset.address());
+            MemoryAddress fname = Utils.getPointer(file.address());
 
 
             String str = fname == MemoryAddress.NULL ?
                     null :
                     LibClang.CXStrToString(Index_h.clang_getFileName(fname));
 
-            return new Location(str, Utils.getInt(line.baseAddress()),
-                Utils.getInt(col.baseAddress()), Utils.getInt(offset.baseAddress()));
+            return new Location(str, Utils.getInt(line.address()),
+                Utils.getInt(col.address()), Utils.getInt(offset.address()));
         }
     }
 
     public Location getFileLocation() { return getLocation(Index_h::clang_getFileLocation); }
     public Location getExpansionLocation() { return getLocation(Index_h::clang_getExpansionLocation); }
