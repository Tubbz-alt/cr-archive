diff a/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/MemoryScope.java b/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/MemoryScope.java
--- a/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/MemoryScope.java
+++ b/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/MemoryScope.java
@@ -149,15 +149,15 @@
             long stamp = lock.tryOptimisticRead();
             try {
                 for (; ; stamp = lock.readLock()) {
                     if (stamp == 0L)
                         continue;
-                    checkAliveConfined(); // plain read is enough here (either successful optimistic read, or ful read lock)
+                    checkAliveConfined(); // plain read is enough here (either successful optimistic read, or full read lock)
 
                     // increment acquires
                     acquired.increment();
-                    // did a call to close() occurred since we acquired the lock?
+                    // did a call to close() occur since we acquired the lock?
                     if (lock.validate(stamp)) {
                         // no, just return the acquired scope
                         return new Child();
                     } else {
                         // yes, just back off and retry (close might have failed, after all)
