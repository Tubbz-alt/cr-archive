diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/DeclarationImpl.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/DeclarationImpl.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/DeclarationImpl.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/DeclarationImpl.java
@@ -92,10 +92,15 @@
         if (!(o instanceof Declaration)) return false;
         Declaration decl = (Declaration) o;
         return name().equals(decl.name());
     }
 
+    @Override
+    public int hashCode() {
+        return Objects.hash(name);
+    }
+
     public static final class VariableImpl extends DeclarationImpl implements Declaration.Variable {
 
         final Variable.Kind kind;
         final Type type;
         final Optional<MemoryLayout> layout;
@@ -155,11 +160,11 @@
                     type.equals(variable.type());
         }
 
         @Override
         public int hashCode() {
-            return Objects.hash(kind, type);
+            return Objects.hash(super.hashCode(), kind, type);
         }
     }
 
     public static final class FunctionImpl extends DeclarationImpl implements Declaration.Function {
 
@@ -204,17 +209,18 @@
         @Override
         public boolean equals(Object o) {
             if (this == o) return true;
             if (!(o instanceof Declaration.Function)) return false;
             if (!super.equals(o)) return false;
+
             Declaration.Function function = (Declaration.Function) o;
             return type.equals(function.type());
         }
 
         @Override
         public int hashCode() {
-            return Objects.hash(params, type);
+            return Objects.hash(super.hashCode(), type);
         }
     }
 
     public static class ScopedImpl extends DeclarationImpl implements Declaration.Scoped {
 
@@ -278,11 +284,11 @@
                     declarations.equals(scoped.members());
         }
 
         @Override
         public int hashCode() {
-            return Objects.hash(kind, declarations);
+            return Objects.hash(super.hashCode(), kind, declarations);
         }
     }
 
     public static final class ConstantImpl extends DeclarationImpl implements Declaration.Constant {
 
@@ -334,9 +340,9 @@
                     type.equals(constant.type());
         }
 
         @Override
         public int hashCode() {
-            return Objects.hash(value, type);
+            return Objects.hash(super.hashCode(), value, type);
         }
     }
 }
