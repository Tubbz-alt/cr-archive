diff a/test/jdk/tools/jextract/JextractToolRunner.java b/test/jdk/tools/jextract/JextractToolRunner.java
--- a/test/jdk/tools/jextract/JextractToolRunner.java
+++ b/test/jdk/tools/jextract/JextractToolRunner.java
@@ -34,10 +34,13 @@
 import java.nio.file.Paths;
 import java.nio.file.SimpleFileVisitor;
 import java.nio.file.attribute.BasicFileAttributes;
 import java.util.Objects;
 import java.util.spi.ToolProvider;
+import jdk.incubator.foreign.MemoryLayout;
+import jdk.incubator.foreign.MemoryLayout.PathElement;
+import jdk.incubator.foreign.SystemABI.Type;
 
 import static org.testng.Assert.assertEquals;
 import static org.testng.Assert.assertNotEquals;
 import static org.testng.Assert.assertNotNull;
 import static org.testng.Assert.assertTrue;
@@ -224,10 +227,27 @@
             fail("Expect method " + name);
         }
         return null;
     }
 
+    protected MemoryLayout findLayout(Class<?> cls, String name) {
+        Field field = findField(cls, name + "$LAYOUT");
+        assertNotNull(field);
+        assertEquals(field.getType(), MemoryLayout.class);
+        try {
+            return (MemoryLayout)field.get(null);
+        } catch (Exception exp) {
+            System.err.println(exp);
+            assertTrue(false, "should not reach here");
+        }
+        return null;
+    }
+
+    protected static void checkFieldABIType(MemoryLayout layout, String fieldName, Type expected) {
+        assertEquals(layout.select(PathElement.groupElement(fieldName)).abiType().orElseThrow(), expected);
+    }
+
     protected static class Loader implements AutoCloseable {
 
         private final URLClassLoader loader;
 
         public Loader(URLClassLoader loader) {
