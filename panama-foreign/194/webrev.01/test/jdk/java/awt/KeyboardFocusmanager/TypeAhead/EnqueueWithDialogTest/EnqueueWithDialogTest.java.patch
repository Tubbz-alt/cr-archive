diff a/test/jdk/java/awt/KeyboardFocusmanager/TypeAhead/EnqueueWithDialogTest/EnqueueWithDialogTest.java b/test/jdk/java/awt/KeyboardFocusmanager/TypeAhead/EnqueueWithDialogTest/EnqueueWithDialogTest.java
--- a/test/jdk/java/awt/KeyboardFocusmanager/TypeAhead/EnqueueWithDialogTest/EnqueueWithDialogTest.java
+++ b/test/jdk/java/awt/KeyboardFocusmanager/TypeAhead/EnqueueWithDialogTest/EnqueueWithDialogTest.java
@@ -28,13 +28,30 @@
  * @summary Tests that type-ahead for dialog works and doesn't block program
  * @author Dmitry.Cherepanov@SUN.COM area=awt.focus
  * @run main EnqueueWithDialogTest
  */
 
-import java.awt.*;
-import java.lang.reflect.InvocationTargetException;
-import java.awt.event.*;
+import java.awt.AWTEvent;
+import java.awt.Button;
+import java.awt.Component;
+import java.awt.Container;
+import java.awt.Dialog;
+import java.awt.Dimension;
+import java.awt.EventQueue;
+import java.awt.Frame;
+import java.awt.KeyboardFocusManager;
+import java.awt.Point;
+import java.awt.Robot;
+import java.awt.Toolkit;
+import java.awt.event.AWTEventListener;
+import java.awt.event.ActionEvent;
+import java.awt.event.ActionListener;
+import java.awt.event.FocusAdapter;
+import java.awt.event.FocusEvent;
+import java.awt.event.InputEvent;
+import java.awt.event.KeyAdapter;
+import java.awt.event.KeyEvent;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 
 /*
  * The purpose of this test is check that the type-head
@@ -55,12 +72,21 @@
     static CountDownLatch robotLatch = new CountDownLatch(1);
     static volatile boolean gotFocus = false;
     static Robot robot;
     public static void main(String args[]) throws Exception {
         EnqueueWithDialogTest test = new EnqueueWithDialogTest();
-        test.init();
-        test.start();
+        try {
+            test.init();
+            test.start();
+        } finally {
+            if (d != null) {
+                d.dispose();
+            }
+            if (f != null) {
+                f.dispose();
+            }
+        }
     }
     public void init()
     {
         Toolkit.getDefaultToolkit().addAWTEventListener(new AWTEventListener() {
                 public void eventDispatched(AWTEvent e) {
