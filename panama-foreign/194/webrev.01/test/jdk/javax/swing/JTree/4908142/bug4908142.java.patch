diff a/test/jdk/javax/swing/JTree/4908142/bug4908142.java b/test/jdk/javax/swing/JTree/4908142/bug4908142.java
--- a/test/jdk/javax/swing/JTree/4908142/bug4908142.java
+++ b/test/jdk/javax/swing/JTree/4908142/bug4908142.java
@@ -30,69 +30,79 @@
  * @author Andrey Pikalev
  * @library ../../regtesthelpers
  * @build Util
  * @run main bug4908142
  */
-import javax.swing.*;
-import javax.swing.tree.*;
-import java.awt.*;
-import java.awt.event.*;
+import javax.swing.JFrame;
+import javax.swing.JScrollPane;
+import javax.swing.JTree;
+import javax.swing.SwingUtilities;
+import javax.swing.tree.DefaultMutableTreeNode;
+import java.awt.Robot;
+import java.awt.event.KeyEvent;
 import java.util.concurrent.Callable;
 
 public class bug4908142 {
 
-    private static JTree tree;
+    private static JFrame fr = null;
+    private static JTree tree = null;
 
     public static void main(String[] args) throws Exception {
 
         Robot robot = new Robot();
         robot.setAutoDelay(50);
 
-        SwingUtilities.invokeAndWait(new Runnable() {
+        try {
+            SwingUtilities.invokeAndWait(new Runnable() {
 
-            public void run() {
-                createAndShowGUI();
-            }
-        });
+                public void run() {
+                    createAndShowGUI();
+                }
+            });
 
-        robot.waitForIdle();
+            robot.waitForIdle();
 
-        SwingUtilities.invokeAndWait(new Runnable() {
+            SwingUtilities.invokeAndWait(new Runnable() {
 
-            public void run() {
-                tree.requestFocus();
-                tree.setSelectionRow(0);
-            }
-        });
+                public void run() {
+                    tree.requestFocus();
+                    tree.setSelectionRow(0);
+                }
+            });
 
-        robot.waitForIdle();
+            robot.waitForIdle();
 
 
-        robot.keyPress(KeyEvent.VK_A);
-        robot.keyRelease(KeyEvent.VK_A);
-        robot.keyPress(KeyEvent.VK_A);
-        robot.keyRelease(KeyEvent.VK_A);
-        robot.keyPress(KeyEvent.VK_D);
-        robot.keyRelease(KeyEvent.VK_D);
-        robot.waitForIdle();
+            robot.keyPress(KeyEvent.VK_A);
+            robot.keyRelease(KeyEvent.VK_A);
+            robot.keyPress(KeyEvent.VK_A);
+            robot.keyRelease(KeyEvent.VK_A);
+            robot.keyPress(KeyEvent.VK_D);
+            robot.keyRelease(KeyEvent.VK_D);
+            robot.waitForIdle();
 
 
-        String sel = Util.invokeOnEDT(new Callable<String>() {
+            String sel = Util.invokeOnEDT(new Callable<String>() {
 
-            @Override
-            public String call() throws Exception {
-                return tree.getLastSelectedPathComponent().toString();
-            }
-        });
+                @Override
+                public String call() throws Exception {
+                    return tree.getLastSelectedPathComponent().toString();
+                }
+            });
 
-        if (!"aad".equals(sel)) {
-            throw new Error("The selected index should be \"aad\", but not " + sel);
+            if (!"aad".equals(sel)) {
+                throw new Error("The selected index should be \"aad\", but not " + sel);
+            }
+        } finally {
+            if (fr != null) {
+                SwingUtilities.invokeAndWait(fr::dispose);
+            }
         }
     }
 
     private static void createAndShowGUI() {
-        JFrame fr = new JFrame("Test");
+        fr = new JFrame("Test");
         fr.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
 
         String[] data = {"aaa", "aab", "aac", "aad", "ade", "bba"};
         final DefaultMutableTreeNode root = new DefaultMutableTreeNode(data[0]);
         for (int i = 1; i < data.length; i++) {
