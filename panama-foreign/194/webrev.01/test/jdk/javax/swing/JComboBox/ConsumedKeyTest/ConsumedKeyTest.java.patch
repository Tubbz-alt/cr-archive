diff a/test/jdk/javax/swing/JComboBox/ConsumedKeyTest/ConsumedKeyTest.java b/test/jdk/javax/swing/JComboBox/ConsumedKeyTest/ConsumedKeyTest.java
--- a/test/jdk/javax/swing/JComboBox/ConsumedKeyTest/ConsumedKeyTest.java
+++ b/test/jdk/javax/swing/JComboBox/ConsumedKeyTest/ConsumedKeyTest.java
@@ -26,28 +26,30 @@
 import java.awt.event.KeyEvent;
 
 /*
   @test
   @key headful
-  @bug 8031485 8058193
+  @bug 8031485 8058193 8067986
   @summary Combo box consuming escape and enter key events
   @author Petr Pchelko
   @library /lib/client/
   @build ExtendedRobot
   @run main ConsumedKeyTest
 */
 public class ConsumedKeyTest {
-    private static volatile JFrame frame;
+    private static JFrame frame;
     private static volatile boolean passed;
+    static ExtendedRobot robot;
 
     public static void main(String... args) throws Exception {
         test(KeyEvent.VK_ESCAPE);
         test(KeyEvent.VK_ENTER);
     }
 
     private static void test(final int key) throws Exception {
         passed = false;
+        robot = new ExtendedRobot();
         try {
             SwingUtilities.invokeAndWait(() -> {
                 frame = new JFrame();
                 JComboBox<String> combo = new JComboBox<>(new String[]{"one", "two", "three"});
                 JPanel panel = new JPanel();
@@ -55,25 +57,26 @@
                 combo.requestFocusInWindow();
                 frame.setBounds(100, 150, 300, 100);
                 addAction(panel, key);
                 frame.add(panel);
                 frame.setVisible(true);
+                frame.setAlwaysOnTop(true);
             });
 
-            ExtendedRobot robot = new ExtendedRobot();
             robot.waitForIdle();
+            robot.delay(500);
             robot.type(key);
             robot.waitForIdle();
             if (!passed) {
                 throw new RuntimeException("FAILED: " + KeyEvent.getKeyText(key) + " was consumed by combo box");
             }
         } finally {
             if (frame != null) {
                 frame.dispose();
             }
         }
-
+        robot.delay(1000);
     }
 
     private static void addAction(JComponent comp, final int key) {
         KeyStroke k = KeyStroke.getKeyStroke(key, 0);
         Object actionKey = "cancel";
