diff a/test/hotspot/jtreg/vmTestbase/gc/gctests/gctest04/gctest04.java b/test/hotspot/jtreg/vmTestbase/gc/gctests/gctest04/gctest04.java
--- a/test/hotspot/jtreg/vmTestbase/gc/gctests/gctest04/gctest04.java
+++ b/test/hotspot/jtreg/vmTestbase/gc/gctests/gctest04/gctest04.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2002, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2002, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -22,11 +22,11 @@
  */
 
 
 /*
  * @test
- * @key gc
+ * @key gc randomness
  *
  * @summary converted from VM Testbase gc/gctests/gctest04.
  * VM Testbase keywords: [gc]
  *
  * @library /vmTestbase
@@ -40,24 +40,19 @@
 
 import nsk.share.test.*;
 import nsk.share.TestFailure;
 //gctest04.java
 
-//import queue;
-//import LocalRandom;
-import java.util.Random;
 import nsk.share.TestBug;
 import nsk.share.TestFailure;
 
 
 // small objects ( 8 ~ 32k), short live time ( 5 ~ 10 ms)
 public class gctest04 {
   public static void main(String args[] )
   {
     int queueLimit = 1000;
-    long randomSeed = System.currentTimeMillis();
-
     if (args.length > 0)
     {
         try
         {
             queueLimit = new Integer(args[0]).intValue();
@@ -67,26 +62,10 @@
             throw new TestBug("Bad input to gctest04. Expected integer, " +
                             " got: ->" + args[0] + "<-", e);
         }
     }
 
-    if (args.length == 2)
-    {
-        try
-        {
-            randomSeed = new Long(args[1]).longValue();
-        }
-        catch (NumberFormatException e)
-        {
-            throw new TestFailure("Bad input to gctest04. Expected long, got: ->" +
- args[0] + "<-", e);
-        }
-    }
-
-    System.out.println("Seed value: " + randomSeed);
-
-
 
     queue  requestque = new queue(queueLimit);
     reqgen  gen = new reqgen(requestque, 5);
     gen.setsize(8, 32*1024);
     gen.setlive(5, 10);
