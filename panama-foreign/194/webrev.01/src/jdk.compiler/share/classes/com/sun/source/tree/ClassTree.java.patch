diff a/src/jdk.compiler/share/classes/com/sun/source/tree/ClassTree.java b/src/jdk.compiler/share/classes/com/sun/source/tree/ClassTree.java
--- a/src/jdk.compiler/share/classes/com/sun/source/tree/ClassTree.java
+++ b/src/jdk.compiler/share/classes/com/sun/source/tree/ClassTree.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2005, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2005, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -23,10 +23,11 @@
  * questions.
  */
 
 package com.sun.source.tree;
 
+import java.util.Collections;
 import java.util.List;
 import javax.lang.model.element.Name;
 
 /**
  * A tree node for a class, interface, enum, record, or annotation
@@ -83,10 +84,32 @@
      * Returns the interfaces implemented by this type declaration.
      * @return the interfaces
      */
     List<? extends Tree> getImplementsClause();
 
+    /**
+     * {@preview Associated with sealed classes, a preview feature of the Java language.
+     *
+     *           This method is associated with <i>sealed classes</i>, a preview
+     *           feature of the Java language. Preview features
+     *           may be removed in a future release, or upgraded to permanent
+     *           features of the Java language.}
+     *
+     * Returns the subclasses permitted by this type declaration.
+     *
+     * @implSpec this implementation returns an empty list
+     *
+     * @return the subclasses
+     *
+     * @since 15
+     */
+    @jdk.internal.PreviewFeature(feature=jdk.internal.PreviewFeature.Feature.SEALED_CLASSES,
+                                             essentialAPI=false)
+    default List<? extends Tree> getPermitsClause() {
+        return List.of();
+    }
+
     /**
      * Returns the members declared in this type declaration.
      * @return the members
      */
     List<? extends Tree> getMembers();
