diff a/src/jdk.compiler/share/classes/com/sun/source/util/DocTrees.java b/src/jdk.compiler/share/classes/com/sun/source/util/DocTrees.java
--- a/src/jdk.compiler/share/classes/com/sun/source/util/DocTrees.java
+++ b/src/jdk.compiler/share/classes/com/sun/source/util/DocTrees.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2011, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2011, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -30,10 +30,11 @@
 import java.util.List;
 
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
 import javax.lang.model.element.PackageElement;
+import javax.lang.model.type.TypeMirror;
 import javax.tools.Diagnostic;
 import javax.tools.FileObject;
 import javax.tools.JavaCompiler.CompilationTask;
 
 import com.sun.source.doctree.DocCommentTree;
@@ -150,10 +151,25 @@
      * @param path the path for the tree node
      * @return the element
      */
     public abstract Element getElement(DocTreePath path);
 
+    /**
+     * Returns the language model type referred to by the leaf node of the given
+     * {@link DocTreePath}, or {@code null} if unknown. This method usually
+     * returns the same value as {@code getElement(path).asType()} for a
+     * {@code path} argument for which {@link #getElement(DocTreePath)} returns
+     * a non-null value, but may return a type that includes additional
+     * information, such as a parameterized generic type instead of a raw type.
+     *
+     * @param path the path for the tree node
+     * @return the referenced type, or null
+     *
+     * @since 15
+     */
+    public abstract TypeMirror getType(DocTreePath path);
+
     /**
      * Returns the list of {@link DocTree} representing the first sentence of
      * a comment.
      *
      * @param list the DocTree list to interrogate
