diff a/src/java.base/share/classes/java/util/stream/IntStream.java b/src/java.base/share/classes/java/util/stream/IntStream.java
--- a/src/java.base/share/classes/java/util/stream/IntStream.java
+++ b/src/java.base/share/classes/java/util/stream/IntStream.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2012, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2012, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -472,12 +472,13 @@
      * <a href="package-summary.html#Associativity">associative</a> function.
      *
      * <p>This is a <a href="package-summary.html#StreamOps">terminal
      * operation</a>.
      *
-     * @apiNote Sum, min, max, and average are all special cases of reduction.
-     * Summing a stream of numbers can be expressed as:
+     * @apiNote Sum, min and max are all special cases of reduction that can be
+     * expressed using this method.
+     * For example, summing a stream can be expressed as:
      *
      * <pre>{@code
      *     int sum = integers.reduce(0, (a, b) -> a+b);
      * }</pre>
      *
