diff a/src/java.base/share/classes/sun/security/provider/certpath/AdaptableX509CertSelector.java b/src/java.base/share/classes/sun/security/provider/certpath/AdaptableX509CertSelector.java
--- a/src/java.base/share/classes/sun/security/provider/certpath/AdaptableX509CertSelector.java
+++ b/src/java.base/share/classes/sun/security/provider/certpath/AdaptableX509CertSelector.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2011, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2011, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -34,10 +34,11 @@
 import java.util.Arrays;
 import java.util.Date;
 
 import sun.security.util.Debug;
 import sun.security.util.DerInputStream;
+import sun.security.util.KnownOIDs;
 import sun.security.x509.SerialNumber;
 import sun.security.x509.AuthorityKeyIdentifierExtension;
 
 /**
  * An adaptable X509 certificate selector for forward certification path
@@ -210,11 +211,12 @@
     private boolean matchSubjectKeyID(X509Certificate xcert) {
         if (ski == null) {
             return true;
         }
         try {
-            byte[] extVal = xcert.getExtensionValue("2.5.29.14");
+            byte[] extVal = xcert.getExtensionValue(
+                    KnownOIDs.SubjectKeyID.value());
             if (extVal == null) {
                 if (debug != null && Debug.isVerbose()) {
                     debug.println("AdaptableX509CertSelector.match: "
                         + "no subject key ID extension. Subject: "
                         + xcert.getSubjectX500Principal());
