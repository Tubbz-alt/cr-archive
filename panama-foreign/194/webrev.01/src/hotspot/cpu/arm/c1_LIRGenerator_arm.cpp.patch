diff a/src/hotspot/cpu/arm/c1_LIRGenerator_arm.cpp b/src/hotspot/cpu/arm/c1_LIRGenerator_arm.cpp
--- a/src/hotspot/cpu/arm/c1_LIRGenerator_arm.cpp
+++ b/src/hotspot/cpu/arm/c1_LIRGenerator_arm.cpp
@@ -388,11 +388,11 @@
     LIR_Opr cur_value = new_register(T_INT);
     __ move(card_addr, cur_value);
 
     LabelObj* L_already_dirty = new LabelObj();
     __ cmp(lir_cond_equal, cur_value, LIR_OprFact::intConst(CardTable::dirty_card_val()));
-    __ branch(lir_cond_equal, T_BYTE, L_already_dirty->label());
+    __ branch(lir_cond_equal, L_already_dirty->label());
     set_card(tmp, card_addr);
     __ branch_destination(L_already_dirty->label());
   } else {
     if (ct->scanned_concurrently()) {
       __ membar_storestore();
@@ -537,11 +537,11 @@
 
 
 void LIRGenerator::make_div_by_zero_check(LIR_Opr right_arg, BasicType type, CodeEmitInfo* info) {
   assert(right_arg->is_register(), "must be");
   __ cmp(lir_cond_equal, right_arg, make_constant(type, 0));
-  __ branch(lir_cond_equal, type, new DivByZeroStub(info));
+  __ branch(lir_cond_equal, new DivByZeroStub(info));
 }
 
 
 // for  _ladd, _lmul, _lsub, _ldiv, _lrem
 void LIRGenerator::do_ArithmeticOp_Long(ArithmeticOp* x) {
@@ -1225,11 +1225,11 @@
   __ cmp(lir_cond_equal, result,
          compare_to_zero ?
            LIR_OprFact::intConst(0) : LIR_OprFact::intConst(1));
   profile_branch(x, cond);
   move_to_phi(x->state());
-  __ branch(lir_cond_equal, T_INT, x->tsux());
+  __ branch(lir_cond_equal, x->tsux());
 }
 #endif // __SOFTFP__
 
 void LIRGenerator::do_If(If* x) {
   assert(x->number_of_sux() == 2, "inconsistency");
@@ -1283,13 +1283,13 @@
 
   __ cmp(lir_cond(cond), left, right);
   profile_branch(x, cond);
   move_to_phi(x->state());
   if (x->x()->type()->is_float_kind()) {
-    __ branch(lir_cond(cond), right->type(), x->tsux(), x->usux());
+    __ branch(lir_cond(cond), x->tsux(), x->usux());
   } else {
-    __ branch(lir_cond(cond), right->type(), x->tsux());
+    __ branch(lir_cond(cond), x->tsux());
   }
   assert(x->default_sux() == x->fsux(), "wrong destination above");
   __ jump(x->default_sux());
 }
 
