diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TypeMaker.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TypeMaker.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TypeMaker.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TypeMaker.java
@@ -104,10 +104,18 @@
             throw new ConcurrentModificationException();
         }
         return rv;
     }
 
+    static class TypeException extends RuntimeException {
+        static final long serialVersionUID = 1L;
+
+        TypeException(String msg) {
+            super(msg);
+        }
+    }
+
     Type makeTypeInternal(jdk.internal.clang.Type t) {
         switch(t.kind()) {
             case Auto:
                 return makeType(t.canonicalType());
             case Void:
@@ -158,11 +166,11 @@
                 return Type.primitive(Primitive.Kind.Float, LayoutUtils.C_FLOAT);
             case Unexposed:
             case Elaborated:
                 jdk.internal.clang.Type canonical = t.canonicalType();
                 if (canonical.equalType(t)) {
-                    throw new IllegalStateException("Unknown type with same canonical type: " + t.spelling());
+                    throw new TypeException("Unknown type with same canonical type: " + t.spelling());
                 }
                 return makeType(canonical);
             case ConstantArray: {
                 Type elem = makeType(t.getElementType());
                 return Type.array(t.getNumberOfElements(), elem);
