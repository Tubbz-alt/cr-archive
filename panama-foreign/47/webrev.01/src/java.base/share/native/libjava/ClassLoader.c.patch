diff a/src/java.base/share/native/libjava/ClassLoader.c b/src/java.base/share/native/libjava/ClassLoader.c
--- a/src/java.base/share/native/libjava/ClassLoader.c
+++ b/src/java.base/share/native/libjava/ClassLoader.c
@@ -436,15 +436,15 @@
     JNU_ReleaseStringPlatformChars(env, name, cname);
 }
 
 /*
  * Class:     java_lang_ClassLoader_NativeLibrary
- * Method:    findEntry
+ * Method:    findEntry0
  * Signature: (Ljava/lang/String;)J
  */
 JNIEXPORT jlong JNICALL
-Java_java_lang_ClassLoader_00024NativeLibrary_findEntry
+Java_java_lang_ClassLoader_00024NativeLibrary_findEntry0
   (JNIEnv *env, jobject this, jstring name)
 {
     jlong handle;
     const char *cname;
     jlong res;
@@ -458,10 +458,34 @@
         return jlong_zero;
     res = ptr_to_jlong(JVM_FindLibraryEntry(jlong_to_ptr(handle), cname));
     (*env)->ReleaseStringUTFChars(env, name, cname);
     return res;
 }
+
+/*
+ * Class:     java_lang_ClassLoader_NativeLibrary
+ * Method:    findEntryInProcess
+ * Signature: (Ljava/lang/String;)J
+ */
+JNIEXPORT jlong JNICALL
+Java_java_lang_ClassLoader_00024NativeLibrary_findEntryInProcess
+  (JNIEnv *env, jclass cls, jstring name)
+{
+    const char *cname;
+    jlong res;
+
+    if (!initIDs(env))
+        return jlong_zero;
+
+    cname = (*env)->GetStringUTFChars(env, name, 0);
+    if (cname == 0)
+        return jlong_zero;
+    res = ptr_to_jlong(findEntryInProcess(cname));
+    (*env)->ReleaseStringUTFChars(env, name, cname);
+    return res;
+}
+
 /*
  * Class:     java_lang_ClassLoader
  * Method:    findBuiltinLib
  * Signature: (Ljava/lang/String;)Ljava/lang/String;
  */
