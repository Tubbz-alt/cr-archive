diff a/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/AbstractMemorySegmentImpl.java b/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/AbstractMemorySegmentImpl.java
--- a/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/AbstractMemorySegmentImpl.java
+++ b/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/AbstractMemorySegmentImpl.java
@@ -120,18 +120,17 @@
         UNSAFE.setMemory(base(), min(), length, value);
         return this;
     }
 
     public void copyFrom(MemorySegment src) {
-        long size = src.byteSize();
-        ((AbstractMemorySegmentImpl)src).checkRange(0, size, true);
-        checkRange(0, size, false);
-        long offsetSrc = ((AbstractMemorySegmentImpl) src).min();
-        long offsetDst = min();
-        Object baseSrc = ((AbstractMemorySegmentImpl) src).base();
-        Object baseDst = base();
-        UNSAFE.copyMemory(baseSrc, offsetSrc, baseDst, offsetDst, size);
+        AbstractMemorySegmentImpl that = (AbstractMemorySegmentImpl)src;
+        long size = that.byteSize();
+        checkRange(0, size, true);
+        that.checkRange(0, size, false);
+        UNSAFE.copyMemory(
+                that.base(), that.min(),
+                base(), min(), size);
     }
 
     @Override
     @ForceInline
     public final MemoryAddress baseAddress() {
