diff a/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/MemoryAddress.java b/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/MemoryAddress.java
--- a/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/MemoryAddress.java
+++ b/src/jdk.incubator.foreign/share/classes/jdk/incubator/foreign/MemoryAddress.java
@@ -106,11 +106,13 @@
      * @param bytes the number of bytes to be copied.
      * @throws IndexOutOfBoundsException if {@code bytes < 0}, or if it is greater than the size of the segments
      * associated with either {@code src} or {@code dst}.
      * @throws IllegalStateException if either the source address or the target address belong to memory segments
      * which have been already closed, or if access occurs from a thread other than the thread owning either segment.
-     * @throws UnsupportedOperationException if {@code dst} is associated with a read-only segment (see {@link MemorySegment#isReadOnly()}).
+     * @throws UnsupportedOperationException if either {@code src} or {@code dst} do not feature required access modes;
+     * more specifically, {@code src} should be associated with a segment with {@link MemorySegment#READ} access mode,
+     * while {@code dst} should be associated with a segment with {@link MemorySegment#WRITE} access mode.
      */
     static void copy(MemoryAddress src, MemoryAddress dst, long bytes) {
         MemoryAddressImpl.copy((MemoryAddressImpl)src, (MemoryAddressImpl)dst, bytes);
     }
 
