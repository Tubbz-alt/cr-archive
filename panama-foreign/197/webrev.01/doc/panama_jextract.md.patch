diff a/doc/panama_jextract.md b/doc/panama_jextract.md
--- a/doc/panama_jextract.md
+++ b/doc/panama_jextract.md
@@ -157,11 +157,11 @@
             var p = readline(pstr);
 
             // print char* as is
             System.out.println(p);
             // convert char* ptr from readline as Java String & print it
-            System.out.println("Hello, " + Cstring.toJavaString(p));
+            System.out.println("Hello, " + Cstring.toJavaStringRestricted(p));
         }
     }
 }
 
 ```
@@ -607,11 +607,11 @@
 
             rc = sqlite3_exec(dbPtr, sql, NULL, NULL, errMsgPtrPtr);
 
             if (rc != 0) {
                 System.err.println("sqlite3_exec failed: " + rc);
-                System.err.println("SQL error: " + Cstring.toJavaString(Cpointer.get(errMsgPtrPtr)));
+                System.err.println("SQL error: " + Cstring.toJavaStringRestricted(Cpointer.get(errMsgPtrPtr)));
                 sqlite3_free(Cpointer.get(errMsgPtrPtr));
             } else {
                 System.out.println("employee table created");
             }
 
@@ -624,26 +624,26 @@
             );
             rc = sqlite3_exec(dbPtr, sql, NULL, NULL, errMsgPtrPtr);
 
             if (rc != 0) {
                 System.err.println("sqlite3_exec failed: " + rc);
-                System.err.println("SQL error: " + Cstring.toJavaString(Cpointer.get(errMsgPtrPtr)));
+                System.err.println("SQL error: " + Cstring.toJavaStringRestricted(Cpointer.get(errMsgPtrPtr)));
                 sqlite3_free(Cpointer.get(errMsgPtrPtr));
             } else {
                 System.out.println("rows inserted");
             }
 
             int[] rowNum = new int[1];
             // callback to print rows from SELECT query
             var callback = sqlite3_exec$callback.allocate((a, argc, argv, columnNames) -> {
                 System.out.println("Row num: " + rowNum[0]++);
                 System.out.println("numColumns = " + argc);
-                argv = Cpointer.asArray(argv, argc);
-                columnNames = Cpointer.asArray(columnNames, argc);
+                argv = Cpointer.asArrayRestricted(argv, argc);
+                columnNames = Cpointer.asArrayRestricted(columnNames, argc);
                 for (int i = 0; i < argc; i++) {
-                     String name = Cstring.toJavaString(Cpointer.get(columnNames, i));
-                     String value = Cstring.toJavaString(Cpointer.get(argv, i));
+                     String name = Cstring.toJavaStringRestricted(Cpointer.get(columnNames, i));
+                     String value = Cstring.toJavaStringRestricted(Cpointer.get(argv, i));
                      System.out.printf("%s = %s\n", name, value);
                 }
                 return 0;
             }, scope);
 
@@ -651,11 +651,11 @@
             sql = Cstring.toCString("SELECT * FROM EMPLOYEE", scope);
             rc = sqlite3_exec(dbPtr, sql, callback, NULL, errMsgPtrPtr);
 
             if (rc != 0) {
                 System.err.println("sqlite3_exec failed: " + rc);
-                System.err.println("SQL error: " + Cstring.toJavaString(Cpointer.get(errMsgPtrPtr)));
+                System.err.println("SQL error: " + Cstring.toJavaStringRestricted(Cpointer.get(errMsgPtrPtr)));
                 sqlite3_free(Cpointer.get(errMsgPtrPtr));
             } else {
                 System.out.println("done");
             }
 
