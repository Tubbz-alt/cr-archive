diff a/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/abi/SharedUtils.java b/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/abi/SharedUtils.java
--- a/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/abi/SharedUtils.java
+++ b/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/abi/SharedUtils.java
@@ -75,14 +75,10 @@
 
     public static long alignUp(long addr, long alignment) {
         return ((addr - 1) | (alignment - 1)) + 1;
     }
 
-    public static long alignDown(long addr, long alignment) {
-        return addr & ~(alignment - 1);
-    }
-
     /**
      * The alignment requirement for a given type
      * @param isVar indicate if the type is a standalone variable. This change how
      * array is aligned. for example.
      */
@@ -104,11 +100,11 @@
     private static long alignmentOfScalar(ValueLayout st) {
         return st.byteSize();
     }
 
     private static long alignmentOfArray(SequenceLayout ar, boolean isVar) {
-        if (ar.elementCount().getAsLong() == 0) {
+        if (ar.elementCount().orElseThrow() == 0) {
             // VLA or incomplete
             return 16;
         } else if ((ar.byteSize()) >= 16 && isVar) {
             return 16;
         } else {
