diff a/test/jdk/tools/jextract/JextractToolRunner.java b/test/jdk/tools/jextract/JextractToolRunner.java
--- a/test/jdk/tools/jextract/JextractToolRunner.java
+++ b/test/jdk/tools/jextract/JextractToolRunner.java
@@ -38,10 +38,11 @@
 import java.util.spi.ToolProvider;
 import jdk.incubator.foreign.MemoryLayout;
 import jdk.incubator.foreign.MemoryLayout.PathElement;
 import jdk.incubator.foreign.SystemABI;
 import jdk.incubator.foreign.SystemABI.Type;
+import jdk.test.lib.util.FileUtils;
 
 import static jdk.incubator.foreign.SystemABI.NATIVE_TYPE;
 import static org.testng.Assert.assertEquals;
 import static org.testng.Assert.assertNotEquals;
 import static org.testng.Assert.assertNotNull;
@@ -123,31 +124,19 @@
         return new JextractResult(result, output);
     }
 
     protected static void deleteFile(Path path) {
         try {
-            Files.deleteIfExists(path);
+            FileUtils.deleteFileIfExistsWithRetry(path);
         } catch (IOException ioExp) {
             throw new RuntimeException(ioExp);
         }
     }
 
     protected static void deleteDir(Path path) {
         try {
-            Files.walkFileTree(path, new SimpleFileVisitor<>() {
-                @Override
-                public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) {
-                    deleteFile(file);
-                    return FileVisitResult.CONTINUE;
-                }
-
-                @Override
-                public FileVisitResult postVisitDirectory(Path dir, IOException exc) {
-                    deleteFile(dir);
-                    return FileVisitResult.CONTINUE;
-                }
-            });
+            FileUtils.deleteFileTreeWithRetry(path);
         } catch (IOException ioExp) {
             throw new RuntimeException(ioExp);
         }
     }
 
