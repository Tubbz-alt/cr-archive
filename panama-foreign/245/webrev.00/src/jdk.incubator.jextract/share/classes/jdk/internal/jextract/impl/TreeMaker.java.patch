diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TreeMaker.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TreeMaker.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TreeMaker.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TreeMaker.java
@@ -249,12 +249,14 @@
                 .filter(d -> isEnum(d) || !d.name().isEmpty() || ((CursorPosition)d.pos()).cursor.isAnonymousStruct())
                 .collect(Collectors.toList());
     }
 
     private Declaration.Typedef createTypedef(Cursor c) {
-        Type.Delegated typedef = (Type.Delegated) toType(c);
-        Type canonicalType = typedef.type();
+        Type cursorType = toType(c);
+        Type canonicalType = cursorType instanceof Type.Function
+            ? cursorType
+            : ((Type.Delegated) cursorType).type(); // normal typedef
         if (canonicalType instanceof Type.Declared) {
             Declaration.Scoped s = ((Type.Declared) canonicalType).tree();
             if (s.name().equals(c.spelling())) {
                 // typedef record with the same name, no need to present twice
                 return null;
