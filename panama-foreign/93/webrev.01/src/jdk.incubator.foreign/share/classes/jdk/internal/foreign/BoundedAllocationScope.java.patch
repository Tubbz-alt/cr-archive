diff a/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/BoundedAllocationScope.java b/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/BoundedAllocationScope.java
--- a/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/BoundedAllocationScope.java
+++ b/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/BoundedAllocationScope.java
@@ -23,17 +23,17 @@
  * questions.
  */
 
 package jdk.internal.foreign;
 
-import jdk.incubator.foreign.AllocationScope;
+import jdk.incubator.foreign.NativeAllocationScope;
 import jdk.incubator.foreign.MemoryAddress;
 import jdk.incubator.foreign.MemorySegment;
 
 import java.util.OptionalLong;
 
-public class BoundedAllocationScope extends AllocationScope {
+public class BoundedAllocationScope extends NativeAllocationScope {
     private final MemorySegment segment;
     private long sp = 0L;
 
     @Override
     public OptionalLong byteSize() {
@@ -43,12 +43,12 @@
     @Override
     public long allocatedBytes() {
         return sp;
     }
 
-    public BoundedAllocationScope(MemorySegment segment) {
-        this.segment = segment;
+    public BoundedAllocationScope(long size) {
+        this.segment = MemorySegment.allocateNative(size);
     }
 
     @Override
     public MemoryAddress allocate(long bytesSize, long bytesAlignment) {
         long min = ((MemoryAddressImpl)segment.baseAddress()).unsafeGetOffset();
