diff a/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/Type.java b/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/Type.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/Type.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/incubator/jextract/Type.java
@@ -26,10 +26,11 @@
 
 package jdk.incubator.jextract;
 
 import jdk.incubator.foreign.FunctionDescriptor;
 import jdk.incubator.foreign.MemoryLayout;
+import jdk.incubator.foreign.SystemABI;
 import jdk.internal.jextract.impl.LayoutUtils;
 import jdk.internal.jextract.impl.TypeImpl;
 
 import java.util.List;
 import java.util.Optional;
@@ -88,84 +89,96 @@
          */
         enum Kind {
             /**
              * {@code void} type.
              */
-            Void,
+            Void(null),
             /**
              * {@code Bool} type.
              */
-            Bool,
+            Bool(SystemABI.C_BOOL),
             /**
              * {@code char} type.
              */
-            Char,
+            Char(SystemABI.C_CHAR),
             /**
              * {@code char16} type.
              */
-            Char16,
+            Char16(null),
             /**
              * {@code char32} type.
              */
-            Char32,
+            Char32(null),
             /**
              * {@code short} type.
              */
-            Short,
+            Short(SystemABI.C_SHORT),
             /**
              * {@code int} type.
              */
-            Int,
+            Int(SystemABI.C_INT),
             /**
              * {@code long} type.
              */
-            Long,
+            Long(SystemABI.C_LONG),
             /**
              * {@code long long} type.
              */
-            LongLong,
+            LongLong(SystemABI.C_LONGLONG),
             /**
              * {@code int128} type.
              */
-            Int128,
+            Int128(null),
             /**
              * {@code float} type.
              */
-            Float,
+            Float(SystemABI.C_FLOAT),
             /**
              * {@code double} type.
              */
-            Double,
+            Double(SystemABI.C_DOUBLE),
             /**
              * {@code long double} type.
              */
-            LongDouble,
+            LongDouble(SystemABI.C_LONGDOUBLE),
             /**
              * {@code float128} type.
              */
-            Float128,
+            Float128(null),
             /**
              * {@code float16} type.
              */
-            HalfFloat,
+            HalfFloat(null),
             /**
              * {@code wchar} type.
              */
-            WChar
+            WChar(null);
+
+            private final MemoryLayout layout;
+
+            Kind(MemoryLayout layout) {
+                this.layout = layout;
+            }
+
+            /**
+             * The primitive type (optional) layout.
+             * @return The primitive type (optional) layout.
+             */
+            public Optional<MemoryLayout> layout() {
+                return layout == null ?
+                        Optional.empty() :
+                        Optional.of(layout.withAttribute(JEXTRACT_TYPE, this));
+            }
+
+            public static String JEXTRACT_TYPE = "jextract/type";
         }
 
         /**
          * The primitive type kind.
          * @return The primitive type kind.
          */
         Kind kind();
-
-        /**
-         * The primitive type (optional) layout.
-         * @return The primitive type (optional) layout.
-         */
-        Optional<MemoryLayout> layout();
     }
 
     /**
      * Instances of this class are used to model types which are associated to a declaration in the foreign language
      * (see {@link Declaration}).
@@ -387,17 +400,16 @@
     static Type.Primitive void_() {
         return new TypeImpl.PrimitiveImpl(Type.Primitive.Kind.Void);
     }
 
     /**
-     * Creates a new primitive type given kind and layout.
+     * Creates a new primitive type given kind.
      * @param kind the primitive type kind.
-     * @param layout the primitive type layout.
-     * @return a new primitive type with given kind and layout.
+     * @return a new primitive type with given kind.
      */
-    static Type.Primitive primitive(Type.Primitive.Kind kind, MemoryLayout layout) {
-        return new TypeImpl.PrimitiveImpl(kind, layout);
+    static Type.Primitive primitive(Type.Primitive.Kind kind) {
+        return new TypeImpl.PrimitiveImpl(kind);
     }
 
     /**
      * Creates a new qualified type given kind and underlying type.
      * @param kind the qualified type kind.
