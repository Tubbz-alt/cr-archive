diff a/test/jdk/tools/jextract/RepeatedDeclsTest.java b/test/jdk/tools/jextract/RepeatedDeclsTest.java
--- a/test/jdk/tools/jextract/RepeatedDeclsTest.java
+++ b/test/jdk/tools/jextract/RepeatedDeclsTest.java
@@ -19,10 +19,11 @@
  * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */
 
+import jdk.incubator.foreign.SystemABI;
 import jdk.incubator.jextract.Type;
 import org.testng.annotations.Test;
 
 import java.nio.file.Path;
 import jdk.incubator.foreign.GroupLayout;
@@ -97,18 +98,18 @@
 
     private void checkPoint(Class<?> pointCls) {
         MemoryLayout pointLayout = findLayout(pointCls);
         assertNotNull(pointLayout);
         assertTrue(((GroupLayout)pointLayout).isStruct());
-        checkFieldABIType(pointLayout, "i",  Type.Primitive.Kind.Int);
-        checkFieldABIType(pointLayout, "j",  Type.Primitive.Kind.Int);
+        checkField(pointLayout, "i", SystemABI.C_INT);
+        checkField(pointLayout, "j", SystemABI.C_INT);
     }
 
     private void checkPoint3D(Class<?> point3DCls) {
         MemoryLayout point3DLayout = findLayout(point3DCls);
         assertNotNull(point3DLayout);
         assertTrue(((GroupLayout)point3DLayout).isStruct());
-        checkFieldABIType(point3DLayout, "i",  Type.Primitive.Kind.Int);
-        checkFieldABIType(point3DLayout, "j",  Type.Primitive.Kind.Int);
-        checkFieldABIType(point3DLayout, "k",  Type.Primitive.Kind.Int);
+        checkField(point3DLayout, "i", SystemABI.C_INT);
+        checkField(point3DLayout, "j", SystemABI.C_INT);
+        checkField(point3DLayout, "k", SystemABI.C_INT);
     }
 }
