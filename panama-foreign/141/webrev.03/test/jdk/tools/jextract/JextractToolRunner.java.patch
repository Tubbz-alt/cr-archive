diff a/test/jdk/tools/jextract/JextractToolRunner.java b/test/jdk/tools/jextract/JextractToolRunner.java
--- a/test/jdk/tools/jextract/JextractToolRunner.java
+++ b/test/jdk/tools/jextract/JextractToolRunner.java
@@ -36,14 +36,16 @@
 import java.nio.file.SimpleFileVisitor;
 import java.nio.file.attribute.BasicFileAttributes;
 import java.util.Arrays;
 import java.util.Objects;
 import java.util.spi.ToolProvider;
+
+import jdk.incubator.foreign.GroupLayout;
 import jdk.incubator.foreign.MemoryLayout;
 import jdk.incubator.foreign.MemoryLayout.PathElement;
 import jdk.incubator.foreign.SystemABI;
-import jdk.incubator.foreign.SystemABI.Type;
+import jdk.incubator.jextract.Type;
 import jdk.test.lib.util.FileUtils;
 
 import static jdk.incubator.foreign.SystemABI.NATIVE_TYPE;
 import static org.testng.Assert.assertEquals;
 import static org.testng.Assert.assertNotEquals;
@@ -150,11 +152,12 @@
         try {
             URL[] urls = new URL[paths.length];
             for (int i = 0; i < paths.length; i++) {
                 urls[i] = paths[i].toUri().toURL();
             }
-            URLClassLoader ucl = new URLClassLoader(urls, null);
+            URLClassLoader ucl = new URLClassLoader(urls,
+                    JextractToolRunner.class.getClassLoader());
             return new Loader(ucl);
         } catch (RuntimeException re) {
             throw re;
         } catch (Exception e) {
             throw new RuntimeException(e);
@@ -246,14 +249,12 @@
 
     protected MemoryLayout findLayout(Class<?> cls) {
         return findLayout(cls, "");
     }
 
-    protected static void checkFieldABIType(MemoryLayout layout, String fieldName, Type expected) {
-        assertEquals(layout.select(PathElement.groupElement(fieldName)).attribute(NATIVE_TYPE)
-                                                                       .map(SystemABI.Type.class::cast)
-                                                                       .orElseThrow(), expected);
+    protected static void checkField(MemoryLayout group, String fieldName, MemoryLayout expected) {
+        assertEquals(group.select(PathElement.groupElement(fieldName)), expected.withName(fieldName));
     }
 
     protected static class Loader implements AutoCloseable {
 
         private final URLClassLoader loader;
