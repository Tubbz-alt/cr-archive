diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/TranslationUnit.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/TranslationUnit.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/TranslationUnit.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/clang/TranslationUnit.java
@@ -27,10 +27,11 @@
 package jdk.internal.clang;
 
 import jdk.incubator.foreign.MemoryAddress;
 import jdk.incubator.foreign.MemoryLayout;
 import jdk.incubator.foreign.MemorySegment;
+import jdk.incubator.foreign.SystemABI;
 import jdk.internal.clang.libclang.Index_h;
 import jdk.internal.foreign.MemoryAddressImpl;
 import jdk.internal.jextract.impl.LayoutUtils;
 
 import java.io.IOException;
@@ -117,12 +118,12 @@
         }
         return rv;
     }
 
     public Tokens tokenize(SourceRange range) {
-        MemorySegment p = MemorySegment.allocateNative(LayoutUtils.C_POINTER);
-        MemorySegment pCnt = MemorySegment.allocateNative(LayoutUtils.C_INT);
+        MemorySegment p = MemorySegment.allocateNative(SystemABI.C_POINTER);
+        MemorySegment pCnt = MemorySegment.allocateNative(SystemABI.C_INT);
         Index_h.clang_tokenize(tu, range.range, p.baseAddress(), pCnt.baseAddress());
         Tokens rv = new Tokens(Utils.getPointer(p.baseAddress()), Utils.getInt(pCnt.baseAddress()));
         return rv;
     }
 
