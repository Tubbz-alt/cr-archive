diff a/src/jdk.jfr/share/classes/jdk/jfr/events/SocketWriteEvent.java b/src/jdk.jfr/share/classes/jdk/jfr/events/SocketWriteEvent.java
--- a/src/jdk.jfr/share/classes/jdk/jfr/events/SocketWriteEvent.java
+++ b/src/jdk.jfr/share/classes/jdk/jfr/events/SocketWriteEvent.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2012, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2012, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -36,16 +36,12 @@
 @Label("Socket Write")
 @Category("Java Application")
 @Description("Writing data to a socket")
 public final class SocketWriteEvent extends AbstractJDKEvent {
 
-    public static final ThreadLocal<SocketWriteEvent> EVENT =
-        new ThreadLocal<>() {
-            @Override protected SocketWriteEvent initialValue() {
-                return new SocketWriteEvent();
-            }
-        };
+    // The order of these fields must be the same as the parameters in
+    // EventHandler::write(..., String, String, int, long)
 
     @Label("Remote Host")
     public String host;
 
     @Label("Remote Address")
@@ -56,13 +52,6 @@
 
     @Label("Bytes Written")
     @Description("Number of bytes written to the socket")
     @DataAmount
     public long bytesWritten;
-
-    public void reset() {
-        host = null;
-        address = null;
-        port = 0;
-        bytesWritten = 0;
-    }
 }
