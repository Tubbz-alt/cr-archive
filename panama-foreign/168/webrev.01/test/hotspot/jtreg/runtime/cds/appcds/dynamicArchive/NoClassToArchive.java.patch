diff a/test/hotspot/jtreg/runtime/cds/appcds/dynamicArchive/NoClassToArchive.java b/test/hotspot/jtreg/runtime/cds/appcds/dynamicArchive/NoClassToArchive.java
--- a/test/hotspot/jtreg/runtime/cds/appcds/dynamicArchive/NoClassToArchive.java
+++ b/test/hotspot/jtreg/runtime/cds/appcds/dynamicArchive/NoClassToArchive.java
@@ -36,12 +36,14 @@
  *          The VM code covered by this test can be sufficiently tested with C1/C2. So there's no need
  *          to bend over backwards to run this test with graal.
  *
  * @library /test/lib /test/hotspot/jtreg/runtime/cds/appcds /test/hotspot/jtreg/runtime/cds/appcds/dynamicArchive/test-classes
  * @build StrConcatApp
+ * @build sun.hotspot.WhiteBox
  * @run driver ClassFileInstaller -jar strConcatApp.jar StrConcatApp
- * @run driver NoClassToArchive
+ * @run driver ClassFileInstaller sun.hotspot.WhiteBox sun.hotspot.WhiteBox$WhiteBoxPermission
+ * @run main/othervm -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath/a:. NoClassToArchive
  */
 
 import java.io.File;
 import jdk.test.lib.process.OutputAnalyzer;
 import jdk.test.lib.process.ProcessTools;
@@ -59,11 +61,11 @@
     }
 
     // (1) Test with default base archive + top archive
     static void testDefaultBase() throws Exception {
         String topArchiveName = getNewArchiveName("top");
-        doTest(null, topArchiveName);
+        doTest(topArchiveName);
     }
 
     // (2) Test with custom base archive + top archive
     static void testCustomBase() throws Exception {
         String topArchiveName = getNewArchiveName("top2");
@@ -81,19 +83,19 @@
         } else {
             output.shouldContain(warningMessage);
         }
     }
 
-    private static void doTest(String baseArchiveName, String topArchiveName) throws Exception {
-        dump2(baseArchiveName, topArchiveName,
+    private static void doTest(String topArchiveName) throws Exception {
+        dump(topArchiveName,
              "-Xlog:cds",
              "-Xlog:cds+dynamic=debug",
              "-Xlog:class+load=trace",
              "-version")
             .assertNormalExit(output -> checkWarning(output));
 
-        dump2(baseArchiveName, topArchiveName,
+        dump(topArchiveName,
              "-Xlog:cds",
              "-Xlog:cds+dynamic=debug",
              "-Xlog:class+load=trace",
              "-help")
             .assertNormalExit(output -> {
@@ -112,11 +114,11 @@
             appClass);
         OutputAnalyzer output = TestCommon.executeAndLog(pb, "dumpClassList");
         TestCommon.checkExecReturn(output, 0, true, "length = 0");
 
         // create a custom base archive based on the class list
-        dumpBaseArchive(baseArchiveName, "-XX:SharedClassListFile=" + classList);
+        TestCommon.dumpBaseArchive(baseArchiveName, "-XX:SharedClassListFile=" + classList);
 
         // create a dynamic archive with the custom base archive
         // no class should be included in the dynamic archive
         dump2(baseArchiveName, topArchiveName,
               "-Xlog:cds",
