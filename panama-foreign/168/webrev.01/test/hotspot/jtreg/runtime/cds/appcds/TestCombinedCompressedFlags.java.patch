diff a/test/hotspot/jtreg/runtime/cds/appcds/TestCombinedCompressedFlags.java b/test/hotspot/jtreg/runtime/cds/appcds/TestCombinedCompressedFlags.java
--- a/test/hotspot/jtreg/runtime/cds/appcds/TestCombinedCompressedFlags.java
+++ b/test/hotspot/jtreg/runtime/cds/appcds/TestCombinedCompressedFlags.java
@@ -63,11 +63,11 @@
         public RunArg(ConfArg arg) {
             dumpArg = arg;
             initExecArgs();
         }
         private void initExecArgs() {
-           /* The combinations have four cases. Note COOP off, CCPTR must be off
+           /* The combinations have four cases.
             *          UseCompressedOops   UseCompressedClassPointers  Result
             *    1.
             *    dump: on                  on
             *    test: on                  on                          Pass
             *          on                  off                         Fail
@@ -80,17 +80,15 @@
             *          off                 on                          Pass
             *          off                 off                         Fail
             *    3.
             *    dump: off                 on
             *    test: off                 on                          Pass
-            *          off                 off                         Pass
             *          on                  on                          Fail
             *          on                  off                         Fail
             *    4.
             *    dump: off                 off
             *    test: off                 off                         Pass
-            *          off                 on                          Pass
             *          on                  on                          Fail
             *          on                  off                         Fail
             **/
             execArgs = new ArrayList<ConfArg>();
             if (dumpArg.useCompressedOops && dumpArg.useCompressedClassPointers) {
@@ -112,23 +110,19 @@
                     .add(new ConfArg(false, true, EXEC_ABNORMAL_MSG, FAIL));
                 execArgs
                     .add(new ConfArg(false, false, EXEC_ABNORMAL_MSG, FAIL));
 
             } else if (!dumpArg.useCompressedOops && dumpArg.useCompressedClassPointers) {
-                execArgs
-                    .add(new ConfArg(false, false, HELLO_STRING, PASS));
                 execArgs
                     .add(new ConfArg(false, true, HELLO_STRING, PASS));
                 execArgs
                     .add(new ConfArg(true, true, EXEC_ABNORMAL_MSG, FAIL));
                 execArgs
                     .add(new ConfArg(true, false, EXEC_ABNORMAL_MSG, FAIL));
             } else if (!dumpArg.useCompressedOops && !dumpArg.useCompressedClassPointers) {
                 execArgs
                     .add(new ConfArg(false, false, HELLO_STRING, PASS));
-                execArgs
-                    .add(new ConfArg(false, true, HELLO_STRING, PASS));
                 execArgs
                     .add(new ConfArg(true, true, EXEC_ABNORMAL_MSG, FAIL));
                 execArgs
                     .add(new ConfArg(true, false, EXEC_ABNORMAL_MSG, FAIL));
             }
