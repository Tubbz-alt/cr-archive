diff a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLPaints.m b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLPaints.m
--- a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLPaints.m
+++ b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLPaints.m
@@ -31,10 +31,11 @@
 
 #include "common.h"
 
 #include "sun_java2d_SunGraphics2D.h"
 #include "sun_java2d_pipe_BufferedPaints.h"
+#import "MTLComposite.h"
 
 #define RGBA_TO_V4(c)              \
 {                                  \
     (((c) >> 16) & (0xFF))/255.0f, \
     (((c) >> 8) & 0xFF)/255.0f,    \
@@ -312,11 +313,11 @@
                                                  stencilNeeded:stencil];
         [encoder setVertexBytes:&_anchor length:sizeof(_anchor) atIndex:FrameUniformBuffer];
         [encoder setFragmentTexture:_paintTexture atIndex: 1];
 
         struct TxtFrameUniforms uf = {RGBA_TO_V4(0), 0, srcFlags->isOpaque,
-                                      dstFlags->isOpaque};
+                                      dstFlags->isOpaque, [composite getExtraAlpha]};
         [encoder setFragmentBytes:&uf length:sizeof(uf)
                           atIndex:FrameUniformBuffer];
 
       } else if (_paintState == sun_java2d_SunGraphics2D_PAINT_GRADIENT) {
         pipelineState = [pipelineStateStorage getPipelineState:templateTexturePipelineDesc
@@ -349,21 +350,24 @@
           pipelineState =
               [pipelineStateStorage getPipelineState:templateTexturePipelineDesc
                                       vertexShaderId:@"vert_txt"
                                     fragmentShaderId:@"frag_txt"
                                        compositeRule:[composite getRule]
+                                           composite:composite
                                                 isAA:JNI_FALSE
                                             srcFlags:srcFlags
                                             dstFlags:dstFlags
                                        stencilNeeded:stencil];
         }
 
         if (_paintState == sun_java2d_SunGraphics2D_PAINT_ALPHACOLOR) {
-          struct TxtFrameUniforms uf = {RGBA_TO_V4(_color), 1, srcFlags->isOpaque, dstFlags->isOpaque };
+          struct TxtFrameUniforms uf = {RGBA_TO_V4(_color), 1,
+                  srcFlags->isOpaque, dstFlags->isOpaque, [composite getExtraAlpha]};
           [encoder setFragmentBytes:&uf length:sizeof(uf) atIndex:FrameUniformBuffer];
         } else {
-          struct TxtFrameUniforms uf = {RGBA_TO_V4(0), 0, srcFlags->isOpaque, dstFlags->isOpaque };
+          struct TxtFrameUniforms uf = {RGBA_TO_V4(0), 0,
+                  srcFlags->isOpaque, dstFlags->isOpaque, [composite getExtraAlpha]};
           [encoder setFragmentBytes:&uf length:sizeof(uf) atIndex:FrameUniformBuffer];
         }
       }
     } else {
         if (_paintState == sun_java2d_SunGraphics2D_PAINT_ALPHACOLOR) {
@@ -435,14 +439,16 @@
                                                 srcFlags:srcFlags
                                                 dstFlags:dstFlags
                                            stencilNeeded:stencil];
 
         if (_paintState == sun_java2d_SunGraphics2D_PAINT_ALPHACOLOR) {
-            struct TxtFrameUniforms uf = {RGBA_TO_V4(_color ^ xorColor), 1, srcFlags->isOpaque, dstFlags->isOpaque };
+            struct TxtFrameUniforms uf = {RGBA_TO_V4(_color ^ xorColor), 1,
+                    srcFlags->isOpaque, dstFlags->isOpaque, [composite getExtraAlpha]};
             [encoder setFragmentBytes:&uf length:sizeof(uf) atIndex:FrameUniformBuffer];
         } else {
-            struct TxtFrameUniforms uf = {RGBA_TO_V4(0 ^ xorColor), 0, srcFlags->isOpaque, dstFlags->isOpaque };
+            struct TxtFrameUniforms uf = {RGBA_TO_V4(0 ^ xorColor), 0,
+                    srcFlags->isOpaque, dstFlags->isOpaque, [composite getExtraAlpha]};
             [encoder setFragmentBytes:&uf length:sizeof(uf) atIndex:FrameUniformBuffer];
         }
         [encoder setFragmentBytes:&xorColor length:sizeof(xorColor) atIndex: 0];
     } else {
         if (_paintState == sun_java2d_SunGraphics2D_PAINT_ALPHACOLOR) {
