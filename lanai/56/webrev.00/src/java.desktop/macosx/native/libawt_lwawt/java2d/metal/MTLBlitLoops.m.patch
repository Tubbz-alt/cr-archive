diff a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLBlitLoops.m b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLBlitLoops.m
--- a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLBlitLoops.m
+++ b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLBlitLoops.m
@@ -754,11 +754,11 @@
             // NOTE: using of separate blitCommandBuffer can produce errors (draw into surface (with general cmd-buf)
             // can be unfinished when reading raster from blit cmd-buf).
             // Consider to use [mtlc.encoderManager createBlitEncoder] and [mtlc commitCommandBuffer:JNI_TRUE];
             J2dTraceLn1(J2D_TRACE_VERBOSE, "MTLBlitLoops_SurfaceToSwBlit: source texture %p", srcOps->pTexture);
 
-            id<MTLCommandBuffer> cb = [mtlc createBlitCommandBuffer];
+            id<MTLCommandBuffer> cb = [mtlc createCommandBuffer];
             id<MTLBlitCommandEncoder> blitEncoder = [cb blitCommandEncoder];
             [blitEncoder synchronizeTexture:srcOps->pTexture slice:0 level:0];
             [blitEncoder copyFromTexture:srcOps->pTexture
                             sourceSlice:0
                             sourceLevel:0
@@ -817,11 +817,11 @@
     J2dTraceImpl(J2D_TRACE_VERBOSE, JNI_TRUE, "MTLBlitLoops_CopyArea: bdst=%p [tex=%p] %dx%d | src (%d, %d), %dx%d -> dst (%d, %d)",
             dstOps, dstOps->pTexture, ((id<MTLTexture>)dstOps->pTexture).width, ((id<MTLTexture>)dstOps->pTexture).height, x, y, width, height, dx, dy);
 #endif //DEBUG
 
     @autoreleasepool {
-    id<MTLCommandBuffer> cb = [mtlc createBlitCommandBuffer];
+    id<MTLCommandBuffer> cb = [mtlc createCommandBuffer];
     id<MTLBlitCommandEncoder> blitEncoder = [cb blitCommandEncoder];
 
     // Create an intrermediate buffer
     int totalBuffsize = width * height * 4;
     id <MTLBuffer> buff = [mtlc.device newBufferWithLength:totalBuffsize options:MTLResourceStorageModePrivate];
