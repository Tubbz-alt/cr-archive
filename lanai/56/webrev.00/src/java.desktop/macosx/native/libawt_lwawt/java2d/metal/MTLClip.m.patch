diff a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLClip.m b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLClip.m
--- a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLClip.m
+++ b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLClip.m
@@ -151,11 +151,11 @@
 
         NSUInteger width = (NSUInteger)dstOps->width;
         NSUInteger height = (NSUInteger)dstOps->height;
         NSUInteger size = width*height;
         id <MTLBuffer> buff = [mtlc.device newBufferWithLength:size*4 options:MTLResourceStorageModePrivate];
-        id<MTLCommandBuffer> commandBuf = [mtlc createBlitCommandBuffer];
+        id<MTLCommandBuffer> commandBuf = [mtlc createCommandBuffer];
         id<MTLBlitCommandEncoder> blitEncoder = [commandBuf blitCommandEncoder];
         [blitEncoder fillBuffer:buff range:NSMakeRange(0, size*4) value:0];
 
         MTLOrigin origin = MTLOriginMake(0, 0, 0);
         MTLSize sourceSize = MTLSizeMake(width, height, 1);
@@ -202,11 +202,11 @@
             NSUInteger width = (NSUInteger)dstOps->width;
             NSUInteger height = (NSUInteger)dstOps->height;
             NSUInteger size = width*height;
             NSUInteger sizeX4 = size*4;
 
-            id<MTLCommandBuffer> cb = [mtlc createBlitCommandBuffer];
+            id<MTLCommandBuffer> cb = [mtlc createCommandBuffer];
             id<MTLBlitCommandEncoder> blitEncoder = [cb blitCommandEncoder];
             MTLSize sourceSize = MTLSizeMake(width, height, 1);
             MTLOrigin origin = MTLOriginMake(0, 0, 0);
             [blitEncoder copyFromTexture:dstOps->pStencilData
                              sourceSlice:0
@@ -298,11 +298,11 @@
 
     id <MTLTexture> _stencilTextureRef = _dstOps->pStencilTexture;
 
     if (!_clipReady) {
         @autoreleasepool {
-            id <MTLCommandBuffer> cb = [_mtlc createBlitCommandBuffer];
+            id <MTLCommandBuffer> cb = [_mtlc createCommandBuffer];
             id <MTLBlitCommandEncoder> blitEncoder = [cb blitCommandEncoder];
             id <MTLBuffer> _stencilDataBufRef = _dstOps->pStencilDataBuf;
 
             NSUInteger width = _stencilTextureRef.width;
             NSUInteger height = _stencilTextureRef.height;
@@ -332,11 +332,11 @@
 
     if (!_aaClipReady) {
 
         @autoreleasepool {
 
-            id <MTLCommandBuffer> cb = [_mtlc createBlitCommandBuffer];
+            id <MTLCommandBuffer> cb = [_mtlc createCommandBuffer];
             id <MTLComputeCommandEncoder> computeEncoder = [cb computeCommandEncoder];
             id<MTLComputePipelineState> computePipelineState = [_mtlc.pipelineStateStorage getComputePipelineState:@"stencil2tex"];
             id <MTLBuffer> _stencilDataBufRef = _dstOps->pStencilDataBuf;
             id <MTLBuffer> _stencilAADataBufRef = _dstOps->pAAStencilDataBuf;
             NSUInteger width = _stencilAADataRef.width;
