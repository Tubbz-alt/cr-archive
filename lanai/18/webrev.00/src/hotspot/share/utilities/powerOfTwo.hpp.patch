diff a/src/hotspot/share/utilities/powerOfTwo.hpp b/src/hotspot/share/utilities/powerOfTwo.hpp
--- a/src/hotspot/share/utilities/powerOfTwo.hpp
+++ b/src/hotspot/share/utilities/powerOfTwo.hpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2019, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -32,10 +32,31 @@
 #include "utilities/debug.hpp"
 #include "utilities/globalDefinitions.hpp"
 
 // Power of two convenience library.
 
+template <typename T>
+bool is_power_of_2(T x) {
+  return (x > T(0)) && ((x & (x - 1)) == T(0));
+}
+
+// Log2 of a power of 2
+inline int exact_log2(intptr_t x) {
+  assert(is_power_of_2((uintptr_t)x), "x must be a power of 2: " INTPTR_FORMAT, x);
+
+  const int bits = sizeof x * BitsPerByte;
+  return bits - count_leading_zeros(x) - 1;
+}
+
+// Log2 of a power of 2
+inline int exact_log2_long(jlong x) {
+  assert(is_power_of_2((julong)x), "x must be a power of 2: " JLONG_FORMAT, x);
+
+  const int bits = sizeof x * BitsPerByte;
+  return bits - count_leading_zeros(x) - 1;
+}
+
 // Round down to the closest power of two greater to or equal to the given
 // value.
 
 // Signed version: 0 is an invalid input, negative values are invalid
 template <typename T>
