diff a/src/java.management/share/classes/javax/management/BadAttributeValueExpException.java b/src/java.management/share/classes/javax/management/BadAttributeValueExpException.java
--- a/src/java.management/share/classes/javax/management/BadAttributeValueExpException.java
+++ b/src/java.management/share/classes/javax/management/BadAttributeValueExpException.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1999, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1999, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -43,14 +43,14 @@
     /* Serial version */
     private static final long serialVersionUID = -3105272988410493376L;
 
     /**
      * @serial A string representation of the attribute that originated this exception.
-     * for example, the string value can be the return of {@code attribute.toString()}
+     * For example, the string value can be the return of {@code attribute.toString()}.
      */
     @SuppressWarnings("serial") // See handling in constructor and readObject
-    private Object val;
+    private String val;
 
     /**
      * Constructs a BadAttributeValueExpException using the specified Object to
      * create the toString() value.
      *
@@ -66,27 +66,26 @@
      */
     public String toString()  {
         return "BadAttributeValueException: " + val;
     }
 
+    /**
+     * Restores the fields of a BadAttributeValueExpException from the stream.
+     * If the 'val' field in the stream does not contain a string
+     * it is replaced with an implementation specific string representation
+     * of the value in the stream.
+     *
+     * @param ois an ObjectInput Stream
+     * @throws IOException thrown if an error occurs
+     * @throws ClassNotFoundException if a class can not be found
+     */
     private void readObject(ObjectInputStream ois) throws IOException, ClassNotFoundException {
         ObjectInputStream.GetField gf = ois.readFields();
         Object valObj = gf.get("val", null);
 
-        if (valObj == null) {
-            val = null;
-        } else if (valObj instanceof String) {
-            val= valObj;
-        } else if (System.getSecurityManager() == null
-                || valObj instanceof Long
-                || valObj instanceof Integer
-                || valObj instanceof Float
-                || valObj instanceof Double
-                || valObj instanceof Byte
-                || valObj instanceof Short
-                || valObj instanceof Boolean) {
-            val = valObj.toString();
+        if (valObj instanceof String || valObj == null) {
+            val = (String)valObj;
         } else { // the serialized object is from a version without JDK-8019292 fix
             val = System.identityHashCode(valObj) + "@" + valObj.getClass().getName();
         }
     }
  }
