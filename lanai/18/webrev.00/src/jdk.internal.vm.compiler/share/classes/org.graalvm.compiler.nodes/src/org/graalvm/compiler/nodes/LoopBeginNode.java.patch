diff a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/LoopBeginNode.java b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/LoopBeginNode.java
--- a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/LoopBeginNode.java
+++ b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/LoopBeginNode.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2011, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2011, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -48,10 +48,11 @@
     protected double loopFrequency;
     protected double loopOrigFrequency;
     protected int nextEndIndex;
     protected int unswitches;
     protected int splits;
+    protected int peelings;
     protected int inversionCount;
     protected LoopType loopType;
     protected int unrollFactor;
     protected boolean osrLoop;
 
@@ -205,10 +206,18 @@
 
     public void incrementSplits() {
         splits++;
     }
 
+    public int peelings() {
+        return peelings;
+    }
+
+    public void incrementPeelings() {
+        peelings++;
+    }
+
     @Override
     public void generate(NodeLIRBuilderTool gen) {
         // Nothing to emit, since this is node is used for structural purposes only.
     }
 
