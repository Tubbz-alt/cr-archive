diff a/src/jdk.aot/share/classes/jdk.tools.jaotc/src/jdk/tools/jaotc/amd64/AMD64ELFMacroAssembler.java b/src/jdk.aot/share/classes/jdk.tools.jaotc/src/jdk/tools/jaotc/amd64/AMD64ELFMacroAssembler.java
--- a/src/jdk.aot/share/classes/jdk.tools.jaotc/src/jdk/tools/jaotc/amd64/AMD64ELFMacroAssembler.java
+++ b/src/jdk.aot/share/classes/jdk.tools.jaotc/src/jdk/tools/jaotc/amd64/AMD64ELFMacroAssembler.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2016, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2016, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -33,17 +33,18 @@
 import jdk.tools.jaotc.ELFMacroAssembler;
 import org.graalvm.compiler.asm.amd64.AMD64Address;
 import org.graalvm.compiler.asm.amd64.AMD64MacroAssembler;
 
 import jdk.vm.ci.code.TargetDescription;
+import org.graalvm.compiler.options.OptionValues;
 
 public final class AMD64ELFMacroAssembler extends AMD64MacroAssembler implements ELFMacroAssembler {
 
     private int currentEndOfInstruction;
 
-    public AMD64ELFMacroAssembler(TargetDescription target) {
-        super(target);
+    public AMD64ELFMacroAssembler(TargetDescription target, OptionValues optionValues) {
+        super(target, optionValues);
     }
 
     @Override
     public int currentEndOfInstruction() {
         return currentEndOfInstruction;
