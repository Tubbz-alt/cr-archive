diff a/test/langtools/jdk/javadoc/doclet/testLinkOption/TestLinkOptionWithModule.java b/test/langtools/jdk/javadoc/doclet/testLinkOption/TestLinkOptionWithModule.java
--- a/test/langtools/jdk/javadoc/doclet/testLinkOption/TestLinkOptionWithModule.java
+++ b/test/langtools/jdk/javadoc/doclet/testLinkOption/TestLinkOptionWithModule.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2018, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -74,12 +74,12 @@
                 "--module", "com.ex2",
                 "-link", "../" + out1.getFileName());
 
         checkExit(Exit.OK);
         checkOutput("com.ex2/com/ex2/B.html", true,
-                "<a href=\"../../../../out1a/com.ex1/com/ex1/A.html?is-external=true\" "
-                + "title=\"class or interface in com.ex1\" class=\"externalLink\">A</a>");
+                "<a href=\"../../../../out1a/com.ex1/com/ex1/A.html\" "
+                + "title=\"class or interface in com.ex1\" class=\"external-link\">A</a>");
     }
 
     @Test
     public void testPackageLinkedToPackage(Path base) throws Exception {
         Path out1 = base.resolve("out2a"), out2 = base.resolve("out2b");
@@ -93,12 +93,12 @@
                 "-subpackages", "com.ex2",
                 "-link", "../" + out1.getFileName());
 
         checkExit(Exit.OK);
         checkOutput("com/ex2/B.html", true,
-                "<a href=\"../../../out2a/com/ex1/A.html?is-external=true\" title=\"class or interface in com.ex1\" "
-                + "class=\"externalLink\">A</a>");
+                "<a href=\"../../../out2a/com/ex1/A.html\" title=\"class or interface in com.ex1\" "
+                + "class=\"external-link\">A</a>");
     }
 
     @Test
     public void testModuleLinkedToPackage(Path base) throws Exception {
         Path out1 = base.resolve("out3a"), out2 = base.resolve("out3b");
