diff a/test/langtools/jdk/jshell/VariablesTest.java b/test/langtools/jdk/jshell/VariablesTest.java
--- a/test/langtools/jdk/jshell/VariablesTest.java
+++ b/test/langtools/jdk/jshell/VariablesTest.java
@@ -21,11 +21,11 @@
  * questions.
  */
 
 /*
  * @test
- * @bug 8144903 8177466 8191842 8211694 8213725
+ * @bug 8144903 8177466 8191842 8211694 8213725 8239536
  * @summary Tests for EvaluationState.variables
  * @library /tools/lib
  * @modules jdk.compiler/com.sun.tools.javac.api
  *          jdk.compiler/com.sun.tools.javac.main
  *          jdk.jshell
@@ -464,10 +464,19 @@
         assertVarDisplayName("var v4b = v4a.get(0);", "String");
         assertVarDisplayName("var v5 = new Object() { };", "<anonymous class extending Object>");
         assertVarDisplayName("var v6 = new Runnable() { public void run() { } };", "<anonymous class implementing Runnable>");
     }
 
+    public void varType() {
+        assertEval("import java.util.*;");
+        var firstVar = varKey(assertEval("var v1 = List.of(1);", added(VALID)));
+        assertEval("import list.List;", DiagCheck.DIAG_OK, DiagCheck.DIAG_ERROR, added(VALID),
+                                        ste(firstVar, VALID, RECOVERABLE_NOT_DEFINED, true, MAIN_SNIPPET));
+        assertEval("var v2 = java.util.List.of(1);", added(VALID));
+        assertEval("v2", "[1]");
+    }
+
     public void varDeclNoInit() {
         assertVarDeclNoInit("byte", "b",  "0");
         assertVarDeclNoInit("short", "h",  "0");
         assertVarDeclNoInit("int", "i",  "0");
         assertVarDeclNoInit("long", "l",  "0");
@@ -577,10 +586,14 @@
                 "\n" +
                 "import java.util.List;\n" +
                 "\n" +
                 "public interface J<T> {\n" +
                 "   public List<T> get();\n" +
+                "}\n",
+                "package list;\n" +
+                "\n" +
+                "public class List {\n" +
                 "}\n");
         String tpath = compiler.getPath(path).toString();
         setUp(b -> b
                 .remoteVMOptions("--class-path", tpath)
                 .compilerOptions("--class-path", tpath));
