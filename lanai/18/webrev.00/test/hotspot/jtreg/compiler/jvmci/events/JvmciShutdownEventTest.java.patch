diff a/test/hotspot/jtreg/compiler/jvmci/events/JvmciShutdownEventTest.java b/test/hotspot/jtreg/compiler/jvmci/events/JvmciShutdownEventTest.java
--- a/test/hotspot/jtreg/compiler/jvmci/events/JvmciShutdownEventTest.java
+++ b/test/hotspot/jtreg/compiler/jvmci/events/JvmciShutdownEventTest.java
@@ -41,11 +41,12 @@
  *      compiler.jvmci.common.JVMCIHelpers$EmptyHotspotCompiler
  *      compiler.jvmci.common.JVMCIHelpers$EmptyCompilerFactory
  *      compiler.jvmci.common.JVMCIHelpers$EmptyCompilationRequestResult
  *      compiler.jvmci.common.JVMCIHelpers$EmptyVMEventListener
  *      compiler.jvmci.events.JvmciShutdownEventListener
- * @run main/othervm compiler.jvmci.events.JvmciShutdownEventTest
+ * @run main/othervm -XX:+UnlockExperimentalVMOptions
+ *      compiler.jvmci.events.JvmciShutdownEventTest
  */
 
 package compiler.jvmci.events;
 
 import jdk.test.lib.process.ExitCode;
@@ -64,11 +65,11 @@
         boolean addTestVMOptions = true;
         CommandLineOptionTest.verifyJVMStartup(MESSAGE, ERROR_MESSAGE,
                 "Unexpected exit code with +EnableJVMCI",
                 "Unexpected output with +EnableJVMCI", ExitCode.OK,
                 addTestVMOptions, "-XX:+UnlockExperimentalVMOptions",
-                "-XX:+EnableJVMCI", "-Xbootclasspath/a:.",
+                "-XX:+EnableJVMCI", "-XX:-UseJVMCICompiler", "-Xbootclasspath/a:.",
                 JvmciShutdownEventListener.class.getName()
         );
 
         CommandLineOptionTest.verifyJVMStartup(ERROR_MESSAGE, MESSAGE,
                 "Unexpected exit code with -EnableJVMCI",
