diff a/src/java.desktop/macosx/classes/sun/java2d/metal/MTLBlitLoops.java b/src/java.desktop/macosx/classes/sun/java2d/metal/MTLBlitLoops.java
--- a/src/java.desktop/macosx/classes/sun/java2d/metal/MTLBlitLoops.java
+++ b/src/java.desktop/macosx/classes/sun/java2d/metal/MTLBlitLoops.java
@@ -83,22 +83,25 @@
                         MTLSurfaceData.PF_INT_RGBX),
                 new MTLSwToSurfaceBlit(SurfaceType.IntBgr,
                         MTLSurfaceData.PF_INT_BGR),
                 new MTLSwToSurfaceBlit(SurfaceType.IntBgrx,
                         MTLSurfaceData.PF_INT_BGRX),
-                new MTLSwToSurfaceBlit(SurfaceType.ThreeByteBgr,
-                        MTLSurfaceData.PF_3BYTE_BGR),
-                new MTLSwToSurfaceBlit(SurfaceType.Ushort565Rgb,
-                        MTLSurfaceData.PF_USHORT_565_RGB),
-                new MTLSwToSurfaceBlit(SurfaceType.Ushort555Rgb,
-                        MTLSurfaceData.PF_USHORT_555_RGB),
-                new MTLSwToSurfaceBlit(SurfaceType.Ushort555Rgbx,
-                        MTLSurfaceData.PF_USHORT_555_RGBX),
-                new MTLSwToSurfaceBlit(SurfaceType.ByteGray,
-                        MTLSurfaceData.PF_BYTE_GRAY),
-                new MTLSwToSurfaceBlit(SurfaceType.UshortGray,
-                        MTLSurfaceData.PF_USHORT_GRAY),
+// TODO: Provide native implementation
+// It may not be effective/possible. For example, there is no direct
+// support in Metal for SurfaceType.ThreeByteBgr
+//                new MTLSwToSurfaceBlit(SurfaceType.ThreeByteBgr,
+//                        MTLSurfaceData.PF_3BYTE_BGR),
+//                new MTLSwToSurfaceBlit(SurfaceType.Ushort565Rgb,
+//                        MTLSurfaceData.PF_USHORT_565_RGB),
+//                new MTLSwToSurfaceBlit(SurfaceType.Ushort555Rgb,
+//                        MTLSurfaceData.PF_USHORT_555_RGB),
+//                new MTLSwToSurfaceBlit(SurfaceType.Ushort555Rgbx,
+//                        MTLSurfaceData.PF_USHORT_555_RGBX),
+//                 new MTLSwToSurfaceBlit(SurfaceType.ByteGray,
+//                         MTLSurfaceData.PF_BYTE_GRAY),
+//                 new MTLSwToSurfaceBlit(SurfaceType.UshortGray,
+//                         MTLSurfaceData.PF_USHORT_GRAY),
                 new MTLGeneralBlit(MTLSurfaceData.MTLSurface,
                         CompositeType.AnyAlpha,
                         blitIntArgbPreToSurface),
 
                 new MTLAnyCompositeBlit(MTLSurfaceData.MTLSurface,
@@ -116,22 +119,23 @@
                         MTLSurfaceData.PF_INT_RGBX),
                 new MTLSwToSurfaceScale(SurfaceType.IntBgr,
                         MTLSurfaceData.PF_INT_BGR),
                 new MTLSwToSurfaceScale(SurfaceType.IntBgrx,
                         MTLSurfaceData.PF_INT_BGRX),
-                new MTLSwToSurfaceScale(SurfaceType.ThreeByteBgr,
-                        MTLSurfaceData.PF_3BYTE_BGR),
-                new MTLSwToSurfaceScale(SurfaceType.Ushort565Rgb,
-                        MTLSurfaceData.PF_USHORT_565_RGB),
-                new MTLSwToSurfaceScale(SurfaceType.Ushort555Rgb,
-                        MTLSurfaceData.PF_USHORT_555_RGB),
-                new MTLSwToSurfaceScale(SurfaceType.Ushort555Rgbx,
-                        MTLSurfaceData.PF_USHORT_555_RGBX),
-                new MTLSwToSurfaceScale(SurfaceType.ByteGray,
-                        MTLSurfaceData.PF_BYTE_GRAY),
-                new MTLSwToSurfaceScale(SurfaceType.UshortGray,
-                        MTLSurfaceData.PF_USHORT_GRAY),
+// TODO: Provide native implementation
+//                new MTLSwToSurfaceScale(SurfaceType.ThreeByteBgr,
+//                        MTLSurfaceData.PF_3BYTE_BGR),
+//                new MTLSwToSurfaceScale(SurfaceType.Ushort565Rgb,
+//                        MTLSurfaceData.PF_USHORT_565_RGB),
+//                new MTLSwToSurfaceScale(SurfaceType.Ushort555Rgb,
+//                        MTLSurfaceData.PF_USHORT_555_RGB),
+//                new MTLSwToSurfaceScale(SurfaceType.Ushort555Rgbx,
+//                        MTLSurfaceData.PF_USHORT_555_RGBX),
+//                 new MTLSwToSurfaceScale(SurfaceType.ByteGray,
+//                         MTLSurfaceData.PF_BYTE_GRAY),
+//                 new MTLSwToSurfaceScale(SurfaceType.UshortGray,
+//                         MTLSurfaceData.PF_USHORT_GRAY),
                 new MTLSwToSurfaceScale(SurfaceType.IntArgbPre,
                         MTLSurfaceData.PF_INT_ARGB_PRE),
 
                 new MTLSwToSurfaceTransform(SurfaceType.IntRgb,
                         MTLSurfaceData.PF_INT_RGB),
@@ -139,22 +143,23 @@
                         MTLSurfaceData.PF_INT_RGBX),
                 new MTLSwToSurfaceTransform(SurfaceType.IntBgr,
                         MTLSurfaceData.PF_INT_BGR),
                 new MTLSwToSurfaceTransform(SurfaceType.IntBgrx,
                         MTLSurfaceData.PF_INT_BGRX),
-                new MTLSwToSurfaceTransform(SurfaceType.ThreeByteBgr,
-                        MTLSurfaceData.PF_3BYTE_BGR),
-                new MTLSwToSurfaceTransform(SurfaceType.Ushort565Rgb,
-                        MTLSurfaceData.PF_USHORT_565_RGB),
-                new MTLSwToSurfaceTransform(SurfaceType.Ushort555Rgb,
-                        MTLSurfaceData.PF_USHORT_555_RGB),
-                new MTLSwToSurfaceTransform(SurfaceType.Ushort555Rgbx,
-                        MTLSurfaceData.PF_USHORT_555_RGBX),
-                new MTLSwToSurfaceTransform(SurfaceType.ByteGray,
-                        MTLSurfaceData.PF_BYTE_GRAY),
-                new MTLSwToSurfaceTransform(SurfaceType.UshortGray,
-                        MTLSurfaceData.PF_USHORT_GRAY),
+// TODO: Provide native implementation
+//                new MTLSwToSurfaceTransform(SurfaceType.ThreeByteBgr,
+//                        MTLSurfaceData.PF_3BYTE_BGR),
+//                new MTLSwToSurfaceTransform(SurfaceType.Ushort565Rgb,
+//                        MTLSurfaceData.PF_USHORT_565_RGB),
+//                new MTLSwToSurfaceTransform(SurfaceType.Ushort555Rgb,
+//                        MTLSurfaceData.PF_USHORT_555_RGB),
+//                new MTLSwToSurfaceTransform(SurfaceType.Ushort555Rgbx,
+//                        MTLSurfaceData.PF_USHORT_555_RGBX),
+//                 new MTLSwToSurfaceTransform(SurfaceType.ByteGray,
+//                         MTLSurfaceData.PF_BYTE_GRAY),
+//                 new MTLSwToSurfaceTransform(SurfaceType.UshortGray,
+//                         MTLSurfaceData.PF_USHORT_GRAY),
                 transformBlitIntArgbPreToSurface,
 
                 new MTLGeneralTransformedBlit(transformBlitIntArgbPreToSurface),
 
                 // texture->surface ops
@@ -170,22 +175,23 @@
                         MTLSurfaceData.PF_INT_RGBX),
                 new MTLSwToTextureBlit(SurfaceType.IntBgr,
                         MTLSurfaceData.PF_INT_BGR),
                 new MTLSwToTextureBlit(SurfaceType.IntBgrx,
                         MTLSurfaceData.PF_INT_BGRX),
-                new MTLSwToTextureBlit(SurfaceType.ThreeByteBgr,
-                        MTLSurfaceData.PF_3BYTE_BGR),
-                new MTLSwToTextureBlit(SurfaceType.Ushort565Rgb,
-                        MTLSurfaceData.PF_USHORT_565_RGB),
-                new MTLSwToTextureBlit(SurfaceType.Ushort555Rgb,
-                        MTLSurfaceData.PF_USHORT_555_RGB),
-                new MTLSwToTextureBlit(SurfaceType.Ushort555Rgbx,
-                        MTLSurfaceData.PF_USHORT_555_RGBX),
-                new MTLSwToTextureBlit(SurfaceType.ByteGray,
-                        MTLSurfaceData.PF_BYTE_GRAY),
-                new MTLSwToTextureBlit(SurfaceType.UshortGray,
-                        MTLSurfaceData.PF_USHORT_GRAY),
+// TODO: Provide native implementation
+//                new MTLSwToTextureBlit(SurfaceType.ThreeByteBgr,
+//                        MTLSurfaceData.PF_3BYTE_BGR),
+//                new MTLSwToTextureBlit(SurfaceType.Ushort565Rgb,
+//                        MTLSurfaceData.PF_USHORT_565_RGB),
+//                new MTLSwToTextureBlit(SurfaceType.Ushort555Rgb,
+//                        MTLSurfaceData.PF_USHORT_555_RGB),
+//                new MTLSwToTextureBlit(SurfaceType.Ushort555Rgbx,
+//                        MTLSurfaceData.PF_USHORT_555_RGBX),
+//                 new MTLSwToTextureBlit(SurfaceType.ByteGray,
+//                         MTLSurfaceData.PF_BYTE_GRAY),
+//                 new MTLSwToTextureBlit(SurfaceType.UshortGray,
+//                         MTLSurfaceData.PF_USHORT_GRAY),
                 new MTLGeneralBlit(MTLSurfaceData.MTLTexture,
                         CompositeType.SrcNoEa,
                         blitIntArgbPreToTexture),
         };
         GraphicsPrimitiveMgr.register(primitives);
