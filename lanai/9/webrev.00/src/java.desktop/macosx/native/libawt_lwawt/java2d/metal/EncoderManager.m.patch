diff a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/EncoderManager.m b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/EncoderManager.m
--- a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/EncoderManager.m
+++ b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/EncoderManager.m
@@ -14,11 +14,10 @@
 
 - (id)init;
 - (void)dealloc;
 
 - (void)reset:(id<MTLTexture>)destination
-                aaDest:(id<MTLTexture>)aaDestination
            isDstOpaque:(jboolean)isDstOpaque
     isDstPremultiplied:(jboolean)isDstPremultiplied
                   isAA:(jboolean)isAA;
 
 - (void)updateEncoder:(id<MTLRenderCommandEncoder>)encoder
@@ -37,11 +36,10 @@
     MTLPipelineStatesStorage * _pipelineStateStorage;
     id<MTLDevice> _device;
 
     // Persistent encoder properties
     id<MTLTexture> _destination;
-    id<MTLTexture> _aaDestination;
     SurfaceRasterFlags _dstFlags;
 
     //
     // Cached 'mutable' states of encoder
     //
@@ -67,11 +65,10 @@
 
 - (id)init {
     self = [super init];
     if (self) {
         _destination = nil;
-        _aaDestination = nil;
         _composite = [[MTLComposite alloc] init];
         _paint = [[MTLPaint alloc] init];
         _transform = [[MTLTransform alloc] init];
         _clip = [[MTLClip alloc] init];
     }
@@ -89,17 +86,14 @@
     self->_pipelineStateStorage = mtlc.pipelineStateStorage;
     self->_device = mtlc.device;
 }
 
 - (void)reset:(id<MTLTexture>)destination
-                aaDest:(id<MTLTexture>)aaDestination
            isDstOpaque:(jboolean)isDstOpaque
     isDstPremultiplied:(jboolean)isDstPremultiplied
-                  isAA:(jboolean)isAA
-{
+                  isAA:(jboolean)isAA {
     _destination = destination;
-    _aaDestination = aaDestination;
     _dstFlags.isOpaque = isDstOpaque;
     _dstFlags.isPremultiplied = isDstPremultiplied;
     _isAA = isAA;
     // NOTE: probably it's better to invalidate/reset all cached states now
 }
@@ -202,21 +196,14 @@
 
     if (!forceUpdate && [_clip isEqual:clip])
         return;
 
     [_clip copyFrom:clip];
-    if (_aaDestination != nil) {
-      [_clip setScissorOrStencil:encoder
-                       destWidth:_aaDestination.width
-                      destHeight:_aaDestination.height
-                          device:_device];
-    } else {
-      [_clip setScissorOrStencil:encoder
-                       destWidth:_destination.width
-                      destHeight:_destination.height
-                          device:_device];
-    }
+    [_clip setScissorOrStencil:encoder
+                     destWidth:_destination.width
+                    destHeight:_destination.height
+                        device:_device];
 }
 
 - (void)updateTransform:(id <MTLRenderCommandEncoder>)encoder
               transform:(MTLTransform *)transform
             forceUpdate:(jboolean)forceUpdate
@@ -224,20 +211,13 @@
     if (!forceUpdate
         && [_transform isEqual:transform])
         return;
 
     [_transform copyFrom:transform];
-    if (_aaDestination != nil) {
-      [_transform setVertexMatrix:encoder
-                        destWidth:_aaDestination.width
-                       destHeight:_aaDestination.height];
-    } else {
-      [_transform setVertexMatrix:encoder
+    [_transform setVertexMatrix:encoder
                         destWidth:_destination.width
                        destHeight:_destination.height];
-
-    }
 }
 
 @end
 
 @implementation EncoderManager {
@@ -415,11 +395,10 @@
     // tex=%p", dest);
     _encoder = [[cbw getCommandBuffer] renderCommandEncoderWithDescriptor:rpd];
     [rpd release];
 
     [_encoderStates reset:dest
-               aaDest:_aaDestination
                isDstOpaque:isOpaque
         isDstPremultiplied:YES
                       isAA:isAA];
   }
 
