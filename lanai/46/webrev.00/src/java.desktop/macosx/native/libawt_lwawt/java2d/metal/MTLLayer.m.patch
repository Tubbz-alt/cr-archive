diff a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLLayer.m b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLLayer.m
--- a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLLayer.m
+++ b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLLayer.m
@@ -27,23 +27,20 @@
 #import "MTLLayer.h"
 #import "ThreadUtilities.h"
 #import "LWCToolkit.h"
 #import "MTLSurfaceData.h"
 
-#import "MTLBlitLoops.h"
-
 @implementation MTLLayer
 
 
 @synthesize javaLayer;
 @synthesize ctx;
 @synthesize bufferWidth;
 @synthesize bufferHeight;
 @synthesize buffer;
 @synthesize mtlDrawable;
 @synthesize blitCommandBuf;
-@synthesize blitEncoder;
 @synthesize topInset;
 @synthesize leftInset;
 
 - (id) initWithJavaLayer:(JNFWeakJObjectWrapper *)layer
 {
@@ -75,16 +72,18 @@
     return self;
 }
 
 - (void) blitTexture {
     @autoreleasepool {
-        [self.blitEncoder
+        id <MTLBlitCommandEncoder> blitEncoder = [self.blitCommandBuf blitCommandEncoder];
+
+        [blitEncoder
                 copyFromTexture:self.buffer sourceSlice:0 sourceLevel:0
                 sourceOrigin:MTLOriginMake((jint)(self.leftInset*self.contentsScale), (jint)(self.topInset*self.contentsScale), 0)
                 sourceSize:MTLSizeMake(self.buffer.width, self.buffer.height, 1)
                 toTexture:self.mtlDrawable.texture destinationSlice:0 destinationLevel:0 destinationOrigin:MTLOriginMake(0, 0, 0)];
-        [self.blitEncoder endEncoding];
+        [blitEncoder endEncoding];
 
         [self.blitCommandBuf presentDrawable:self.mtlDrawable];
 
         [self.blitCommandBuf commit];
     }
@@ -124,16 +123,10 @@
     if (self.blitCommandBuf == nil) {
         J2dTraceLn(J2D_TRACE_VERBOSE, "MTLLayer.initBlit: nothing to do (commandBuf is null)");
         return;
     }
 
-    self.blitEncoder = [self.blitCommandBuf blitCommandEncoder];
-    if (self.blitEncoder == nil) {
-        J2dTraceLn(J2D_TRACE_VERBOSE, "MTLLayer.initBlit: blitEncoder is null)");
-        return;
-    }
-
     self.mtlDrawable = [self nextDrawable];
     if (self.mtlDrawable == nil) {
         J2dTraceLn(J2D_TRACE_VERBOSE, "MTLLayer.initBlit: nextDrawable is null)");
         return;
     }
