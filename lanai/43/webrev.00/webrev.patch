diff a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLBlitLoops.m b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLBlitLoops.m
--- a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLBlitLoops.m
+++ b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLBlitLoops.m
@@ -39,12 +39,14 @@
 #include <string.h> // memcpy
 #include "IntArgbPre.h"
 
 #import <Accelerate/Accelerate.h>
 
-//#define TRACE_ISOBLIT
-//#define TRACE_BLIT
+#ifdef DEBUG
+#define TRACE_ISOBLIT
+#define TRACE_BLIT
+#endif //DEBUG
 //#define DEBUG_ISOBLIT
 //#define DEBUG_BLIT
 
 typedef struct {
     MTLPixelFormat   format;
@@ -345,10 +347,12 @@
             dcy1 = dcy2;
         }
     }
     if (*dx2 <= dcx1 || *dx1 >= dcx2 || *dy2 <= dcy1 || *dy1 >= dcy2) {
         J2dTraceLn(J2D_TRACE_INFO, "\tclipDestCoords: dest rect doesn't intersect clip area");
+        J2dTraceLn4(J2D_TRACE_INFO, "\tdx2=%1.4f <= dcx1=%1.4f || *dx1=%1.4f >= dcx2=%1.4f", *dx2, dcx1, *dx1, dcx2);
+        J2dTraceLn4(J2D_TRACE_INFO, "\t*dy2=%1.4f <= dcy1=%1.4f || *dy1=%1.4f >= dcy2=%1.4f", *dy2, dcy1, *dy1, dcy2);
         return JNI_FALSE;
     }
     if (*dx1 < dcx1) {
         J2dTraceLn2(J2D_TRACE_VERBOSE, "\t\tdx1=%1.2f, will be clipped to %1.2f", *dx1, dcx1);
         *sx1 += (jint)((dcx1 - *dx1) * (sw/dw));
@@ -417,11 +421,11 @@
 #endif // DEBUG_ISOBLIT
 
     clipDestCoords(
             &dx1, &dy1, &dx2, &dy2,
             &sx1, &sy1, &sx2, &sy2,
-            dstTex.width, dstTex.height, [mtlc.clip getRect]
+            dstTex.width, dstTex.height, texture ? NULL : [mtlc.clip getRect]
     );
 
     SurfaceDataBounds bounds;
     bounds.x1 = sx1;
     bounds.y1 = sy1;
diff a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLContext.m b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLContext.m
--- a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLContext.m
+++ b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLContext.m
@@ -225,10 +225,11 @@
     J2dTraceLn(J2D_TRACE_INFO, "MTLContext.resetClip");
     [_clip reset];
 }
 
 - (void)setClipRectX1:(jint)x1 Y1:(jint)y1 X2:(jint)x2 Y2:(jint)y2 {
+    J2dTraceLn4(J2D_TRACE_INFO, "MTLContext.setClipRect: %d,%d - %d,%d", x1, y1, x2, y2);
     [_clip setClipRectX1:x1 Y1:y1 X2:x2 Y2:y2];
 }
 
 - (void)beginShapeClip:(BMTLSDOps *)dstOps {
     J2dTraceLn(J2D_TRACE_INFO, "MTLContext.beginShapeClip");
