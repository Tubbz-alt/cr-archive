diff a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/EncoderManager.h b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/EncoderManager.h
--- a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/EncoderManager.h
+++ b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/EncoderManager.h
@@ -38,31 +38,24 @@
 // returns encoder that renders/fills geometry with current composite and with given texture
 // (user must call [encoder setFragmentTexture] before any rendering)
 - (id<MTLRenderCommandEncoder> _Nonnull)getTextureEncoder:(const BMTLSDOps * _Nonnull)dstOps
                                       isSrcOpaque:(bool)isSrcOpaque;
 
-- (id<MTLRenderCommandEncoder> _Nonnull) getTextureEncoder:(id<MTLTexture> _Nonnull)dest
-                                               isSrcOpaque:(bool)isSrcOpaque
-                                               isDstOpaque:(bool)isDstOpaque;
-
 - (id<MTLRenderCommandEncoder> _Nonnull)getTextureEncoder:(id<MTLTexture> _Nonnull)dest
                                       isSrcOpaque:(bool)isSrcOpaque
-                                      isDstOpaque:(bool)isDstOpaque
-                                    interpolation:(int)interpolation;
+                                      isDstOpaque:(bool)isDstOpaque;
 
 - (id<MTLRenderCommandEncoder> _Nonnull)getTextureEncoder:(id<MTLTexture> _Nonnull)dest
                                               isSrcOpaque:(bool)isSrcOpaque
                                               isDstOpaque:(bool)isDstOpaque
-                                            interpolation:(int)interpolation
                                                      isAA:(jboolean)isAA;
 
 // Base method to obtain any MTLRenderCommandEncoder
 - (id<MTLRenderCommandEncoder> _Nonnull)
     getEncoder:(id<MTLTexture> _Nonnull)dest
       isOpaque:(jboolean)isOpaque
      isTexture:(jboolean)isTexture
- interpolation:(int)interpolation
           isAA:(jboolean)isAA
       srcFlags:(const SurfaceRasterFlags *_Nullable)srcFlags;
 
 - (id<MTLBlitCommandEncoder> _Nonnull)createBlitEncoder;
 
