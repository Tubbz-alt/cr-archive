diff a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLBlitLoops.m b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLBlitLoops.m
--- a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLBlitLoops.m
+++ b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLBlitLoops.m
@@ -56,11 +56,10 @@
 } MTLRasterFormatInfo;
 
 // 0 denotes the alpha channel, 1 the red channel, 2 the green channel, and 3 the blue channel.
 const uint8_t permuteMap_rgbx[4] = { 1, 2, 3, 0 };
 const uint8_t permuteMap_bgrx[4] = { 3, 2, 1, 0 };
-const uint8_t permuteMap_argb[4] = { 0, 1, 2, 3 };
 
 static uint8_t revertPerm(const uint8_t * perm, uint8_t pos) {
     for (int c = 0; c < 4; ++c) {
         if (perm[c] == pos)
             return c;
@@ -245,11 +244,11 @@
         dest = result;
 
     @autoreleasepool {
         id <MTLBlitCommandEncoder> blitEncoder = [mtlc.encoderManager createBlitEncoder];
 
-        J2dTraceLn4(J2D_TRACE_VERBOSE, "replaceTextureRegion scr (dw, dh) : [%d, %d] dest (dx1, dy1) =[%d, %d]",
+        J2dTraceLn4(J2D_TRACE_VERBOSE, "replaceTextureRegion src (dw, dh) : [%d, %d] dest (dx1, dy1) =[%d, %d]",
                     dw, dh, dx1, dy1);
 
         id <MTLBuffer> buff = [[mtlc.device newBufferWithBytes:raster length:srcInfo->scanStride * dh options:MTLResourceStorageModeManaged] autorelease];
         [blitEncoder copyFromBuffer:buff
                 sourceOffset:0 sourceBytesPerRow:srcInfo->scanStride sourceBytesPerImage:srcInfo->scanStride * dh sourceSize:MTLSizeMake(dw, dh, 1)
