diff a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLRenderQueue.m b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLRenderQueue.m
--- a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLRenderQueue.m
+++ b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLRenderQueue.m
@@ -418,12 +418,11 @@
             {
                 CHECK_PREVIOUS_OP(MTL_OP_OTHER);
                 jint x = NEXT_INT(b);
                 jint y = NEXT_INT(b);
                 CONTINUE_IF_NULL(mtlc);
-                //TODO
-                J2dTraceLn(J2D_TRACE_ERROR, "MTLRenderQueue_DRAW_PIXEL -- :TODO");
+                MTLRenderer_DrawPixel(mtlc, dstOps, x, y);
             }
             break;
         case sun_java2d_pipe_BufferedOpCodes_DRAW_SCANLINES:
             {
                 CHECK_PREVIOUS_OP(MTL_OP_OTHER);
diff a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLRenderer.h b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLRenderer.h
--- a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLRenderer.h
+++ b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLRenderer.h
@@ -38,10 +38,12 @@
 #define BYTES_PER_SPAN \
     sun_java2d_pipe_BufferedRenderPipe_BYTES_PER_SPAN
 
 void MTLRenderer_DrawLine(MTLContext *mtlc, BMTLSDOps * dstOps,
                           jint x1, jint y1, jint x2, jint y2);
+void MTLRenderer_DrawPixel(MTLContext *mtlc, BMTLSDOps * dstOps,
+                          jint x, jint y);
 void MTLRenderer_DrawRect(MTLContext *mtlc, BMTLSDOps * dstOps,
                           jint x, jint y, jint w, jint h);
 void MTLRenderer_DrawPoly(MTLContext *mtlc, BMTLSDOps * dstOps,
                           jint nPoints, jint isClosed,
                           jint transX, jint transY,
diff a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLRenderer.m b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLRenderer.m
--- a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLRenderer.m
+++ b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLRenderer.m
@@ -83,10 +83,32 @@
 
     [mtlEncoder setVertexBytes:verts length:sizeof(verts) atIndex:MeshVertexBuffer];
     [mtlEncoder drawPrimitives:MTLPrimitiveTypeLine vertexStart:0 vertexCount:2];
 }
 
+void MTLRenderer_DrawPixel(MTLContext *mtlc, BMTLSDOps * dstOps, jint x, jint y) {
+    if (mtlc == NULL || dstOps == NULL || dstOps->pTexture == NULL) {
+        J2dTraceLn(J2D_TRACE_ERROR, "MTLRenderer_DrawPixel: dest is null");
+        return;
+    }
+
+    id<MTLTexture> dest = dstOps->pTexture;
+    J2dTraceLn3(J2D_TRACE_INFO, "MTLRenderer_DrawPixel (x=%d y=%d), dst tex=%p", x, y, dest);
+
+    id<MTLRenderCommandEncoder> mtlEncoder = [mtlc.encoderManager getRenderEncoder:dstOps];
+    if (mtlEncoder == nil)
+        return;
+
+    // Translate each vertex by a fraction so
+    // that we hit pixel centers.
+    float fx = (float)x + 0.2f;
+    float fy = (float)y + 0.5f;
+    struct Vertex vert = {{fx, fy}};
+    [mtlEncoder setVertexBytes:&vert length:sizeof(vert) atIndex:MeshVertexBuffer];
+    [mtlEncoder drawPrimitives:MTLPrimitiveTypePoint vertexStart:0 vertexCount:1];
+}
+
 void MTLRenderer_DrawRect(MTLContext *mtlc, BMTLSDOps * dstOps, jint x, jint y, jint w, jint h) {
     if (mtlc == NULL || dstOps == NULL || dstOps->pTexture == NULL) {
         J2dTraceLn(J2D_TRACE_ERROR, "MTLRenderer_DrawRect: dest is null");
         return;
     }
