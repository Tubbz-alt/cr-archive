diff a/src/java.desktop/macosx/native/libawt_lwawt/java2d/opengl/CGLGraphicsConfig.h b/src/java.desktop/macosx/native/libawt_lwawt/java2d/opengl/CGLGraphicsConfig.h
--- a/src/java.desktop/macosx/native/libawt_lwawt/java2d/opengl/CGLGraphicsConfig.h
+++ b/src/java.desktop/macosx/native/libawt_lwawt/java2d/opengl/CGLGraphicsConfig.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2011, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2011, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -30,14 +30,10 @@
 #import "J2D_GL/gl.h"
 #import "OGLSurfaceData.h"
 #import "OGLContext.h"
 #import <Cocoa/Cocoa.h>
 
-@interface GraphicsConfigUtil : NSObject {}
-+ (void) _getCGLConfigInfo: (NSMutableArray *)argValue;
-@end
-
 // REMIND: Using an NSOpenGLPixelBuffer as the scratch surface has been
 // problematic thus far (seeing garbage and flickering when switching
 // between an NSView and the scratch surface), so the following enables
 // an alternate codepath that uses a hidden NSWindow/NSView as the scratch
 // surface, for the purposes of making a context current in certain
@@ -48,24 +44,16 @@
 /* Do we need this if we are using all off-screen drawing ? */
 #define USE_NSVIEW_FOR_SCRATCH 1
 
 /**
  * The CGLGraphicsConfigInfo structure contains information specific to a
- * given CGLGraphicsConfig (pixel format).
- *
- *     jint screen;
- * The screen and PixelFormat for the associated CGLGraphicsConfig.
- *
- *     NSOpenGLPixelFormat *pixfmt;
- * The pixel format of the native NSOpenGL context.
+ * given CGLGraphicsConfig.
  *
  *     OGLContext *context;
  * The context associated with this CGLGraphicsConfig.
  */
 typedef struct _CGLGraphicsConfigInfo {
-    jint                screen;
-    NSOpenGLPixelFormat *pixfmt;
     OGLContext          *context;
 } CGLGraphicsConfigInfo;
 
 /**
  * The CGLCtxInfo structure contains the native CGLContext information
