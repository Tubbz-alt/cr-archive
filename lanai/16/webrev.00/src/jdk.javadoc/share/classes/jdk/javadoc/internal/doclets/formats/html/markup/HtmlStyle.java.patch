diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/HtmlStyle.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/HtmlStyle.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/HtmlStyle.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/HtmlStyle.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2010, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2010, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -23,43 +23,49 @@
  * questions.
  */
 
 package jdk.javadoc.internal.doclets.formats.html.markup;
 
+import java.util.Locale;
+import java.util.regex.Pattern;
+
 /**
- * Enum representing HTML styles. The name map to values in the CSS file.
+ * Enum representing HTML styles, with associated entries in the stylesheet files.
  *
  *  <p><b>This is NOT part of any supported API.
  *  If you write code that depends on this, you do so at your own risk.
  *  This code and its internal interfaces are subject to change or
  *  deletion without notice.</b>
+ *
+ * @apiNote
+ * Despite the name, the members of this enum provide values for the HTML {@code class} attribute,
+ * and <strong>not</strong> the HTML {@code style} attribute.
+ * This is to avoid confusion with the widespread use of the word "class" in the Java ecosystem,
+ * and the potential for clashes with methods called {@code setClass} instead of {@code setStyle}.
+ *
+ * @see <a href="https://html.spec.whatwg.org/#classes>WhatWG: {@code class} attribute</a>
  */
 public enum HtmlStyle {
     aboutLanguage,
     activeTableTab,
-    allClassesContainer,
-    allPackagesContainer,
     altColor,
     annotations,
     arguments,
     block,
     blockList,
     bottomNav,
     circle,
-    classUseContainer,
     classUses,
     colConstructorName,
     colDeprecatedItemName,
     colFirst,
     colLast,
     colSecond,
     constantsSummary,
     constructorDetails,
     constructorSummary,
     constantDetails,
-    constantValuesContainer,
-    contentContainer,
     deprecatedLabel,
     deprecatedSummary,
     deprecationBlock,
     deprecationComment,
     description,
@@ -77,10 +83,11 @@
     header,
     helpSection,
     hierarchy,
     horizontal,
     implementationLabel,
+    index,
     inheritance,
     inheritedList,
     interfaceName,
     legalCopy,
     memberDetails,
@@ -99,54 +106,67 @@
     modulesSummary,
     nameValue,
     navBarCell1Rev,
     navList,
     navListSearch,
-    navPadding,
     nestedClassSummary,
-    overrideSpecifyLabel,
+    notes,
     overviewSummary,
     packages,
     packageDescription,
     packageHierarchyLabel,
     packageLabelInType,
     packagesSummary,
     packageUses,
-    paramLabel,
     propertyDetails,
     propertySummary,
     providesSummary,
     requiresSummary,
-    returnLabel,
     returnType,
     rowColor,
     searchTagLink,
     searchTagResult,
-    seeLabel,
-    serializedFormContainer,
     serializedPackageContainer,
     serializedClassDetails,
     servicesSummary,
-    simpleTagLabel,
     skipNav,
+    source,
     sourceContainer,
     sourceLineNo,
     subNav,
     subNavList,
     subTitle,
     summary,
-    systemPropertiesContainer,
     systemPropertiesSummary,
     tabEnd,
     tableTab,
-    throwsLabel,
     title,
     topNav,
     typeNameLabel,
     typeNameLink,
     typeParameters,
     typeParametersLong,
     typeSummary,
     useSummary,
     usesSummary,
-    verticalSeparator
+    verticalSeparator;
+
+    private final String cssName;
+
+    HtmlStyle() {
+        cssName = Pattern.compile("\\p{Upper}")
+                .matcher(toString())
+                .replaceAll(mr -> "-" + mr.group().toLowerCase(Locale.US));
+    }
+
+    HtmlStyle(String cssName) {
+        this.cssName = cssName;
+    }
+
+    /**
+     * Returns the CSS class name associated with this style.
+     * @return the CSS class name
+     */
+    public String cssName() {
+        return cssName;
+    }
 }
