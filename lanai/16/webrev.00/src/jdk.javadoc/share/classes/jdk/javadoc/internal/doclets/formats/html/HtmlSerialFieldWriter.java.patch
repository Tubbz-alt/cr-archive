diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlSerialFieldWriter.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlSerialFieldWriter.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlSerialFieldWriter.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlSerialFieldWriter.java
@@ -33,11 +33,11 @@
 
 import com.sun.source.doctree.DocTree;
 
 import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;
 import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;
-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTag;
+import jdk.javadoc.internal.doclets.formats.html.markup.TagName;
 import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;
 import jdk.javadoc.internal.doclets.formats.html.markup.RawHtml;
 import jdk.javadoc.internal.doclets.formats.html.markup.StringContent;
 import jdk.javadoc.internal.doclets.toolkit.Content;
 import jdk.javadoc.internal.doclets.toolkit.SerializedFormWriter;
@@ -70,11 +70,11 @@
      *
      * @return a content tree for the header
      */
     @Override
     public Content getSerializableFieldsHeader() {
-        HtmlTree ul = new HtmlTree(HtmlTag.UL);
+        HtmlTree ul = new HtmlTree(TagName.UL);
         ul.setStyle(HtmlStyle.blockList);
         return ul;
     }
 
     /**
@@ -83,11 +83,11 @@
      * @param isLastContent true if the content being documented is the last content.
      * @return a content tree for the header
      */
     @Override
     public Content getFieldsContentHeader(boolean isLastContent) {
-        HtmlTree li = new HtmlTree(HtmlTag.LI);
+        HtmlTree li = new HtmlTree(TagName.LI);
         li.setStyle(HtmlStyle.blockList);
         return li;
     }
 
     /**
@@ -114,11 +114,11 @@
     public void addMemberHeader(TypeElement fieldType, String fieldTypeStr,
             String fieldDimensions, String fieldName, Content contentTree) {
         Content nameContent = new StringContent(fieldName);
         Content heading = HtmlTree.HEADING(Headings.SerializedForm.MEMBER_HEADING, nameContent);
         contentTree.add(heading);
-        Content pre = new HtmlTree(HtmlTag.PRE);
+        Content pre = new HtmlTree(TagName.PRE);
         if (fieldType == null) {
             pre.add(fieldTypeStr);
         } else {
             Content fieldContent = writer.getLink(new LinkInfoImpl(
                     configuration, LinkInfoImpl.Kind.SERIAL_MEMBER, fieldType));
@@ -130,13 +130,13 @@
     }
 
     @Override
     public void addMemberHeader(TypeMirror fieldType, String fieldName, Content contentTree) {
         Content nameContent = new StringContent(fieldName);
-        Content heading = HtmlTree.HEADING(HtmlTag.H5, nameContent);
+        Content heading = HtmlTree.HEADING(TagName.H5, nameContent);
         contentTree.add(heading);
-        Content pre = new HtmlTree(HtmlTag.PRE);
+        Content pre = new HtmlTree(TagName.PRE);
         Content fieldContent = writer.getLink(new LinkInfoImpl(
                 configuration, LinkInfoImpl.Kind.SERIAL_MEMBER, fieldType));
         pre.add(fieldContent);
         pre.add(" ");
         pre.add(fieldName);
@@ -198,13 +198,13 @@
     public void addMemberTags(VariableElement field, Content contentTree) {
         Content tagContent = new ContentBuilder();
         TagletWriter.genTagOutput(configuration.tagletManager, field,
                 configuration.tagletManager.getBlockTaglets(field),
                 writer.getTagletWriterInstance(false), tagContent);
-        Content dlTags = new HtmlTree(HtmlTag.DL);
-        dlTags.add(tagContent);
-        contentTree.add(dlTags);  // TODO: what if empty?
+        HtmlTree dl = HtmlTree.DL(HtmlStyle.notes);
+        dl.add(tagContent);
+        contentTree.add(dl);  // TODO: what if empty?
     }
 
     /**
      * Check to see if overview details should be printed. If
      * nocomment option set or if there is no text to be printed
