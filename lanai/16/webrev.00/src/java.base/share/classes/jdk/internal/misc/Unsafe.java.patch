diff a/src/java.base/share/classes/jdk/internal/misc/Unsafe.java b/src/java.base/share/classes/jdk/internal/misc/Unsafe.java
--- a/src/java.base/share/classes/jdk/internal/misc/Unsafe.java
+++ b/src/java.base/share/classes/jdk/internal/misc/Unsafe.java
@@ -38,11 +38,11 @@
 /**
  * A collection of methods for performing low-level, unsafe operations.
  * Although the class and all methods are public, use of this class is
  * limited because only trusted code can obtain instances of it.
  *
- * <em>Note:</em> It is the resposibility of the caller to make sure
+ * <em>Note:</em> It is the responsibility of the caller to make sure
  * arguments are checked before methods of this class are
  * called. While some rudimentary checks are performed on the input,
  * the checks are best effort and when performance is an overriding
  * priority, as when methods of this class are optimized by the
  * runtime compiler, some or all checks (if any) may be elided. Hence,
@@ -423,11 +423,11 @@
     /// helper methods for validating various types of objects/values
 
     /**
      * Create an exception reflecting that some of the input was invalid
      *
-     * <em>Note:</em> It is the resposibility of the caller to make
+     * <em>Note:</em> It is the responsibility of the caller to make
      * sure arguments are checked before the methods are called. While
      * some rudimentary checks are performed on the input, the checks
      * are best effort and when performance is an overriding priority,
      * as when methods of this class are optimized by the runtime
      * compiler, some or all checks (if any) may be elided. Hence, the
@@ -599,11 +599,11 @@
      * contents of the memory are uninitialized; they will generally be
      * garbage.  The resulting native pointer will never be zero, and will be
      * aligned for all value types.  Dispose of this memory by calling {@link
      * #freeMemory}, or resize it with {@link #reallocateMemory}.
      *
-     * <em>Note:</em> It is the resposibility of the caller to make
+     * <em>Note:</em> It is the responsibility of the caller to make
      * sure arguments are checked before the methods are called. While
      * some rudimentary checks are performed on the input, the checks
      * are best effort and when performance is an overriding priority,
      * as when methods of this class are optimized by the runtime
      * compiler, some or all checks (if any) may be elided. Hence, the
@@ -655,11 +655,11 @@
      * resulting native pointer will be aligned for all value types.  Dispose
      * of this memory by calling {@link #freeMemory}, or resize it with {@link
      * #reallocateMemory}.  The address passed to this method may be null, in
      * which case an allocation will be performed.
      *
-     * <em>Note:</em> It is the resposibility of the caller to make
+     * <em>Note:</em> It is the responsibility of the caller to make
      * sure arguments are checked before the methods are called. While
      * some rudimentary checks are performed on the input, the checks
      * are best effort and when performance is an overriding priority,
      * as when methods of this class are optimized by the runtime
      * compiler, some or all checks (if any) may be elided. Hence, the
@@ -717,11 +717,11 @@
      * by the address and length parameters.  If the effective address and
      * length are all even modulo 8, the stores take place in 'long' units.
      * If the effective address and length are (resp.) even modulo 4 or 2,
      * the stores take place in units of 'int' or 'short'.
      *
-     * <em>Note:</em> It is the resposibility of the caller to make
+     * <em>Note:</em> It is the responsibility of the caller to make
      * sure arguments are checked before the methods are called. While
      * some rudimentary checks are performed on the input, the checks
      * are best effort and when performance is an overriding priority,
      * as when methods of this class are optimized by the runtime
      * compiler, some or all checks (if any) may be elided. Hence, the
@@ -779,11 +779,11 @@
      * by the address and length parameters.  If the effective addresses and
      * length are all even modulo 8, the transfer takes place in 'long' units.
      * If the effective addresses and length are (resp.) even modulo 4 or 2,
      * the transfer takes place in units of 'int' or 'short'.
      *
-     * <em>Note:</em> It is the resposibility of the caller to make
+     * <em>Note:</em> It is the responsibility of the caller to make
      * sure arguments are checked before the methods are called. While
      * some rudimentary checks are performed on the input, the checks
      * are best effort and when performance is an overriding priority,
      * as when methods of this class are optimized by the runtime
      * compiler, some or all checks (if any) may be elided. Hence, the
@@ -840,11 +840,11 @@
      * <p>This method determines each block's base address by means of two parameters,
      * and so it provides (in effect) a <em>double-register</em> addressing mode,
      * as discussed in {@link #getInt(Object,long)}.  When the object reference is null,
      * the offset supplies an absolute base address.
      *
-     * <em>Note:</em> It is the resposibility of the caller to make
+     * <em>Note:</em> It is the responsibility of the caller to make
      * sure arguments are checked before the methods are called. While
      * some rudimentary checks are performed on the input, the checks
      * are best effort and when performance is an overriding priority,
      * as when methods of this class are optimized by the runtime
      * compiler, some or all checks (if any) may be elided. Hence, the
@@ -899,11 +899,11 @@
     /**
      * Disposes of a block of native memory, as obtained from {@link
      * #allocateMemory} or {@link #reallocateMemory}.  The address passed to
      * this method may be null, in which case no action is taken.
      *
-     * <em>Note:</em> It is the resposibility of the caller to make
+     * <em>Note:</em> It is the responsibility of the caller to make
      * sure arguments are checked before the methods are called. While
      * some rudimentary checks are performed on the input, the checks
      * are best effort and when performance is an overriding priority,
      * as when methods of this class are optimized by the runtime
      * compiler, some or all checks (if any) may be elided. Hence, the
