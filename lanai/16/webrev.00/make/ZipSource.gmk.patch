diff a/make/ZipSource.gmk b/make/ZipSource.gmk
--- a/make/ZipSource.gmk
+++ b/make/ZipSource.gmk
@@ -1,7 +1,7 @@
 #
-# Copyright (c) 2014, 2019, Oracle and/or its affiliates. All rights reserved.
+# Copyright (c) 2014, 2020, Oracle and/or its affiliates. All rights reserved.
 # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 #
 # This code is free software; you can redistribute it and/or modify it
 # under the terms of the GNU General Public License version 2 only, as
 # published by the Free Software Foundation.  Oracle designates this
@@ -37,22 +37,16 @@
 
 ################################################################################
 # Create the directory structure for src.zip using symlinks.
 # <module>/<package>/<file>.java
 
-# Find extra source dirs for a module that are not part of normal compilation
-# but should be included in src.zip.
-# $1: Module to find dirs for
-ExtraSrcDirs = \
-    $(wildcard $(SUPPORT_OUTPUTDIR)/rmic/$(strip $1))
-
 ALL_MODULES := $(FindAllModules)
 
 # Generate the src dirs in the first make invocation and then call this makefile
 # again to create src.zip.
 $(foreach m, $(ALL_MODULES), \
-  $(foreach d, $(call FindModuleSrcDirs, $m) $(call ExtraSrcDirs, $m), \
+  $(foreach d, $(call FindModuleSrcDirs, $m), \
     $(eval $d_TARGET := $(SRC_ZIP_WORK_DIR)/$(patsubst $(TOPDIR)/%,%,$d)/$m) \
     $(if $(SRC_GENERATED), , \
       $(eval $$($d_TARGET): $d ; \
           $$(if $(filter $(TOPDIR)/%, $d), $$(link-file-relative), $$(link-file-absolute)) \
       ) \
