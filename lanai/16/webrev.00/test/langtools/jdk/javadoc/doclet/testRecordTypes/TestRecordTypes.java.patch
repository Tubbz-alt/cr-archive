diff a/test/langtools/jdk/javadoc/doclet/testRecordTypes/TestRecordTypes.java b/test/langtools/jdk/javadoc/doclet/testRecordTypes/TestRecordTypes.java
--- a/test/langtools/jdk/javadoc/doclet/testRecordTypes/TestRecordTypes.java
+++ b/test/langtools/jdk/javadoc/doclet/testRecordTypes/TestRecordTypes.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2019, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -21,11 +21,11 @@
  * questions.
  */
 
 /*
  * @test
- * @bug      8225055
+ * @bug      8225055 8239804
  * @summary  Record types
  * @library  /tools/lib ../../lib
  * @modules jdk.javadoc/jdk.javadoc.internal.tool
  * @build    toolbox.ToolBox javadoc.tester.*
  * @compile --enable-preview --source ${jdk.version} TestRecordTypes.java
@@ -73,12 +73,12 @@
                 src.resolve("R.java").toString());
         checkExit(Exit.OK);
 
         checkOutput("R.html", true,
                 "<h1 title=\"Record R\" class=\"title\">Record R</h1>",
-                "public record <span class=\"typeNameLabel\">R</span>",
-                "<code><span class=\"memberNameLink\"><a href=\"#%3Cinit%3E(int)\">R</a></span>&#8203;(int&nbsp;r1)</code>");
+                "public record <span class=\"type-name-label\">R</span>",
+                "<code><span class=\"member-name-link\"><a href=\"#%3Cinit%3E(int)\">R</a></span>&#8203;(int&nbsp;r1)</code>");
     }
 
     @Test
     public void testRecordKeywordNamedPackage(Path base) throws IOException {
         Path src = base.resolve("src");
@@ -92,12 +92,12 @@
                 "p");
         checkExit(Exit.OK);
 
         checkOutput("p/R.html", true,
                 "<h1 title=\"Record R\" class=\"title\">Record R</h1>",
-                "public record <span class=\"typeNameLabel\">R</span>",
-                "<code><span class=\"memberNameLink\"><a href=\"#%3Cinit%3E(int)\">R</a></span>&#8203;(int&nbsp;r1)</code>");
+                "public record <span class=\"type-name-label\">R</span>",
+                "<code><span class=\"member-name-link\"><a href=\"#%3Cinit%3E(int)\">R</a></span>&#8203;(int&nbsp;r1)</code>");
     }
 
     @Test
     public void testEmptyRecord(Path base) throws IOException {
         Path src = base.resolve("src");
@@ -111,12 +111,12 @@
                 "p");
         checkExit(Exit.OK);
 
         checkOutput("p/R.html", true,
                 "<h1 title=\"Record R\" class=\"title\">Record R</h1>",
-                "public record <span class=\"typeNameLabel\">R</span>",
-                "<code><span class=\"memberNameLink\"><a href=\"#%3Cinit%3E()\">R</a></span>()</code>");
+                "public record <span class=\"type-name-label\">R</span>",
+                "<code><span class=\"member-name-link\"><a href=\"#%3Cinit%3E()\">R</a></span>()</code>");
     }
 
     @Test
     public void testAtParam(Path base) throws IOException {
         Path src = base.resolve("src");
@@ -133,16 +133,16 @@
                 "p");
         checkExit(Exit.OK);
 
         checkOutput("p/R.html", true,
                 "<h1 title=\"Record R\" class=\"title\">Record R</h1>",
-                "public record <span class=\"typeNameLabel\">R</span>",
-                "<dl>\n"
-                + "<dt><span class=\"paramLabel\">Record Components:</span></dt>\n"
+                "public record <span class=\"type-name-label\">R</span>",
+                "<dl class=\"notes\">\n"
+                + "<dt>Record Components:</dt>\n"
                 + "<dd><code><span id=\"param-r1\">r1</span></code> - This is a component.</dd>\n"
                 + "</dl>",
-                "<code><span class=\"memberNameLink\"><a href=\"#%3Cinit%3E(int)\">R</a></span>&#8203;(int&nbsp;r1)</code>");
+                "<code><span class=\"member-name-link\"><a href=\"#%3Cinit%3E(int)\">R</a></span>&#8203;(int&nbsp;r1)</code>");
     }
 
     @Test
     public void testAtParamTyParam(Path base) throws IOException {
         Path src = base.resolve("src");
@@ -160,18 +160,18 @@
                 "p");
         checkExit(Exit.OK);
 
         checkOutput("p/R.html", true,
                 "<h1 title=\"Record R\" class=\"title\">Record R&lt;T&gt;</h1>",
-                "public record <span class=\"typeNameLabel\">R&lt;T&gt;</span>",
-                "<dl>\n"
-                + "<dt><span class=\"paramLabel\">Type Parameters:</span></dt>\n"
+                "public record <span class=\"type-name-label\">R&lt;T&gt;</span>",
+                "<dl class=\"notes\">\n"
+                + "<dt>Type Parameters:</dt>\n"
                 + "<dd><code>T</code> - This is a type parameter.</dd>\n"
-                + "<dt><span class=\"paramLabel\">Record Components:</span></dt>\n"
+                + "<dt>Record Components:</dt>\n"
                 + "<dd><code><span id=\"param-r1\">r1</span></code> - This is a component.</dd>\n"
                 + "</dl>",
-                "<code><span class=\"memberNameLink\"><a href=\"#%3Cinit%3E(int)\">R</a></span>&#8203;(int&nbsp;r1)</code>");
+                "<code><span class=\"member-name-link\"><a href=\"#%3Cinit%3E(int)\">R</a></span>&#8203;(int&nbsp;r1)</code>");
     }
 
     @Test
     public void testGeneratedComments(Path base) throws IOException {
         Path src = base.resolve("src");
@@ -190,36 +190,36 @@
 
         // While we don't normally test values that just come from resource files,
         // in these cases, we want to verify that something non-empty was put into
         // the documentation for the generated members.
         checkOrder("p/R.html",
-                "<section class=\"constructorSummary\" id=\"constructor.summary\">",
+                "<section class=\"constructor-summary\" id=\"constructor.summary\">",
                 "<a href=\"#%3Cinit%3E(int)\">R</a>",
                 "Creates an instance of a <code>R</code> record.",
-                "<section class=\"methodSummary\" id=\"method.summary\">",
+                "<section class=\"method-summary\" id=\"method.summary\">",
                 "<a href=\"#equals(java.lang.Object)\">equals</a>",
                 "Indicates whether some other object is \"equal to\" this one.",
                 "<a href=\"#hashCode()\">hashCode</a>",
                 "Returns a hash code value for this object.",
                 "<a href=\"#r1()\">r1</a>",
                 "Returns the value of the <a href=\"#param-r1\"><code>r1</code></a> record component.",
                 "<a href=\"#toString()\">toString</a>",
                 "Returns a string representation of this record.",
                 "Method Details",
-                "<span class=\"memberName\">toString</span>",
+                "<span class=\"member-name\">toString</span>",
                 "Returns a string representation of this record. The representation "
                 + "contains the name of the type, followed by the name and value of "
                 + "each of the record components.",
-                "<span class=\"memberName\">hashCode</span>",
+                "<span class=\"member-name\">hashCode</span>",
                 "Returns a hash code value for this object. The value is derived "
                 + "from the hash code of each of the record components.",
-                "<span class=\"memberName\">equals</span>",
+                "<span class=\"member-name\">equals</span>",
                 "Indicates whether some other object is \"equal to\" this one. "
                 + "The objects are equal if the other object is of the same class "
                 + "and if all the record components are equal. All components "
                 + "in this record are compared with '=='.",
-                "<span class=\"memberName\">r1</span>",
+                "<span class=\"member-name\">r1</span>",
                 "Returns the value of the <a href=\"#param-r1\"><code>r1</code></a> "
                 + "record component."
         );
     }
 
@@ -242,36 +242,36 @@
 
         // While we don't normally test values that just come from resource files,
         // in these cases, we want to verify that something non-empty was put into
         // the documentation for the generated members.
         checkOrder("p/R.html",
-                "<section class=\"constructorSummary\" id=\"constructor.summary\">",
+                "<section class=\"constructor-summary\" id=\"constructor.summary\">",
                 "<a href=\"#%3Cinit%3E(int)\">R</a>",
                 "Creates an instance of a <code>R</code> record.",
-                "<section class=\"methodSummary\" id=\"method.summary\">",
+                "<section class=\"method-summary\" id=\"method.summary\">",
                 "<a href=\"#equals(java.lang.Object)\">equals</a>",
                 "Indicates whether some other object is \"equal to\" this one.",
                 "<a href=\"#hashCode()\">hashCode</a>",
                 "Returns a hash code value for this object.",
                 "<a href=\"#r1()\">r1</a>",
                 "Returns the value of the <a href=\"#param-r1\"><code>r1</code></a> record component.",
                 "<a href=\"#toString()\">toString</a>",
                 "Returns a string representation of this record.",
                 "Method Details",
-                "<span class=\"memberName\">toString</span>",
+                "<span class=\"member-name\">toString</span>",
                 "Returns a string representation of this record. The representation "
                 + "contains the name of the type, followed by the name and value of "
                 + "each of the record components.",
-                "<span class=\"memberName\">hashCode</span>",
+                "<span class=\"member-name\">hashCode</span>",
                 "Returns a hash code value for this object. The value is derived "
                 + "from the hash code of each of the record components.",
-                "<span class=\"memberName\">equals</span>",
+                "<span class=\"member-name\">equals</span>",
                 "Indicates whether some other object is \"equal to\" this one. "
                 + "The objects are equal if the other object is of the same class "
                 + "and if all the record components are equal. All components "
                 + "in this record are compared with '=='.",
-                "<span class=\"memberName\">r1</span>",
+                "<span class=\"member-name\">r1</span>",
                 "Returns the value of the <a href=\"#param-r1\"><code>r1</code></a> "
                 + "record component."
         );
     }
 
@@ -332,14 +332,14 @@
                 "--enable-preview", "--source", thisRelease,
                 "p");
         checkExit(Exit.OK);
 
         checkOrder("p/R.html",
-                "<section class=\"constructorSummary\" id=\"constructor.summary\">",
+                "<section class=\"constructor-summary\" id=\"constructor.summary\">",
                 "<a href=\"#%3Cinit%3E(int)\">R</a>",
                 "User constructor.",
-                "<section class=\"methodSummary\" id=\"method.summary\">",
+                "<section class=\"method-summary\" id=\"method.summary\">",
                 "<a href=\"#equals(java.lang.Object)\">equals</a>",
                 "User equals.",
                 "<a href=\"#hashCode()\">hashCode</a>",
                 "User hashCode.",
                 "<a href=\"#r1()\">r1</a>",
@@ -425,24 +425,24 @@
         String fAnno = t.contains(ElementType.FIELD) ? "<span class=\"annotations\">" + anno + "\n</span>" : "";
         String pAnno = t.contains(ElementType.PARAMETER) ? anno + "\n" : "";
         String mAnno= t.contains(ElementType.METHOD) ? "<span class=\"annotations\">" + anno + "\n</span>" : "";
 
         checkOutput("p/R.html", true,
-                "<pre>public record <span class=\"typeNameLabel\">R</span>("
+                "<pre>public record <span class=\"type-name-label\">R</span>("
                         + rcAnno
                         + "int&nbsp;i)\n" +
                         "extends java.lang.Record</pre>",
-                "<div class=\"memberSignature\">"
+                "<div class=\"member-signature\">"
                         + fAnno
-                        + "<span class=\"modifiers\">private final</span>&nbsp;<span class=\"returnType\">int</span>"
-                        + "&nbsp;<span class=\"memberName\">i</span></div>",
-                "<div class=\"memberSignature\"><span class=\"modifiers\">public</span>&nbsp;<span class=\"memberName\">R</span>"
+                        + "<span class=\"modifiers\">private final</span>&nbsp;<span class=\"return-type\">int</span>"
+                        + "&nbsp;<span class=\"member-name\">i</span></div>",
+                "<div class=\"member-signature\"><span class=\"modifiers\">public</span>&nbsp;<span class=\"member-name\">R</span>"
                         + "&#8203;(<span class=\"arguments\">"
                         + pAnno
                         + "int&nbsp;i)</span></div>",
-                "<div class=\"memberSignature\">"
+                "<div class=\"member-signature\">"
                         + mAnno
-                        + "<span class=\"modifiers\">public</span>&nbsp;<span class=\"returnType\">int</span>"
-                        + "&nbsp;<span class=\"memberName\">i</span>()</div>");
+                        + "<span class=\"modifiers\">public</span>&nbsp;<span class=\"return-type\">int</span>"
+                        + "&nbsp;<span class=\"member-name\">i</span>()</div>");
 
     }
 }
