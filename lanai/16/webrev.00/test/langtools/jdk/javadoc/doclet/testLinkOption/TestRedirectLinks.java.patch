diff a/test/langtools/jdk/javadoc/doclet/testLinkOption/TestRedirectLinks.java b/test/langtools/jdk/javadoc/doclet/testLinkOption/TestRedirectLinks.java
--- a/test/langtools/jdk/javadoc/doclet/testLinkOption/TestRedirectLinks.java
+++ b/test/langtools/jdk/javadoc/doclet/testLinkOption/TestRedirectLinks.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2002, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2002, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -120,15 +120,15 @@
                 "-sourcepath", testSrc,
                 "-link", apiURL,
                 "pkg");
         checkExit(Exit.OK);
         checkOutput("pkg/B.html", true,
-                "<a href=\"" + apiURL + "/java.base/java/lang/String.html?is-external=true\" "
-                        + "title=\"class or interface in java.lang\" class=\"externalLink\">Link-Plain to String Class</a>");
+                "<a href=\"" + apiURL + "/java.base/java/lang/String.html\" "
+                        + "title=\"class or interface in java.lang\" class=\"external-link\">Link-Plain to String Class</a>");
         checkOutput("pkg/C.html", true,
-                "<a href=\"" + apiURL + "/java.base/java/lang/Object.html?is-external=true\" "
-                        + "title=\"class or interface in java.lang\" class=\"externalLink\">Object</a>");
+                "<a href=\"" + apiURL + "/java.base/java/lang/Object.html\" "
+                        + "title=\"class or interface in java.lang\" class=\"external-link\">Object</a>");
     }
 
     private Path libApi = Path.of("libApi");
     private HttpServer oldServer = null;
     private HttpsServer newServer = null;
@@ -214,15 +214,15 @@
             // 3: The original URL is still used in the generated docs, to avoid assuming
             //    that all the other files at that link have been redirected as well.
             checkOutput(Output.OUT, true,
                     "javadoc: warning - URL " + oldURL + "/element-list was redirected to " + newURL + "/element-list");
             checkOutput("mC/p5/C5.html", true,
-                    "extends <a href=\"" + oldURL + "/mA/p1/C1.html?is-external=true\" " +
-                            "title=\"class or interface in p1\" class=\"externalLink\">C1</a>");
+                    "extends <a href=\"" + oldURL + "/mA/p1/C1.html\" " +
+                            "title=\"class or interface in p1\" class=\"external-link\">C1</a>");
             checkOutput("mC/p6/C6.html", true,
-                    "<a href=\"" + oldURL + "/mB/p4/C4.html?is-external=true\" " +
-                            "title=\"class or interface in p4\" class=\"externalLink\">C4</a>");
+                    "<a href=\"" + oldURL + "/mB/p4/C4.html\" " +
+                            "title=\"class or interface in p4\" class=\"external-link\">C4</a>");
         } finally {
             if (oldServer != null) {
                 out.println("Stopping old server on " + oldServer.getAddress());
                 oldServer.stop(0);
             }
