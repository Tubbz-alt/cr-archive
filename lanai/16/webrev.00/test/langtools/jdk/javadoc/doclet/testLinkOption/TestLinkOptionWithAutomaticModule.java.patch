diff a/test/langtools/jdk/javadoc/doclet/testLinkOption/TestLinkOptionWithAutomaticModule.java b/test/langtools/jdk/javadoc/doclet/testLinkOption/TestLinkOptionWithAutomaticModule.java
--- a/test/langtools/jdk/javadoc/doclet/testLinkOption/TestLinkOptionWithAutomaticModule.java
+++ b/test/langtools/jdk/javadoc/doclet/testLinkOption/TestLinkOptionWithAutomaticModule.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2019, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -101,12 +101,12 @@
                 "--module-path", libJar.toString(),
                 "-linkoffline", "http://myWebsite", libAPI.toAbsolutePath().toString(),
                 "p");
         checkExit(Exit.OK);
         checkOutput("p/MyClass.html", true,
-                "extends <a href=\"http://myWebsite/lib/LibClass.html?is-external=true\" "
-                + "title=\"class or interface in lib\" class=\"externalLink\">LibClass</a>");
+                "extends <a href=\"http://myWebsite/lib/LibClass.html\" "
+                + "title=\"class or interface in lib\" class=\"external-link\">LibClass</a>");
     }
 
     @Test
     public void testLinkNamedToAutomaticModule(Path base) throws IOException {
 
@@ -125,12 +125,12 @@
                 "--module-path", libJar.toString(),
                 "-linkoffline", "http://myWebsite", libAPI.toAbsolutePath().toString(),
                 "--module", "my.module");
         checkExit(Exit.OK);
         checkOutput("my.module/p/MyClass.html", true,
-                "extends <a href=\"http://myWebsite/lib/LibClass.html?is-external=true\" "
-                + "title=\"class or interface in lib\" class=\"externalLink\">LibClass</a>");
+                "extends <a href=\"http://myWebsite/lib/LibClass.html\" "
+                + "title=\"class or interface in lib\" class=\"external-link\">LibClass</a>");
     }
 
     @Test
     public void testLinkNamedToUnnamedModule(Path base) throws IOException {
 
@@ -149,9 +149,9 @@
                 "--class-path", libJar.toString(),
                 "-linkoffline", "http://myWebsite", libAPI.toAbsolutePath().toString(),
                 "--module", "my.module");
         checkExit(Exit.OK);
         checkOutput("my.module/p/MyClass.html", true,
-                "extends <a href=\"http://myWebsite/lib/LibClass.html?is-external=true\" "
-                + "title=\"class or interface in lib\" class=\"externalLink\">LibClass</a>");
+                "extends <a href=\"http://myWebsite/lib/LibClass.html\" "
+                + "title=\"class or interface in lib\" class=\"external-link\">LibClass</a>");
     }
 }
