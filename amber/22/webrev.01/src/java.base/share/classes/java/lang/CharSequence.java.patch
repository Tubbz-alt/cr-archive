diff a/src/java.base/share/classes/java/lang/CharSequence.java b/src/java.base/share/classes/java/lang/CharSequence.java
--- a/src/java.base/share/classes/java/lang/CharSequence.java
+++ b/src/java.base/share/classes/java/lang/CharSequence.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -85,10 +85,25 @@
      *          if the {@code index} argument is negative or not less than
      *          {@code length()}
      */
     char charAt(int index);
 
+    /**
+     * Returns {@code true} if this character sequence is empty.
+     *
+     * @implSpec
+     * The default implementation returns the result of calling {@code length() == 0}.
+     *
+     * @return {@code true} if {@link #length()} is {@code 0}, otherwise
+     * {@code false}
+     *
+     * @since 15
+     */
+    default boolean isEmpty() {
+        return this.length() == 0;
+    }
+
     /**
      * Returns a {@code CharSequence} that is a subsequence of this sequence.
      * The subsequence starts with the {@code char} value at the specified index and
      * ends with the {@code char} value at index {@code end - 1}.  The length
      * (in {@code char}s) of the
