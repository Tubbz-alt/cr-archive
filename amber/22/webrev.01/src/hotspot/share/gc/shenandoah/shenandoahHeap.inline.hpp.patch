diff a/src/hotspot/share/gc/shenandoah/shenandoahHeap.inline.hpp b/src/hotspot/share/gc/shenandoah/shenandoahHeap.inline.hpp
--- a/src/hotspot/share/gc/shenandoah/shenandoahHeap.inline.hpp
+++ b/src/hotspot/share/gc/shenandoah/shenandoahHeap.inline.hpp
@@ -83,10 +83,18 @@
   ShenandoahHeapRegion* const result = get_region(index);
   assert(addr >= result->bottom() && addr < result->end(), "Heap region contains the address: " PTR_FORMAT, p2i(addr));
   return result;
 }
 
+inline void ShenandoahHeap::enter_evacuation(Thread* t) {
+  _oom_evac_handler.enter_evacuation(t);
+}
+
+inline void ShenandoahHeap::leave_evacuation(Thread* t) {
+  _oom_evac_handler.leave_evacuation(t);
+}
+
 template <class T>
 inline oop ShenandoahHeap::update_with_forwarded_not_null(T* p, oop obj) {
   if (in_collection_set(obj)) {
     shenandoah_assert_forwarded_except(p, obj, is_full_gc_in_progress() || cancelled_gc() || is_degenerated_gc_in_progress());
     obj = ShenandoahBarrierSet::resolve_forwarded_not_null(obj);
