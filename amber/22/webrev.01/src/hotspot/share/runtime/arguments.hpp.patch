diff a/src/hotspot/share/runtime/arguments.hpp b/src/hotspot/share/runtime/arguments.hpp
--- a/src/hotspot/share/runtime/arguments.hpp
+++ b/src/hotspot/share/runtime/arguments.hpp
@@ -118,10 +118,15 @@
     if (writeable()) {
       return set_value(value);
     }
     return false;
   }
+  void append_writeable_value(const char *value) {
+    if (writeable()) {
+      append_value(value);
+    }
+  }
 
   // Constructor
   SystemProperty(const char* key, const char* value, bool writeable, bool internal = false);
 };
 
@@ -387,12 +392,15 @@
 
   // System properties
   static bool add_property(const char* prop, PropertyWriteable writeable=WriteableProperty,
                            PropertyInternal internal=ExternalProperty);
 
-  static bool create_property(const char* prop_name, const char* prop_value, PropertyInternal internal);
-  static bool create_numbered_property(const char* prop_base_name, const char* prop_value, unsigned int count);
+  // Used for module system related properties: converted from command-line flags.
+  // Basic properties are writeable as they operate as "last one wins" and will get overwritten.
+  // Numbered properties are never writeable, and always internal.
+  static bool create_module_property(const char* prop_name, const char* prop_value, PropertyInternal internal);
+  static bool create_numbered_module_property(const char* prop_base_name, const char* prop_value, unsigned int count);
 
   static int process_patch_mod_option(const char* patch_mod_tail, bool* patch_mod_javabase);
 
   // Aggressive optimization flags.
   static jint set_aggressive_opts_flags();
