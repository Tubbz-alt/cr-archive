diff a/make/data/jdwp/jdwp.spec b/make/data/jdwp/jdwp.spec
--- a/make/data/jdwp/jdwp.spec
+++ b/make/data/jdwp/jdwp.spec
@@ -459,13 +459,26 @@
         "All breakpoints in the redefined classes are cleared."
         "If resetting of stack frames is desired, the "
         "<a href=\"#JDWP_StackFrame_PopFrames\">PopFrames</a> command can be used "
         "to pop frames with obsolete methods."
         "<p>"
+<<<<<<< HEAD
         "Unless the canUnrestrictedlyRedefineClasses capability is present "
         "the redefinition must follow the restrictions described in "
         "<a href=\"../jvmti.html#RedefineClasses\">JVM TI RedefineClasses</a>."
+=======
+        "Unless the canUnrestrictedlyRedefineClasses capability is present the following "
+        "redefinitions are restricted: "
+        "<ul>"
+        "<li>changing the schema (the fields)</li>"
+        "<li>changing the hierarchy (superclasses, interfaces)</li>"
+        "<li>deleting a method</li>"
+        "<li>changing class modifiers</li>"
+        "<li>changing method modifiers</li>"
+        "<li>changing the <code>NestHost</code>, <code>NestMembers</code>, <code>PermittedSubclasses</code>, or <code>Record</code> class attributes</li>"
+        "</ul>"
+>>>>>>> 926ea22b56c80bf0e4ce5f1d92bc1d31ac91e978
         "<p>"
         "Requires canRedefineClasses capability - see "
         "<a href=\"#JDWP_VirtualMachine_CapabilitiesNew\">CapabilitiesNew</a>. "
         "In addition to the canRedefineClasses capability, the target VM must "
         "have the canAddMethod capability to add methods when redefining classes, "
@@ -3158,12 +3171,12 @@
                                           "different modifiers "
                                           "than its counterpart in the old class version and "
                                           "canUnrestrictedlyRedefineClasses is false.")
     (Constant CLASS_ATTRIBUTE_CHANGE_NOT_IMPLEMENTED
                                      =72  "The new class version has a different NestHost, "
-                                          "NestMembers, or Record class attribute and "
-                                          "canUnrestrictedlyRedefineClasses is false.")
+                                          "NestMembers, PermittedSubclasses, or Record class attribute "
+                                          "and canUnrestrictedlyRedefineClasses is false.")
     (Constant NOT_IMPLEMENTED        =99  "The functionality is not implemented in "
                                           "this virtual machine.")
     (Constant NULL_POINTER           =100 "Invalid pointer.")
     (Constant ABSENT_INFORMATION     =101 "Desired information is not available.")
     (Constant INVALID_EVENT_TYPE     =102 "The specified event type id is not recognized.")
diff a/src/java.instrument/share/classes/java/lang/instrument/Instrumentation.java b/src/java.instrument/share/classes/java/lang/instrument/Instrumentation.java
--- a/src/java.instrument/share/classes/java/lang/instrument/Instrumentation.java
+++ b/src/java.instrument/share/classes/java/lang/instrument/Instrumentation.java
@@ -220,12 +220,22 @@
      *
      * <P>
      * Instances of the retransformed class are not affected.
      *
      * <P>
+<<<<<<< HEAD
      * The supported class file changes are described in
      * <a href="{@docRoot}/../specs/jvmti.html#RetransformClasses">JVM TI RetransformClasses</a>.
+=======
+     * The retransformation may change method bodies, the constant pool and
+     * attributes (unless explicitly prohibited).
+     * The retransformation must not add, remove or rename fields or methods, change the
+     * signatures of methods, or change inheritance.
+     * The retransformation must not change the <code>NestHost</code>, <code>NestMembers</code>,
+     * <code>PermittedSubclasses</code>, or <code>Record</code> attributes.
+     * These restrictions may be lifted in future versions.
+>>>>>>> 926ea22b56c80bf0e4ce5f1d92bc1d31ac91e978
      * The class file bytes are not checked, verified and installed
      * until after the transformations have been applied, if the resultant bytes are in
      * error this method will throw an exception.
      *
      * <P>
@@ -306,12 +316,22 @@
      *
      * <P>
      * Instances of the redefined class are not affected.
      *
      * <P>
+<<<<<<< HEAD
      * The supported class file changes are described in
      * <a href="{@docRoot}/../specs/jvmti.html#RedefineClasses">JVM TI RedefineClasses</a>.
+=======
+     * The redefinition may change method bodies, the constant pool and attributes
+     * (unless explicitly prohibited).
+     * The redefinition must not add, remove or rename fields or methods, change the
+     * signatures of methods, or change inheritance.
+     * The redefinition must not change the <code>NestHost</code>, <code>NestMembers</code>,
+     * <code>PermittedSubclasses</code>, or <code>Record</code> attributes.
+     * These restrictions may be lifted in future versions.
+>>>>>>> 926ea22b56c80bf0e4ce5f1d92bc1d31ac91e978
      * The class file bytes are not checked, verified and installed
      * until after the transformations have been applied, if the resultant bytes are in
      * error this method will throw an exception.
      *
      * <P>
diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/HtmlStyle.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/HtmlStyle.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/HtmlStyle.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/HtmlStyle.java
@@ -75,10 +75,18 @@
     memberNameLink,
     nameValue,
     packages,
     packageHierarchyLabel,
     packageUses,
+<<<<<<< HEAD
+=======
+    permitsNote,
+    propertyDetails,
+    propertySummary,
+    providesSummary,
+    requiresSummary,
+>>>>>>> 926ea22b56c80bf0e4ce5f1d92bc1d31ac91e978
     searchTagLink,
     searchTagResult,
     serializedPackageContainer,
     sourceContainer,
     sourceLineNo,
diff a/src/jdk.jdi/share/classes/com/sun/jdi/VirtualMachine.java b/src/jdk.jdi/share/classes/com/sun/jdi/VirtualMachine.java
--- a/src/jdk.jdi/share/classes/com/sun/jdi/VirtualMachine.java
+++ b/src/jdk.jdi/share/classes/com/sun/jdi/VirtualMachine.java
@@ -212,13 +212,27 @@
      * is false any call of this method will throw this exception.
      * <LI>If {@link #canAddMethod() canAddMethod()} is false
      * attempting to add a method will throw this exception.
      * <LI>If {@link #canUnrestrictedlyRedefineClasses()
      *            canUnrestrictedlyRedefineClasses()}
+<<<<<<< HEAD
      * is false attempting any of the unsupported class file changes described
      * in <a href="{@docRoot}/../specs/jvmti.html#RedefineClasses">
      * JVM TI RedefineClasses</a> will throw this exception.
+=======
+     * is false, attempting any of the following will throw
+     * this exception
+     *   <UL>
+     *   <LI>changing the schema (the fields)
+     *   <LI>changing the hierarchy (superclasses, interfaces)
+     *   <LI>deleting a method
+     *   <LI>changing class modifiers
+     *   <LI>changing method modifiers
+     *   <LI>changing the {@code NestHost}, {@code NestMembers}, {@code PermittedSubclasses}, or {@code Record} class attributes
+     *   </UL>
+     * </UL>
+>>>>>>> 926ea22b56c80bf0e4ce5f1d92bc1d31ac91e978
      *
      * @throws java.lang.NoClassDefFoundError if the bytes
      * don't correspond to the reference type (the names
      * don't match).
      *
