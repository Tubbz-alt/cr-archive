diff a/test/hotspot/jtreg/compiler/intrinsics/bmi/BMITestRunner.java b/test/hotspot/jtreg/compiler/intrinsics/bmi/BMITestRunner.java
--- a/test/hotspot/jtreg/compiler/intrinsics/bmi/BMITestRunner.java
+++ b/test/hotspot/jtreg/compiler/intrinsics/bmi/BMITestRunner.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2014, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2014, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -57,13 +57,10 @@
      * To control behaviour of test following options could be passed:
      * <ul>
      *   <li>-iterations=&lt;N&gt; each operation implemented by
      *       <b>expr</b> will be executed <i>N</i> times. Default value
      *       is 4000.</li>
-     *   <li>-seed=&lt;SEED&gt; arguments for <b>expr</b>'s methods
-     *       obtained via RNG initiated with seed <i>SEED</i>. By default
-     *       some random seed will be used.</li>
      * </ul>
      *
      * @param expr operation that should be tested
      * @param testOpts options to control test behaviour
      * @param additionalVMOpts additional options for VM
@@ -73,19 +70,19 @@
     public static void runTests(Class<? extends Expr> expr,
                                 String testOpts[],
                                 String... additionalVMOpts)
                          throws Throwable {
 
-        int seed = Utils.getRandomInstance().nextInt();
+        // ensure seed got printed out
+        Utils.getRandomInstance();
+        long seed = Utils.SEED;
         int iterations = DEFAULT_ITERATIONS_COUNT;
 
         for (String testOption : testOpts) {
             if (testOption.startsWith("-iterations=")) {
                 iterations = Integer.valueOf(testOption.
                                              replace("-iterations=", ""));
-            } else if (testOption.startsWith("-seed=")) {
-                seed = Integer.valueOf(testOption.replace("-seed=", ""));
             }
         }
 
         OutputAnalyzer intOutput = runTest(expr, VMMode.INT,
                                            additionalVMOpts,
@@ -117,11 +114,11 @@
      * @throws Throwable when something goes wrong.
      */
     public static OutputAnalyzer runTest(Class<? extends Expr> expr,
                                          VMMode testVMMode,
                                          String additionalVMOpts[],
-                                         int seed, int iterations)
+                                         long seed, int iterations)
                                   throws Throwable {
 
         List<String> vmOpts = new LinkedList<String>();
 
         Collections.addAll(vmOpts, additionalVMOpts);
