diff a/test/hotspot/jtreg/serviceability/sa/ClhsdbLauncher.java b/test/hotspot/jtreg/serviceability/sa/ClhsdbLauncher.java
--- a/test/hotspot/jtreg/serviceability/sa/ClhsdbLauncher.java
+++ b/test/hotspot/jtreg/serviceability/sa/ClhsdbLauncher.java
@@ -31,27 +31,23 @@
 import jdk.test.lib.Platform;
 import jdk.test.lib.JDKToolLauncher;
 import jdk.test.lib.JDKToolFinder;
 import jdk.test.lib.process.OutputAnalyzer;
 import jdk.test.lib.SA.SATestUtils;
-import jtreg.SkippedException;
-
 
 /**
  * This is a framework to run 'jhsdb clhsdb' commands.
  * See open/test/hotspot/jtreg/serviceability/sa/ClhsdbLongConstant.java for
  * an example of how to write a test.
  */
 
 public class ClhsdbLauncher {
 
     private Process toolProcess;
-    private boolean needPrivileges;
 
     public ClhsdbLauncher() {
         toolProcess = null;
-        needPrivileges = false;
     }
 
     /**
      *
      * Launches 'jhsdb clhsdb' and attaches to the Lingered App process.
@@ -64,15 +60,11 @@
         if (lingeredAppPid != -1) {
             launcher.addToolArg("--pid=" + Long.toString(lingeredAppPid));
             System.out.println("Starting clhsdb against " + lingeredAppPid);
         }
 
-        List<String> cmdStringList = Arrays.asList(launcher.getCommand());
-        if (needPrivileges) {
-            cmdStringList = SATestUtils.addPrivileges(cmdStringList);
-        }
-        ProcessBuilder processBuilder = new ProcessBuilder(cmdStringList);
+        ProcessBuilder processBuilder = SATestUtils.createProcessBuilder(launcher);
         toolProcess = processBuilder.start();
     }
 
     /**
      *
@@ -201,26 +193,11 @@
                       List<String> commands,
                       Map<String, List<String>> expectedStrMap,
                       Map<String, List<String>> unExpectedStrMap)
         throws Exception {
 
-        if (!Platform.shouldSAAttach()) {
-            if (Platform.isOSX()) {
-                if (Platform.isSignedOSX()) {
-                    throw new SkippedException("SA attach not expected to work. JDK is signed.");
-                } else if (SATestUtils.canAddPrivileges()) {
-                    needPrivileges = true;
-                }
-            }
-            if (!needPrivileges)  {
-               // Skip the test if we don't have enough permissions to attach
-               // and cannot add privileges.
-               throw new SkippedException(
-                   "SA attach not expected to work. Insufficient privileges.");
-           }
-        }
-
+        SATestUtils.skipIfCannotAttach(); // throws SkippedException if attach not expected to work.
         attach(lingeredAppPid);
         return runCmd(commands, expectedStrMap, unExpectedStrMap);
     }
 
     /**
