diff a/test/jdk/javax/net/ssl/compatibility/Server.java b/test/jdk/javax/net/ssl/compatibility/Server.java
--- a/test/jdk/javax/net/ssl/compatibility/Server.java
+++ b/test/jdk/javax/net/ssl/compatibility/Server.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2017, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2017, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -52,18 +52,10 @@
 
     public Server(Cert[] certs) throws Exception {
         this(certs, 0);
     }
 
-    private void setEnabledCipherSuites(String... cipherSuites) {
-        serverSocket.setEnabledCipherSuites(cipherSuites);
-    }
-
-    private void setEnabledProtocols(String... protocols) {
-        serverSocket.setEnabledProtocols(protocols);
-    }
-
     private void setNeedClientAuth(boolean needClientAuth) {
         serverSocket.setNeedClientAuth(needClientAuth);
     }
 
     private void setApplicationProtocols(String... protocols) {
@@ -98,35 +90,31 @@
         serverSocket.close();
     }
 
     public static void main(String[] args) throws IOException {
         System.out.println("----- Server start -----");
-        String protocol = System.getProperty(Utils.PROP_PROTOCOL);
-        String cipherSuite = System.getProperty(Utils.PROP_CIPHER_SUITE);
+        String certs = System.getProperty(Utils.PROP_CERTS);
         boolean clientAuth
                 = Boolean.getBoolean(Utils.PROP_CLIENT_AUTH);
         String appProtocols = System.getProperty(Utils.PROP_APP_PROTOCOLS);
         boolean supportsALPN
                 = Boolean.getBoolean(Utils.PROP_SUPPORTS_ALPN_ON_SERVER);
         boolean negativeCase
                 = Boolean.getBoolean(Utils.PROP_NEGATIVE_CASE_ON_SERVER);
 
         System.out.println(Utils.join(Utils.PARAM_DELIMITER,
                 "ServerJDK=" + System.getProperty(Utils.PROP_SERVER_JDK),
-                "Protocol=" + protocol,
-                "CipherSuite=" + cipherSuite,
                 "ClientAuth=" + clientAuth,
                 "AppProtocols=" + appProtocols));
 
         Status status = Status.SUCCESS;
         Server server = null;
         try {
-            server = new Server(Cert.getCerts(CipherSuite.cipherSuite(cipherSuite)));
+            server = new Server(
+                    Cert.getCerts(Utils.split(certs, Utils.VALUE_DELIMITER)));
             System.out.println("port=" + server.getPort());
             server.setNeedClientAuth(clientAuth);
-            server.setEnabledProtocols(protocol);
-            server.setEnabledCipherSuites(cipherSuite);
             if (appProtocols != null) {
                 if (supportsALPN) {
                     server.setApplicationProtocols(
                             Utils.split(appProtocols, Utils.VALUE_DELIMITER));
                 } else {
