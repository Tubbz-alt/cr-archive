diff a/test/jdk/sun/tools/jstatd/JstatdTest.java b/test/jdk/sun/tools/jstatd/JstatdTest.java
--- a/test/jdk/sun/tools/jstatd/JstatdTest.java
+++ b/test/jdk/sun/tools/jstatd/JstatdTest.java
@@ -71,10 +71,12 @@
     private String serverName;
     private Long jstatdPid;
     private boolean withExternalRegistry = false;
     private boolean useShortCommandSyntax = false;
 
+    private volatile static boolean portInUse;
+
     public void setServerName(String serverName) {
         this.serverName = serverName;
     }
 
     public void setUseDefaultPort(boolean useDefaultPort) {
@@ -89,24 +91,14 @@
         this.withExternalRegistry = withExternalRegistry;
     }
 
     private Long waitOnTool(ProcessThread thread) throws Throwable {
         long pid = thread.getPid();
-
-        Throwable t = thread.getUncaught();
-        if (t != null) {
-            if (t.getMessage().contains(
-                    "java.rmi.server.ExportException: Port already in use")) {
-                System.out.println("Port already in use. Trying to restart with a new one...");
-                Thread.sleep(100);
-                return null;
-            } else {
-                // Something unexpected has happened
-                throw new Throwable(t);
-            }
+        if (portInUse) {
+            System.out.println("Port already in use. Trying to restart with a new one...");
+            return null;
         }
-
         System.out.println(thread.getName() + " pid: " + pid);
         return pid;
     }
 
     private void log(String caption, String... cmd) {
@@ -289,10 +281,11 @@
             launcher.addToolArg(value);
         }
     }
 
     private ProcessThread tryToSetupJstatdProcess() throws Throwable {
+        portInUse = false;
         ProcessThread jstatdThread = new ProcessThread("Jstatd-Thread",
                 JstatdTest::isJstadReady, getJstatdCmd());
         try {
             jstatdThread.start();
             // Make sure jstatd is up and running
@@ -311,10 +304,14 @@
 
         return jstatdThread;
     }
 
     private static boolean isJstadReady(String line) {
+        if (line.contains("Port already in use")) {
+            portInUse = true;
+            return true;
+        }
         return line.startsWith("jstatd started (bound to ");
     }
 
     public void doTest() throws Throwable {
         runTest(false);
