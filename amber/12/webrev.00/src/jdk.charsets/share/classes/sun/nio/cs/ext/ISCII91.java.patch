diff a/src/jdk.charsets/share/classes/sun/nio/cs/ext/ISCII91.java b/src/jdk.charsets/share/classes/sun/nio/cs/ext/ISCII91.java
--- a/src/jdk.charsets/share/classes/sun/nio/cs/ext/ISCII91.java
+++ b/src/jdk.charsets/share/classes/sun/nio/cs/ext/ISCII91.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2002, 2011, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2002, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -487,15 +487,15 @@
             contextChar = INVALID_CHAR;
             needFlushing = false;
             return CoderResult.UNDERFLOW;
         }
 
-        /*Rules:
-         * 1)ATR,EXT,following character to be replaced with '\ufffd'
-         * 2)Halant + Halant => '\u094d' (Virama) + '\u200c'(ZWNJ)
-         * 3)Halant + Nukta => '\u094d' (Virama) + '\u200d'(ZWJ)
-        */
+        /* Rules:
+         * 1) ATR,EXT,following character to be replaced with '\ufffd'
+         * 2) Halant + Halant => '\u094d' (Virama) + '\u200c'(ZWNJ)
+         * 3) Halant + Nukta => '\u094d' (Virama) + '\u200d'(ZWJ)
+         */
         private CoderResult decodeArrayLoop(ByteBuffer src,
                                              CharBuffer dst)
         {
             byte[] sa = src.array();
             int sp = src.arrayOffset() + src.position();
