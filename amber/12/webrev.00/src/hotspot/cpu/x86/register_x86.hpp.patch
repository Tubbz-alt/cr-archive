diff a/src/hotspot/cpu/x86/register_x86.hpp b/src/hotspot/cpu/x86/register_x86.hpp
--- a/src/hotspot/cpu/x86/register_x86.hpp
+++ b/src/hotspot/cpu/x86/register_x86.hpp
@@ -128,21 +128,14 @@
 
 // Use XMMRegister as shortcut
 class XMMRegisterImpl;
 typedef XMMRegisterImpl* XMMRegister;
 
-// Use MMXRegister as shortcut
-class MMXRegisterImpl;
-typedef MMXRegisterImpl* MMXRegister;
-
 inline XMMRegister as_XMMRegister(int encoding) {
   return (XMMRegister)(intptr_t)encoding;
 }
 
-inline MMXRegister as_MMXRegister(int encoding) {
-  return (MMXRegister)(intptr_t)encoding;
-}
 
 // The implementation of XMM registers for the IA32 architecture
 class XMMRegisterImpl: public AbstractRegisterImpl {
  public:
   enum {
@@ -210,21 +203,10 @@
 
 // Only used by the 32bit stubGenerator. These can't be described by vmreg and hence
 // can't be described in oopMaps and therefore can't be used by the compilers (at least
 // were deopt might wan't to see them).
 
-// The MMX registers, for P3 and up chips
-CONSTANT_REGISTER_DECLARATION(MMXRegister, mnoreg , (-1));
-CONSTANT_REGISTER_DECLARATION(MMXRegister, mmx0 , ( 0));
-CONSTANT_REGISTER_DECLARATION(MMXRegister, mmx1 , ( 1));
-CONSTANT_REGISTER_DECLARATION(MMXRegister, mmx2 , ( 2));
-CONSTANT_REGISTER_DECLARATION(MMXRegister, mmx3 , ( 3));
-CONSTANT_REGISTER_DECLARATION(MMXRegister, mmx4 , ( 4));
-CONSTANT_REGISTER_DECLARATION(MMXRegister, mmx5 , ( 5));
-CONSTANT_REGISTER_DECLARATION(MMXRegister, mmx6 , ( 6));
-CONSTANT_REGISTER_DECLARATION(MMXRegister, mmx7 , ( 7));
-
 // Use XMMRegister as shortcut
 class KRegisterImpl;
 typedef KRegisterImpl* KRegister;
 
 inline KRegister as_KRegister(int encoding) {
