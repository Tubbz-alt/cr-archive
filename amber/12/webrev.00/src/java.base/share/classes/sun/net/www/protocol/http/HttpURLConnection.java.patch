diff a/src/java.base/share/classes/sun/net/www/protocol/http/HttpURLConnection.java b/src/java.base/share/classes/sun/net/www/protocol/http/HttpURLConnection.java
--- a/src/java.base/share/classes/sun/net/www/protocol/http/HttpURLConnection.java
+++ b/src/java.base/share/classes/sun/net/www/protocol/http/HttpURLConnection.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1995, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1995, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -164,11 +164,11 @@
     /* timeout waiting for read for buffered error stream;
      */
     private static int timeout4ESBuffer = 0;
 
     /* buffer size for buffered error stream;
-    */
+     */
     private static int bufSize4ES = 0;
 
     /*
      * Restrict setting of request headers through the public api
      * consistent with JavaScript XMLHttpRequest2 with a few
@@ -2353,12 +2353,12 @@
                         if (tryTransparentNTLMProxy) {
                             tryTransparentNTLMProxy =
                                     NTLMAuthenticationProxy.supportsTransparentAuth;
                             /* If the platform supports transparent authentication
                              * then normally it's ok to do transparent auth to a proxy
-                                         * because we generally trust proxies (chosen by the user)
-                                         * But not in the case of 305 response where the server
+                             * because we generally trust proxies (chosen by the user)
+                             * But not in the case of 305 response where the server
                              * chose it. */
                             if (tryTransparentNTLMProxy && useProxyResponseCode) {
                                 tryTransparentNTLMProxy = false;
                             }
 
@@ -2375,11 +2375,11 @@
                         /* If we are not trying transparent authentication then
                          * we need to have a PasswordAuthentication instance. For
                          * transparent authentication (Windows only) the username
                          * and password will be picked up from the current logged
                          * on users credentials.
-                        */
+                         */
                         if (tryTransparentNTLMProxy ||
                               (!tryTransparentNTLMProxy && a != null)) {
                             ret = NTLMAuthenticationProxy.proxy.create(true, host,
                                     port, a, getAuthenticatorKey());
                         }
