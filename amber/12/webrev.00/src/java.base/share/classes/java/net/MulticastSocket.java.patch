diff a/src/java.base/share/classes/java/net/MulticastSocket.java b/src/java.base/share/classes/java/net/MulticastSocket.java
--- a/src/java.base/share/classes/java/net/MulticastSocket.java
+++ b/src/java.base/share/classes/java/net/MulticastSocket.java
@@ -656,11 +656,11 @@
             return ni;
         }
     }
 
     /**
-     * Disable/Enable local loopback of multicast datagrams
+     * Disable/Enable local loopback of multicast datagrams.
      * The option is used by the platform's networking code as a hint
      * for setting whether multicast data will be looped back to
      * the local socket.
      *
      * <p>Because this option is a hint, applications that want to
@@ -696,12 +696,12 @@
     public boolean getLoopbackMode() throws SocketException {
         return ((Boolean)getImpl().getOption(SocketOptions.IP_MULTICAST_LOOP)).booleanValue();
     }
 
     /**
-     * Sends a datagram packet to the destination, with a TTL (time-
-     * to-live) other than the default for the socket.  This method
+     * Sends a datagram packet to the destination, with a TTL (time-to-live)
+     * other than the default for the socket.  This method
      * need only be used in instances where a particular TTL is desired;
      * otherwise it is preferable to set a TTL once on the socket, and
      * use that default TTL for all packets.  This method does <B>not
      * </B> alter the default TTL for the socket. Its behavior may be
      * affected by {@code setInterface}.
@@ -806,26 +806,6 @@
                         }
                     }
                 } // synch p
             }  //synch ttl
     } //method
-
-    private static Set<SocketOption<?>> options;
-    private static boolean optionsSet = false;
-
-    @Override
-    public Set<SocketOption<?>> supportedOptions() {
-        synchronized (MulticastSocket.class) {
-            if (optionsSet) {
-                return options;
-            }
-            try {
-                DatagramSocketImpl impl = getImpl();
-                options = Collections.unmodifiableSet(impl.supportedOptions());
-            } catch (SocketException ex) {
-                options = Collections.emptySet();
-            }
-            optionsSet = true;
-            return options;
-        }
-    }
 }
