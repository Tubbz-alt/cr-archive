diff a/src/java.base/share/classes/java/security/SecurityPermission.java b/src/java.base/share/classes/java/security/SecurityPermission.java
--- a/src/java.base/share/classes/java/security/SecurityPermission.java
+++ b/src/java.base/share/classes/java/security/SecurityPermission.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1997, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -110,11 +110,11 @@
  * <tr>
  *   <th scope="row">createPolicy.{policy type}</th>
  *   <td>Getting an instance of a Policy implementation from a provider</td>
  *   <td>Granting this permission enables code to obtain a Policy object.
  * Malicious code may query the Policy object to determine what permissions
- * have been granted to code other than itself. </td>
+ * have been granted to code other than itself.</td>
  * </tr>
  *
  * <tr>
  *   <th scope="row">getProperty.{key}</th>
  *   <td>Retrieval of the security property with the specified key</td>
@@ -122,12 +122,11 @@
  * been granted, the code may have access to the list of security
  * providers, as well as the location of the system-wide and user
  * security policies.  while revealing this information does not
  * compromise the security of the system, it does provide malicious
  * code with additional information which it may use to better aim
- * an attack.
-</td>
+ * an attack.</td>
  * </tr>
  *
  * <tr>
  *   <th scope="row">setProperty.{key}</th>
  *   <td>Setting of the security property with the specified key</td>
@@ -137,12 +136,11 @@
  * set a rogue provider that steals confidential information such
  * as cryptographic private keys. In addition, malicious code with
  * permission to set the location of the system-wide security policy
  * may point it to a security policy that grants the attacker
  * all the necessary permissions it requires to successfully mount
- * an attack on the system.
-</td>
+ * an attack on the system.</td>
  * </tr>
  *
  * <tr>
  *   <th scope="row">insertProvider</th>
  *   <td>Addition of a new provider</td>
@@ -151,12 +149,11 @@
  * to it) as the highest-priority provider. This would be possible
  * because the Security object (which manages the installed providers)
  * currently does not check the integrity or authenticity of a provider
  * before attaching it. The "insertProvider" permission subsumes the
  * "insertProvider.{provider name}" permission (see the section below for
- * more information).
- * </td>
+ * more information).</td>
  * </tr>
  *
  * <tr>
  *   <th scope="row">removeProvider.{provider name}</th>
  *   <td>Removal of the specified provider</td>
