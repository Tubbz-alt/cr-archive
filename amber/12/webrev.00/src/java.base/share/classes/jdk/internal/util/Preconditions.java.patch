diff a/src/java.base/share/classes/jdk/internal/util/Preconditions.java b/src/java.base/share/classes/jdk/internal/util/Preconditions.java
--- a/src/java.base/share/classes/jdk/internal/util/Preconditions.java
+++ b/src/java.base/share/classes/jdk/internal/util/Preconditions.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2016, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -237,11 +237,11 @@
      * @implNote
      * This method is made intrinsic in optimizing compilers to guide them to
      * perform unsigned comparisons of the index and length when it is known the
      * length is a non-negative value (such as that of an array length or from
      * the upper bound of a loop)
-    */
+     */
     @HotSpotIntrinsicCandidate
     public static <X extends RuntimeException>
     int checkIndex(int index, int length,
                    BiFunction<String, List<Integer>, X> oobef) {
         if (index < 0 || index >= length)
