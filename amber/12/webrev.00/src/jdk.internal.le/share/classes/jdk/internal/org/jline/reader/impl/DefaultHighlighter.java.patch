diff a/src/jdk.internal.le/share/classes/jdk/internal/org/jline/reader/impl/DefaultHighlighter.java b/src/jdk.internal.le/share/classes/jdk/internal/org/jline/reader/impl/DefaultHighlighter.java
--- a/src/jdk.internal.le/share/classes/jdk/internal/org/jline/reader/impl/DefaultHighlighter.java
+++ b/src/jdk.internal.le/share/classes/jdk/internal/org/jline/reader/impl/DefaultHighlighter.java
@@ -1,24 +1,38 @@
 /*
- * Copyright (c) 2002-2016, the original author or authors.
+ * Copyright (c) 2002-2019, the original author or authors.
  *
  * This software is distributable under the BSD license. See the terms of the
  * BSD license in the documentation provided with this software.
  *
  * https://opensource.org/licenses/BSD-3-Clause
  */
 package jdk.internal.org.jline.reader.impl;
 
+import java.util.regex.Pattern;
+
 import jdk.internal.org.jline.reader.LineReader;
 import jdk.internal.org.jline.reader.LineReader.RegionType;
 import jdk.internal.org.jline.reader.Highlighter;
 import jdk.internal.org.jline.utils.AttributedString;
 import jdk.internal.org.jline.utils.AttributedStringBuilder;
 import jdk.internal.org.jline.utils.AttributedStyle;
 import jdk.internal.org.jline.utils.WCWidth;
 
 public class DefaultHighlighter implements Highlighter {
+    private Pattern errorPattern;
+    private int errorIndex = -1;
+
+    @Override
+    public void setErrorPattern(Pattern errorPattern) {
+        this.errorPattern = errorPattern;
+    }
+
+    @Override
+    public void setErrorIndex(int errorIndex) {
+        this.errorIndex = errorIndex;
+    }
 
     @Override
     public AttributedString highlight(LineReader reader, String buffer) {
         int underlineStart = -1;
         int underlineEnd = -1;
@@ -55,10 +69,14 @@
                 sb.style(AttributedStyle::underline);
             }
             if (i == negativeStart) {
                 sb.style(AttributedStyle::inverse);
             }
+            if (i == errorIndex) {
+                sb.style(AttributedStyle::inverse);
+            }
+
             char c = buffer.charAt(i);
             if (c == '\t' || c == '\n') {
                 sb.append(c);
             } else if (c < 32) {
                 sb.style(AttributedStyle::inverseNeg)
@@ -75,10 +93,16 @@
                 sb.style(AttributedStyle::underlineOff);
             }
             if (i == negativeEnd) {
                 sb.style(AttributedStyle::inverseOff);
             }
+            if (i == errorIndex) {
+                sb.style(AttributedStyle::inverseOff);
+            }
+        }
+        if (errorPattern != null) {
+            sb.styleMatches(errorPattern, AttributedStyle.INVERSE);
         }
         return sb.toAttributedString();
     }
 
 }
