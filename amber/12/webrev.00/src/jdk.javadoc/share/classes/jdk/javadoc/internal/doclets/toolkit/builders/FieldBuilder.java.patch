diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/builders/FieldBuilder.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/builders/FieldBuilder.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/builders/FieldBuilder.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/builders/FieldBuilder.java
@@ -73,11 +73,11 @@
      */
     private FieldBuilder(Context context,
                          TypeElement typeElement,
                          FieldWriter writer) {
         super(context, typeElement);
-        this.writer = writer;
+        this.writer = Objects.requireNonNull(writer);
         fields = getVisibleMembers(FIELDS);
     }
 
     /**
      * Construct a new FieldBuilder.
@@ -109,34 +109,31 @@
     }
 
     /**
      * Build the field documentation.
      *
-     * @param memberDetailsTree the content tree to which the documentation will be added
+     * @param detailsList the content tree to which the documentation will be added
      * @throws DocletException if there is a problem while building the documentation
      */
-    protected void buildFieldDoc(Content memberDetailsTree) throws DocletException {
-        if (writer == null) {
-            return;
-        }
+    protected void buildFieldDoc(Content detailsList) throws DocletException {
         if (!fields.isEmpty()) {
-            Content fieldDetailsTreeHeader = writer.getFieldDetailsTreeHeader(memberDetailsTree);
-            Content fieldDetailsTree = writer.getMemberTreeHeader();
+            Content fieldDetailsTreeHeader = writer.getFieldDetailsTreeHeader(detailsList);
+            Content memberList = writer.getMemberList();
 
             for (Element element : fields) {
                 currentElement = (VariableElement)element;
                 Content fieldDocTree = writer.getFieldDocTreeHeader(currentElement);
 
                 buildSignature(fieldDocTree);
                 buildDeprecationInfo(fieldDocTree);
                 buildFieldComments(fieldDocTree);
                 buildTagInfo(fieldDocTree);
 
-                fieldDetailsTree.add(writer.getFieldDoc(fieldDocTree));
+                memberList.add(writer.getMemberListItem(fieldDocTree));
             }
-            memberDetailsTree.add(
-                    writer.getFieldDetails(fieldDetailsTreeHeader, fieldDetailsTree));
+            Content fieldDetails = writer.getFieldDetails(fieldDetailsTreeHeader, memberList);
+            detailsList.add(fieldDetails);
         }
     }
 
     /**
      * Build the signature.
@@ -156,11 +153,11 @@
         writer.addDeprecated(currentElement, fieldDocTree);
     }
 
     /**
      * Build the comments for the field.  Do nothing if
-     * {@link BaseOptions#noComment} is set to true.
+     * {@link BaseOptions#noComment()} is set to true.
      *
      * @param fieldDocTree the content tree to which the documentation will be added
      */
     protected void buildFieldComments(Content fieldDocTree) {
         if (!options.noComment()) {
