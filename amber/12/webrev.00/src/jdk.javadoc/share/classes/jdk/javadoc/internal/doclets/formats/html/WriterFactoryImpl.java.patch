diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/WriterFactoryImpl.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/WriterFactoryImpl.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/WriterFactoryImpl.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/WriterFactoryImpl.java
@@ -29,14 +29,12 @@
 import javax.lang.model.element.Element;
 import javax.lang.model.element.ModuleElement;
 import javax.lang.model.element.PackageElement;
 import javax.lang.model.element.TypeElement;
 
-import jdk.javadoc.internal.doclets.toolkit.AnnotationTypeFieldWriter;
 import jdk.javadoc.internal.doclets.toolkit.AnnotationTypeOptionalMemberWriter;
 import jdk.javadoc.internal.doclets.toolkit.AnnotationTypeRequiredMemberWriter;
-import jdk.javadoc.internal.doclets.toolkit.AnnotationTypeWriter;
 import jdk.javadoc.internal.doclets.toolkit.ClassWriter;
 import jdk.javadoc.internal.doclets.toolkit.ConstantsSummaryWriter;
 import jdk.javadoc.internal.doclets.toolkit.DocFilesHandler;
 import jdk.javadoc.internal.doclets.toolkit.MemberSummaryWriter;
 import jdk.javadoc.internal.doclets.toolkit.ModuleSummaryWriter;
@@ -79,64 +77,51 @@
     @Override
     public ClassWriter getClassWriter(TypeElement typeElement, ClassTree classTree) {
         return new ClassWriterImpl(configuration, typeElement, classTree);
     }
 
-    @Override
-    public AnnotationTypeWriter getAnnotationTypeWriter(TypeElement annotationType) {
-        return new AnnotationTypeWriterImpl(configuration, annotationType);
-    }
-
-    @Override
-    public AnnotationTypeFieldWriter getAnnotationTypeFieldWriter(
-            AnnotationTypeWriter annotationTypeWriter) {
-        TypeElement te = annotationTypeWriter.getAnnotationTypeElement();
-        return new AnnotationTypeFieldWriterImpl(
-            (SubWriterHolderWriter) annotationTypeWriter, te);
-    }
-
     @Override
     public AnnotationTypeOptionalMemberWriter getAnnotationTypeOptionalMemberWriter(
-        AnnotationTypeWriter annotationTypeWriter) {
-        TypeElement te = annotationTypeWriter.getAnnotationTypeElement();
+            ClassWriter classWriter) {
+        TypeElement te = classWriter.getTypeElement();
         return new AnnotationTypeOptionalMemberWriterImpl(
-            (SubWriterHolderWriter) annotationTypeWriter, te);
+                (ClassWriterImpl) classWriter, te);
     }
 
     @Override
     public AnnotationTypeRequiredMemberWriter getAnnotationTypeRequiredMemberWriter(
-            AnnotationTypeWriter annotationTypeWriter) {
-        TypeElement te = annotationTypeWriter.getAnnotationTypeElement();
+            ClassWriter classWriter) {
+        TypeElement te = classWriter.getTypeElement();
         return new AnnotationTypeRequiredMemberWriterImpl(
-            (SubWriterHolderWriter) annotationTypeWriter, te);
+            (ClassWriterImpl) classWriter, te);
     }
 
     @Override
     public EnumConstantWriterImpl getEnumConstantWriter(ClassWriter classWriter) {
-        return new EnumConstantWriterImpl((SubWriterHolderWriter) classWriter,
+        return new EnumConstantWriterImpl((ClassWriterImpl) classWriter,
                 classWriter.getTypeElement());
     }
 
     @Override
     public FieldWriterImpl getFieldWriter(ClassWriter classWriter) {
-        return new FieldWriterImpl((SubWriterHolderWriter) classWriter, classWriter.getTypeElement());
+        return new FieldWriterImpl((ClassWriterImpl) classWriter, classWriter.getTypeElement());
     }
 
     @Override
     public PropertyWriterImpl getPropertyWriter(ClassWriter classWriter) {
-        return new PropertyWriterImpl((SubWriterHolderWriter) classWriter,
+        return new PropertyWriterImpl((ClassWriterImpl) classWriter,
                 classWriter.getTypeElement());
     }
 
     @Override
     public MethodWriterImpl getMethodWriter(ClassWriter classWriter) {
-        return new MethodWriterImpl((SubWriterHolderWriter) classWriter, classWriter.getTypeElement());
+        return new MethodWriterImpl((ClassWriterImpl) classWriter, classWriter.getTypeElement());
     }
 
     @Override
     public ConstructorWriterImpl getConstructorWriter(ClassWriter classWriter) {
-        return new ConstructorWriterImpl((SubWriterHolderWriter) classWriter,
+        return new ConstructorWriterImpl((ClassWriterImpl) classWriter,
                 classWriter.getTypeElement());
     }
 
     @Override
     public MemberSummaryWriter getMemberSummaryWriter(ClassWriter classWriter,
@@ -144,10 +129,16 @@
         switch (memberType) {
             case CONSTRUCTORS:
                 return getConstructorWriter(classWriter);
             case ENUM_CONSTANTS:
                 return getEnumConstantWriter(classWriter);
+            case ANNOTATION_TYPE_MEMBER_OPTIONAL:
+                return (AnnotationTypeOptionalMemberWriterImpl)
+                        getAnnotationTypeOptionalMemberWriter(classWriter);
+            case ANNOTATION_TYPE_MEMBER_REQUIRED:
+                return (AnnotationTypeRequiredMemberWriterImpl)
+                        getAnnotationTypeRequiredMemberWriter(classWriter);
             case FIELDS:
                 return getFieldWriter(classWriter);
             case PROPERTIES:
                 return getPropertyWriter(classWriter);
             case INNER_CLASSES:
@@ -158,28 +149,10 @@
             default:
                 return null;
         }
     }
 
-    @Override
-    public MemberSummaryWriter getMemberSummaryWriter(AnnotationTypeWriter annotationTypeWriter,
-            VisibleMemberTable.Kind memberType) {
-        switch (memberType) {
-            case ANNOTATION_TYPE_FIELDS:
-                return (AnnotationTypeFieldWriterImpl)
-                    getAnnotationTypeFieldWriter(annotationTypeWriter);
-            case ANNOTATION_TYPE_MEMBER_OPTIONAL:
-                return (AnnotationTypeOptionalMemberWriterImpl)
-                    getAnnotationTypeOptionalMemberWriter(annotationTypeWriter);
-            case ANNOTATION_TYPE_MEMBER_REQUIRED:
-                return (AnnotationTypeRequiredMemberWriterImpl)
-                    getAnnotationTypeRequiredMemberWriter(annotationTypeWriter);
-            default:
-                return null;
-        }
-    }
-
     @Override
     public SerializedFormWriter getSerializedFormWriter() {
         return new SerializedFormWriterImpl(configuration);
     }
 
