diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/ClassTree.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/ClassTree.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/ClassTree.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/ClassTree.java
@@ -109,11 +109,11 @@
         this.utils = configuration.utils;
 
         Messages messages = configuration.getMessages();
         messages.notice("doclet.Building_Tree");
 
-        comparator = utils.makeClassUseComparator();
+        comparator = utils.comparators.makeClassUseComparator();
         baseAnnotationTypes = new TreeSet<>(comparator);
         baseEnums = new TreeSet<>(comparator);
         baseClasses = new TreeSet<>(comparator);
         baseInterfaces = new TreeSet<>(comparator);
         buildTree(configuration.getIncludedTypeElements());
@@ -126,11 +126,11 @@
      * @param configuration The current configuration of the doclet.
      */
     public ClassTree(DocletEnvironment docEnv, BaseConfiguration configuration) {
         this.configuration = configuration;
         this.utils = configuration.utils;
-        comparator = utils.makeClassUseComparator();
+        comparator = utils.comparators.makeClassUseComparator();
         baseAnnotationTypes = new TreeSet<>(comparator);
         baseEnums = new TreeSet<>(comparator);
         baseClasses = new TreeSet<>(comparator);
         baseInterfaces = new TreeSet<>(comparator);
         buildTree(configuration.getIncludedTypeElements());
@@ -143,11 +143,11 @@
      * @param configuration The current configuration of the doclet.
      */
     public ClassTree(SortedSet<TypeElement>classesSet, BaseConfiguration configuration) {
         this.configuration = configuration;
         this.utils = configuration.utils;
-        comparator = utils.makeClassUseComparator();
+        comparator = utils.comparators.makeClassUseComparator();
         baseAnnotationTypes = new TreeSet<>(comparator);
         baseEnums = new TreeSet<>(comparator);
         baseClasses = new TreeSet<>(comparator);
         baseInterfaces = new TreeSet<>(comparator);
         buildTree(classesSet);
