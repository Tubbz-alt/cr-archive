diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/Script.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/Script.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/Script.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/Script.java
@@ -104,21 +104,17 @@
      * object that is returned.
      * @return the script, as a {@code Content} object.
      */
     public Content asContent() {
         ScriptContent scriptContent = new ScriptContent(sb);
-        HtmlTree tree = new HtmlTree(HtmlTag.SCRIPT) {
+        HtmlTree tree = new HtmlTree(TagName.SCRIPT) {
             @Override
-            public void add(CharSequence s) {
-                throw new UnsupportedOperationException();
-            }
-            @Override
-            public void add(Content c) {
+            public HtmlTree add(Content c) {
                 if (c != scriptContent) {
                     throw new IllegalArgumentException();
                 }
-                super.add(scriptContent);
+                return super.add(scriptContent);
             }
         };
         tree.put(HtmlAttr.TYPE, "text/javascript");
         tree.add(scriptContent);
         return tree;
@@ -198,17 +194,13 @@
         ScriptContent(StringBuilder sb) {
             this.sb = sb;
         }
 
         @Override
-        public void add(Content content) {
-            throw new UnsupportedOperationException();
-        }
-
-        @Override
-        public void add(CharSequence code) {
+        public ScriptContent add(CharSequence code) {
             sb.append(code);
+            return this;
         }
 
         @Override
         public boolean write(Writer writer, boolean atNewline) throws IOException {
             String s = sb.toString();
