diff a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/memory/MemoryKill.java b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/memory/MemoryKill.java
--- a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/memory/MemoryKill.java
+++ b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/memory/MemoryKill.java
@@ -23,16 +23,19 @@
 
 
 package org.graalvm.compiler.nodes.memory;
 
 import org.graalvm.compiler.nodes.FixedNode;
-import org.graalvm.compiler.nodes.FixedNodeInterface;
+import org.graalvm.compiler.nodes.ValueNodeInterface;
 import jdk.internal.vm.compiler.word.LocationIdentity;
 
 /**
- * This interface marks subclasses of {@link FixedNode} that kill a set of memory locations
- * represented by {@linkplain LocationIdentity} (i.e. change a value at one or more locations that
- * belong to these location identities).
+ * This interface marks nodes that kill a set of memory locations represented by
+ * {@linkplain LocationIdentity} (i.e. change a value at one or more locations that belong to these
+ * location identities). This does not only include real memory kills like subclasses of
+ * {@linkplain FixedNode} that, e.g., write a memory location, but also conceptual memory kills,
+ * i.e., nodes in the memory graph that mark the last accesses to such a location, like a
+ * {@linkplain MemoryPhiNode} node.
  */
-public interface MemoryKill extends MemoryNode, FixedNodeInterface {
+public interface MemoryKill extends ValueNodeInterface {
 
 }
