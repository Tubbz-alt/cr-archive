diff a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/memory/SingleMemoryKill.java b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/memory/SingleMemoryKill.java
--- a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/memory/SingleMemoryKill.java
+++ b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/memory/SingleMemoryKill.java
@@ -22,22 +22,22 @@
  */
 
 
 package org.graalvm.compiler.nodes.memory;
 
-import org.graalvm.compiler.nodes.FixedNode;
 import jdk.internal.vm.compiler.word.LocationIdentity;
 
 /**
- * This interface marks subclasses of {@link FixedNode} that kill a single memory location
- * represented by {@linkplain LocationIdentity}.
+ * This interface marks nodes that kill a single memory location represented by
+ * {@linkplain LocationIdentity}.
  */
 public interface SingleMemoryKill extends MemoryKill {
 
     /**
      * This method is used to determine which memory location is killed by this node. Returning the
      * special value {@link LocationIdentity#any()} will kill all memory locations.
      *
      * @return the identity of the location killed by this node.
      */
     LocationIdentity getKilledLocationIdentity();
+
 }
