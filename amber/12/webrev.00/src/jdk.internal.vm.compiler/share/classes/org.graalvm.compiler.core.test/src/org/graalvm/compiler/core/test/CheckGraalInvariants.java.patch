diff a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.core.test/src/org/graalvm/compiler/core/test/CheckGraalInvariants.java b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.core.test/src/org/graalvm/compiler/core/test/CheckGraalInvariants.java
--- a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.core.test/src/org/graalvm/compiler/core/test/CheckGraalInvariants.java
+++ b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.core.test/src/org/graalvm/compiler/core/test/CheckGraalInvariants.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2014, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2014, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -219,10 +219,17 @@
                  * These options are aliases for Truffle runtime options whose usages are not on the
                  * class path used when running CheckGraalInvariants.
                  */
                 return false;
             }
+            if (declaringClass.getName().equals("org.graalvm.compiler.truffle.compiler.TruffleCompilerOptions")) {
+                /*
+                 * These options are deprecated and will be removed in GraalVM 20.2.0. The
+                 * TruffleIntrinsifyFrameAccess option has no replacement and is unused.
+                 */
+                return false;
+            }
             if (option.getOptionKey().getClass().isAnonymousClass()) {
                 /*
                  * Probably a derived option such as
                  * org.graalvm.compiler.debug.DebugOptions.PrintGraphFile.
                  */
