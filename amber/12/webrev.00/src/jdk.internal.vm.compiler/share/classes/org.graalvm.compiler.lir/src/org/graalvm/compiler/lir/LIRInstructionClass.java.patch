diff a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.lir/src/org/graalvm/compiler/lir/LIRInstructionClass.java b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.lir/src/org/graalvm/compiler/lir/LIRInstructionClass.java
--- a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.lir/src/org/graalvm/compiler/lir/LIRInstructionClass.java
+++ b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.lir/src/org/graalvm/compiler/lir/LIRInstructionClass.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2012, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2012, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -71,17 +71,17 @@
         assert INSTRUCTION_CLASS.isAssignableFrom(clazz);
 
         LIRInstructionFieldsScanner ifs = new LIRInstructionFieldsScanner(calcOffset);
         ifs.scan(clazz);
 
-        uses = new Values(ifs.valueAnnotations.get(LIRInstruction.Use.class));
-        alives = new Values(ifs.valueAnnotations.get(LIRInstruction.Alive.class));
-        temps = new Values(ifs.valueAnnotations.get(LIRInstruction.Temp.class));
-        defs = new Values(ifs.valueAnnotations.get(LIRInstruction.Def.class));
+        uses = Values.create(ifs.valueAnnotations.get(LIRInstruction.Use.class));
+        alives = Values.create(ifs.valueAnnotations.get(LIRInstruction.Alive.class));
+        temps = Values.create(ifs.valueAnnotations.get(LIRInstruction.Temp.class));
+        defs = Values.create(ifs.valueAnnotations.get(LIRInstruction.Def.class));
 
-        states = new Fields(ifs.states);
-        data = new Fields(ifs.data);
+        states = Fields.create(ifs.states);
+        data = Fields.create(ifs.data);
 
         opcodeConstant = ifs.opcodeConstant;
         if (ifs.opcodeField == null) {
             opcodeIndex = -1;
         } else {
