diff a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.lir/src/org/graalvm/compiler/lir/framemap/FrameMap.java b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.lir/src/org/graalvm/compiler/lir/framemap/FrameMap.java
--- a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.lir/src/org/graalvm/compiler/lir/framemap/FrameMap.java
+++ b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.lir/src/org/graalvm/compiler/lir/framemap/FrameMap.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2009, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2009, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -122,14 +122,15 @@
     public boolean accessesCallerFrame() {
         return accessesCallerFrame;
     }
 
     /**
-     * Gets the frame size of the compiled frame, not including the size of the
-     * {@link Architecture#getReturnAddressSize() return address slot}.
+     * Gets the allocated space in the compiled frame, not including any ABI required storage like
+     * the {@link Architecture#getReturnAddressSize() return address slot} or a saved frame pointer.
+     * {@link #totalFrameSize} includes all storage that is part of the frame.
      *
-     * @return The size of the frame (in bytes).
+     * @return The size of the allocated frame space (in bytes).
      */
     public int frameSize() {
         assert frameSize != -1 : "frame size not computed yet";
         return frameSize;
     }
@@ -146,12 +147,12 @@
         int unalignedFrameSize = spillSize - returnAddressSize();
         return hasOutgoingStackArguments || unalignedFrameSize != 0;
     }
 
     /**
-     * Gets the total frame size of the compiled frame, including the size of the
-     * {@link Architecture#getReturnAddressSize() return address slot}.
+     * Gets the total frame size of the compiled frame, including any ABI required storage like the
+     * {@link Architecture#getReturnAddressSize() return address slot} or a saved frame pointer.
      *
      * @return The total size of the frame (in bytes).
      */
     public abstract int totalFrameSize();
 
