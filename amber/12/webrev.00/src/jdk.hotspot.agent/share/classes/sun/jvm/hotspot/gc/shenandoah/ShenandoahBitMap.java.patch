diff a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/gc/shenandoah/ShenandoahBitMap.java b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/gc/shenandoah/ShenandoahBitMap.java
--- a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/gc/shenandoah/ShenandoahBitMap.java
+++ b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/gc/shenandoah/ShenandoahBitMap.java
@@ -64,11 +64,11 @@
         }
     }
 
     private int toBitMapOffset(long offset, ShenandoahHeapRegion region) {
         long regionSize = ShenandoahHeapRegion.regionSizeBytes();
-        long regionOffset = region.regionNumber() * regionSize;
+        long regionOffset = region.index() * regionSize;
         long offsetInRegion = offset - regionOffset;
 
         if (offsetInRegion < 0 || offsetInRegion >= regionSize) {
             throw new RuntimeException("Unexpected negative offset: " + offsetInRegion);
         }
