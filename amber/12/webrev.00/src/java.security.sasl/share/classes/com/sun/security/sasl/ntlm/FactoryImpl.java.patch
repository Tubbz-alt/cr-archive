diff a/src/java.security.sasl/share/classes/com/sun/security/sasl/ntlm/FactoryImpl.java b/src/java.security.sasl/share/classes/com/sun/security/sasl/ntlm/FactoryImpl.java
--- a/src/java.security.sasl/share/classes/com/sun/security/sasl/ntlm/FactoryImpl.java
+++ b/src/java.security.sasl/share/classes/com/sun/security/sasl/ntlm/FactoryImpl.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2010, 2011, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2010, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -32,27 +32,27 @@
 
 import com.sun.security.sasl.util.PolicyUtils;
 
 
 /**
-  * Client and server factory for NTLM SASL client/server mechanisms.
-  * See NTLMClient and NTLMServer for input requirements.
-  *
-  * @since 1.7
-  */
+ * Client and server factory for NTLM SASL client/server mechanisms.
+ * See NTLMClient and NTLMServer for input requirements.
+ *
+ * @since 1.7
+ */
 
 public final class FactoryImpl implements SaslClientFactory,
 SaslServerFactory{
 
     private static final String[] myMechs = { "NTLM" };
     private static final int[] mechPolicies = {
             PolicyUtils.NOPLAINTEXT|PolicyUtils.NOANONYMOUS
     };
 
     /**
-      * Empty constructor.
-      */
+     * Empty constructor.
+     */
     public FactoryImpl() {
     }
 
     /**
      * Returns a new instance of the NTLM SASL client mechanism.
@@ -112,14 +112,14 @@
          }
          return null;
     }
 
     /**
-      * Returns the authentication mechanisms that this factory can produce.
-      *
-      * @return String[] {"NTLM"} if policies in env match those of this
-      * factory.
-      */
+     * Returns the authentication mechanisms that this factory can produce.
+     *
+     * @return String[] {"NTLM"} if policies in env match those of this
+     * factory.
+     */
     public String[] getMechanismNames(Map<String,?> env) {
         return PolicyUtils.filterMechs(myMechs, mechPolicies, env);
     }
 }
