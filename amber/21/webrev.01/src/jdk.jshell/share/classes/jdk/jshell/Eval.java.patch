diff a/src/jdk.jshell/share/classes/jdk/jshell/Eval.java b/src/jdk.jshell/share/classes/jdk/jshell/Eval.java
--- a/src/jdk.jshell/share/classes/jdk/jshell/Eval.java
+++ b/src/jdk.jshell/share/classes/jdk/jshell/Eval.java
@@ -1213,11 +1213,11 @@
                 return message;
             }
     }
 
     private DiagList modifierDiagnostics(ModifiersTree modtree,
-                                         final TreeDissector dis, boolean isAbstractProhibited) {
+                                         final TreeDissector dis, boolean isNotClass) {
 
         List<Modifier> list = new ArrayList<>();
         boolean fatal = false;
         for (Modifier mod : modtree.getFlags()) {
             switch (mod) {
@@ -1225,22 +1225,28 @@
                 case NATIVE:
                     list.add(mod);
                     fatal = true;
                     break;
                 case ABSTRACT:
-                    if (isAbstractProhibited) {
+                    if (isNotClass) {
                         list.add(mod);
                         fatal = true;
                     }
                     break;
                 case PUBLIC:
                 case PROTECTED:
                 case PRIVATE:
                     // quietly ignore, user cannot see effects one way or the other
                     break;
-                case STATIC:
                 case FINAL:
+                    if (isNotClass) {
+                        //OK to declare a class final, to aid sealed classes
+                        list.add(mod);
+                        break;
+                    }
+                    break;
+                case STATIC:
                     list.add(mod);
                     break;
             }
         }
         if (list.isEmpty()) {
