diff a/src/jdk.jshell/share/classes/jdk/jshell/MaskCommentsAndModifiers.java b/src/jdk.jshell/share/classes/jdk/jshell/MaskCommentsAndModifiers.java
--- a/src/jdk.jshell/share/classes/jdk/jshell/MaskCommentsAndModifiers.java
+++ b/src/jdk.jshell/share/classes/jdk/jshell/MaskCommentsAndModifiers.java
@@ -35,15 +35,15 @@
  * @author Robert Field
  */
 class MaskCommentsAndModifiers {
 
     private final static Set<String> IGNORED_MODIFIERS =
-            Stream.of( "public", "protected", "private", "static", "final" )
+            Stream.of( "public", "protected", "private", "static" )
                     .collect( Collectors.toSet() );
 
     private final static Set<String> OTHER_MODIFIERS =
-            Stream.of( "abstract", "strictfp", "transient", "volatile", "synchronized", "native", "default" )
+            Stream.of( "abstract", "final", "strictfp", "transient", "volatile", "synchronized", "native", "default" )
                     .collect( Collectors.toSet() );
 
     // Builder to accumulate non-masked characters
     private final StringBuilder sbCleared = new StringBuilder();
 
@@ -64,17 +64,21 @@
 
     // Do we mask-off ignored modifiers?  Set by parameter and turned off after
     // initial modifier section
     private boolean maskModifiers;
 
+    //is modifier "final" allowed?
+    private final boolean finalAllowed;
+
     // Does the string end with an unclosed '/*' style comment?
     private boolean openToken = false;
 
-    MaskCommentsAndModifiers(String s, boolean maskModifiers) {
+    MaskCommentsAndModifiers(String s, boolean maskModifiers, boolean finalAllowed) {
         this.str = s;
         this.length = s.length();
         this.maskModifiers = maskModifiers;
+        this.finalAllowed = finalAllowed;
         read();
         while (c >= 0) {
             next();
             read();
         }
@@ -248,11 +252,11 @@
                         writeTo(sb, c);
                         read();
                     } while (Character.isJavaIdentifierPart(c));
                     unread();
                     String id = sb.toString();
-                    if (maskModifiers && IGNORED_MODIFIERS.contains(id)) {
+                    if (maskModifiers && (IGNORED_MODIFIERS.contains(id) || (!finalAllowed && "final".equals(id)))) {
                         writeMask(sb);
                     } else {
                         write(sb);
                         if (maskModifiers && !OTHER_MODIFIERS.contains(id)) {
                             maskModifiers = false;
