diff a/test/langtools/tools/javac/TextBlockAPI.java b/test/langtools/tools/javac/TextBlockAPI.java
--- a/test/langtools/tools/javac/TextBlockAPI.java
+++ b/test/langtools/tools/javac/TextBlockAPI.java
@@ -56,11 +56,11 @@
     /*
      * Check that correct/incorrect syntax is properly detected
      */
     static void test1() {
         for (String lineterminators : new String[] { "\n", "\r", "\r\n" })
-        for (String whitespace : new String[] { "", "   ", "\t", "\u2002" })
+        for (String whitespace : new String[] { "", "   ", "\t", "\f" })
         for (String content : new String[] { "a", "ab", "abc", "\u2022", "*".repeat(1000), "*".repeat(10000) })  {
             String code =
                     "public class CorrectTest {\n" +
                             "    public static void main(String... args) {\n" +
                             "        String xxx = " +
@@ -124,14 +124,13 @@
                           "    }" + terminator +
                           "}" + terminator;
             new JavacTask(TOOLBOX)
                     .sources(code)
                     .classpath(".")
-                    .options("--enable-preview", "-source", JDK_VERSION, "-encoding", "utf8")
+                    .options("-encoding", "utf8")
                     .run();
             String output = new JavaTask(TOOLBOX)
-                    .vmOptions("--enable-preview")
                     .classpath(".")
                     .classArgs("LineTerminatorTest")
                     .run()
                     .writeAll()
                     .getOutput(Task.OutputKind.STDOUT);
@@ -208,22 +207,22 @@
                       "}\n";
 
         new JavacTask(TOOLBOX)
             .sources(code)
             .classpath(".")
-            .options("--enable-preview", "-source", JDK_VERSION, "-encoding", "utf8", "-Xlint")
+            .options("-encoding", "utf8", "-Xlint")
             .run();
      }
 
     /*
      * Test source for successful compile.
      */
     static void compPass(String source) {
         String output = new JavacTask(TOOLBOX)
                 .sources(source)
                 .classpath(".")
-                .options("--enable-preview", "-source", JDK_VERSION, "-encoding", "utf8")
+                .options("-encoding", "utf8")
                 .run()
                 .writeAll()
                 .getOutput(Task.OutputKind.DIRECT);
 
         if (output.contains("compiler.err")) {
@@ -240,11 +239,11 @@
      */
     static void compFail(String source)  {
         String errors = new JavacTask(TOOLBOX)
                 .sources(source)
                 .classpath(".")
-                .options("-XDrawDiagnostics", "--enable-preview", "-source", JDK_VERSION, "-encoding", "utf8")
+                .options("-XDrawDiagnostics", "-encoding", "utf8")
                 .run(Task.Expect.FAIL)
                 .writeAll()
                 .getOutput(Task.OutputKind.DIRECT);
 
         if (!errors.contains("compiler.err")) {
