diff a/test/jdk/com/sun/security/auth/callback/TextCallbackHandler/Confirm.java b/test/jdk/com/sun/security/auth/callback/TextCallbackHandler/Confirm.java
--- a/test/jdk/com/sun/security/auth/callback/TextCallbackHandler/Confirm.java
+++ b/test/jdk/com/sun/security/auth/callback/TextCallbackHandler/Confirm.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2007, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2007, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -21,26 +21,40 @@
  * questions.
  */
 
 /*
  * @test
- * @bug 6599079
+ * @bug 6599079 8240848
  * @summary Non-standard ConfirmationCallback throws NPE
+ * @modules jdk.security.auth
  */
 
 import javax.security.auth.callback.Callback;
 import javax.security.auth.callback.ConfirmationCallback;
 import com.sun.security.auth.callback.TextCallbackHandler;
 import java.io.ByteArrayInputStream;
+import java.io.InputStream;
 
 public class Confirm {
 
     public static void main(String[] args) throws Exception {
-        // Provide answer in an individual stream so that the program
-        // does not block.
-        System.setIn(new ByteArrayInputStream("1\n".getBytes()));
+        InputStream in = System.in;
+        try {
+            // Provide answer in an individual stream so that the program
+            // does not block.
+            System.setIn(new ByteArrayInputStream("1\n".getBytes()));
+            new TextCallbackHandler().handle(new Callback[]{
+                    new ConfirmationCallback("Prince",
+                            ConfirmationCallback.INFORMATION,
+                            new String[]{"To be", "Not to be"}, 0)});
 
-        new TextCallbackHandler().handle(new Callback[]{
-            new ConfirmationCallback("Prince", ConfirmationCallback.INFORMATION,
-                    new String[]{"To be", "Not to be"}, 0)});
+            System.setIn(new ByteArrayInputStream("-1\n".getBytes()));
+            new TextCallbackHandler().handle(new Callback[]{
+                    new ConfirmationCallback(
+                            ConfirmationCallback.INFORMATION,
+                            ConfirmationCallback.OK_CANCEL_OPTION,
+                            ConfirmationCallback.OK)});
+        } finally {
+            System.setIn(in);
+        }
     }
 }
