diff a/test/hotspot/jtreg/compiler/graalunit/common/GraalUnitTestLauncher.java b/test/hotspot/jtreg/compiler/graalunit/common/GraalUnitTestLauncher.java
--- a/test/hotspot/jtreg/compiler/graalunit/common/GraalUnitTestLauncher.java
+++ b/test/hotspot/jtreg/compiler/graalunit/common/GraalUnitTestLauncher.java
@@ -181,10 +181,11 @@
 
     public static void main(String... args) throws Exception {
 
         String testPrefix = null;
         String excludeFileName = null;
+        ArrayList<String> testJavaFlags = new ArrayList<String>();
 
         int i=0;
         String arg, val;
         while (i+1 < args.length) {
             arg = args[i++];
@@ -197,10 +198,14 @@
 
                 case "-exclude":
                     excludeFileName = val;
                     break;
 
+                case "-vmargs":
+                   testJavaFlags.addAll(Arrays.asList(val.split("(?i):space:")));
+                   break;
+
                 default:
                     System.out.println("WARN: illegal option " + arg);
                     break;
             }
         }
@@ -232,13 +237,12 @@
         javaFlags.add("--add-exports");
         javaFlags.add("java.base/jdk.internal.misc=ALL-UNNAMED");
         javaFlags.addAll(getModuleExports("jdk.internal.vm.compiler", "ALL-UNNAMED"));
         javaFlags.addAll(getModuleExports("jdk.internal.vm.ci", "ALL-UNNAMED,jdk.internal.vm.compiler"));
 
-        // add opens, see JDK-8236211
-        javaFlags.add("--add-opens");
-        javaFlags.add("jdk.internal.vm.compiler/org.graalvm.graphio=ALL-UNNAMED");
+        // add test specific flags
+        javaFlags.addAll(testJavaFlags);
 
         // add VM flags
         javaFlags.add("-XX:+UnlockExperimentalVMOptions");
         javaFlags.add("-XX:+EnableJVMCI");
         javaFlags.add("-Djava.awt.headless=true");
