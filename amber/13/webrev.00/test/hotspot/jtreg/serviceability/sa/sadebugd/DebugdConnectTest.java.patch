diff a/test/hotspot/jtreg/serviceability/sa/sadebugd/DebugdConnectTest.java b/test/hotspot/jtreg/serviceability/sa/sadebugd/DebugdConnectTest.java
--- a/test/hotspot/jtreg/serviceability/sa/sadebugd/DebugdConnectTest.java
+++ b/test/hotspot/jtreg/serviceability/sa/sadebugd/DebugdConnectTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2019, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -23,21 +23,22 @@
 
 /**
  * @test
  * @bug 8209790
  * @summary Checks ability for connecting to debug server (jstack, jmap, jinfo, jsnap)
- * @requires vm.hasSAandCanAttach
+ * @requires vm.hasSA
  * @requires os.family != "windows"
  * @modules java.base/jdk.internal.misc
  * @library /test/lib
  *
  * @run main/othervm DebugdConnectTest
  */
 
 import java.io.IOException;
 
 import jdk.test.lib.JDKToolLauncher;
+import jdk.test.lib.SA.SATestUtils;
 import jdk.test.lib.apps.LingeredApp;
 import jdk.test.lib.process.OutputAnalyzer;
 
 
 public class DebugdConnectTest {
@@ -50,11 +51,11 @@
             jhsdbLauncher.addToolArg(id + "@localhost");
         } else {
             jhsdbLauncher.addToolArg("localhost");
         }
 
-        Process jhsdb = (new ProcessBuilder(jhsdbLauncher.getCommand())).start();
+        Process jhsdb = (SATestUtils.createProcessBuilder(jhsdbLauncher)).start();
         OutputAnalyzer out = new OutputAnalyzer(jhsdb);
 
         jhsdb.waitFor();
 
         System.out.println(out.getStdout());
@@ -108,10 +109,11 @@
             debugd.detach();
         }
     }
 
     public static void main(String[] args) throws Exception {
+        SATestUtils.skipIfCannotAttach(); // throws SkippedException if attach not expected to work.
         LingeredApp app = null;
 
         try {
             app = LingeredApp.startApp();
             System.out.println("Started LingeredApp with pid " + app.getPid());
