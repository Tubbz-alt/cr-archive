diff a/test/hotspot/jtreg/serviceability/sa/TestJhsdbJstackMixed.java b/test/hotspot/jtreg/serviceability/sa/TestJhsdbJstackMixed.java
--- a/test/hotspot/jtreg/serviceability/sa/TestJhsdbJstackMixed.java
+++ b/test/hotspot/jtreg/serviceability/sa/TestJhsdbJstackMixed.java
@@ -25,18 +25,19 @@
 import java.util.List;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
 import jdk.test.lib.JDKToolLauncher;
+import jdk.test.lib.SA.SATestUtils;
 import jdk.test.lib.Utils;
 import jdk.test.lib.apps.LingeredApp;
 import jdk.test.lib.process.OutputAnalyzer;
 
 /**
  * @test
  * @bug 8208091
- * @requires (os.family == "linux") & (vm.hasSAandCanAttach)
+ * @requires (os.family == "linux") & (vm.hasSA)
  * @library /test/lib
  * @run main/othervm TestJhsdbJstackMixed
  */
 public class TestJhsdbJstackMixed {
 
@@ -133,12 +134,11 @@
             launcher.addToolArg("jstack");
             launcher.addToolArg("--mixed");
             launcher.addToolArg("--pid");
             launcher.addToolArg(Long.toString(app.getPid()));
 
-            ProcessBuilder pb = new ProcessBuilder();
-            pb.command(launcher.getCommand());
+            ProcessBuilder pb = SATestUtils.createProcessBuilder(launcher);
             Process jhsdb = pb.start();
             OutputAnalyzer out = new OutputAnalyzer(jhsdb);
 
             jhsdb.waitFor();
 
@@ -159,22 +159,22 @@
         System.out.println("DEBUG: Test didn't trigger interesting condition " +
                              "but no UnmappedAddressException was thrown. PASS!");
     }
 
     public static void main(String... args) throws Exception {
-
+        SATestUtils.skipIfCannotAttach(); // throws SkippedException if attach not expected to work.
         LingeredApp app = null;
 
         try {
             // Needed for LingeredApp to be able to resolve native library.
             String libPath = System.getProperty("java.library.path");
             String[] vmArgs = (libPath != null)
                 ? Utils.prependTestJavaOpts("-Djava.library.path=" + libPath)
                 : Utils.getTestJavaOpts();
 
             app = new LingeredAppWithNativeMethod();
-            LingeredApp.startApp(app, vmArgs);
+            LingeredApp.startAppExactJvmOpts(app, vmArgs);
             System.out.println("Started LingeredApp with pid " + app.getPid());
             runJstackMixedInLoop(app);
             System.out.println("Test Completed");
         } catch (Throwable e) {
             e.printStackTrace();
