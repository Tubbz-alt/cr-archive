diff a/test/hotspot/jtreg/serviceability/sa/ClhsdbFlags.java b/test/hotspot/jtreg/serviceability/sa/ClhsdbFlags.java
--- a/test/hotspot/jtreg/serviceability/sa/ClhsdbFlags.java
+++ b/test/hotspot/jtreg/serviceability/sa/ClhsdbFlags.java
@@ -19,11 +19,10 @@
  * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */
 
-import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
 import jdk.test.lib.apps.LingeredApp;
@@ -47,15 +46,14 @@
         System.out.println("Starting ClhsdbFlags basic test");
 
         LingeredApp theApp = null;
         try {
             ClhsdbLauncher test = new ClhsdbLauncher();
-            String[] vmArgs = Utils.appendTestJavaOpts(
-                "-XX:+UnlockExperimentalVMOptions",
-                "-XX:+UnlockDiagnosticVMOptions",
-                "-XX:-MaxFDLimit");
-            theApp = LingeredApp.startApp(vmArgs);
+            theApp = LingeredApp.startApp(
+                    "-XX:+UnlockExperimentalVMOptions",
+                    "-XX:+UnlockDiagnosticVMOptions",
+                    "-XX:-MaxFDLimit");
             System.out.println("Started LingeredApp with pid " + theApp.getPid());
 
             List<String> cmds = List.of(
                     "flags", "flags -nd",
                     "flags UnlockDiagnosticVMOptions", "flags MaxFDLimit",
@@ -109,11 +107,12 @@
                 "-XX:HeapSizePerGCThread=32m",     // size_t
                 "-XX:NativeMemoryTracking=off",    // ccstr
                 "-XX:OnError='echo error'",        // ccstrlist
                 "-XX:CompileThresholdScaling=1.0", // double
                 "-XX:ErrorLogTimeout=120");        // uint64_t
-            theApp = LingeredApp.startApp(vmArgs);
+            theApp = new LingeredApp();
+            LingeredApp.startAppExactJvmOpts(theApp, vmArgs);
             System.out.println("Started LingeredApp with pid " + theApp.getPid());
 
             List<String> cmds = List.of("flags");
 
             Map<String, List<String>> expStrMap = new HashMap<>();
