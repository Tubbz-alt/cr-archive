diff a/test/hotspot/jtreg/vmTestbase/nsk/monitoring/ThreadMXBean/findMonitorDeadlockedThreads/find003/TestDescription.java b/test/hotspot/jtreg/vmTestbase/nsk/monitoring/ThreadMXBean/findMonitorDeadlockedThreads/find003/TestDescription.java
--- a/test/hotspot/jtreg/vmTestbase/nsk/monitoring/ThreadMXBean/findMonitorDeadlockedThreads/find003/TestDescription.java
+++ b/test/hotspot/jtreg/vmTestbase/nsk/monitoring/ThreadMXBean/findMonitorDeadlockedThreads/find003/TestDescription.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2017, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2017, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -28,19 +28,19 @@
  * @summary converted from VM Testbase nsk/monitoring/ThreadMXBean/findMonitorDeadlockedThreads/find003.
  * VM Testbase keywords: [quick, monitoring]
  * VM Testbase readme:
  * DESCRIPTION
  *     The test checks that
- *         ThreadMBean.findMonitorDeadlockedThreads()
+ *         ThreadMXBean.findMonitorDeadlockedThreads()
  *     does not return the id of the currect thread, since it is not deadlocked.
  *     The test implements access to the metrics via custom MBean server.
  * COMMENT
  *
  * @library /vmTestbase
  *          /test/lib
  * @run driver jdk.test.lib.FileInstaller . .
  * @run main/othervm
- *      nsk.monitoring.ThreadMBean.findMonitorDeadlockedThreads.find001
+ *      nsk.monitoring.ThreadMXBean.findMonitorDeadlockedThreads.find001
  *      -testMode=server
  *      -MBeanServer=custom
  */
 
