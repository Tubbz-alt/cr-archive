diff a/src/java.base/share/classes/java/math/RoundingMode.java b/src/java.base/share/classes/java/math/RoundingMode.java
--- a/src/java.base/share/classes/java/math/RoundingMode.java
+++ b/src/java.base/share/classes/java/math/RoundingMode.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -85,10 +85,17 @@
  * <p>This {@code enum} is intended to replace the integer-based
  * enumeration of rounding mode constants in {@link BigDecimal}
  * ({@link BigDecimal#ROUND_UP}, {@link BigDecimal#ROUND_DOWN},
  * etc. ).
  *
+ * @apiNote
+ * Five of the rounding modes declared in this class correspond to
+ * rounding direction attributes defined in the <cite>IEEE Standard
+ * for Floating-Point Arithmetic</cite>, IEEE 754-2019. Where present,
+ * this correspondence will be noted in the documentation of the
+ * particular constant.
+ *
  * @see     BigDecimal
  * @see     MathContext
  * @author  Josh Bloch
  * @author  Mike Cowlishaw
  * @author  Joseph D. Darcy
@@ -128,10 +135,12 @@
 
         /**
          * Rounding mode to round towards zero.  Never increments the digit
          * prior to a discarded fraction (i.e., truncates).  Note that this
          * rounding mode never increases the magnitude of the calculated value.
+         * This mode corresponds to the IEEE 754-2019 rounding
+         * attribute roundTowardZero.
          *
          *<p>Example:
          *<table class="striped">
          * <caption>Rounding mode DOWN Examples</caption>
          *<thead>
@@ -157,10 +166,12 @@
         /**
          * Rounding mode to round towards positive infinity.  If the
          * result is positive, behaves as for {@code RoundingMode.UP};
          * if negative, behaves as for {@code RoundingMode.DOWN}.  Note
          * that this rounding mode never decreases the calculated value.
+         * This mode corresponds to the IEEE 754-2019 rounding
+         * attribute roundTowardPositive.
          *
          *<p>Example:
          *<table class="striped">
          * <caption>Rounding mode CEILING Examples</caption>
          *<thead>
@@ -186,10 +197,12 @@
         /**
          * Rounding mode to round towards negative infinity.  If the
          * result is positive, behave as for {@code RoundingMode.DOWN};
          * if negative, behave as for {@code RoundingMode.UP}.  Note that
          * this rounding mode never increases the calculated value.
+         * This mode corresponds to the IEEE 754-2019 rounding
+         * attribute roundTowardNegative.
          *
          *<p>Example:
          *<table class="striped">
          * <caption>Rounding mode FLOOR Examples</caption>
          *<thead>
@@ -217,10 +230,12 @@
          * unless both neighbors are equidistant, in which case round up.
          * Behaves as for {@code RoundingMode.UP} if the discarded
          * fraction is &ge; 0.5; otherwise, behaves as for
          * {@code RoundingMode.DOWN}.  Note that this is the rounding
          * mode commonly taught at school.
+         * This mode corresponds to the IEEE 754-2019 rounding
+         * attribute roundTiesToAway.
          *
          *<p>Example:
          *<table class="striped">
          * <caption>Rounding mode HALF_UP Examples</caption>
          *<thead>
@@ -284,10 +299,12 @@
          * error when applied repeatedly over a sequence of calculations.
          * It is sometimes known as {@literal "Banker's rounding,"} and is
          * chiefly used in the USA.  This rounding mode is analogous to
          * the rounding policy used for {@code float} and {@code double}
          * arithmetic in Java.
+         * This mode corresponds to the IEEE 754-2019 rounding
+         * attribute roundTiesToEven.
          *
          *<p>Example:
          *<table class="striped">
          * <caption>Rounding mode HALF_EVEN Examples</caption>
          *<thead>
