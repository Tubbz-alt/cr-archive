diff a/src/java.base/share/classes/sun/nio/ch/DatagramChannelImpl.java b/src/java.base/share/classes/sun/nio/ch/DatagramChannelImpl.java
--- a/src/java.base/share/classes/sun/nio/ch/DatagramChannelImpl.java
+++ b/src/java.base/share/classes/sun/nio/ch/DatagramChannelImpl.java
@@ -39,10 +39,11 @@
 import java.net.InetSocketAddress;
 import java.net.NetworkInterface;
 import java.net.PortUnreachableException;
 import java.net.ProtocolFamily;
 import java.net.SocketAddress;
+import java.net.SocketException;
 import java.net.SocketOption;
 import java.net.SocketTimeoutException;
 import java.net.StandardProtocolFamily;
 import java.net.StandardSocketOptions;
 import java.nio.ByteBuffer;
@@ -809,10 +810,12 @@
                             sm.checkConnect(ia.getHostAddress(), isa.getPort());
                         }
                     }
                     if (ia.isLinkLocalAddress())
                         isa = IPAddressUtil.toScopedAddress(isa);
+                    if (isa.getPort() == 0)
+                        throw new SocketException("Can't send to port 0");
                     n = send(fd, src, isa);
                     if (blocking) {
                         while (IOStatus.okayToRetry(n) && isOpen()) {
                             park(Net.POLLOUT);
                             n = send(fd, src, isa);
@@ -1224,10 +1227,12 @@
             try {
                 synchronized (stateLock) {
                     ensureOpen();
                     if (check && state == ST_CONNECTED)
                         throw new AlreadyConnectedException();
+                    if (isa.getPort() == 0)
+                        throw new SocketException("Can't connect to port 0");
 
                     // ensure that the socket is bound
                     if (localAddress == null) {
                         bindInternal(null);
                     }
