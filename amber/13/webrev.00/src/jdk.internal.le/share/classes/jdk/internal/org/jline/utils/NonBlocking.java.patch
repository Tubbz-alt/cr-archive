diff a/src/jdk.internal.le/share/classes/jdk/internal/org/jline/utils/NonBlocking.java b/src/jdk.internal.le/share/classes/jdk/internal/org/jline/utils/NonBlocking.java
--- a/src/jdk.internal.le/share/classes/jdk/internal/org/jline/utils/NonBlocking.java
+++ b/src/jdk.internal.le/share/classes/jdk/internal/org/jline/utils/NonBlocking.java
@@ -195,10 +195,37 @@
             } else {
                 return READ_EXPIRED;
             }
         }
 
+        @Override
+        public int readBuffered(char[] b) throws IOException {
+            if (b == null) {
+                throw new NullPointerException();
+            } else if (b.length == 0) {
+                return 0;
+            } else {
+                if (chars.hasRemaining()) {
+                    int r = Math.min(b.length, chars.remaining());
+                    chars.get(b);
+                    return r;
+                } else {
+                    byte[] buf = new byte[b.length];
+                    int l = input.readBuffered(buf);
+                    if (l < 0) {
+                        return l;
+                    } else {
+                        ByteBuffer bytes = ByteBuffer.wrap(buf, 0, l);
+                        CharBuffer chars = CharBuffer.wrap(b);
+                        decoder.decode(bytes, chars, false);
+                        chars.flip();
+                        return chars.remaining();
+                    }
+                }
+            }
+        }
+
         @Override
         public void shutdown() {
             input.shutdown();
         }
 
