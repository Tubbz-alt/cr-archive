diff a/src/jdk.internal.le/share/classes/jdk/internal/org/jline/terminal/impl/AbstractTerminal.java b/src/jdk.internal.le/share/classes/jdk/internal/org/jline/terminal/impl/AbstractTerminal.java
--- a/src/jdk.internal.le/share/classes/jdk/internal/org/jline/terminal/impl/AbstractTerminal.java
+++ b/src/jdk.internal.le/share/classes/jdk/internal/org/jline/terminal/impl/AbstractTerminal.java
@@ -41,10 +41,11 @@
     protected final Map<Signal, SignalHandler> handlers = new HashMap<>();
     protected final Set<Capability> bools = new HashSet<>();
     protected final Map<Capability, Integer> ints = new HashMap<>();
     protected final Map<Capability, String> strings = new HashMap<>();
     protected Status status;
+    protected Runnable onClose;
 
     public AbstractTerminal(String name, String type) throws IOException {
         this(name, type, null, SignalHandler.SIG_DFL);
     }
 
@@ -55,10 +56,14 @@
         for (Signal signal : Signal.values()) {
             handlers.put(signal, signalHandler);
         }
     }
 
+    public void setOnClose(Runnable onClose) {
+        this.onClose = onClose;
+    }
+
     public Status getStatus() {
         return getStatus(true);
     }
 
     public Status getStatus(boolean create) {
@@ -83,11 +88,21 @@
         if (status != null && signal == Signal.WINCH) {
             status.resize();
         }
     }
 
-    public void close() throws IOException {
+    public final void close() throws IOException {
+        try {
+            doClose();
+        } finally {
+            if (onClose != null) {
+                onClose.run();
+            }
+        }
+    }
+
+    protected void doClose() throws IOException {
         if (status != null) {
             status.update(null);
             flush();
         }
     }
