diff a/src/hotspot/os_cpu/solaris_sparc/os_solaris_sparc.cpp b/src/hotspot/os_cpu/solaris_sparc/os_solaris_sparc.cpp
--- a/src/hotspot/os_cpu/solaris_sparc/os_solaris_sparc.cpp
+++ b/src/hotspot/os_cpu/solaris_sparc/os_solaris_sparc.cpp
@@ -44,10 +44,11 @@
 #include "runtime/interfaceSupport.inline.hpp"
 #include "runtime/java.hpp"
 #include "runtime/javaCalls.hpp"
 #include "runtime/mutexLocker.hpp"
 #include "runtime/osThread.hpp"
+#include "runtime/safepointMechanism.hpp"
 #include "runtime/sharedRuntime.hpp"
 #include "runtime/stubRoutines.hpp"
 #include "runtime/thread.inline.hpp"
 #include "runtime/timer.hpp"
 #include "utilities/events.hpp"
@@ -118,16 +119,16 @@
     DEBUG_ONLY(tty->print_cr("valid_ucontext: failed test 1");)
     return false;
   }
 
   if (thread->is_Java_thread()) {
-    if (!thread->is_in_full_stack((address)suspect)) {
+    if (!thread->is_in_full_stack_checked((address)suspect)) {
       DEBUG_ONLY(tty->print_cr("valid_ucontext: uc_link not in thread stack");)
       return false;
     }
     address _sp   = (address)((intptr_t)suspect->uc_mcontext.gregs[REG_SP] + STACK_BIAS);
-    if (!thread->is_in_full_stack(_sp) ||
+    if (!thread->is_in_full_stack_checked(_sp) ||
         !frame::is_valid_stack_pointer(((JavaThread*)thread)->base_of_stack_pointer(), (intptr_t*)_sp)) {
       DEBUG_ONLY(tty->print_cr("valid_ucontext: stackpointer not in thread stack");)
       return false;
     }
   }
@@ -443,11 +444,11 @@
     else if (thread->thread_state() == _thread_in_Java) {
       // Java thread running in Java code => find exception handler if any
       // a fault inside compiled code, the interpreter, or a stub
 
       // Support Safepoint Polling
-      if (sig == SIGSEGV && os::is_poll_address((address)info->si_addr)) {
+      if (sig == SIGSEGV && SafepointMechanism::is_poll_address((address)info->si_addr)) {
         stub = SharedRuntime::get_poll_stub(pc);
       }
 
       // Not needed on x86 solaris because verify_oops doesn't generate
       // SEGV/BUS like sparc does.
