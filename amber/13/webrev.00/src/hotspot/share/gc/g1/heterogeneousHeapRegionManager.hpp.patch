diff a/src/hotspot/share/gc/g1/heterogeneousHeapRegionManager.hpp b/src/hotspot/share/gc/g1/heterogeneousHeapRegionManager.hpp
--- a/src/hotspot/share/gc/g1/heterogeneousHeapRegionManager.hpp
+++ b/src/hotspot/share/gc/g1/heterogeneousHeapRegionManager.hpp
@@ -118,26 +118,22 @@
   // Prepare heap regions before and after full collection.
   void prepare_for_full_collection_start();
   void prepare_for_full_collection_end();
 
   virtual HeapRegion* allocate_free_region(HeapRegionType type, uint node_index);
+  virtual HeapRegion* allocate_humongous_from_free_list(uint num_regions);
+  virtual HeapRegion* allocate_humongous_allow_expand(uint num_regions);
 
   // Return maximum number of regions that heap can expand to.
   uint max_expandable_length() const;
 
   // Override. Expand in nv-dimm.
   uint expand_by(uint num_regions, WorkGang* pretouch_workers);
 
   // Override.
   uint expand_at(uint start, uint num_regions, WorkGang* pretouch_workers);
 
-  // Override. This function is called for humongous allocation, so we need to find empty regions in nv-dimm.
-  uint find_contiguous_only_empty(size_t num);
-
-  // Override. This function is called for humongous allocation, so we need to find empty or unavailable regions in nv-dimm.
-  uint find_contiguous_empty_or_unavailable(size_t num);
-
   // Overrides base class implementation to find highest free region in dram.
   uint find_highest_free(bool* expanded);
 
   // Override. This fuction is called to shrink the heap, we shrink in dram first then in nv-dimm.
   uint shrink_by(uint num_regions_to_remove);
