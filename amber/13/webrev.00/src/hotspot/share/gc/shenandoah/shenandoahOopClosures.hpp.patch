diff a/src/hotspot/share/gc/shenandoah/shenandoahOopClosures.hpp b/src/hotspot/share/gc/shenandoah/shenandoahOopClosures.hpp
--- a/src/hotspot/share/gc/shenandoah/shenandoahOopClosures.hpp
+++ b/src/hotspot/share/gc/shenandoah/shenandoahOopClosures.hpp
@@ -27,11 +27,10 @@
 
 #include "gc/shared/referenceProcessor.hpp"
 #include "gc/shenandoah/shenandoahHeap.hpp"
 #include "gc/shenandoah/shenandoahStrDedupQueue.hpp"
 #include "gc/shenandoah/shenandoahTaskqueue.hpp"
-#include "gc/shenandoah/shenandoahTraversalGC.hpp"
 #include "memory/iterator.hpp"
 #include "runtime/thread.hpp"
 
 enum UpdateRefsMode {
   NONE,       // No reference updating
@@ -198,161 +197,6 @@
 
   virtual void do_oop(narrowOop* p) { do_oop_work(p); }
   virtual void do_oop(oop* p)       { do_oop_work(p); }
 };
 
-class ShenandoahTraversalSuperClosure : public MetadataVisitingOopIterateClosure {
-private:
-  ShenandoahTraversalGC* const _traversal_gc;
-  Thread* const _thread;
-  ShenandoahObjToScanQueue* const _queue;
-  ShenandoahMarkingContext* const _mark_context;
-protected:
-  ShenandoahTraversalSuperClosure(ShenandoahObjToScanQueue* q, ReferenceProcessor* rp) :
-    MetadataVisitingOopIterateClosure(rp),
-    _traversal_gc(ShenandoahHeap::heap()->traversal_gc()),
-    _thread(Thread::current()),
-    _queue(q),
-    _mark_context(ShenandoahHeap::heap()->marking_context()) {
-  }
-
-  template <class T, bool STRING_DEDUP, bool DEGEN, bool ATOMIC_UPDATE>
-  void work(T* p);
-
-};
-
-class ShenandoahTraversalRootsClosure : public ShenandoahTraversalSuperClosure {
-private:
-  template <class T>
-  inline void do_oop_work(T* p)     { work<T, false, false, false>(p); }
-
-public:
-  ShenandoahTraversalRootsClosure(ShenandoahObjToScanQueue* q, ReferenceProcessor* rp) :
-    ShenandoahTraversalSuperClosure(q, rp) {}
-
-  virtual void do_oop(narrowOop* p) { do_oop_work(p); }
-  virtual void do_oop(oop* p)       { do_oop_work(p); }
-
-  virtual bool do_metadata()        { return false; }
-};
-
-class ShenandoahTraversalClosure : public ShenandoahTraversalSuperClosure {
-private:
-  template <class T>
-  inline void do_oop_work(T* p)     { work<T, false, false, true>(p); }
-
-public:
-  ShenandoahTraversalClosure(ShenandoahObjToScanQueue* q, ReferenceProcessor* rp) :
-    ShenandoahTraversalSuperClosure(q, rp) {}
-
-  virtual void do_oop(narrowOop* p) { do_oop_work(p); }
-  virtual void do_oop(oop* p)       { do_oop_work(p); }
-
-  virtual bool do_metadata()        { return false; }
-};
-
-class ShenandoahTraversalMetadataClosure : public ShenandoahTraversalSuperClosure {
-private:
-  template <class T>
-  inline void do_oop_work(T* p)     { work<T, false, false, true>(p); }
-
-public:
-  ShenandoahTraversalMetadataClosure(ShenandoahObjToScanQueue* q, ReferenceProcessor* rp) :
-    ShenandoahTraversalSuperClosure(q, rp) {}
-
-  virtual void do_oop(narrowOop* p) { do_oop_work(p); }
-  virtual void do_oop(oop* p)       { do_oop_work(p); }
-
-  virtual bool do_metadata()        { return true; }
-};
-
-class ShenandoahTraversalDedupClosure : public ShenandoahTraversalSuperClosure {
-private:
-  template <class T>
-  inline void do_oop_work(T* p)     { work<T, true, false, true>(p); }
-
-public:
-  ShenandoahTraversalDedupClosure(ShenandoahObjToScanQueue* q, ReferenceProcessor* rp) :
-    ShenandoahTraversalSuperClosure(q, rp) {}
-
-  virtual void do_oop(narrowOop* p) { do_oop_work(p); }
-  virtual void do_oop(oop* p)       { do_oop_work(p); }
-
-  virtual bool do_metadata()        { return false; }
-};
-
-class ShenandoahTraversalMetadataDedupClosure : public ShenandoahTraversalSuperClosure {
-private:
-  template <class T>
-  inline void do_oop_work(T* p)     { work<T, true, false, true>(p); }
-
-public:
-  ShenandoahTraversalMetadataDedupClosure(ShenandoahObjToScanQueue* q, ReferenceProcessor* rp) :
-    ShenandoahTraversalSuperClosure(q, rp) {}
-
-  virtual void do_oop(narrowOop* p) { do_oop_work(p); }
-  virtual void do_oop(oop* p)       { do_oop_work(p); }
-
-  virtual bool do_metadata()        { return true; }
-};
-
-class ShenandoahTraversalDegenClosure : public ShenandoahTraversalSuperClosure {
-private:
-  template <class T>
-  inline void do_oop_work(T* p)     { work<T, false, true, false>(p); }
-
-public:
-  ShenandoahTraversalDegenClosure(ShenandoahObjToScanQueue* q, ReferenceProcessor* rp) :
-    ShenandoahTraversalSuperClosure(q, rp) {}
-
-  virtual void do_oop(narrowOop* p) { do_oop_work(p); }
-  virtual void do_oop(oop* p)       { do_oop_work(p); }
-
-  virtual bool do_metadata()        { return false; }
-};
-
-class ShenandoahTraversalMetadataDegenClosure : public ShenandoahTraversalSuperClosure {
-private:
-  template <class T>
-  inline void do_oop_work(T* p)     { work<T, false, true, false>(p); }
-
-public:
-  ShenandoahTraversalMetadataDegenClosure(ShenandoahObjToScanQueue* q, ReferenceProcessor* rp) :
-    ShenandoahTraversalSuperClosure(q, rp) {}
-
-  virtual void do_oop(narrowOop* p) { do_oop_work(p); }
-  virtual void do_oop(oop* p)       { do_oop_work(p); }
-
-  virtual bool do_metadata()        { return true; }
-};
-
-class ShenandoahTraversalDedupDegenClosure : public ShenandoahTraversalSuperClosure {
-private:
-  template <class T>
-  inline void do_oop_work(T* p)     { work<T, true, true, false>(p); }
-
-public:
-  ShenandoahTraversalDedupDegenClosure(ShenandoahObjToScanQueue* q, ReferenceProcessor* rp) :
-    ShenandoahTraversalSuperClosure(q, rp) {}
-
-  virtual void do_oop(narrowOop* p) { do_oop_work(p); }
-  virtual void do_oop(oop* p)       { do_oop_work(p); }
-
-  virtual bool do_metadata()        { return false; }
-};
-
-class ShenandoahTraversalMetadataDedupDegenClosure : public ShenandoahTraversalSuperClosure {
-private:
-  template <class T>
-  inline void do_oop_work(T* p)     { work<T, true, true, false>(p); }
-
-public:
-  ShenandoahTraversalMetadataDedupDegenClosure(ShenandoahObjToScanQueue* q, ReferenceProcessor* rp) :
-    ShenandoahTraversalSuperClosure(q, rp) {}
-
-  virtual void do_oop(narrowOop* p) { do_oop_work(p); }
-  virtual void do_oop(oop* p)       { do_oop_work(p); }
-
-  virtual bool do_metadata()        { return true; }
-};
-
 #endif // SHARE_GC_SHENANDOAH_SHENANDOAHOOPCLOSURES_HPP
