diff a/src/java.desktop/macosx/classes/sun/lwawt/macosx/CAccessible.java b/src/java.desktop/macosx/classes/sun/lwawt/macosx/CAccessible.java
--- a/src/java.desktop/macosx/classes/sun/lwawt/macosx/CAccessible.java
+++ b/src/java.desktop/macosx/classes/sun/lwawt/macosx/CAccessible.java
@@ -42,10 +42,11 @@
 import static javax.accessibility.AccessibleContext.ACCESSIBLE_SELECTION_PROPERTY;
 import static javax.accessibility.AccessibleContext.ACCESSIBLE_STATE_PROPERTY;
 import static javax.accessibility.AccessibleContext.ACCESSIBLE_TABLE_MODEL_CHANGED;
 import static javax.accessibility.AccessibleContext.ACCESSIBLE_TEXT_PROPERTY;
 import static javax.accessibility.AccessibleContext.ACCESSIBLE_NAME_PROPERTY;
+import static javax.accessibility.AccessibleContext.ACCESSIBLE_VALUE_PROPERTY;
 
 import javax.accessibility.AccessibleRole;
 import javax.accessibility.AccessibleState;
 import sun.awt.AWTAccessor;
 
@@ -104,17 +105,10 @@
     public void addNotificationListeners(Component c) {
         if (c instanceof Accessible) {
             AccessibleContext ac = ((Accessible)c).getAccessibleContext();
             ac.addPropertyChangeListener(new AXChangeNotifier());
         }
-        if (c instanceof JProgressBar) {
-            JProgressBar pb = (JProgressBar) c;
-            pb.addChangeListener(new AXProgressChangeNotifier());
-        } else if (c instanceof JSlider) {
-            JSlider slider = (JSlider) c;
-            slider.addChangeListener(new AXProgressChangeNotifier());
-        }
     }
 
     private class AXChangeNotifier implements PropertyChangeListener {
 
         @Override
@@ -171,21 +165,22 @@
                 } else if (name.compareTo(ACCESSIBLE_NAME_PROPERTY) == 0) {
                     //for now trigger only for JTabbedPane.
                     if (e.getSource() instanceof JTabbedPane) {
                         titleChanged(ptr);
                     }
+                } else if (name.compareTo(ACCESSIBLE_VALUE_PROPERTY) == 0) {
+                    AccessibleRole thisRole = accessible.getAccessibleContext()
+                                                        .getAccessibleRole();
+                    if (thisRole == AccessibleRole.SLIDER ||
+                            thisRole == AccessibleRole.PROGRESS_BAR) {
+                        valueChanged(ptr);
+                    }
                 }
             }
         }
     }
 
-    private class AXProgressChangeNotifier implements ChangeListener {
-        @Override
-        public void stateChanged(ChangeEvent e) {
-            if (ptr != 0) valueChanged(ptr);
-        }
-    }
 
     static Accessible getSwingAccessible(final Accessible a) {
         return (a instanceof CAccessible) ? ((CAccessible)a).accessible : a;
     }
 
