diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/Content.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/Content.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/Content.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/Content.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2010, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2010, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -57,21 +57,40 @@
         return out.toString();
     }
 
     /**
      * Adds content to the existing content.
+     * This is an optional operation.
      *
-     * @param content content that needs to be added
+     * @implSpec This implementation throws {@linkplain UnsupportedOperationException}.
+     *
+     * @param content content to be added
+     * @return this object
+     * @throws UnsupportedOperationException if this operation is not supported by
+     *                                       a particular implementation
+     * @throws IllegalArgumentException      if the content is not suitable to be added
      */
-    public abstract void add(Content content);
+    public Content add(Content content) {
+        throw new UnsupportedOperationException();
+    }
 
     /**
      * Adds a string content to the existing content.
+     * This is an optional operation.
+     *
+     * @implSpec
+     * This implementation throws {@linkplain UnsupportedOperationException}.
      *
      * @param stringContent the string content to be added
+     * @return this object
+     * @throws UnsupportedOperationException if this operation is not supported by
+     *                                       a particular implementation
+     * @throws IllegalArgumentException      if the content is not suitable to be added
      */
-    public abstract void add(CharSequence stringContent);
+    public Content add(CharSequence stringContent) {
+        throw new UnsupportedOperationException();
+    }
 
     /**
      * Writes content to a writer.
      *
      * @param writer the writer
@@ -103,17 +122,6 @@
      * @return the number of characters of plain text content in this
      */
     public int charCount() {
         return 0;
     }
-
-    /**
-     * Checks for null values.
-     *
-     * @param <T> the type of the item being checked
-     * @param t reference type to check for null values
-     * @return the reference type if not null or else throws a null pointer exception
-     */
-    protected static <T> T nullCheck(T t) {
-        return Objects.requireNonNull(t);
-    }
 }
