diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/SubWriterHolderWriter.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/SubWriterHolderWriter.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/SubWriterHolderWriter.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/SubWriterHolderWriter.java
@@ -32,11 +32,11 @@
 
 import com.sun.source.doctree.DocTree;
 import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;
 import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;
 import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;
-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTag;
+import jdk.javadoc.internal.doclets.formats.html.markup.TagName;
 import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;
 import jdk.javadoc.internal.doclets.toolkit.Content;
 import jdk.javadoc.internal.doclets.toolkit.util.DocPath;
 
 /**
@@ -205,17 +205,55 @@
      * Get the member header tree
      *
      * @return a content tree for the member header
      */
     public Content getMemberTreeHeader() {
-        HtmlTree ul = new HtmlTree(HtmlTag.UL);
+        HtmlTree ul = new HtmlTree(TagName.UL);
         ul.setStyle(HtmlStyle.blockList);
         return ul;
     }
 
+    /**
+     * Returns a list to be used for the list of details for members of a given kind.
+     *
+     * @return a list to be used for the list of details for members of a given kind
+     */
+    public Content getDetailsList() {
+        return new HtmlTree(TagName.UL).setStyle(HtmlStyle.detailsList);
+    }
+
+    /**
+     * Returns an item for the list of details for members of a given kind.
+     *
+     * @param content content for the item
+     * @return an item for the list of details for members of a given kind
+     */
+    public Content getDetailsListItem(Content content) {
+        return HtmlTree.LI(content);
+    }
+
+    /**
+     * Returns a list to be used for the list of members of a given kind.
+     *
+     * @return a list to be used for the list of members of a given kind
+     */
+    public Content getMemberList() {
+        return new HtmlTree(TagName.UL).setStyle(HtmlStyle.memberList);
+    }
+
+    /**
+     * Returns an item for the list of elements of a given kind
+     *
+     * @param content content for the item
+     * @return an item for the list of elements of a given kind
+     */
+    public Content getMemberListItem(Content content) {
+        return HtmlTree.LI(content);
+    }
+
     public Content getMemberInheritedTree() {
-        HtmlTree div = new HtmlTree(HtmlTag.DIV);
+        HtmlTree div = new HtmlTree(TagName.DIV);
         div.setStyle(HtmlStyle.inheritedList);
         return div;
     }
 
     /**
@@ -236,11 +274,11 @@
      *
      * @param contentTree the tree used to generate the complete member tree
      * @return a content tree for the member
      */
     public Content getMemberTree(Content contentTree) {
-        return HtmlTree.LI(HtmlStyle.blockList, contentTree);
+        return HtmlTree.LI(contentTree);
     }
 
     /**
      * Get the member summary tree
      *
