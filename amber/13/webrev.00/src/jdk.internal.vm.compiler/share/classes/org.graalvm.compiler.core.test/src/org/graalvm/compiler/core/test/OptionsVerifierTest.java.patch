diff a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.core.test/src/org/graalvm/compiler/core/test/OptionsVerifierTest.java b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.core.test/src/org/graalvm/compiler/core/test/OptionsVerifierTest.java
--- a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.core.test/src/org/graalvm/compiler/core/test/OptionsVerifierTest.java
+++ b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.core.test/src/org/graalvm/compiler/core/test/OptionsVerifierTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2014, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2014, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -55,11 +55,13 @@
  */
 public class OptionsVerifierTest {
 
     private static Set<String> WHITELIST = new TreeSet<>(Arrays.asList(//
                     // Generated options delegating default values to PolyglotCompilerOptions
-                    "org.graalvm.compiler.truffle.compiler.SharedTruffleCompilerOptions"));
+                    "org.graalvm.compiler.truffle.compiler.SharedTruffleCompilerOptions",
+                    // Deprecated options delegating default values to PolyglotCompilerOptions
+                    "org.graalvm.compiler.truffle.compiler.TruffleCompilerOptions"));
 
     @Test
     public void verifyOptions() throws IOException {
         HashSet<Class<?>> checked = new HashSet<>();
         for (OptionDescriptors opts : OptionsParser.getOptionsLoader()) {
