diff a/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Symbol.java b/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Symbol.java
--- a/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Symbol.java
+++ b/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Symbol.java
@@ -1483,19 +1483,19 @@
                 }
             }
             return null;
         }
 
-        public RecordComponent getRecordComponent(JCVariableDecl var, boolean addIfMissing) {
+        public RecordComponent getRecordComponent(JCVariableDecl var, boolean addIfMissing, List<JCAnnotation> annotations) {
             for (RecordComponent rc : recordComponents) {
                 if (rc.name == var.name) {
                     return rc;
                 }
             }
             RecordComponent rc = null;
             if (addIfMissing) {
-                recordComponents = recordComponents.append(rc = new RecordComponent(var));
+                recordComponents = recordComponents.append(rc = new RecordComponent(var, annotations));
             }
             return rc;
         }
 
         @Override @DefinedBy(Api.LANGUAGE_MODEL)
@@ -1752,13 +1752,13 @@
         private final List<JCAnnotation> originalAnnos;
 
         /**
          * Construct a record component, given its flags, name, type and owner.
          */
-        public RecordComponent(JCVariableDecl fieldDecl) {
+        public RecordComponent(JCVariableDecl fieldDecl, List<JCAnnotation> annotations) {
             super(PUBLIC, fieldDecl.sym.name, fieldDecl.sym.type, fieldDecl.sym.owner);
-            this.originalAnnos = fieldDecl.mods.annotations;
+            this.originalAnnos = annotations;
         }
 
         public List<JCAnnotation> getOriginalAnnos() { return originalAnnos; }
 
         @Override @DefinedBy(Api.LANGUAGE_MODEL)
