diff a/make/common/modules/LauncherCommon.gmk b/make/common/modules/LauncherCommon.gmk
--- a/make/common/modules/LauncherCommon.gmk
+++ b/make/common/modules/LauncherCommon.gmk
@@ -51,11 +51,10 @@
 
 ifeq ($(call isTargetOs, ios), true)
   LAUNCHER_CFLAGS += -I$(TOPDIR)/src/java.base/macosx/native/libjli
 fi
 
-GLOBAL_VERSION_INFO_RESOURCE := $(TOPDIR)/src/java.base/windows/native/common/version.rc
 MACOSX_PLIST_DIR := $(TOPDIR)/src/java.base/macosx/native/launcher
 JAVA_MANIFEST := $(TOPDIR)/src/java.base/windows/native/launcher/java.manifest
 
 ################################################################################
 # Build standard launcher.
@@ -74,11 +73,11 @@
 # EXTRA_JAVA_ARGS Processed into a -DEXTRA_JAVA_ARGS and is prepended
 #     before JAVA_ARGS to CFLAGS, primarily to allow long string literal
 #     compile time defines exceeding Visual Studio 2013 limitations.
 # CFLAGS   Additional CFLAGS
 # CFLAGS_windows   Additional CFLAGS_windows
-# EXTRA_RC_FLAGS   Additional EXTRA_RC_FLAGS
+# EXTRA_RCFLAGS   Additional EXTRA_RCFLAGS
 # MACOSX_PRIVILEGED   On macosx, allow to access other processes
 # OPTIMIZATION   Override default optimization level (LOW)
 # OUTPUT_DIR   Override default output directory
 # VERSION_INFO_RESOURCE   Override default Windows resource file
 SetupBuildLauncher = $(NamedParamsMacroTemplate)
@@ -163,11 +162,11 @@
       LIBS_aix := -ljli_static, \
       LIBS_windows := $$($1_WINDOWS_JLI_LIB) \
           $(SUPPORT_OUTPUTDIR)/native/java.base/libjava/java.lib, \
       OUTPUT_DIR := $$($1_OUTPUT_DIR), \
       VERSIONINFO_RESOURCE := $$($1_VERSION_INFO_RESOURCE), \
-      EXTRA_RC_FLAGS := $$($1_EXTRA_RC_FLAGS), \
+      EXTRA_RCFLAGS := $$($1_EXTRA_RCFLAGS), \
       MANIFEST := $(JAVA_MANIFEST), \
       MANIFEST_VERSION := $(VERSION_NUMBER_FOUR_POSITIONS), \
   ))
 
   $1 += $$(BUILD_LAUNCHER_$1)
