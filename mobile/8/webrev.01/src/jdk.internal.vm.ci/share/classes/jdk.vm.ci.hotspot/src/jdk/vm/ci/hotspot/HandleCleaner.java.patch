diff a/src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.hotspot/src/jdk/vm/ci/hotspot/HandleCleaner.java b/src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.hotspot/src/jdk/vm/ci/hotspot/HandleCleaner.java
--- a/src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.hotspot/src/jdk/vm/ci/hotspot/HandleCleaner.java
+++ b/src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.hotspot/src/jdk/vm/ci/hotspot/HandleCleaner.java
@@ -63,12 +63,12 @@
             // an object on the HotSpot heap so we call into the
             // VM to set the target of an object handle to this value.
             CompilerToVM.compilerToVM().deleteGlobalHandle(handle);
         } else {
             // Setting the target of a jmetadata handle to 0 enables
-            // the handle to be reused. See MetadataHandleBlock in
-            // jvmciRuntime.cpp for more info.
+            // the handle to be reused. See MetadataHandles in
+            // metadataHandles.hpp for more info.
             long value = UNSAFE.getLong(null, handle);
             UNSAFE.compareAndSetLong(null, handle, value, 0);
         }
     }
 
