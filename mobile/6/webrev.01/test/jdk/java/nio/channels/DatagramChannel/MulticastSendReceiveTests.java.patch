diff a/test/jdk/java/nio/channels/DatagramChannel/MulticastSendReceiveTests.java b/test/jdk/java/nio/channels/DatagramChannel/MulticastSendReceiveTests.java
--- a/test/jdk/java/nio/channels/DatagramChannel/MulticastSendReceiveTests.java
+++ b/test/jdk/java/nio/channels/DatagramChannel/MulticastSendReceiveTests.java
@@ -202,11 +202,11 @@
                 id = sendDatagram(source, nif, group, port);
                 receiveDatagram(dc, source, id);
             } catch (UnsupportedOperationException x) {
                 String os = System.getProperty("os.name");
                 // Exclude-mode filtering supported on these platforms so UOE should never be thrown
-                if (os.equals("SunOS") || os.equals("Linux"))
+                if (os.equals("Linux"))
                     throw x;
                 System.out.println("Exclude-mode filtering not supported!");
             }
 
             key.drop();
@@ -232,11 +232,11 @@
                 id = sendDatagram(source, nif, group, port);
                 receiveDatagram(dc, source, id);
             } catch (UnsupportedOperationException x) {
                 String os = System.getProperty("os.name");
                 // Include-mode filtering supported on these platforms so UOE should never be thrown
-                if (os.equals("SunOS") || os.equals("Linux"))
+                if (os.equals("Linux"))
                     throw x;
                 System.out.println("Include-mode filtering not supported!");
             }
         }
     }
@@ -257,11 +257,10 @@
 
         // Platforms that allow dual sockets join IPv4 multicast groups
         boolean canIPv6JoinIPv4Group =
                 Platform.isLinux() ||
                 Platform.isOSX() ||
-                Platform.isSolaris() ||
                 Platform.isWindows();
 
         for (NetworkInterface nif : ip4MulticastInterfaces) {
             InetAddress source = config.ip4Addresses(nif).iterator().next();
             test(UNSPEC, nif, ip4Group, source);
