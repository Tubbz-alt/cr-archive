diff a/test/jdk/java/nio/ByteOrder/NativeOrder.java b/test/jdk/java/nio/ByteOrder/NativeOrder.java
--- a/test/jdk/java/nio/ByteOrder/NativeOrder.java
+++ b/test/jdk/java/nio/ByteOrder/NativeOrder.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2001, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2001, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -38,12 +38,11 @@
         if (((arch.equals("i386") && (bo != ByteOrder.LITTLE_ENDIAN))) ||
             ((arch.equals("amd64") && (bo != ByteOrder.LITTLE_ENDIAN))) ||
             ((arch.equals("x86_64") && (bo != ByteOrder.LITTLE_ENDIAN))) ||
             ((arch.equals("ppc64") && (bo != ByteOrder.BIG_ENDIAN))) ||
             ((arch.equals("ppc64le") && (bo != ByteOrder.LITTLE_ENDIAN))) ||
-            ((arch.equals("s390x") && (bo != ByteOrder.BIG_ENDIAN))) ||
-            ((arch.equals("sparc") && (bo != ByteOrder.BIG_ENDIAN)))) {
+            ((arch.equals("s390x") && (bo != ByteOrder.BIG_ENDIAN)))) {
             throw new Exception("Wrong byte order");
         }
         System.err.println("test is OK");
     }
 
