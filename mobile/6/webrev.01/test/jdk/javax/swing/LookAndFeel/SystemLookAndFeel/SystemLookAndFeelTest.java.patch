diff a/test/jdk/javax/swing/LookAndFeel/SystemLookAndFeel/SystemLookAndFeelTest.java b/test/jdk/javax/swing/LookAndFeel/SystemLookAndFeel/SystemLookAndFeelTest.java
--- a/test/jdk/javax/swing/LookAndFeel/SystemLookAndFeel/SystemLookAndFeelTest.java
+++ b/test/jdk/javax/swing/LookAndFeel/SystemLookAndFeel/SystemLookAndFeelTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2019, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -49,11 +49,11 @@
         String expLAF = null;
         if (os.contains("windows")) {
             expLAF = "com.sun.java.swing.plaf.windows.WindowsLookAndFeel";
         } else if (os.contains("macos")) {
             expLAF = "com.apple.laf.AquaLookAndFeel";
-        } else if (os.contains("linux") || os.contains("sunos")) {
+        } else if (os.contains("linux")) {
            /*
             * The implementation keys off the following desktop setting to
             * decide if GTK is an appropriate system L&F.
             * In its absence, there probably isn't support for the GTK L&F
             * anyway. It does not tell us if the GTK libraries are available
@@ -65,12 +65,10 @@
            System.out.println("Gnome desktop session ID is " + gnome);
            if (gnome != null) {
                expLAF = "com.sun.java.swing.plaf.gtk.GTKLookAndFeel";
            } else if (os.contains("linux")) {
                expLAF = "javax.swing.plaf.metal.MetalLookAndFeel";
-           } else if (os.contains("sunos")) {
-               expLAF = "com.sun.java.swing.plaf.motif.MotifLookAndFeel";
            }
        }
         System.out.println("Expected System LAF is " + expLAF);
         if (expLAF == null) {
             System.out.println("No match for expected LAF, unknown OS ?");
