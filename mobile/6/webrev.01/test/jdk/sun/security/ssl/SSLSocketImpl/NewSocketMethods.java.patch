diff a/test/jdk/sun/security/ssl/SSLSocketImpl/NewSocketMethods.java b/test/jdk/sun/security/ssl/SSLSocketImpl/NewSocketMethods.java
--- a/test/jdk/sun/security/ssl/SSLSocketImpl/NewSocketMethods.java
+++ b/test/jdk/sun/security/ssl/SSLSocketImpl/NewSocketMethods.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2001, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2001, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -201,16 +201,13 @@
                         + socket.isInputShutdown());
             socket.setReuseAddress(true);
             System.out.println("Client getReuseAddress(): "
                         + socket.getReuseAddress());
 
-            // Solaris does not support set/get of IPV6_TCLASS when connected
-            if (!"SunOS".equals(System.getProperty("os.name"))) {
-                socket.setTrafficClass(8);
-                System.out.println("Client getTrafficClass(): "
-                        + socket.getTrafficClass());
-            }
+            socket.setTrafficClass(8);
+            System.out.println("Client getTrafficClass(): "
+                    + socket.getTrafficClass());
 
             os.write(237);
             os.flush();
             System.out.println("Client read: " + is.read());
             socket.close();
