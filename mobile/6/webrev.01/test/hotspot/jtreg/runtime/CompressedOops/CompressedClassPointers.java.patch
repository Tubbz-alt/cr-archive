diff a/test/hotspot/jtreg/runtime/CompressedOops/CompressedClassPointers.java b/test/hotspot/jtreg/runtime/CompressedOops/CompressedClassPointers.java
--- a/test/hotspot/jtreg/runtime/CompressedOops/CompressedClassPointers.java
+++ b/test/hotspot/jtreg/runtime/CompressedOops/CompressedClassPointers.java
@@ -257,24 +257,18 @@
           output.shouldHaveExitValue(1);
         }
     }
 
     public static void main(String[] args) throws Exception {
-        if (Platform.isSolaris()) {
-             String name = System.getProperty("os.version");
-             if (name.equals("5.10")) {
-                throw new SkippedException("Solaris 10 can't mmap compressed oops space without a base");
-             }
-        }
         smallHeapTest();
         smallHeapTestWith1G();
         largeHeapTest();
         largePagesTest();
         heapBaseMinAddressTest();
         sharingTest();
 
-        boolean ccpRequiresCoop = Platform.isAArch64() || Platform.isSparc();
+        boolean ccpRequiresCoop = Platform.isAArch64();
 
         if (!ccpRequiresCoop && !Platform.isOSX()) {
             // Testing compressed class pointers without compressed oops.
             // This is only possible if the platform supports it. Notably,
             // on macOS, when compressed oops is disabled and the heap is
