diff a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/debugger/remote/RemoteDebuggerClient.java b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/debugger/remote/RemoteDebuggerClient.java
--- a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/debugger/remote/RemoteDebuggerClient.java
+++ b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/debugger/remote/RemoteDebuggerClient.java
@@ -28,11 +28,10 @@
 import java.util.*;
 import java.lang.reflect.*;
 
 import sun.jvm.hotspot.debugger.*;
 import sun.jvm.hotspot.debugger.cdbg.*;
-import sun.jvm.hotspot.debugger.remote.sparc.*;
 import sun.jvm.hotspot.debugger.remote.x86.*;
 import sun.jvm.hotspot.debugger.remote.amd64.*;
 import sun.jvm.hotspot.debugger.remote.ppc64.*;
 
 /** An implementation of Debugger which wraps a
@@ -55,15 +54,11 @@
       utils = new DebuggerUtilities(machDesc.getAddressSize(), machDesc.isBigEndian());
       int cacheNumPages;
       int cachePageSize;
       String cpu = remoteDebugger.getCPU();
       // page size. (FIXME: should pick this up from the remoteDebugger.)
-      if (cpu.equals("sparc")) {
-        threadFactory = new RemoteSPARCThreadFactory(this);
-        cachePageSize = 8192;
-        cacheNumPages = parseCacheNumPagesProperty(cacheSize / cachePageSize);
-      } else if (cpu.equals("x86")) {
+      if (cpu.equals("x86")) {
         threadFactory = new RemoteX86ThreadFactory(this);
         cachePageSize = 4096;
         cacheNumPages = parseCacheNumPagesProperty(cacheSize / cachePageSize);
         unalignedAccessesOkay = true;
       } else if (cpu.equals("amd64") || cpu.equals("x86_64")) {
