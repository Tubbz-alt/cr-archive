diff a/src/jdk.charsets/share/classes/sun/nio/cs/ext/JISAutoDetect.java b/src/jdk.charsets/share/classes/sun/nio/cs/ext/JISAutoDetect.java
--- a/src/jdk.charsets/share/classes/sun/nio/cs/ext/JISAutoDetect.java
+++ b/src/jdk.charsets/share/classes/sun/nio/cs/ext/JISAutoDetect.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2010, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -95,11 +95,11 @@
     private static class Decoder extends CharsetDecoder {
         private final static String osName = AccessController.doPrivileged(
             (PrivilegedAction<String>) () -> System.getProperty("os.name"));
 
         private final static String SJISName = getSJISName();
-        private final static String EUCJPName = getEUCJPName();
+        private final static String EUCJPName = "EUC_JP";
         private DelegatableDecoder detectedDecoder = null;
 
         public Decoder(Charset cs) {
             super(cs, 0.5f, 1.0f);
         }
@@ -223,26 +223,13 @@
 
         /**
          * Returned Shift_JIS Charset name is OS dependent
          */
         private static String getSJISName() {
-            if (osName.equals("Solaris") || osName.equals("SunOS"))
-                return("PCK");
-            else if (osName.startsWith("Windows"))
+            if (osName.startsWith("Windows"))
                 return("windows-31J");
             else
                 return("Shift_JIS");
         }
 
-        /**
-         * Returned EUC-JP Charset name is OS dependent
-         */
-
-        private static String getEUCJPName() {
-            if (osName.equals("Solaris") || osName.equals("SunOS"))
-                return("x-eucjp-open");
-            else
-                return("EUC_JP");
-        }
-
     }
 }
