diff a/src/hotspot/share/gc/shared/memset_with_concurrent_readers.hpp b/src/hotspot/share/gc/shared/memset_with_concurrent_readers.hpp
--- a/src/hotspot/share/gc/shared/memset_with_concurrent_readers.hpp
+++ b/src/hotspot/share/gc/shared/memset_with_concurrent_readers.hpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2015, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2015, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -30,21 +30,10 @@
 #include <stddef.h>
 #include <string.h>
 
 // Fill a block of memory with value, like memset, but with the
 // understanding that there may be concurrent readers of that memory.
-void memset_with_concurrent_readers(void* to, int value, size_t size);
-
-#ifdef SPARC
-
-// SPARC requires special handling.  See SPARC-specific definition.
-
-#else
-// All others just use memset.
-
 inline void memset_with_concurrent_readers(void* to, int value, size_t size) {
   ::memset(to, value, size);
 }
 
-#endif // End of target dispatch.
-
 #endif // SHARE_GC_SHARED_MEMSET_WITH_CONCURRENT_READERS_HPP
