diff a/src/hotspot/share/utilities/dtrace.hpp b/src/hotspot/share/utilities/dtrace.hpp
--- a/src/hotspot/share/utilities/dtrace.hpp
+++ b/src/hotspot/share/utilities/dtrace.hpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2005, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2005, 2020, Oracle and/or its affiliates. All rights reserved.
  * Copyright (c) 2009, 2012 Red Hat, Inc.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
@@ -27,38 +27,24 @@
 #define SHARE_UTILITIES_DTRACE_HPP
 
 #if defined(DTRACE_ENABLED)
 
 #include <sys/sdt.h>
+#include <sys/types.h>
 
 #define DTRACE_ONLY(x) x
 #define NOT_DTRACE(x)
 
-#if defined(SOLARIS)
-// Work around dtrace tail call bug 6672627 until it is fixed in solaris 10.
-#define HS_DTRACE_WORKAROUND_TAIL_CALL_BUG() \
-  do { volatile size_t dtrace_workaround_tail_call_bug = 1; } while (0)
-#elif defined(LINUX)
-#define HS_DTRACE_WORKAROUND_TAIL_CALL_BUG()
-#elif defined(__APPLE__)
-#define HS_DTRACE_WORKAROUND_TAIL_CALL_BUG()
-#include <sys/types.h>
-#else
-#error "dtrace enabled for unknown os"
-#endif /* defined(SOLARIS) */
-
 #include "dtracefiles/hotspot.h"
 #include "dtracefiles/hotspot_jni.h"
 #include "dtracefiles/hs_private.h"
 
 #else /* defined(DTRACE_ENABLED) */
 
 #define DTRACE_ONLY(x)
 #define NOT_DTRACE(x) x
 
-#define HS_DTRACE_WORKAROUND_TAIL_CALL_BUG()
-
 #include "dtrace_disabled.hpp"
 
 #endif /* defined(DTRACE_ENABLED) */
 
 #endif // SHARE_UTILITIES_DTRACE_HPP
