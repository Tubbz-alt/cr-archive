diff a/src/hotspot/share/utilities/macros.hpp b/src/hotspot/share/utilities/macros.hpp
--- a/src/hotspot/share/utilities/macros.hpp
+++ b/src/hotspot/share/utilities/macros.hpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1997, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -418,18 +418,10 @@
 #else
 #define AIX_ONLY(code)
 #define NOT_AIX(code) code
 #endif
 
-#ifdef SOLARIS
-#define SOLARIS_ONLY(code) code
-#define NOT_SOLARIS(code)
-#else
-#define SOLARIS_ONLY(code)
-#define NOT_SOLARIS(code) code
-#endif
-
 #ifdef _WINDOWS
 #define WINDOWS_ONLY(code) code
 #define NOT_WINDOWS(code)
 #else
 #define WINDOWS_ONLY(code)
@@ -507,18 +499,10 @@
 #else
 #define S390_ONLY(code)
 #define NOT_S390(code) code
 #endif
 
-#ifdef SPARC
-#define SPARC_ONLY(code) code
-#define NOT_SPARC(code)
-#else
-#define SPARC_ONLY(code)
-#define NOT_SPARC(code) code
-#endif
-
 #if defined(PPC32) || defined(PPC64)
 #ifndef PPC
 #define PPC
 #endif
 #define PPC_ONLY(code) code
@@ -599,13 +583,13 @@
 // Include platform dependent files.
 //
 // This macro constructs from basename and INCLUDE_SUFFIX_OS /
 // INCLUDE_SUFFIX_CPU / INCLUDE_SUFFIX_COMPILER, which are set on
 // the command line, the name of platform dependent files to be included.
-// Example: INCLUDE_SUFFIX_OS=_linux / INCLUDE_SUFFIX_CPU=_sparc
-//   CPU_HEADER_INLINE(macroAssembler) --> macroAssembler_sparc.inline.hpp
-//   OS_CPU_HEADER(vmStructs)          --> vmStructs_linux_sparc.hpp
+// Example: INCLUDE_SUFFIX_OS=_linux / INCLUDE_SUFFIX_CPU=_x86
+//   CPU_HEADER_INLINE(macroAssembler) --> macroAssembler_x86.inline.hpp
+//   OS_CPU_HEADER(vmStructs)          --> vmStructs_linux_x86.hpp
 //
 // basename<cpu>.hpp / basename<cpu>.inline.hpp
 #define CPU_HEADER_H(basename)         XSTR(CPU_HEADER_STEM(basename).h)
 #define CPU_HEADER(basename)           XSTR(CPU_HEADER_STEM(basename).hpp)
 #define CPU_HEADER_INLINE(basename)    XSTR(CPU_HEADER_STEM(basename).inline.hpp)
