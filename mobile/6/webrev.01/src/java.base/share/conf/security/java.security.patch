diff a/src/java.base/share/conf/security/java.security b/src/java.base/share/conf/security/java.security
--- a/src/java.base/share/conf/security/java.security
+++ b/src/java.base/share/conf/security/java.security
@@ -58,16 +58,10 @@
 # class.
 
 #
 # List of providers and their preference orders (see above):
 #
-#ifdef solaris
-# Note: The OracleUcrypto provider is deprecated and subject to removal in
-# a future version of the JDK.
-security.provider.tbd=OracleUcrypto
-security.provider.tbd=SunPKCS11 ${java.home}/conf/security/sunpkcs11-solaris.cfg
-#endif
 security.provider.tbd=SUN
 security.provider.tbd=SunRsaSign
 security.provider.tbd=SunEC
 security.provider.tbd=SunJSSE
 security.provider.tbd=SunJCE
@@ -81,13 +75,11 @@
 security.provider.tbd=SunMSCAPI
 #endif
 #ifdef macosx
 security.provider.tbd=Apple
 #endif
-#ifndef solaris
 security.provider.tbd=SunPKCS11
-#endif
 
 #
 # A list of preferred providers for specific algorithms. These providers will
 # be searched for matching algorithms before the list of registered providers.
 # Entries containing errors (parsing, etc) will be ignored. Use the
@@ -117,27 +109,21 @@
 #
 # Example:
 #   jdk.security.provider.preferred=AES/GCM/NoPadding:SunJCE, \
 #         MessageDigest.SHA-256:SUN, Group.HmacSHA2:SunJCE
 #
-#ifdef solaris-sparc
-# Optional Solaris-SPARC configuration for non-FIPS 140 configurations.
-#   jdk.security.provider.preferred=AES:SunJCE, SHA1:SUN, Group.SHA2:SUN, \
-#   HmacSHA1:SunJCE, Group.HmacSHA2:SunJCE
-#
-#endif
 #jdk.security.provider.preferred=
 
 
 #
 # Sun Provider SecureRandom seed source.
 #
 # Select the primary source of seed data for the "NativePRNG", "SHA1PRNG"
 # and "DRBG" SecureRandom implementations in the "Sun" provider.
 # (Other SecureRandom implementations might also use this property.)
 #
-# On Unix-like systems (for example, Solaris/Linux/MacOS), the
+# On Unix-like systems (for example, Linux/MacOS), the
 # "NativePRNG", "SHA1PRNG" and "DRBG" implementations obtains seed data from
 # special device files such as file:/dev/random.
 #
 # On Windows systems, specifying the URLs "file:/dev/random" or
 # "file:/dev/urandom" will enable the native Microsoft CryptoAPI seeding
