diff a/src/java.desktop/share/native/libmlib_image/mlib_c_ImageAffine_NN.c b/src/java.desktop/share/native/libmlib_image/mlib_c_ImageAffine_NN.c
--- a/src/java.desktop/share/native/libmlib_image/mlib_c_ImageAffine_NN.c
+++ b/src/java.desktop/share/native/libmlib_image/mlib_c_ImageAffine_NN.c
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1997, 2003, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -81,13 +81,10 @@
     DTYPE pix0;
 
     CLIP(1);
     dstLineEnd = (DTYPE *) dstData + xRight;
 
-#ifdef __SUNPRO_C
-#pragma pipeloop(0)
-#endif /* __SUNPRO_C */
     for (; dstPixelPtr <= dstLineEnd; dstPixelPtr++) {
       ySrc = MLIB_POINTER_SHIFT(Y);
       Y += dY;
       srcPixelPtr = MLIB_POINTER_GET(lineAddr, ySrc);
       xSrc = X >> MLIB_SHIFT;
@@ -121,13 +118,10 @@
     pix1 = srcPixelPtr[1];
     ySrc = MLIB_POINTER_SHIFT(Y);
     Y += dY;
     xSrc = X >> MLIB_SHIFT;
     X += dX;
-#ifdef __SUNPRO_C
-#pragma pipeloop(0)
-#endif /* __SUNPRO_C */
     for (; dstPixelPtr < dstLineEnd; dstPixelPtr += 2) {
       srcPixelPtr = MLIB_POINTER_GET(lineAddr, ySrc) + 2 * xSrc;
       ySrc = MLIB_POINTER_SHIFT(Y);
       Y += dY;
       xSrc = X >> MLIB_SHIFT;
@@ -167,13 +161,10 @@
     pix2 = srcPixelPtr[2];
     ySrc = MLIB_POINTER_SHIFT(Y);
     Y += dY;
     xSrc = X >> MLIB_SHIFT;
     X += dX;
-#ifdef __SUNPRO_C
-#pragma pipeloop(0)
-#endif /* __SUNPRO_C */
     for (; dstPixelPtr < dstLineEnd; dstPixelPtr += 3) {
       srcPixelPtr = MLIB_POINTER_GET(lineAddr, ySrc) + 3 * xSrc;
       ySrc = MLIB_POINTER_SHIFT(Y);
       Y += dY;
       xSrc = X >> MLIB_SHIFT;
@@ -303,13 +294,11 @@
     pix1 = srcPixelPtr[1];
     ySrc = MLIB_POINTER_SHIFT(Y);
     Y += dY;
     xSrc = X >> MLIB_SHIFT;
     X += dX;
-#ifdef __SUNPRO_C
-#pragma pipeloop(0)
-#endif /* __SUNPRO_C */
+
     for (; dstPixelPtr < dstLineEnd; dstPixelPtr += 2) {
       srcPixelPtr = MLIB_POINTER_GET(lineAddr, ySrc) + 2 * xSrc;
       ySrc = MLIB_POINTER_SHIFT(Y);
       Y += dY;
       xSrc = X >> MLIB_SHIFT;
@@ -349,13 +338,10 @@
     pix2 = srcPixelPtr[2];
     ySrc = MLIB_POINTER_SHIFT(Y);
     Y += dY;
     xSrc = X >> MLIB_SHIFT;
     X += dX;
-#ifdef __SUNPRO_C
-#pragma pipeloop(0)
-#endif /* __SUNPRO_C */
     for (; dstPixelPtr < dstLineEnd; dstPixelPtr += 3) {
       srcPixelPtr = MLIB_POINTER_GET(lineAddr, ySrc) + 3 * xSrc;
       ySrc = MLIB_POINTER_SHIFT(Y);
       Y += dY;
       xSrc = X >> MLIB_SHIFT;
