diff a/src/java.desktop/share/native/libmlib_image/mlib_ImageScanPoly.c b/src/java.desktop/share/native/libmlib_image/mlib_ImageScanPoly.c
--- a/src/java.desktop/share/native/libmlib_image/mlib_ImageScanPoly.c
+++ b/src/java.desktop/share/native/libmlib_image/mlib_ImageScanPoly.c
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1997, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -312,13 +312,10 @@
 
     if (y2 >= dstHeight)
       y2 = (mlib_s32) (dstHeight - 1);
 
     x += slope * (y1 - dY1);
-#ifdef __SUNPRO_C
-#pragma pipeloop(0)
-#endif /* __SUNPRO_C */
     for (j = y1; j <= y2; j++) {
       val0 = x;
       SAT32(t);
       leftEdges[j] = (t >= x) ? t : ++t;
 
@@ -356,13 +353,10 @@
 
     if (y2 >= dstHeight)
       y2 = (mlib_s32) (dstHeight - 1);
 
     x += slope * (y1 - dY1);
-#ifdef __SUNPRO_C
-#pragma pipeloop(0)
-#endif /* __SUNPRO_C */
     for (j = y1; j <= y2; j++) {
       val0 = x;
       SAT32(rightEdges[j]);
       x += slope;
     }
@@ -400,13 +394,10 @@
     sdx = (mlib_s32) (a2 * div * (1 << shiftx));
     sdy = (mlib_s32) (c2 * div * (1 << shifty));
 
     if (div > 0) {
 
-#ifdef __SUNPRO_C
-#pragma pipeloop(0)
-#endif /* __SUNPRO_C */
       for (i = top; i <= bot; i++) {
         mlib_s32 xLeft = leftEdges[i];
         mlib_s32 xRight = rightEdges[i];
         mlib_s32 xs, ys, x_e, y_e, x_s, y_s;
         mlib_d64 dxs, dys, dxe, dye;
@@ -486,13 +477,10 @@
           max_xsize = (xRight - xLeft + 1);
       }
     }
     else {
 
-#ifdef __SUNPRO_C
-#pragma pipeloop(0)
-#endif /* __SUNPRO_C */
       for (i = top; i <= bot; i++) {
         mlib_s32 xLeft = leftEdges[i];
         mlib_s32 xRight = rightEdges[i];
         mlib_s32 xs, ys, x_e, y_e, x_s, y_s;
         mlib_d64 dxs, dys, dxe, dye;
