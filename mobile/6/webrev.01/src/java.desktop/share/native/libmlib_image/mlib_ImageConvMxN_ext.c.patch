diff a/src/java.desktop/share/native/libmlib_image/mlib_ImageConvMxN_ext.c b/src/java.desktop/share/native/libmlib_image/mlib_ImageConvMxN_ext.c
--- a/src/java.desktop/share/native/libmlib_image/mlib_ImageConvMxN_ext.c
+++ b/src/java.desktop/share/native/libmlib_image/mlib_ImageConvMxN_ext.c
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -146,13 +146,10 @@
     else if (j == m - 1) {
       hval1 = 0.f;
       hval2 = 0.f;
     }
 
-#ifdef __SUNPRO_C
-#pragma pipeloop(0)
-#endif /* __SUNPRO_C */
     for (i = 0; i < n; i++) {
       mlib_d64 dval0 = val0 * hval0 + dval;
       mlib_d64 val2 = src2[i * nch];
 
       dval = dst1[i];
@@ -172,13 +169,10 @@
                                  mlib_s32 n,
                                  mlib_s32 nch)
 {
   mlib_s32 i;
 
-#ifdef __SUNPRO_C
-#pragma pipeloop(0)
-#endif /* __SUNPRO_C */
   for (i = 0; i < n; i++) {
     mlib_s32 res;
 
     CLAMP_S32(res, src[i]);
     src[i] = 0.5;
@@ -197,13 +191,10 @@
   mlib_s32 i;
   mlib_d64 val = src[0];
 
   for (i = 0; i < dx_l; i++)
     dst[i] = (mlib_s32) val;
-#ifdef __SUNPRO_C
-#pragma pipeloop(0)
-#endif /* __SUNPRO_C */
   for (; i < n - dx_r; i++)
     dst[i] = src[nch * (i - dx_l)];
   val = dst[n - dx_r - 1];
   for (; i < n; i++)
     dst[i] = (mlib_s32) val;
