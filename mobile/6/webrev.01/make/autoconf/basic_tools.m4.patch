diff a/make/autoconf/basic_tools.m4 b/make/autoconf/basic_tools.m4
--- a/make/autoconf/basic_tools.m4
+++ b/make/autoconf/basic_tools.m4
@@ -268,38 +268,29 @@
     TAR_TYPE="gnu"
   elif test "x$($TAR --version | $GREP "bsdtar")" != "x"; then
     TAR_TYPE="bsd"
   elif test "x$($TAR -v | $GREP "bsdtar")" != "x"; then
     TAR_TYPE="bsd"
-  elif test "x$OPENJDK_BUILD_OS" = "xsolaris"; then
-    TAR_TYPE="solaris"
   elif test "x$OPENJDK_BUILD_OS" = "xaix"; then
     TAR_TYPE="aix"
   fi
   AC_MSG_CHECKING([what type of tar was found])
   AC_MSG_RESULT([$TAR_TYPE])
 
-  TAR_CREATE_FILE_PARAM=""
-
   if test "x$TAR_TYPE" = "xgnu"; then
     TAR_INCLUDE_PARAM="T"
     TAR_SUPPORTS_TRANSFORM="true"
-    if test "x$OPENJDK_TARGET_OS" = "xsolaris"; then
-      # When using gnu tar for Solaris targets, need to use compatibility mode
-      TAR_CREATE_EXTRA_PARAM="--format=ustar"
-    fi
   elif test "x$TAR_TYPE" = "aix"; then
     # -L InputList of aix tar: name of file listing the files and directories
     # that need to be   archived or extracted
     TAR_INCLUDE_PARAM="L"
     TAR_SUPPORTS_TRANSFORM="false"
   else
     TAR_INCLUDE_PARAM="I"
     TAR_SUPPORTS_TRANSFORM="false"
   fi
   AC_SUBST(TAR_TYPE)
-  AC_SUBST(TAR_CREATE_EXTRA_PARAM)
   AC_SUBST(TAR_INCLUDE_PARAM)
   AC_SUBST(TAR_SUPPORTS_TRANSFORM)
 ])
 
 ###############################################################################
@@ -357,11 +348,11 @@
   UTIL_PATH_PROGS(HG, hg)
   UTIL_PATH_PROGS(GIT, git)
   UTIL_PATH_PROGS(STAT, stat)
   UTIL_PATH_PROGS(TIME, time)
   UTIL_PATH_PROGS(FLOCK, flock)
-  # Dtrace is usually found in /usr/sbin on Solaris, but that directory may not
+  # Dtrace is usually found in /usr/sbin, but that directory may not
   # be in the user path.
   UTIL_PATH_PROGS(DTRACE, dtrace, $PATH:/usr/sbin)
   UTIL_PATH_PROGS(PATCH, [gpatch patch])
   # Check if it's GNU time
   IS_GNU_TIME=`$TIME --version 2>&1 | $GREP 'GNU time'`
@@ -413,12 +404,10 @@
           AC_MSG_RESULT([yes])
         fi
       fi
     fi
     UTIL_REQUIRE_PROGS(SETFILE, SetFile)
-  elif test "x$OPENJDK_TARGET_OS" = "xsolaris"; then
-    UTIL_REQUIRE_PROGS(ELFEDIT, elfedit)
   fi
   if ! test "x$OPENJDK_TARGET_OS" = "xwindows"; then
     UTIL_REQUIRE_BUILTIN_PROGS(ULIMIT, ulimit)
   fi
 ])
