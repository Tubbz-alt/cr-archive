diff a/src/java.base/macosx/native/libjava/java_props_macosx.c b/src/java.base/macosx/native/libjava/java_props_macosx.c
--- a/src/java.base/macosx/native/libjava/java_props_macosx.c
+++ b/src/java.base/macosx/native/libjava/java_props_macosx.c
@@ -21,21 +21,36 @@
  * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */
 
+#ifndef TARGET_IOS
 #include <sys/socket.h>
 #include <netinet/in.h>
 #include <arpa/inet.h>
 #include <objc/objc-runtime.h>
 
 #include <CoreFoundation/CoreFoundation.h>
 #include <SystemConfiguration/SystemConfiguration.h>
 #include <Foundation/Foundation.h>
 
+#else
+#include <stdlib.h>
+#include <string.h>
+#include <sys/param.h>
+#include <objc/runtime.h>
+#include <objc/objc.h>
+#include <objc/message.h>
+#include <CoreFoundation/CoreFoundation.h>
+#include <CoreFoundation/CFlocale.h>
+
+#endif
+
 #include "java_props_macosx.h"
 
+#ifndef TARGET_IOS
+
 char *getPosixLocale(int cat) {
     char *lc = setlocale(cat, NULL);
     if ((lc == NULL) || (strcmp(lc, "C") == 0)) {
         lc = getenv("LANG");
     }
@@ -471,5 +486,33 @@
 
 #undef CHECK_PROXY
 
     CFRelease(dict);
 }
+#else
+#define LOCALEIDLENGTH  128
+char *getPosixLocale(int cat) {
+    char *lc = setlocale(cat, NULL);
+    if ((lc == NULL) || (strcmp(lc, "C") == 0)) {
+        lc = getenv("LANG");
+    }
+    if (lc == NULL) return NULL;
+    return strdup(lc);
+  }
+
+char *getMacOSXLocale(int cat) {
+    char localeString[LOCALEIDLENGTH];
+    // Get current user locale.
+    CFLocaleRef loc = CFLocaleCopyCurrent();
+    char *localstr;
+    if (CFStringGetCString(CFLocaleGetIdentifier(loc),
+                           localeString, LOCALEIDLENGTH,
+                           kCFStringEncodingUTF8))
+      localstr = strdup(localeString);
+    else
+      localstr =  NULL;
+
+    CFRelease(loc);
+    return (localstr);
+}
+
+#endif
