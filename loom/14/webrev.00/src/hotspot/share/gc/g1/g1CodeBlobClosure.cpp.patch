diff a/src/hotspot/share/gc/g1/g1CodeBlobClosure.cpp b/src/hotspot/share/gc/g1/g1CodeBlobClosure.cpp
--- a/src/hotspot/share/gc/g1/g1CodeBlobClosure.cpp
+++ b/src/hotspot/share/gc/g1/g1CodeBlobClosure.cpp
@@ -27,10 +27,11 @@
 #include "gc/g1/g1CodeBlobClosure.hpp"
 #include "gc/g1/g1CollectedHeap.inline.hpp"
 #include "gc/g1/g1ConcurrentMark.inline.hpp"
 #include "gc/g1/heapRegion.hpp"
 #include "gc/g1/heapRegionRemSet.hpp"
+#include "gc/shared/barrierSetNMethod.hpp"
 #include "oops/access.inline.hpp"
 #include "oops/compressedOops.inline.hpp"
 #include "oops/oop.inline.hpp"
 
 template <typename T>
@@ -73,13 +74,19 @@
   do_oop_work(o);
 }
 
 void G1CodeBlobClosure::do_evacuation_and_fixup(nmethod* nm) {
   _oc.set_nm(nm);
-  nm->mark_as_maybe_on_continuation();
+  if (_keepalive_is_strong) {
+    nm->mark_as_maybe_on_continuation();
+  }
   nm->oops_do_keepalive(&_oc, _keepalive_is_strong);
   nm->fix_oop_relocations();
+  BarrierSetNMethod* bs_nm = BarrierSet::barrier_set()->barrier_set_nmethod();
+  if (bs_nm != NULL) {
+    bs_nm->disarm(nm);
+  }
 }
 
 void G1CodeBlobClosure::do_marking(nmethod* nm) {
   nm->oops_do(&_marking_oc);
 }
