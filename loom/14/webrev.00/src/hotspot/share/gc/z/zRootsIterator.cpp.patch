diff a/src/hotspot/share/gc/z/zRootsIterator.cpp b/src/hotspot/share/gc/z/zRootsIterator.cpp
--- a/src/hotspot/share/gc/z/zRootsIterator.cpp
+++ b/src/hotspot/share/gc/z/zRootsIterator.cpp
@@ -144,11 +144,12 @@
       _should_disarm_nmethods(cl->should_disarm_nmethods()) {}
 
   virtual void do_code_blob(CodeBlob* cb) {
     nmethod* const nm = cb->as_nmethod_or_null();
     if (nm != NULL && nm->oops_do_try_claim()) {
-      ZNMethod::nmethod_oops_do(nm, _cl);
+      ZNMethod::nmethod_oops_do(nm, _cl, _should_disarm_nmethods);
+      nm->mark_as_maybe_on_continuation();
       assert(!ZNMethod::supports_entry_barrier(nm) ||
              ZNMethod::is_armed(nm) == _should_disarm_nmethods, "Invalid state");
       if (_should_disarm_nmethods) {
         ZNMethod::disarm(nm);
       }
@@ -245,11 +246,11 @@
   _java_threads_iter.threads_do(&thread_cl);
 }
 
 void ZRootsIterator::do_code_cache(ZRootsIteratorClosure* cl) {
   ZStatTimer timer(ZSubPhasePauseRootsCodeCache);
-  ZNMethod::oops_do(cl);
+  ZNMethod::oops_do(cl, true /* keepalive_is_strong */);
 }
 
 void ZRootsIterator::oops_do(ZRootsIteratorClosure* cl) {
   ZStatTimer timer(ZSubPhasePauseRoots);
   _universe.oops_do(cl);
