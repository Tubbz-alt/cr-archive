diff a/src/hotspot/share/gc/shared/collectedHeap.cpp b/src/hotspot/share/gc/shared/collectedHeap.cpp
--- a/src/hotspot/share/gc/shared/collectedHeap.cpp
+++ b/src/hotspot/share/gc/shared/collectedHeap.cpp
@@ -233,10 +233,11 @@
   assert(Heap_lock->is_locked(), "Precondition#2");
   GCCauseSetter gcs(this, cause);
   switch (cause) {
     case GCCause::_heap_inspection:
     case GCCause::_heap_dump:
+    case GCCause::_codecache_GC_threshold:
     case GCCause::_metadata_GC_threshold : {
       HandleMark hm;
       do_full_collection(false);        // don't clear all soft refs
       break;
     }
@@ -362,11 +363,11 @@
     }
 
     // Generate a VM operation
     VM_CollectForCodeCacheAllocation op(gc_count,
                                         full_gc_count,
-                                        GCCause::_metadata_GC_threshold);
+                                        GCCause::_codecache_GC_threshold);
     VMThread::execute(&op);
 
     // If GC was locked out, try again. Check before checking success because the
     // prologue could have succeeded and the GC still have been locked out.
     if (op.gc_locked()) {
