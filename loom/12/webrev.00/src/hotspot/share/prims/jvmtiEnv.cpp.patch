diff a/src/hotspot/share/prims/jvmtiEnv.cpp b/src/hotspot/share/prims/jvmtiEnv.cpp
--- a/src/hotspot/share/prims/jvmtiEnv.cpp
+++ b/src/hotspot/share/prims/jvmtiEnv.cpp
@@ -1247,15 +1247,23 @@
     if (!get_capabilities()->can_support_virtual_threads) {
       return JVMTI_ERROR_MUST_POSSESS_CAPABILITY;
     }
     priority = (ThreadPriority)JVMTI_THREAD_NORM_PRIORITY;
     is_daemon = true;
-    thread_group = Handle(current_thread, java_lang_Thread_VirtualThreads::get_THREAD_GROUP());
+    if (java_lang_VirtualThread::state(thread_obj()) == java_lang_VirtualThread::TERMINATED) {
+      thread_group = Handle(current_thread, NULL);
+    } else {
+      thread_group = Handle(current_thread, java_lang_Thread_VirtualThreads::get_THREAD_GROUP());
+    }
   } else {
     priority = java_lang_Thread::priority(thread_obj());
     is_daemon = java_lang_Thread::is_daemon(thread_obj());
-    thread_group = Handle(current_thread, java_lang_Thread::threadGroup(thread_obj()));
+    if (java_lang_Thread::get_thread_status(thread_obj()) == java_lang_Thread::TERMINATED) {
+      thread_group = Handle(current_thread, NULL);
+    } else {
+      thread_group = Handle(current_thread, java_lang_Thread::threadGroup(thread_obj()));
+    }
   }
 
   oop loader = java_lang_Thread::context_class_loader(thread_obj());
   context_class_loader = Handle(current_thread, loader);
 
@@ -2319,11 +2327,11 @@
     }
     VM_VirtualThreadGetReceiver op(this, Handle(current_thread, thread_obj),
                                  current_thread, depth);
     VMThread::execute(&op);
     err = op.result();
-    if (err == JVMTI_ERROR_NONE) { 
+    if (err == JVMTI_ERROR_NONE) {
       *value_ptr = op.value().l;
     }
   } else {
     // Support for ordinary threads
     ThreadsListHandle tlh(current_thread);
@@ -2332,11 +2340,11 @@
       return err;
     }
     VM_GetReceiver op(java_thread, current_thread, depth);
     VMThread::execute(&op);
     err = op.result();
-    if (err == JVMTI_ERROR_NONE) { 
+    if (err == JVMTI_ERROR_NONE) {
       *value_ptr = op.value().l;
     }
   }
   return err;
 } /* end GetLocalInstance */
