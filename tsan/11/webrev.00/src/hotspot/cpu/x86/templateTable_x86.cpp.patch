diff a/src/hotspot/cpu/x86/templateTable_x86.cpp b/src/hotspot/cpu/x86/templateTable_x86.cpp
--- a/src/hotspot/cpu/x86/templateTable_x86.cpp
+++ b/src/hotspot/cpu/x86/templateTable_x86.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1997, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -767,27 +767,10 @@
   __ bind(skip);
 }
 
 #if INCLUDE_TSAN
 
-TemplateTable::TsanMemoryReleaseAcquireFunction TemplateTable::tsan_release_acquire_method(
-    TsanMemoryReadWriteFunction tsan_function) {
-  if (tsan_function == SharedRuntime::tsan_read1
-      || tsan_function == SharedRuntime::tsan_read2
-      || tsan_function == SharedRuntime::tsan_read4
-      || tsan_function == SharedRuntime::tsan_read8) {
-    return SharedRuntime::tsan_acquire;
-  } else if (tsan_function == SharedRuntime::tsan_write1
-      || tsan_function == SharedRuntime::tsan_write2
-      || tsan_function == SharedRuntime::tsan_write4
-      || tsan_function == SharedRuntime::tsan_write8) {
-    return SharedRuntime::tsan_release;
-  }
-  ShouldNotReachHere();
-  return NULL;
-}
-
 void TemplateTable::tsan_observe_get_or_put(
     const Address &field,
     Register flags,
     TsanMemoryReadWriteFunction tsan_function,
     TosState tos) {
