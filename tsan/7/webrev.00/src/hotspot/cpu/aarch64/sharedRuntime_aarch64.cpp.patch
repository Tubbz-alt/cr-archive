diff a/src/hotspot/cpu/aarch64/sharedRuntime_aarch64.cpp b/src/hotspot/cpu/aarch64/sharedRuntime_aarch64.cpp
--- a/src/hotspot/cpu/aarch64/sharedRuntime_aarch64.cpp
+++ b/src/hotspot/cpu/aarch64/sharedRuntime_aarch64.cpp
@@ -1699,10 +1699,19 @@
     __ ldrb(rscratch1, Address(rscratch1, offset));
     __ cbnzw(rscratch1, dtrace_method_entry);
     __ bind(dtrace_method_entry_done);
   }
 
+  TSAN_RUNTIME_ONLY(
+    // protect the args we've loaded
+    save_args(masm, total_c_args, c_arg, out_regs);
+    __ call_VM(noreg,
+      CAST_FROM_FN_PTR(address, SharedRuntime::tsan_interp_method_entry),
+      rthread);
+    restore_args(masm, total_c_args, c_arg, out_regs);
+  );
+
   // RedefineClasses() tracing support for obsolete method entry
   if (log_is_enabled(Trace, redefine, class, obsolete)) {
     // protect the args we've loaded
     save_args(masm, total_c_args, c_arg, out_regs);
     __ mov_metadata(c_rarg1, method());
@@ -1930,10 +1939,17 @@
     }
 
     __ bind(done);
   }
 
+  TSAN_RUNTIME_ONLY(
+    save_native_result(masm, ret_type, stack_slots);
+    __ call_VM_leaf(
+         CAST_FROM_FN_PTR(address, SharedRuntime::tsan_interp_method_exit));
+    restore_native_result(masm, ret_type, stack_slots);
+  );
+
   Label dtrace_method_exit, dtrace_method_exit_done;
   {
     unsigned long offset;
     __ adrp(rscratch1, ExternalAddress((address)&DTraceMethodProbes), offset);
     __ ldrb(rscratch1, Address(rscratch1, offset));
