diff a/src/hotspot/cpu/aarch64/interp_masm_aarch64.cpp b/src/hotspot/cpu/aarch64/interp_masm_aarch64.cpp
--- a/src/hotspot/cpu/aarch64/interp_masm_aarch64.cpp
+++ b/src/hotspot/cpu/aarch64/interp_masm_aarch64.cpp
@@ -1507,10 +1507,14 @@
     get_method(c_rarg1);
     call_VM_leaf(CAST_FROM_FN_PTR(address, SharedRuntime::dtrace_method_entry),
                  rthread, c_rarg1);
   }
 
+  TSAN_RUNTIME_ONLY(call_VM(noreg,
+                            CAST_FROM_FN_PTR(address,
+                            SharedRuntime::tsan_interp_method_entry)));
+
   // RedefineClasses() tracing support for obsolete method entry
   if (log_is_enabled(Trace, redefine, class, obsolete)) {
     get_method(c_rarg1);
     call_VM_leaf(
       CAST_FROM_FN_PTR(address, SharedRuntime::rc_trace_method_entry),
@@ -1540,10 +1544,17 @@
             CAST_FROM_FN_PTR(address, InterpreterRuntime::post_method_exit));
     bind(L);
     pop(state);
   }
 
+  TSAN_RUNTIME_ONLY(
+    push(state);
+    call_VM_leaf(CAST_FROM_FN_PTR(address,
+                 SharedRuntime::tsan_interp_method_exit));
+    pop(state);
+  );
+
   {
     SkipIfEqual skip(this, &DTraceMethodProbes, false);
     push(state);
     get_method(c_rarg1);
     call_VM_leaf(CAST_FROM_FN_PTR(address, SharedRuntime::dtrace_method_exit),
