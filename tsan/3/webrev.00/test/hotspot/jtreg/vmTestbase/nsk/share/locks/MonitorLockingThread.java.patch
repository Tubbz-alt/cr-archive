diff a/test/hotspot/jtreg/vmTestbase/nsk/share/locks/MonitorLockingThread.java b/test/hotspot/jtreg/vmTestbase/nsk/share/locks/MonitorLockingThread.java
--- a/test/hotspot/jtreg/vmTestbase/nsk/share/locks/MonitorLockingThread.java
+++ b/test/hotspot/jtreg/vmTestbase/nsk/share/locks/MonitorLockingThread.java
@@ -76,11 +76,11 @@
             /*
              * Wait when blockedThread's state will switch to 'BLOCKED' (at that moment monitor contention
              * should already occur) and then force MonitorLockingThread to release lock
              */
             while (blockedThread.getState() != Thread.State.BLOCKED)
-                yield();
+                Thread.yield();
 
             lockingThread.releaseLock();
         }
     }
 
@@ -96,22 +96,22 @@
 
     public void run() {
         synchronized (lockToHold) {
             holdsLock = true;
             while (isRunning)
-                yield();
+                Thread.yield();
         }
         holdsLock = false;
     }
 
     public void releaseLock() {
         isRunning = false;
         while (holdsLock)
-            yield();
+            Thread.yield();
     }
 
     public void acquireLock() {
         start();
         while (!holdsLock)
-            yield();
+            Thread.yield();
     }
 }
