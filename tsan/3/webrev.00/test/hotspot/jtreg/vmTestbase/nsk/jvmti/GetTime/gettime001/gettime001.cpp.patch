diff a/test/hotspot/jtreg/vmTestbase/nsk/jvmti/GetTime/gettime001/gettime001.cpp b/test/hotspot/jtreg/vmTestbase/nsk/jvmti/GetTime/gettime001/gettime001.cpp
--- a/test/hotspot/jtreg/vmTestbase/nsk/jvmti/GetTime/gettime001/gettime001.cpp
+++ b/test/hotspot/jtreg/vmTestbase/nsk/jvmti/GetTime/gettime001/gettime001.cpp
@@ -47,22 +47,22 @@
 
 /* ============================================================================= */
 
 /**
  * Get time and optionally compare it with previous one.
- * @returns NSK_FALSE if any error occured.
+ * @returns false if any error occured.
  */
-static int checkTime(jvmtiEnv* jvmti, julong* time,
-                                julong* prevTime, const char where[]) {
+static bool checkTime(jvmtiEnv* jvmti, julong* time,
+                      julong* prevTime, const char where[]) {
 
     char buf[32], buf2[32], buf3[32];
-    int success = NSK_TRUE;
+    bool success = true;
 
     NSK_DISPLAY0("GetTime() for current JVMTI env\n");
     if (!NSK_JVMTI_VERIFY(
             jvmti->GetTime((jlong *)time))) {
-        return NSK_FALSE;
+        return false;
     }
     NSK_DISPLAY1("  ... got time: %s\n", julong_to_string(*time, buf));
 
     if (prevTime != NULL) {
         julong diff = *time - *prevTime;
@@ -79,11 +79,11 @@
                           "#   difference: %s\n",
                             where,
                             julong_to_string(*time, buf),
                             julong_to_string(*prevTime, buf2),
                             julong_to_string(diff, buf3));
-            success = NSK_FALSE;
+            success = false;
         }
         *prevTime = *time;
     }
 
     return success;
@@ -130,26 +130,26 @@
 /**
  * Callback for VM_DEATH event.
  */
 JNIEXPORT void JNICALL
 callbackVMDeath(jvmtiEnv* jvmti, JNIEnv* jni) {
-    int success = NSK_TRUE;
+    bool success = true;
 
     NSK_DISPLAY0(">>> Testcase #4: Check time in VM_DEATH callback\n");
     {
         julong time;
         success = checkTime(jvmti, &time, &prevTime, "VM_DEATH callback");
     }
 
     NSK_DISPLAY1("Disable events: %d events\n", EVENTS_COUNT);
     if (!nsk_jvmti_enableEvents(JVMTI_DISABLE, EVENTS_COUNT, events, NULL)) {
-        success = NSK_FALSE;
+        success = false;
     } else {
         NSK_DISPLAY0("  ... disabled\n");
     }
 
-    if (success != NSK_TRUE) {
+    if (!success) {
         NSK_DISPLAY1("Exit with FAIL exit status: %d\n", STATUS_FAIL);
         NSK_BEFORE_TRACE(exit(STATUS_FAIL));
     }
 }
 
