diff a/test/hotspot/jtreg/vmTestbase/nsk/jvmti/scenarios/hotswap/HS103/hs103t002/hs103t002.cpp b/test/hotspot/jtreg/vmTestbase/nsk/jvmti/scenarios/hotswap/HS103/hs103t002/hs103t002.cpp
--- a/test/hotspot/jtreg/vmTestbase/nsk/jvmti/scenarios/hotswap/HS103/hs103t002/hs103t002.cpp
+++ b/test/hotspot/jtreg/vmTestbase/nsk/jvmti/scenarios/hotswap/HS103/hs103t002/hs103t002.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2007, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2007, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -71,11 +71,11 @@
   nsk_printf("doRedefineInNativeThread\n");
   cla = jni->FindClass(SEARCH_NAME);
   nsk_jvmti_getFileName(redefineNumber, FILE_NAME, fileName, sizeof(fileName)/sizeof(char));
   for (i = 0; i < 30; i++) {
     nsk_printf(" Inside the redefine method..\n");
-    if (nsk_jvmti_redefineClass(jvmti, cla,fileName) == NSK_TRUE) {
+    if (nsk_jvmti_redefineClass(jvmti, cla,fileName)) {
       nsk_printf("\nMyClass :: Successfully redefined..\n");
     } else {
       nsk_printf("\nMyClass :: Failed to redefine ..\n");
 
       if (!NSK_JNI_VERIFY_VOID(jni, jni->CallStaticVoidMethod(testClass, setRedefinitionFailed)))
@@ -115,11 +115,11 @@
   if (rc != JNI_OK) {
     nsk_printf("Agent:: Could not load JVMTI interface \n");
     return JNI_ERR;
   } else {
     jvmtiCapabilities caps;
-    if (nsk_jvmti_parseOptions(options) == NSK_FALSE) {
+    if (!nsk_jvmti_parseOptions(options)) {
       nsk_printf("# error agent Failed to parse options \n");
       return JNI_ERR;
     }
     memset(&caps, 0, sizeof(caps));
     caps.can_redefine_classes = 1;
