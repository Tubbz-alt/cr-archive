diff a/test/hotspot/jtreg/vmTestbase/nsk/jdi/ThreadReference/popFrames/popframes003.java b/test/hotspot/jtreg/vmTestbase/nsk/jdi/ThreadReference/popFrames/popframes003.java
--- a/test/hotspot/jtreg/vmTestbase/nsk/jdi/ThreadReference/popFrames/popframes003.java
+++ b/test/hotspot/jtreg/vmTestbase/nsk/jdi/ThreadReference/popFrames/popframes003.java
@@ -156,16 +156,10 @@
 
     BreakpointRequest  bpRequest2;
     MethodEntryRequest meRequest3;
 
 
-    class JDITestRuntimeException extends RuntimeException {
-        JDITestRuntimeException(String str) {
-            super("JDITestRuntimeException : " + str);
-        }
-    }
-
     //------------------------------------------------------ methods
 
     private int runThis (String argv[], PrintStream out) {
 
         argsHandler     = new ArgumentHandler(argv);
@@ -311,11 +305,11 @@
         }
 
         String bPointMethod = "methodForCommunication";
         String lineForComm  = "lineForComm";
 
-        ThreadReference threadMainRef = threadByName("main");
+        ThreadReference threadMainRef = debuggee.threadByNameOrThrow("main");
         try {
             bpRequest = settingBreakpoint(threadMainRef,
                                           debuggeeClass,
                                           bPointMethod, lineForComm, "zero");
         } catch ( Exception e ) {
@@ -342,14 +336,14 @@
         log2("meRequest.enable();");
         meRequest.enable();
 
 
         String thread2Name         = "thread2";
-        ThreadReference thread2Ref = threadByName(thread2Name);
+        ThreadReference thread2Ref = debuggee.threadByNameOrThrow(thread2Name);
 
         String thread3Name         = "thread3";
-        ThreadReference thread3Ref = threadByName(thread3Name);
+        ThreadReference thread3Ref = debuggee.threadByNameOrThrow(thread3Name);
 
         String poppedMethod    = "poppedMethod";
         String breakpointLine  = "breakpointLine";
         String testVariable    = "testVar1";
 
@@ -476,25 +470,10 @@
 
         log1("    TESTING ENDS");
         return;
     }
 
-    private ThreadReference threadByName(String name)
-                 throws JDITestRuntimeException {
-
-        List         all = vm.allThreads();
-        ListIterator li  = all.listIterator();
-
-        for (; li.hasNext(); ) {
-            ThreadReference thread = (ThreadReference) li.next();
-            if (thread.name().equals(name))
-                return thread;
-        }
-        throw new JDITestRuntimeException("** Thread IS NOT found ** : " + name);
-    }
-
-
   /*
     * private BreakpointRequest settingBreakpoint(ThreadReference, ReferenceType,
     *                                             String, String, String)
     *
     * It sets up a breakpoint at given line number within a given method in a given class
