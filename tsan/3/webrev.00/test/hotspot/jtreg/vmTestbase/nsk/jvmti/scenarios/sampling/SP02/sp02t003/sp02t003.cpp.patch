diff a/test/hotspot/jtreg/vmTestbase/nsk/jvmti/scenarios/sampling/SP02/sp02t003/sp02t003.cpp b/test/hotspot/jtreg/vmTestbase/nsk/jvmti/scenarios/sampling/SP02/sp02t003/sp02t003.cpp
--- a/test/hotspot/jtreg/vmTestbase/nsk/jvmti/scenarios/sampling/SP02/sp02t003/sp02t003.cpp
+++ b/test/hotspot/jtreg/vmTestbase/nsk/jvmti/scenarios/sampling/SP02/sp02t003/sp02t003.cpp
@@ -304,28 +304,28 @@
                                         j, (void*)frameStack[j].method,
                                         (long)frameStack[j].location);
             /* query frame location */
             if (!NSK_JVMTI_VERIFY(
                     jvmti->GetFrameLocation(threadsDesc[i].thread, j, &qMethod, &qLocation))
-                && (suspended == NSK_TRUE)) {
+                && suspended) {
                 nsk_jvmti_setFailStatus();
                 continue;
             }
 
             NSK_DISPLAY2("      queried: method: %p, location: %ld\n",
                                         (void*)qMethod, (long)qLocation);
 
             /* check frame equality */
-            if ((suspended == NSK_TRUE) && (frameStack[j].method != qMethod)) {
+            if (suspended && (frameStack[j].method != qMethod)) {
                 NSK_COMPLAIN6("Different method in stack frame #%d for %s thread #%d (%s):\n"
                             "#   GetStackTrace():    %p\n"
                             "#   GetFrameLocation(): %p\n",
                             j, kind, i, threadsDesc[i].threadName,
                             (void*)frameStack[j].method, (void*)qMethod);
                 nsk_jvmti_setFailStatus();
             }
-            if ((suspended == NSK_TRUE) && (frameStack[j].location != qLocation)) {
+            if (suspended && (frameStack[j].location != qLocation)) {
                 NSK_COMPLAIN6("Different location in stack frame #%d for %s thread #%d (%s):\n"
                             "#   GetStackTrace():    %ld\n"
                             "#   GetFrameLocation(): %ld\n",
                             j, kind, i, threadsDesc[i].threadName,
                             (long)frameStack[j].location, (long)qLocation);
