diff a/test/hotspot/jtreg/vmTestbase/nsk/jdi/BScenarios/multithrd/tc02x004.java b/test/hotspot/jtreg/vmTestbase/nsk/jdi/BScenarios/multithrd/tc02x004.java
--- a/test/hotspot/jtreg/vmTestbase/nsk/jdi/BScenarios/multithrd/tc02x004.java
+++ b/test/hotspot/jtreg/vmTestbase/nsk/jdi/BScenarios/multithrd/tc02x004.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2002, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2002, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -21,10 +21,11 @@
  * questions.
  */
 
 package nsk.jdi.BScenarios.multithrd;
 
+import jdk.test.lib.Utils;
 import nsk.share.*;
 import nsk.share.jpda.*;
 import nsk.share.jdi.*;
 
 import com.sun.jdi.*;
@@ -93,11 +94,11 @@
         tc02x004 thisTest = new tc02x004();
 
         ArgumentHandler argHandler = new ArgumentHandler(argv);
         log = new Log(out, argHandler);
 
-        waitTime = argHandler.getWaitTime() * 60000;
+        waitTime = Utils.adjustTimeout(argHandler.getWaitTime() * 60000);
 
         Binder binder = new Binder(argHandler, log);
         debugee = binder.bindToDebugee(debugeeName);
         debugee.redirectStderr(log.getOutStream());
         thisTest.evm = debugee.getEventRequestManager();
@@ -112,10 +113,11 @@
         } finally {
             debugee.resume();
         }
         display("Test finished. exitStatus = " + exitStatus);
 
+        debugee.endDebugee();
         return exitStatus;
     }
 
     private void execTest() throws Failure {
 
