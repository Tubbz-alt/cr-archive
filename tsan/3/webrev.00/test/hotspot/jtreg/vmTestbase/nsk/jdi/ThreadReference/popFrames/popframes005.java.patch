diff a/test/hotspot/jtreg/vmTestbase/nsk/jdi/ThreadReference/popFrames/popframes005.java b/test/hotspot/jtreg/vmTestbase/nsk/jdi/ThreadReference/popFrames/popframes005.java
--- a/test/hotspot/jtreg/vmTestbase/nsk/jdi/ThreadReference/popFrames/popframes005.java
+++ b/test/hotspot/jtreg/vmTestbase/nsk/jdi/ThreadReference/popFrames/popframes005.java
@@ -156,16 +156,10 @@
 
     BreakpointRequest bpRequest;
     BreakpointRequest breakpointRequest2;
 
 
-    class JDITestRuntimeException extends RuntimeException {
-        JDITestRuntimeException(String str) {
-            super("JDITestRuntimeException : " + str);
-        }
-    }
-
     //------------------------------------------------------ methods
 
     private int runThis (String argv[], PrintStream out) {
 
         argsHandler     = new ArgumentHandler(argv);
@@ -311,11 +305,11 @@
 
         String bPointMethod = "methodForCommunication";
         String lineForComm  = "lineForComm";
 
         log2("......setting BreakpointRequest (bpRequest) in main thread");
-        bpRequest = settingBreakpoint(threadByName("main"),
+        bpRequest = settingBreakpoint(debuggee.threadByNameOrThrow("main"),
                                           debuggeeClass,
                                           bPointMethod, lineForComm, "zero");
         log2("bpRequest.enable();");
         bpRequest.enable();
 
@@ -327,11 +321,11 @@
         {
             vm.resume();
             breakpointForCommunication();
 
             String thread2Name         = "thread2";
-            ThreadReference thread2Ref = threadByName(thread2Name);
+            ThreadReference thread2Ref = debuggee.threadByNameOrThrow(thread2Name);
 
             StackFrame stackFrame0 = null;
             StackFrame stackFrame1 = null;
             StackFrame stackFrame2 = null;
 
@@ -398,24 +392,10 @@
         }
         log1("    TESTING ENDS");
         return;
     }
 
-    private ThreadReference threadByName(String name)
-                 throws JDITestRuntimeException {
-
-        List         all = vm.allThreads();
-        ListIterator li  = all.listIterator();
-
-        for (; li.hasNext(); ) {
-            ThreadReference thread = (ThreadReference) li.next();
-            if (thread.name().equals(name))
-                return thread;
-        }
-        throw new JDITestRuntimeException("** Thread IS NOT found ** : " + name);
-    }
-
    /*
     * private BreakpointRequest settingBreakpoint(ThreadReference, ReferenceType,
     *                                             String, String, String)
     *
     * It sets up a breakpoint at given line number within a given method in a given class
