diff a/test/hotspot/jtreg/serviceability/sa/TestJhsdbJstackMixed.java b/test/hotspot/jtreg/serviceability/sa/TestJhsdbJstackMixed.java
--- a/test/hotspot/jtreg/serviceability/sa/TestJhsdbJstackMixed.java
+++ b/test/hotspot/jtreg/serviceability/sa/TestJhsdbJstackMixed.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2018, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -163,19 +163,18 @@
     public static void main(String... args) throws Exception {
 
         LingeredApp app = null;
 
         try {
-            List<String> vmArgs = new ArrayList<String>(Utils.getVmOptions());
             // Needed for LingeredApp to be able to resolve native library.
             String libPath = System.getProperty("java.library.path");
-            if (libPath != null) {
-                vmArgs.add("-Djava.library.path=" + libPath);
-            }
+            String[] vmArgs = (libPath != null)
+                ? Utils.prependTestJavaOpts("-Djava.library.path=" + libPath)
+                : Utils.getTestJavaOpts();
 
             app = new LingeredAppWithNativeMethod();
-            LingeredApp.startApp(vmArgs, app);
+            LingeredApp.startApp(app, vmArgs);
             System.out.println("Started LingeredApp with pid " + app.getPid());
             runJstackMixedInLoop(app);
             System.out.println("Test Completed");
         } catch (Throwable e) {
             e.printStackTrace();
