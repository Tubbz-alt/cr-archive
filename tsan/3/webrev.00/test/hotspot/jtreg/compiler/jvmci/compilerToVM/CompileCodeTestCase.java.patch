diff a/test/hotspot/jtreg/compiler/jvmci/compilerToVM/CompileCodeTestCase.java b/test/hotspot/jtreg/compiler/jvmci/compilerToVM/CompileCodeTestCase.java
--- a/test/hotspot/jtreg/compiler/jvmci/compilerToVM/CompileCodeTestCase.java
+++ b/test/hotspot/jtreg/compiler/jvmci/compilerToVM/CompileCodeTestCase.java
@@ -26,10 +26,13 @@
 import compiler.jvmci.common.CTVMUtilities;
 import compiler.testlibrary.CompilerUtils;
 import jdk.test.lib.util.Pair;
 import jdk.test.lib.Utils;
 import jdk.vm.ci.code.InstalledCode;
+import jdk.vm.ci.meta.MetaAccessProvider;
+import jdk.vm.ci.meta.ResolvedJavaMethod;
+import jdk.vm.ci.runtime.JVMCI;
 import sun.hotspot.WhiteBox;
 import sun.hotspot.code.NMethod;
 
 import java.lang.reflect.Constructor;
 import java.lang.reflect.Executable;
@@ -145,15 +148,16 @@
     public NMethod toNMethod() {
         return NMethod.get(executable, isOsr);
     }
 
     public InstalledCode toInstalledCode() {
+        MetaAccessProvider metaAccess = JVMCI.getRuntime().getHostJVMCIBackend().getMetaAccess();
+        ResolvedJavaMethod resolvedJavaMethod = metaAccess.lookupJavaMethod(executable);
         NMethod nmethod = toNMethod();
         long address = nmethod == null ? 0L : nmethod.address;
         long entryPoint = nmethod == null ? 0L : nmethod.entry_point;
-        return CTVMUtilities.getInstalledCode(
-                executable.getName(), address, entryPoint);
+        return CTVMUtilities.getInstalledCode(resolvedJavaMethod, executable.getName(), address, entryPoint);
     }
 
     @Override
     public String toString() {
         return "CompileCodeTestCase{" +
