diff a/test/hotspot/jtreg/compiler/jvmci/SecurityRestrictionsTest.java b/test/hotspot/jtreg/compiler/jvmci/SecurityRestrictionsTest.java
--- a/test/hotspot/jtreg/compiler/jvmci/SecurityRestrictionsTest.java
+++ b/test/hotspot/jtreg/compiler/jvmci/SecurityRestrictionsTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2015, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2015, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -82,11 +82,11 @@
     private enum TestCase {
         NO_SEC_MAN,
         NO_JVMCI {
             @Override
             public Class<? extends Throwable> getExpectedException() {
-                return InternalError.class;
+                return Error.class;
             }
         },
         ALL_PERM {
             @Override
             public SecurityManager getSecurityManager() {
@@ -170,16 +170,12 @@
                         throw new AssertionError(message, e);
                     }
                 }
             };
             Utils.runAndCheckException(() -> {
-                try {
-                    // CompilerToVM::<cinit> provokes CompilerToVM::<init>
-                    Class.forName("jdk.vm.ci.hotspot.CompilerToVMHelper");
-                } catch (ClassNotFoundException e) {
-                    throw new Error("TESTBUG : " + e, e);
-                }
+                // CompilerToVM::<cinit> provokes CompilerToVM::<init>
+                Class.forName("jdk.vm.ci.hotspot.CompilerToVMHelper");
             }, exceptionCheck);
         }
 
         public SecurityManager getSecurityManager() {
             return null;
