diff a/test/hotspot/jtreg/compiler/compilercontrol/jcmd/ClearDirectivesFileStackTest.java b/test/hotspot/jtreg/compiler/compilercontrol/jcmd/ClearDirectivesFileStackTest.java
--- a/test/hotspot/jtreg/compiler/compilercontrol/jcmd/ClearDirectivesFileStackTest.java
+++ b/test/hotspot/jtreg/compiler/compilercontrol/jcmd/ClearDirectivesFileStackTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2015, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2015, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -29,11 +29,14 @@
  * @library /test/lib /
  *
  * @build sun.hotspot.WhiteBox
  * @run driver ClassFileInstaller sun.hotspot.WhiteBox
  *                                sun.hotspot.WhiteBox$WhiteBoxPermission
- * @run driver compiler.compilercontrol.jcmd.ClearDirectivesFileStackTest
+ *
+ * @run main/othervm -Xbootclasspath/a:. -XX:+UnlockDiagnosticVMOptions
+ *                   -XX:+WhiteBoxAPI
+ *                   compiler.compilercontrol.jcmd.ClearDirectivesFileStackTest
  */
 
 package compiler.compilercontrol.jcmd;
 
 import compiler.compilercontrol.share.AbstractTestBase;
@@ -42,15 +45,18 @@
 import compiler.compilercontrol.share.scenario.CommandGenerator;
 import compiler.compilercontrol.share.scenario.CompileCommand;
 import compiler.compilercontrol.share.scenario.JcmdCommand;
 import compiler.compilercontrol.share.scenario.Scenario;
 import jdk.test.lib.Utils;
+import sun.hotspot.WhiteBox;
 
 import java.lang.reflect.Executable;
 
 public class ClearDirectivesFileStackTest extends AbstractTestBase {
-    private static final int AMOUNT = Utils.getRandomInstance().nextInt(100);
+    private static final WhiteBox WHITE_BOX = WhiteBox.getWhiteBox();
+    private static final int LIMIT = WHITE_BOX.getIntVMFlag("CompilerDirectivesLimit").intValue();
+    private static final int AMOUNT = Utils.getRandomInstance().nextInt(LIMIT);
     private final CommandGenerator cmdGen = new CommandGenerator();
 
     public static void main(String[] args) {
         new ClearDirectivesFileStackTest().test();
     }
