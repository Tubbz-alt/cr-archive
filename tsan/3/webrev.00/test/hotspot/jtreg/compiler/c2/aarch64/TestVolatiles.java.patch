diff a/test/hotspot/jtreg/compiler/c2/aarch64/TestVolatiles.java b/test/hotspot/jtreg/compiler/c2/aarch64/TestVolatiles.java
--- a/test/hotspot/jtreg/compiler/c2/aarch64/TestVolatiles.java
+++ b/test/hotspot/jtreg/compiler/c2/aarch64/TestVolatiles.java
@@ -34,12 +34,10 @@
  *                       TestUnsafeVolatileCAS,
  *                       TestUnsafeVolatileWeakCAS,
  *                       TestUnsafeVolatileCAE,
  *                       TestUnsafeVolatileGAS}
  * and <testtype> in {G1,
- *                    CMS,
- *                    CMSCondMark,
  *                    Serial,
  *                    Parallel,
  *                    Shenandoah,
  *                    ShenandoahTraversal}
  */
@@ -88,22 +86,10 @@
         case "Serial":
             argcount = 9;
             procArgs = new String[argcount];
             procArgs[argcount - 2] = "-XX:+UseSerialGC";
             break;
-        case "CMS":
-            argcount = 10;
-            procArgs = new String[argcount];
-            procArgs[argcount - 3] = "-XX:+UseConcMarkSweepGC";
-            procArgs[argcount - 2] = "-XX:-UseCondCardMark";
-            break;
-        case "CMSCondMark":
-            argcount = 10;
-            procArgs = new String[argcount];
-            procArgs[argcount - 3] = "-XX:+UseConcMarkSweepGC";
-            procArgs[argcount - 2] = "-XX:+UseCondCardMark";
-            break;
         case "Shenandoah":
             argcount = 10;
             procArgs = new String[argcount];
             procArgs[argcount - 3] = "-XX:+UnlockExperimentalVMOptions";
             procArgs[argcount - 2] = "-XX:+UseShenandoahGC";
@@ -111,11 +97,11 @@
         case "ShenandoahTraversal":
             argcount = 11;
             procArgs = new String[argcount];
             procArgs[argcount - 4] = "-XX:+UnlockExperimentalVMOptions";
             procArgs[argcount - 3] = "-XX:+UseShenandoahGC";
-            procArgs[argcount - 2] = "-XX:ShenandoahGCHeuristics=traversal";
+            procArgs[argcount - 2] = "-XX:ShenandoahGCMode=traversal";
             break;
         default:
             throw new RuntimeException("unexpected test type " + testType);
         }
 
@@ -328,48 +314,22 @@
                 };
                 break;
             case "G1":
                 // a card mark volatile barrier should be generated
                 // before the card mark strb
+                //
+                // following the fix for 8225776 the G1 barrier is now
+                // scheduled out of line after the membar volatile and
+                // and subsequent return
                 matches = new String[] {
                     "membar_release \\(elided\\)",
                     useCompressedOops ? "stlrw?" : "stlr",
-                    "membar_volatile",
-                    "dmb ish",
-                    "strb",
                     "membar_volatile \\(elided\\)",
-                    "ret"
-                };
-                break;
-            case "CMSCondMark":
-                // a card mark volatile barrier should be generated
-                // before the card mark strb from the StoreCM and the
-                // storestore barrier from the StoreCM should be elided
-                matches = new String[] {
-                    "membar_release \\(elided\\)",
-                    useCompressedOops ? "stlrw?" : "stlr",
+                    "ret",
                     "membar_volatile",
                     "dmb ish",
-                    "storestore \\(elided\\)",
-                    "strb",
-                    "membar_volatile \\(elided\\)",
-                    "ret"
-                };
-                break;
-            case "CMS":
-                // a volatile card mark membar should not be generated
-                // before the card mark strb from the StoreCM and the
-                // storestore barrier from the StoreCM should be
-                // generated as "dmb ishst"
-                matches = new String[] {
-                    "membar_release \\(elided\\)",
-                    useCompressedOops ? "stlrw?" : "stlr",
-                    "storestore",
-                    "dmb ishst",
-                    "strb",
-                    "membar_volatile \\(elided\\)",
-                    "ret"
+                    "strb"
                 };
                 break;
             case "Shenandoah":
             case "ShenandoahTraversal":
                  // Shenandoah generates normal object graphs for
@@ -396,20 +356,24 @@
                 };
                 break;
             case "G1":
                 // a card mark volatile barrier should be generated
                 // before the card mark strb
+                //
+                // following the fix for 8225776 the G1 barrier is now
+                // scheduled out of line after the membar volatile and
+                // and subsequent return
                 matches = new String[] {
                     "membar_release",
                     "dmb ish",
                     useCompressedOops ? "strw?" : "str",
                     "membar_volatile",
                     "dmb ish",
-                    "strb",
+                    "ret",
                     "membar_volatile",
                     "dmb ish",
-                    "ret"
+                    "strb"
                 };
                 break;
             case "CMSCondMark":
                 // a card mark volatile barrier should be generated
                 // before the card mark strb from the StoreCM and the
@@ -519,47 +483,22 @@
                 };
                 break;
             case "G1":
                 // a card mark volatile barrier should be generated
                 // before the card mark strb
+                //
+                // following the fix for 8225776 the G1 barrier is now
+                // scheduled out of line after the membar acquire and
+                // and subsequent return
                 matches = new String[] {
                     "membar_release \\(elided\\)",
                     useCompressedOops ? "cmpxchgw?_acq" : "cmpxchg_acq",
-                    "membar_volatile",
-                    "dmb ish",
-                    "strb",
                     "membar_acquire \\(elided\\)",
-                    "ret"
-                };
-                break;
-            case "CMSCondMark":
-                // a card mark volatile barrier should be generated
-                // before the card mark strb from the StoreCM and the
-                // storestore barrier from the StoreCM should be elided
-                matches = new String[] {
-                    "membar_release \\(elided\\)",
-                    useCompressedOops ? "cmpxchgw?_acq" : "cmpxchg_acq",
+                    "ret",
                     "membar_volatile",
                     "dmb ish",
-                    "storestore \\(elided\\)",
-                    "strb",
-                    "membar_acquire \\(elided\\)",
-                    "ret"
-                };
-                break;
-            case "CMS":
-                // a volatile card mark membar should not be generated
-                // before the card mark strb from the StoreCM and the
-                // storestore barrier from the StoreCM should be elided
-                matches = new String[] {
-                    "membar_release \\(elided\\)",
-                    useCompressedOops ? "cmpxchgw?_acq" : "cmpxchg_acq",
-                    "storestore",
-                    "dmb ishst",
-                    "strb",
-                    "membar_acquire \\(elided\\)",
-                    "ret"
+                    "strb"
                 };
                 break;
             case "Shenandoah":
             case "ShenandoahTraversal":
                 // For volatile CAS, Shenanodoah generates normal
@@ -586,20 +525,24 @@
                 };
                 break;
             case "G1":
                 // a card mark volatile barrier should be generated
                 // before the card mark strb
+                //
+                // following the fix for 8225776 the G1 barrier is now
+                // scheduled out of line after the membar acquire and
+                // and subsequent return
                 matches = new String[] {
                     "membar_release",
                     "dmb ish",
                     useCompressedOops ? "cmpxchgw? " : "cmpxchg ",
-                    "membar_volatile",
-                    "dmb ish",
-                    "strb",
                     "membar_acquire",
                     "dmb ish",
-                    "ret"
+                    "ret",
+                    "membar_volatile",
+                    "dmb ish",
+                    "strb"
                 };
                 break;
             case "CMSCondMark":
                 // a card mark volatile barrier should be generated
                 // before the card mark strb from the StoreCM and the
@@ -724,47 +667,22 @@
                 return;
 
             case "G1":
                 // a card mark volatile barrier should be generated
                 // before the card mark strb
+                //
+                // following the fix for 8225776 the G1 barrier is now
+                // scheduled out of line after the membar acquire and
+                // and subsequent return
                 matches = new String[] {
                     "membar_release \\(elided\\)",
                     useCompressedOops ? "cmpxchgw?_acq" : "cmpxchg_acq",
-                    "membar_volatile",
-                    "dmb ish",
-                    "strb",
                     "membar_acquire \\(elided\\)",
-                    "ret"
-                };
-                break;
-            case "CMSCondMark":
-                // a card mark volatile barrier should be generated
-                // before the card mark strb from the StoreCM and the
-                // storestore barrier from the StoreCM should be elided
-                matches = new String[] {
-                    "membar_release \\(elided\\)",
-                    useCompressedOops ? "cmpxchgw?_acq" : "cmpxchg_acq",
+                    "ret",
                     "membar_volatile",
                     "dmb ish",
-                    "storestore \\(elided\\)",
-                    "strb",
-                    "membar_acquire \\(elided\\)",
-                    "ret"
-                };
-                break;
-            case "CMS":
-                // a volatile card mark membar should not be generated
-                // before the card mark strb from the StoreCM and the
-                // storestore barrier from the StoreCM should be elided
-                matches = new String[] {
-                    "membar_release \\(elided\\)",
-                    useCompressedOops ? "cmpxchgw?_acq" : "cmpxchg_acq",
-                    "storestore",
-                    "dmb ishst",
-                    "strb",
-                    "membar_acquire \\(elided\\)",
-                    "ret"
+                    "strb"
                 };
                 break;
             case "Shenandoah":
             case "ShenandoahTraversal":
                 // For volatile CAS, Shenanodoah generates normal
@@ -791,20 +709,24 @@
                 };
                 break;
             case "G1":
                 // a card mark volatile barrier should be generated
                 // before the card mark strb
+                //
+                // following the fix for 8225776 the G1 barrier is now
+                // scheduled out of line after the membar acquire and
+                // and subsequent return
                 matches = new String[] {
                     "membar_release",
                     "dmb ish",
                     useCompressedOops ? "cmpxchgw? " : "cmpxchg ",
-                    "membar_volatile",
-                    "dmb ish",
-                    "strb",
                     "membar_acquire",
                     "dmb ish",
-                    "ret"
+                    "ret",
+                    "membar_volatile",
+                    "dmb ish",
+                    "strb"
                 };
                 break;
             case "CMSCondMark":
                 // a card mark volatile barrier should be generated
                 // before the card mark strb from the StoreCM and the
@@ -909,47 +831,22 @@
                 };
                 break;
             case "G1":
                 // a card mark volatile barrier should be generated
                 // before the card mark strb
+                //
+                // following the fix for 8225776 the G1 barrier is now
+                // scheduled out of line after the membar acquire and
+                // and subsequent return
                 matches = new String[] {
                     "membar_release \\(elided\\)",
                     useCompressedOops ? "atomic_xchgw?_acq" : "atomic_xchg_acq",
-                    "membar_volatile",
-                    "dmb ish",
-                    "strb",
                     "membar_acquire \\(elided\\)",
-                    "ret"
-                };
-                break;
-            case "CMSCondMark":
-                // a card mark volatile barrier should be generated
-                // before the card mark strb from the StoreCM and the
-                // storestore barrier from the StoreCM should be elided
-                matches = new String[] {
-                    "membar_release \\(elided\\)",
-                    useCompressedOops ? "atomic_xchgw?_acq" : "atomic_xchg_acq",
+                    "ret",
                     "membar_volatile",
                     "dmb ish",
-                    "storestore \\(elided\\)",
-                    "strb",
-                    "membar_acquire \\(elided\\)",
-                    "ret"
-                };
-                break;
-            case "CMS":
-                // a volatile card mark membar should not be generated
-                // before the card mark strb from the StoreCM and the
-                // storestore barrier from the StoreCM should be elided
-                matches = new String[] {
-                    "membar_release \\(elided\\)",
-                    useCompressedOops ? "atomic_xchgw?_acq" : "atomic_xchg_acq",
-                    "storestore",
-                    "dmb ishst",
-                    "strb",
-                    "membar_acquire \\(elided\\)",
-                    "ret"
+                    "strb"
                 };
                 break;
             case "Shenandoah":
             case "ShenandoahTraversal":
                 matches = new String[] {
@@ -974,20 +871,24 @@
                 };
                 break;
             case "G1":
                 // a card mark volatile barrier should be generated
                 // before the card mark strb
+                //
+                // following the fix for 8225776 the G1 barrier is now
+                // scheduled out of line after the membar acquire and
+                // and subsequent return
                 matches = new String[] {
                     "membar_release",
                     "dmb ish",
                     useCompressedOops ? "atomic_xchgw? " : "atomic_xchg ",
-                    "membar_volatile",
-                    "dmb ish",
-                    "strb",
                     "membar_acquire",
                     "dmb ish",
-                    "ret"
+                    "ret",
+                    "membar_volatile",
+                    "dmb ish",
+                    "strb"
                 };
                 break;
             case "CMSCondMark":
                 // a card mark volatile barrier should be generated
                 // before the card mark strb from the StoreCM and the
