diff a/test/hotspot/jtreg/gc/shenandoah/TestEvilSyncBug.java b/test/hotspot/jtreg/gc/shenandoah/TestEvilSyncBug.java
--- a/test/hotspot/jtreg/gc/shenandoah/TestEvilSyncBug.java
+++ b/test/hotspot/jtreg/gc/shenandoah/TestEvilSyncBug.java
@@ -1,7 +1,8 @@
 /*
- * Copyright (c) 2016, 2018, Red Hat, Inc. All rights reserved.
+ * Copyright (c) 2016, 2020, Red Hat, Inc. All rights reserved.
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
  *
@@ -23,11 +24,11 @@
 
 /*
  * @test TestEvilSyncBug
  * @summary Tests for crash/assert when attaching init thread during shutdown
  * @key gc
- * @requires vm.gc.Shenandoah
+ * @requires vm.gc.Shenandoah & !vm.graal.enabled
  * @library /test/lib
  * @modules java.base/jdk.internal.misc
  *          java.management
  * @run driver/timeout=480 TestEvilSyncBug
  */
@@ -47,23 +48,23 @@
 
     public static void main(String[] args) throws Exception {
         if (args.length > 0) {
             test();
         } else {
-            ExecutorService pool = Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());
-
+            // Use 1/4 of available processors to avoid over-saturation.
+            int numJobs = Math.max(1, Runtime.getRuntime().availableProcessors() / 4);
+            ExecutorService pool = Executors.newFixedThreadPool(numJobs);
             Future<?>[] fs = new Future<?>[NUM_RUNS];
 
             for (int c = 0; c < NUM_RUNS; c++) {
                 Callable<Void> task = () -> {
                     ProcessBuilder pb = ProcessTools.createJavaProcessBuilder("-Xms128m",
                             "-Xmx128m",
                             "-XX:+UnlockExperimentalVMOptions",
                             "-XX:+UnlockDiagnosticVMOptions",
                             "-XX:+UseShenandoahGC",
                             "-XX:ShenandoahGCHeuristics=aggressive",
-                            "-XX:+ShenandoahStoreCheck",
                             "TestEvilSyncBug", "test");
                     OutputAnalyzer output = new OutputAnalyzer(pb.start());
                     output.shouldHaveExitValue(0);
                     return null;
                 };
