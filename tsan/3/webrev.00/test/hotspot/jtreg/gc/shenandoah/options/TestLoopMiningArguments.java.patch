diff a/test/hotspot/jtreg/gc/shenandoah/options/TestLoopMiningArguments.java b/test/hotspot/jtreg/gc/shenandoah/options/TestLoopMiningArguments.java
--- a/test/hotspot/jtreg/gc/shenandoah/options/TestLoopMiningArguments.java
+++ b/test/hotspot/jtreg/gc/shenandoah/options/TestLoopMiningArguments.java
@@ -1,7 +1,8 @@
 /*
- * Copyright (c) 2017, 2018, Red Hat, Inc. All rights reserved.
+ * Copyright (c) 2017, 2019, Red Hat, Inc. All rights reserved.
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
  *
@@ -23,11 +24,12 @@
 
 /*
  * @test TestLoopMiningArguments
  * @summary Test that loop mining arguments are sane
  * @key gc
- * @requires vm.gc.Shenandoah
+ * @requires vm.gc.Shenandoah & !vm.graal.enabled
+ * @requires vm.flavor == "server"
  * @library /test/lib
  * @run driver TestLoopMiningArguments
  */
 
 import java.util.*;
@@ -51,54 +53,10 @@
         Asserts.assertEQ(output.firstMatch("(.+?) UseCountedLoopSafepoints.+?= (.+?) (.+?)", 2), Boolean.toString(cls), msg + ", but got wrong CLS");
         Asserts.assertEQ(output.firstMatch("(.+?) LoopStripMiningIter.+?= (.+?) (.+?)", 2), String.valueOf(iters), msg + ", but got wrong LSM");
     }
 
     public static void main(String[] args) throws Exception {
-        testDefaultGC();
-        testShenandoah();
-    }
-
-    public static void testDefaultGC() throws Exception {
-        testWith("Default GC should have CLS enabled, LSM = 1000",
-                true, 1000);
-
-        testWith("Default GC with +CLS should set LSM = 1",
-                true, 1,
-                "-XX:+UseCountedLoopSafepoints"
-        );
-
-        testWith("Default GC with +CLS should not override LSM>1",
-                true, 10,
-                "-XX:LoopStripMiningIter=10",
-                "-XX:+UseCountedLoopSafepoints"
-        );
-
-        testWith("Default GC with +CLS should not override LSM=1",
-                true, 1,
-                "-XX:LoopStripMiningIter=1",
-                "-XX:+UseCountedLoopSafepoints"
-        );
-
-        testWith("Default GC with +CLS should override LSM=0 to 1",
-                true, 1,
-                "-XX:LoopStripMiningIter=0",
-                "-XX:+UseCountedLoopSafepoints"
-        );
-
-        testWith("Default GC with -CLS should set LSM = 0",
-                false, 0,
-                "-XX:-UseCountedLoopSafepoints"
-        );
-
-        testWith("Default GC with -CLS should override LSM to 0",
-                false, 0,
-                "-XX:LoopStripMiningIter=10",
-                "-XX:-UseCountedLoopSafepoints"
-        );
-    }
-
-    public static void testShenandoah() throws Exception {
         testWith("Shenandoah should have CLS and LSM enabled",
                 true, 1000,
                 "-XX:+UnlockExperimentalVMOptions",
                 "-XX:+UseShenandoahGC"
         );
