diff a/test/hotspot/jtreg/gc/g1/TestHumongousAllocNearlyFullRegion.java b/test/hotspot/jtreg/gc/g1/TestHumongousAllocNearlyFullRegion.java
--- a/test/hotspot/jtreg/gc/g1/TestHumongousAllocNearlyFullRegion.java
+++ b/test/hotspot/jtreg/gc/g1/TestHumongousAllocNearlyFullRegion.java
@@ -21,20 +21,21 @@
  * questions.
  */
 
 package gc.g1;
 
-import static java.lang.ref.Reference.reachabilityFence;
+import static gc.testlibrary.Allocation.blackHole;
 
 /*
  * @test TestHumongousAllocNearlyFullRegion
  * @bug 8143587
  * @summary G1: humongous object allocations should work even when there is
  *              not enough space in the heapRegion to fit a filler object.
  * @requires vm.gc.G1
  * @modules java.base/jdk.internal.misc
  * @library /test/lib
+ * @library /
  * @run driver gc.g1.TestHumongousAllocNearlyFullRegion
  */
 
 import jdk.test.lib.process.OutputAnalyzer;
 import jdk.test.lib.process.ProcessTools;
@@ -62,11 +63,11 @@
     static class HumongousObjectAllocator {
         public static void main(String [] args) {
             for (int i = 0; i < heapSize; i++) {
                 // 131069 is the number of longs it takes to fill a heapRegion except
                 // for 8 bytes on 64 bit.
-                reachabilityFence(new long[131069]);
+                blackHole(new long[131069]);
             }
         }
     }
 }
 
