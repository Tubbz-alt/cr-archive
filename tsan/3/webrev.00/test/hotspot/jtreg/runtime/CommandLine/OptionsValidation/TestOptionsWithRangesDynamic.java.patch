diff a/test/hotspot/jtreg/runtime/CommandLine/OptionsValidation/TestOptionsWithRangesDynamic.java b/test/hotspot/jtreg/runtime/CommandLine/OptionsValidation/TestOptionsWithRangesDynamic.java
--- a/test/hotspot/jtreg/runtime/CommandLine/OptionsValidation/TestOptionsWithRangesDynamic.java
+++ b/test/hotspot/jtreg/runtime/CommandLine/OptionsValidation/TestOptionsWithRangesDynamic.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2015, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2015, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -36,17 +36,33 @@
 import optionsvalidation.JVMOption;
 import optionsvalidation.JVMOptionsUtils;
 
 public class TestOptionsWithRangesDynamic {
 
+    private static List<JVMOption> allWriteableOptions;
+
+    private static void excludeTestRange(String optionName) {
+        for (JVMOption option: allWriteableOptions) {
+            if (option.getName().equals(optionName)) {
+                option.excludeTestMinRange();
+                option.excludeTestMaxRange();
+                break;
+            }
+        }
+    }
+
     public static void main(String[] args) throws Exception {
         int failedTests;
-        List<JVMOption> allWriteableOptions;
 
         /* Get only writeable options */
         allWriteableOptions = JVMOptionsUtils.getOptionsWithRange(origin -> (origin.contains("manageable") || origin.contains("rw")));
 
+        /*
+         * Exclude SoftMaxHeapSize as its valid range is only known at runtime.
+         */
+        excludeTestRange("SoftMaxHeapSize");
+
         Asserts.assertGT(allWriteableOptions.size(), 0, "Options with ranges not found!");
 
         System.out.println("Test " + allWriteableOptions.size() + " writeable options with ranges. Start test!");
 
         failedTests = JVMOptionsUtils.runDynamicTests(allWriteableOptions);
