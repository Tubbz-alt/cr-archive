diff a/test/jdk/java/util/concurrent/tck/AtomicIntegerArray9Test.java b/test/jdk/java/util/concurrent/tck/AtomicIntegerArray9Test.java
--- a/test/jdk/java/util/concurrent/tck/AtomicIntegerArray9Test.java
+++ b/test/jdk/java/util/concurrent/tck/AtomicIntegerArray9Test.java
@@ -50,11 +50,13 @@
      */
     public void testIndexing() {
         AtomicIntegerArray aa = new AtomicIntegerArray(SIZE);
         for (int index : new int[] { -1, SIZE }) {
             final int j = index;
-            final Runnable[] tasks = {
+
+            assertThrows(
+                IndexOutOfBoundsException.class,
                 () -> aa.getPlain(j),
                 () -> aa.getOpaque(j),
                 () -> aa.getAcquire(j),
                 () -> aa.setPlain(j, 1),
                 () -> aa.setOpaque(j, 1),
@@ -63,14 +65,11 @@
                 () -> aa.compareAndExchangeAcquire(j, 1, 2),
                 () -> aa.compareAndExchangeRelease(j, 1, 2),
                 () -> aa.weakCompareAndSetPlain(j, 1, 2),
                 () -> aa.weakCompareAndSetVolatile(j, 1, 2),
                 () -> aa.weakCompareAndSetAcquire(j, 1, 2),
-                () -> aa.weakCompareAndSetRelease(j, 1, 2),
-            };
-
-            assertThrows(IndexOutOfBoundsException.class, tasks);
+                () -> aa.weakCompareAndSetRelease(j, 1, 2));
         }
     }
 
     /**
      * getPlain returns the last value set
