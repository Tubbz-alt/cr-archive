diff a/test/jdk/java/util/concurrent/tck/Collection8Test.java b/test/jdk/java/util/concurrent/tck/Collection8Test.java
--- a/test/jdk/java/util/concurrent/tck/Collection8Test.java
+++ b/test/jdk/java/util/concurrent/tck/Collection8Test.java
@@ -235,45 +235,21 @@
         }
         if (c instanceof BlockingQueue) {
             BlockingQueue q = (BlockingQueue) c;
             assertThrows(
                 NullPointerException.class,
-                () -> {
-                    try { q.offer(null, 1L, HOURS); }
-                    catch (InterruptedException ex) {
-                        throw new AssertionError(ex);
-                    }},
-                () -> {
-                    try { q.put(null); }
-                    catch (InterruptedException ex) {
-                        throw new AssertionError(ex);
-                    }});
+                () -> q.offer(null, 1L, HOURS),
+                () -> q.put(null));
         }
         if (c instanceof BlockingDeque) {
             BlockingDeque q = (BlockingDeque) c;
             assertThrows(
                 NullPointerException.class,
-                () -> {
-                    try { q.offerFirst(null, 1L, HOURS); }
-                    catch (InterruptedException ex) {
-                        throw new AssertionError(ex);
-                    }},
-                () -> {
-                    try { q.offerLast(null, 1L, HOURS); }
-                    catch (InterruptedException ex) {
-                        throw new AssertionError(ex);
-                    }},
-                () -> {
-                    try { q.putFirst(null); }
-                    catch (InterruptedException ex) {
-                        throw new AssertionError(ex);
-                    }},
-                () -> {
-                    try { q.putLast(null); }
-                    catch (InterruptedException ex) {
-                        throw new AssertionError(ex);
-                    }});
+                () -> q.offerFirst(null, 1L, HOURS),
+                () -> q.offerLast(null, 1L, HOURS),
+                () -> q.putFirst(null),
+                () -> q.putLast(null));
         }
     }
 
     public void testNoSuchElementExceptions() {
         Collection c = impl.emptyCollection();
@@ -977,10 +953,14 @@
             assertSame(c.getClass(), serialClone.getClass());
             assertCollectionsEquivalent(c, serialClone);
         } catch (java.io.NotSerializableException acceptable) {}
     }
 
+    /**
+     * TODO: move out of limbo
+     * 8203662: remove increment of modCount from ArrayList and Vector replaceAll()
+     */
     public void DISABLED_testReplaceAllIsNotStructuralModification() {
         Collection c = impl.emptyCollection();
         if (!(c instanceof List))
             return;
         List list = (List) c;
