diff a/test/jdk/java/util/logging/LogManager/TestLoggerNames.java b/test/jdk/java/util/logging/LogManager/TestLoggerNames.java
--- a/test/jdk/java/util/logging/LogManager/TestLoggerNames.java
+++ b/test/jdk/java/util/logging/LogManager/TestLoggerNames.java
@@ -131,22 +131,25 @@
         System.out.println("Got all expected logger names");
     }
 
 
     public static void main(String[] args) throws InterruptedException {
-        LogManager.getLogManager().addLogger(new TestLogger("com.foo.bar.zzz", null));
+        TestLogger test = new TestLogger("com.foo.bar.zzz", null);
+        LogManager.getLogManager().addLogger(test);
         try {
             Logger.getLogger(null);
             throw new RuntimeException("Logger.getLogger(null) didn't throw expected NPE");
         } catch (NullPointerException x) {
             System.out.println("Got expected NullPointerException for Logger.getLogger(null)");
         }
         List<Logger> loggers = new CopyOnWriteArrayList<>();
         loggers.add(Logger.getLogger("one.two.addMeAChild"));
         loggers.add(Logger.getLogger("aaa.bbb.replaceMe"));
         loggers.add(Logger.getLogger("bbb.aaa.addMeAChild"));
-        TestLogger test = (TestLogger)Logger.getLogger("com.foo.bar.zzz");
+        if (test != Logger.getLogger("com.foo.bar.zzz")) {
+            throw new AssertionError("wrong logger returned");
+        }
         loggers.add(Logger.getLogger("ddd.aaa.addMeAChild"));
 
         checkLoggerNames(loggers);
 
         Thread loggerNamesThread = new Thread(() -> {
