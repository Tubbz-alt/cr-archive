diff a/test/jdk/java/awt/Focus/NoAutotransferToDisabledCompTest/NoAutotransferToDisabledCompTest.java b/test/jdk/java/awt/Focus/NoAutotransferToDisabledCompTest/NoAutotransferToDisabledCompTest.java
--- a/test/jdk/java/awt/Focus/NoAutotransferToDisabledCompTest/NoAutotransferToDisabledCompTest.java
+++ b/test/jdk/java/awt/Focus/NoAutotransferToDisabledCompTest/NoAutotransferToDisabledCompTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2008, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2008, 2018, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -24,24 +24,22 @@
 /*
   @test
   @key headful
   @bug       4685768
   @summary   Tests that auto-transfering focus doesn't stuck on a disabled component.
-  @author    Anton Tarasov: area=awt.focus
   @library   ../../regtesthelpers
   @build     Util
   @run       main NoAutotransferToDisabledCompTest
 */
 
 import java.awt.Robot;
 import javax.swing.*;
 import java.awt.*;
 import java.awt.event.*;
-import java.applet.Applet;
 import test.java.awt.regtesthelpers.Util;
 
-public class NoAutotransferToDisabledCompTest extends Applet {
+public class NoAutotransferToDisabledCompTest {
     Robot robot;
     JFrame frame = new JFrame("Frame");
     JButton b0 = new JButton("b0");
     JButton b1 = new JButton("b1");
     JButton b2 = new JButton("b2");
@@ -79,10 +77,11 @@
         // Activate b1.
         robot.keyPress(KeyEvent.VK_SPACE);
         robot.delay(50);
         robot.keyRelease(KeyEvent.VK_SPACE);
         Util.waitForIdle(robot);
+        robot.delay(2000);
 
         // Check that focus has been transfered to b0.
         if (!b0.hasFocus()) {
             throw new TestFailedException("focus wasn't auto-transfered properly!");
         }
