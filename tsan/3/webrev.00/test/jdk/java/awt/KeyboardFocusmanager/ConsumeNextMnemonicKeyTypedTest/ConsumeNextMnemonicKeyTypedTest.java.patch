diff a/test/jdk/java/awt/KeyboardFocusmanager/ConsumeNextMnemonicKeyTypedTest/ConsumeNextMnemonicKeyTypedTest.java b/test/jdk/java/awt/KeyboardFocusmanager/ConsumeNextMnemonicKeyTypedTest/ConsumeNextMnemonicKeyTypedTest.java
--- a/test/jdk/java/awt/KeyboardFocusmanager/ConsumeNextMnemonicKeyTypedTest/ConsumeNextMnemonicKeyTypedTest.java
+++ b/test/jdk/java/awt/KeyboardFocusmanager/ConsumeNextMnemonicKeyTypedTest/ConsumeNextMnemonicKeyTypedTest.java
@@ -20,28 +20,26 @@
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */
 
 /*
-  test
-  @bug       6346690
-  @summary   Tests that key_typed is consumed after mnemonic key_pressed is handled for a menu item.
-  @author    anton.tarasov@sun.com: area=awt-focus
-  @library   /test/lib
-  @build     jdk.test.lib.Platform
-  @run       applet ConsumeNextMnemonicKeyTypedTest.html
+  @test
+  @key headful
+  @bug        6346690
+  @summary    Tests that key_typed is consumed after mnemonic key_pressed is handled for a menu item.
+  @library    /test/lib
+  @build      jdk.test.lib.Platform
+  @run        main ConsumeNextMnemonicKeyTypedTest
 */
 
 import jdk.test.lib.Platform;
 
 import java.awt.*;
 import javax.swing.*;
 import java.awt.event.*;
-import java.applet.Applet;
 
-
-public class ConsumeNextMnemonicKeyTypedTest extends Applet {
+public class ConsumeNextMnemonicKeyTypedTest {
     Robot robot;
     JFrame frame = new JFrame("Test Frame");
     JTextField text = new JTextField();
     JMenuBar bar = new JMenuBar();
     JMenu menu = new JMenu("Menu");
@@ -58,14 +56,10 @@
             robot = new Robot();
             robot.setAutoDelay(50);
         } catch (AWTException e) {
             throw new RuntimeException("Error: unable to create robot", e);
         }
-        // Create instructions for the user here, as well as set up
-        // the environment -- set the layout manager, add buttons,
-        // etc.
-        this.setLayout (new BorderLayout ());
     }
 
     public void start() {
         menu.setMnemonic('f');
         item.setMnemonic('i');
@@ -74,11 +68,11 @@
 
         frame.add(text);
         frame.setJMenuBar(bar);
         frame.pack();
 
-        frame.setLocation(800, 0);
+        frame.setLocationRelativeTo(null);
         frame.setVisible(true);
 
         test();
     }
 
