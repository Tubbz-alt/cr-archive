diff a/test/jdk/java/awt/datatransfer/MissedHtmlAndRtfBug/MissedHtmlAndRtfBug.java b/test/jdk/java/awt/datatransfer/MissedHtmlAndRtfBug/MissedHtmlAndRtfBug.java
--- a/test/jdk/java/awt/datatransfer/MissedHtmlAndRtfBug/MissedHtmlAndRtfBug.java
+++ b/test/jdk/java/awt/datatransfer/MissedHtmlAndRtfBug/MissedHtmlAndRtfBug.java
@@ -22,26 +22,34 @@
  */
 
 import java.awt.*;
 import java.awt.datatransfer.DataFlavor;
 import java.awt.event.*;
-import java.applet.Applet;
 import java.io.File;
 import java.util.ArrayList;
 
 import jdk.test.lib.Platform;
 import test.java.awt.regtesthelpers.process.ProcessCommunicator;
 import test.java.awt.regtesthelpers.process.ProcessResults;
 import test.java.awt.regtesthelpers.Util;
 
 import static java.lang.Thread.sleep;
 
-public class MissedHtmlAndRtfBug extends Applet {
-
-    public void init() {
-        setLayout(new BorderLayout());
-    }//End  init()
+/*
+    @test
+    @key headful
+    @bug 8005932 8017456
+    @summary Java 7 on mac os x only provides text clipboard formats
+    @library ../../regtesthelpers
+    @library ../../regtesthelpers/process
+    @library /test/lib
+    @build Util
+    @build ProcessResults ProcessCommunicator
+    @build jdk.test.lib.Platform
+    @run main/othervm MissedHtmlAndRtfBug main
+ */
+public class MissedHtmlAndRtfBug {
 
     public void start() {
         if (!Platform.isOSX() && !Platform.isWindows()) {
             System.out.println("This test is for Windows and Mac only. Passed.");
             return;
@@ -176,10 +184,15 @@
             return args[this.ordinal()].replaceAll("\"", "").split(",");
         }
     }
 
     public static void main(String[] args) throws InterruptedException {
+        if (args.length > 0 && args[0].equals("main")) {
+            new MissedHtmlAndRtfBug().start();
+            return;
+        }
+
         Point dragSourcePoint = new Point(InterprocessArguments.DRAG_SOURCE_POINT_X_ARGUMENT.extractInt(args),
                 InterprocessArguments.DRAG_SOURCE_POINT_Y_ARGUMENT.extractInt(args));
         Point targetFrameLocation = new Point(InterprocessArguments.TARGET_FRAME_X_POSITION_ARGUMENT.extractInt(args),
                 InterprocessArguments.TARGET_FRAME_Y_POSITION_ARGUMENT.extractInt(args));
         String[] names = InterprocessArguments.DATA_FLAVOR_NAMES.extractStringArray(args);
