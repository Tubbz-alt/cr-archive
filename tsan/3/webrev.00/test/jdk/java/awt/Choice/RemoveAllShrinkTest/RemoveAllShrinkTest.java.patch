diff a/test/jdk/java/awt/Choice/RemoveAllShrinkTest/RemoveAllShrinkTest.java b/test/jdk/java/awt/Choice/RemoveAllShrinkTest/RemoveAllShrinkTest.java
--- a/test/jdk/java/awt/Choice/RemoveAllShrinkTest/RemoveAllShrinkTest.java
+++ b/test/jdk/java/awt/Choice/RemoveAllShrinkTest/RemoveAllShrinkTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2014, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2014, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -22,65 +22,75 @@
  */
 
 /*
   @test
   @key headful
-  @bug 4851798 8041896
+  @bug 4851798 8041896 8225126
   @summary Tests Choice List shrinks after removeAll
   @run main RemoveAllShrinkTest
 */
 
-import java.awt.*;
-import java.awt.event.*;
-
+import java.awt.BorderLayout;
+import java.awt.Choice;
+import java.awt.Color;
+import java.awt.Frame;
+import java.awt.Panel;
+import java.awt.Point;
+import java.awt.Robot;
+import java.awt.event.InputEvent;
 
 public class RemoveAllShrinkTest {
 
     public static void main(String[] args) {
         Frame f = new Frame();
-        Choice choice = new Choice();
+        try {
+            Choice choice = new Choice();
 
-        for (int i = 0; i < 10; ++i) {
-            choice.addItem("Item " + i);
-        }
+            for (int i = 0; i < 10; ++i) {
+                choice.addItem("Item " + i);
+            }
 
-        f.add(choice, BorderLayout.NORTH);
-        Panel panel = new Panel();
-        panel.setBackground(Color.RED);
-        f.add(panel);
+            f.add(choice, BorderLayout.NORTH);
+            Panel panel = new Panel();
+            panel.setBackground(Color.RED);
+            f.add(panel);
 
-        f.setSize(200, 200);
-        f.setVisible(true);
-        f.toFront();
+            f.setSize(200, 200);
+            f.setLocationRelativeTo(null);
+            f.setVisible(true);
+            f.toFront();
 
-        choice.removeAll();
+            choice.removeAll();
 
-        try {
-            Robot robot = new Robot();
-            robot.setAutoWaitForIdle(true);
-            robot.setAutoDelay(50);
+            try {
+                Robot robot = new Robot();
+                robot.setAutoWaitForIdle(true);
+                robot.setAutoDelay(50);
 
-            robot.waitForIdle();
-            Thread.sleep(200);
+                robot.waitForIdle();
+                Thread.sleep(200);
 
-            Point pt = choice.getLocationOnScreen();
-            robot.mouseMove(pt.x + choice.getWidth() - choice.getHeight() / 2,
-                    pt.y + choice.getHeight() / 2);
-            robot.mousePress(InputEvent.BUTTON1_MASK);
-            robot.mouseRelease(InputEvent.BUTTON1_MASK);
+                Point pt = choice.getLocationOnScreen();
+                robot.mouseMove(pt.x + choice.getWidth() - choice.getHeight() / 2,
+                        pt.y + choice.getHeight() / 2);
+                robot.mousePress(InputEvent.BUTTON1_MASK);
+                robot.mouseRelease(InputEvent.BUTTON1_MASK);
 
-            Thread.sleep(400);
+                Thread.sleep(400);
 
-            Point pt1 = panel.getLocationOnScreen();
+                Point pt1 = panel.getLocationOnScreen();
 
-            Color color = robot.getPixelColor(pt1.x + panel.getWidth() / 2,
-                    pt1.y + panel.getHeight() / 2);
+                Color color = robot.getPixelColor(pt1.x + panel.getWidth() / 2,
+                        pt1.y + panel.getHeight() / 2);
 
-            if (!color.equals(Color.RED)) {
-                throw new RuntimeException("RemoveAllShrinkTest failed. " + color);
+                if (!color.equals(Color.RED)) {
+                    throw new RuntimeException("RemoveAllShrinkTest failed. " + color);
+                }
+            } catch (Exception e) {
+                throw new RuntimeException("The test was not completed.\n\n" + e);
             }
-        } catch (Exception e) {
-            throw new RuntimeException("The test was not completed.\n\n" + e);
+        } finally {
+            f.dispose();
         }
     }
 }
 
