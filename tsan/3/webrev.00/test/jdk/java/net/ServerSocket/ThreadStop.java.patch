diff a/test/jdk/java/net/ServerSocket/ThreadStop.java b/test/jdk/java/net/ServerSocket/ThreadStop.java
--- a/test/jdk/java/net/ServerSocket/ThreadStop.java
+++ b/test/jdk/java/net/ServerSocket/ThreadStop.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2002, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2002, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -37,11 +37,12 @@
     static class Server implements Runnable {
 
         ServerSocket ss;
 
         Server() throws IOException {
-            ss = new ServerSocket(0);
+            ss = new ServerSocket();
+            ss.bind(new InetSocketAddress(InetAddress.getLoopbackAddress(), 0));
         }
 
         public int localPort() {
             return ss.getLocalPort();
         }
@@ -79,11 +80,11 @@
         // it's platform specific if Thread.stop interrupts the
         // thread - on Linux/Windows most likely that thread is
         // still in accept() so we connect to server which causes
         // it to unblock and do JNI-stuff with a pending exception
 
-        try (Socket s = new Socket("localhost", svr.localPort())) {
+        try (Socket s = new Socket(svr.ss.getInetAddress(), svr.localPort())) {
         } catch (IOException ioe) {
         }
         thr.join();
     }
 
