diff a/test/jdk/java/net/Socket/SocksConnectTimeout.java b/test/jdk/java/net/Socket/SocksConnectTimeout.java
--- a/test/jdk/java/net/Socket/SocksConnectTimeout.java
+++ b/test/jdk/java/net/Socket/SocksConnectTimeout.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2010, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2010, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -22,10 +22,11 @@
  */
 
 /*
  * @test
  * @bug 6223635
+ * @library /test/lib
  * @summary Code hangs at connect call even when Timeout is specified
  * @run main SocksConnectTimeout
  * @run main/othervm -Djava.net.preferIPv4Stack=true SocksConnectTimeout
  */
 
@@ -37,29 +38,34 @@
 import java.net.SocketTimeoutException;
 import java.io.IOException;
 import java.io.Closeable;
 import java.util.concurrent.Phaser;
 import java.util.concurrent.TimeUnit;
+import jdk.test.lib.net.IPSupport;
 
 public class SocksConnectTimeout {
     static ServerSocket serverSocket;
     static final boolean debug = true;
     static final Phaser startPhaser = new Phaser(2);
     static final Phaser finishPhaser = new Phaser(2);
     static int failed, passed;
 
     public static void main(String[] args) {
+        IPSupport.throwSkippedExceptionIfNonOperational();
+
         try {
-            serverSocket = new ServerSocket(0);
+            serverSocket = new ServerSocket();
+            InetAddress localHost = InetAddress.getLocalHost();
+            serverSocket.bind(new InetSocketAddress(localHost, 0));
 
             (new Thread() {
                 @Override
                 public void run() { serve(); }
             }).start();
 
             Proxy socksProxy = new Proxy(Proxy.Type.SOCKS,
-                new InetSocketAddress(InetAddress.getLocalHost(), serverSocket.getLocalPort()));
+                    new InetSocketAddress(localHost, serverSocket.getLocalPort()));
 
             test(socksProxy);
         } catch (IOException e) {
             unexpected(e);
         } finally {
