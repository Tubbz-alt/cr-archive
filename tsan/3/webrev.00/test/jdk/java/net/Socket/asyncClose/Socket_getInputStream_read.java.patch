diff a/test/jdk/java/net/Socket/asyncClose/Socket_getInputStream_read.java b/test/jdk/java/net/Socket/asyncClose/Socket_getInputStream_read.java
--- a/test/jdk/java/net/Socket/asyncClose/Socket_getInputStream_read.java
+++ b/test/jdk/java/net/Socket/asyncClose/Socket_getInputStream_read.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2001, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2001, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -58,11 +58,11 @@
             if (timeout > 0) {
                 s.setSoTimeout(timeout);
             }
             latch.countDown();
             int n = in.read();
-            failed("Socket.getInputStream().read() returned unexpectly!!");
+            failed("Socket.getInputStream().read() returned unexpectedly!!");
         } catch (SocketException se) {
             if (latch.getCount() != 1) {
                 closed();
             }
         } catch (Exception e) {
@@ -74,12 +74,12 @@
         }
     }
 
     public AsyncCloseTest go() {
         try {
-            ServerSocket ss = new ServerSocket(0);
             InetAddress lh = InetAddress.getLocalHost();
+            ServerSocket ss = new ServerSocket(0, 0, lh);
             s.connect( new InetSocketAddress(lh, ss.getLocalPort()) );
             Socket s2 = ss.accept();
             Thread thr = new Thread(this);
             thr.start();
             latch.await();
