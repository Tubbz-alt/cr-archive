diff a/test/jdk/java/net/Socket/RST.java b/test/jdk/java/net/Socket/RST.java
--- a/test/jdk/java/net/Socket/RST.java
+++ b/test/jdk/java/net/Socket/RST.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2001, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2001, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -20,17 +20,20 @@
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */
 
 /*
+ * @test
  * @bug 4468997
+ * @library /test/lib
  * @summary SO_LINGER is ignored on Windows with Winsock 2
  * @run main RST
  * @run main/othervm -Djava.net.preferIPv4Stack=true RST
  */
 import java.net.*;
 import java.io.*;
+import jdk.test.lib.net.IPSupport;
 
 public class RST implements Runnable {
 
     Socket client;
 
@@ -42,12 +45,14 @@
             e.printStackTrace();
         }
     }
 
     RST() throws Exception {
-        ServerSocket ss = new ServerSocket(0);
-        client = new Socket("localhost", ss.getLocalPort());
+        InetAddress loopback = InetAddress.getLoopbackAddress();
+        ServerSocket ss = new ServerSocket();
+        ss.bind(new InetSocketAddress(loopback, 0));
+        client = new Socket(loopback, ss.getLocalPort());
         Socket server = ss.accept();
 
         Thread thr = new Thread(this);
         thr.start();
 
@@ -75,8 +80,10 @@
         }
     }
 
 
     public static void main(String args[]) throws Exception {
+        IPSupport.throwSkippedExceptionIfNonOperational();
+
         new RST();
     }
 }
