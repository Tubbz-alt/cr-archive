diff a/test/jdk/java/net/Socket/InheritTimeout.java b/test/jdk/java/net/Socket/InheritTimeout.java
--- a/test/jdk/java/net/Socket/InheritTimeout.java
+++ b/test/jdk/java/net/Socket/InheritTimeout.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2001, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2001, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -22,18 +22,20 @@
  */
 
 /*
  * @test
  * @bug 4508149
+ * @library /test/lib
  * @summary Setting ServerSocket.setSoTimeout shouldn't cause
  *          the timeout to be inherited by accepted connections
  * @run main InheritTimeout
  * @run main/othervm -Djava.net.preferIPv4Stack=true InheritTimeout
  */
 
 import java.net.*;
 import java.io.InputStream;
+import jdk.test.lib.net.IPSupport;
 
 public class InheritTimeout {
 
     class Reaper extends Thread {
         Socket s;
@@ -52,14 +54,15 @@
             }
         }
     }
 
    InheritTimeout() throws Exception {
-        ServerSocket ss = new ServerSocket(0);
+        InetAddress ia = InetAddress.getLocalHost();
+        ServerSocket ss = new ServerSocket();
+        ss.bind(new InetSocketAddress(ia, 0));
         ss.setSoTimeout(1000);
 
-        InetAddress ia = InetAddress.getLocalHost();
         InetSocketAddress isa =
             new InetSocketAddress(ia, ss.getLocalPort());
 
         // client establishes the connection
         Socket s1 = new Socket();
@@ -90,8 +93,9 @@
             throw new Exception("Unexpected SocketTimeoutException throw!");
         }
    }
 
    public static void main(String args[]) throws Exception {
+        IPSupport.throwSkippedExceptionIfNonOperational();
         new InheritTimeout();
    }
 }
