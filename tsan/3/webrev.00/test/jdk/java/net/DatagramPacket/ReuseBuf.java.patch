diff a/test/jdk/java/net/DatagramPacket/ReuseBuf.java b/test/jdk/java/net/DatagramPacket/ReuseBuf.java
--- a/test/jdk/java/net/DatagramPacket/ReuseBuf.java
+++ b/test/jdk/java/net/DatagramPacket/ReuseBuf.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2001, 2012, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2001, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -36,11 +36,13 @@
 
     static class ServerThread extends Thread{
         DatagramSocket ds;
         public ServerThread() {
             try {
-                ds = new DatagramSocket();
+                InetAddress local = InetAddress.getLocalHost();
+                InetSocketAddress bindaddr = new InetSocketAddress(local, 0);
+                ds = new DatagramSocket(bindaddr);
                 port = ds.getLocalPort();
             } catch (Exception e) {
                 throw new RuntimeException(e.getMessage());
             }
         }
@@ -66,11 +68,13 @@
     }
 
     public static void main(String args[]) throws Exception {
         ServerThread st = new ServerThread();
         st.start();
-        DatagramSocket ds = new DatagramSocket();
+        InetAddress local = InetAddress.getLocalHost();
+        InetSocketAddress bindaddr = new InetSocketAddress(local, 0);
+        DatagramSocket ds = new DatagramSocket(bindaddr);
         byte b[] = new byte[100];
         DatagramPacket dp = new DatagramPacket(b,b.length);
         for (int i = 0; i < msgs.length; i++) {
             ds.send(new DatagramPacket(msgs[i].getBytes(),msgs[i].length(),
                                        InetAddress.getLocalHost(),
