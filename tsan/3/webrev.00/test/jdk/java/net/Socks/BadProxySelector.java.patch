diff a/test/jdk/java/net/Socks/BadProxySelector.java b/test/jdk/java/net/Socks/BadProxySelector.java
--- a/test/jdk/java/net/Socks/BadProxySelector.java
+++ b/test/jdk/java/net/Socks/BadProxySelector.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2015, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -25,10 +25,11 @@
  * @test
  * @bug 7178362
  * @run main/othervm BadProxySelector
  */
 
+import java.net.InetAddress;
 import java.net.InetSocketAddress;
 import java.net.Proxy;
 import java.net.ProxySelector;
 import java.net.Socket;
 import java.net.SocketAddress;
@@ -39,17 +40,17 @@
 import java.io.*;
 
 public class BadProxySelector {
     public static void main(String[] args) throws Exception {
         ProxySelector.setDefault(new HTTPProxySelector());
-        try (ServerSocket ss = new ServerSocket(0);
+        try (ServerSocket ss = new ServerSocket(0, 0, InetAddress.getLocalHost());
              Socket s1 = new Socket(ss.getInetAddress(), ss.getLocalPort());
              Socket s2 = ss.accept()) {
         }
 
        ProxySelector.setDefault(new NullHTTPProxySelector());
-        try (ServerSocket ss = new ServerSocket(0);
+        try (ServerSocket ss = new ServerSocket(0, 0, InetAddress.getLocalHost());
              Socket s1 = new Socket(ss.getInetAddress(), ss.getLocalPort());
              Socket s2 = ss.accept()) {
         }
     }
 
@@ -58,10 +59,11 @@
         @Override
         public void connectFailed(URI uri, SocketAddress sa, IOException ioe) {}
 
         @Override
         public List<Proxy> select(URI uri) {
+            System.out.println(this.getClass().getSimpleName() + " called for " + uri);
             List<Proxy> proxies = new ArrayList<>();
             proxies.add(new Proxy(Proxy.Type.HTTP,
                                   new InetSocketAddress("localhost", 0)));
             proxies.add(new Proxy(Proxy.Type.HTTP,
                                   new InetSocketAddress("localhost", 0)));
@@ -73,10 +75,11 @@
         @Override
         public void connectFailed(URI uri, SocketAddress sa, IOException ioe) {}
 
         @Override
         public List<Proxy> select(URI uri) {
+            System.out.println(this.getClass().getSimpleName() + " called for " + uri);
             List<Proxy> proxies = new ArrayList<>();
             proxies.add(null);
             proxies.add(new Proxy(Proxy.Type.HTTP,
                                   new InetSocketAddress("localhost", 0)));
             return proxies;
