diff a/test/jdk/java/net/URL/GetContent.java b/test/jdk/java/net/URL/GetContent.java
--- a/test/jdk/java/net/URL/GetContent.java
+++ b/test/jdk/java/net/URL/GetContent.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1998, 2010, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1998, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -22,23 +22,26 @@
  */
 
 /**
  * @test
  * @bug 4145315
+ * @library /test/lib
  * @summary Test a read from nonexistant URL
+ * @run main GetContent
+ * @run main/othervm -Djava.net.preferIPv6Addresses GetContent
  */
 
 import java.net.*;
 import java.io.*;
+import jdk.test.lib.net.URIBuilder;
 
 public class GetContent implements Runnable {
 
      ServerSocket ss;
 
      public void run() {
-        try {
-            Socket s = ss.accept();
+        try (Socket s = ss.accept()) {
             s.setTcpNoDelay(true);
 
             PrintStream out = new PrintStream(
                                  new BufferedOutputStream(
                                     s.getOutputStream() ));
@@ -53,31 +56,35 @@
 
             // wait for client to read response - otherwise http
             // client get error and re-establish connection
             Thread.sleep(2000);
 
-            s.close();
         } catch (Exception e) {
             e.printStackTrace();
         } finally {
             try { ss.close(); } catch (IOException unused) {}
         }
      }
 
      GetContent() throws Exception {
+         InetAddress loopback = InetAddress.getLoopbackAddress();
+         ss = new ServerSocket();
+         ss.bind(new InetSocketAddress(loopback, 0));
 
-         ss = new ServerSocket(0);
          Thread thr = new Thread(this);
          thr.start();
 
          boolean error = true;
          try {
-             String name = "http://localhost:" + ss.getLocalPort() +
-                           "/no-such-name";
-             java.net.URL url = null;
-             url = new java.net.URL(name);
-             Object obj = url.getContent();
+             java.net.URL url = URIBuilder.newBuilder()
+                 .scheme("http")
+                 .host(ss.getInetAddress())
+                 .port(ss.getLocalPort())
+                 .path("/no-such-name")
+                 .toURL();
+             Object obj = url.openConnection(Proxy.NO_PROXY)
+                          .getContent();
              InputStream in = (InputStream) obj;
              byte buff[] = new byte[200];
              int len = in.read(buff);
          } catch (IOException ex) {
              error = false;
