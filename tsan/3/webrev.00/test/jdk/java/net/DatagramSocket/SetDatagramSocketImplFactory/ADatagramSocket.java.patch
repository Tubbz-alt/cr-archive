diff a/test/jdk/java/net/DatagramSocket/SetDatagramSocketImplFactory/ADatagramSocket.java b/test/jdk/java/net/DatagramSocket/SetDatagramSocketImplFactory/ADatagramSocket.java
--- a/test/jdk/java/net/DatagramSocket/SetDatagramSocketImplFactory/ADatagramSocket.java
+++ b/test/jdk/java/net/DatagramSocket/SetDatagramSocketImplFactory/ADatagramSocket.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1999, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1999, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -29,13 +29,14 @@
  * @run main ADatagramSocket
  */
 import java.io.*;
 import java.net.*;
 import java.util.*;
+import java.util.concurrent.CountDownLatch;
 
 public class ADatagramSocket {
-    public static void main(String[] args) throws IOException {
+    public static void main(String[] args) throws Exception {
         // testing out setDatagramSocketImplFactory
         System.err.println("setting DatagramSocketImplFactory...");
         try {
           DatagramSocket.setDatagramSocketImplFactory(new java.net.MyDatagramSocketImplFactory());
         } catch (Exception ex) {
@@ -44,10 +45,12 @@
 
         QuoteServerThread server = new QuoteServerThread();
         int port = server.getPort();
         System.out.println("Server port is " + port);
         server.start();
+        // Wait server thread to reach receive call
+        server.readyToStart.await();
 
         // get a datagram socket
         DatagramSocket socket = new DatagramSocket();
 
         // send request
@@ -70,18 +73,19 @@
 
 class QuoteServerThread extends Thread {
 
     protected DatagramSocket socket = null;
     private final int port;
+    final CountDownLatch readyToStart = new CountDownLatch(1);
 
     public QuoteServerThread() throws IOException {
         this("QuoteServerThread");
     }
 
     public QuoteServerThread(String name) throws IOException {
         super(name);
-        socket = new DatagramSocket(0);
+        socket = new DatagramSocket(0, InetAddress.getLocalHost());
         port =  socket.getLocalPort();
     }
     public int getPort(){
         return port;
     }
@@ -90,10 +94,12 @@
       try {
         byte[] buf = new byte[256];
 
         // receive request
         DatagramPacket packet = new DatagramPacket(buf, buf.length);
+        // Notify client that server is ready to receive packet
+        readyToStart.countDown();
         socket.receive(packet);
 
         // figure out response
         String dString = null;
         dString = new Date().toString();
