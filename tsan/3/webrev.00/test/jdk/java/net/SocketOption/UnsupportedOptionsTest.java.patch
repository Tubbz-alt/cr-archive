diff a/test/jdk/java/net/SocketOption/UnsupportedOptionsTest.java b/test/jdk/java/net/SocketOption/UnsupportedOptionsTest.java
--- a/test/jdk/java/net/SocketOption/UnsupportedOptionsTest.java
+++ b/test/jdk/java/net/SocketOption/UnsupportedOptionsTest.java
@@ -25,13 +25,16 @@
 import java.lang.reflect.Field;
 import java.net.*;
 import java.util.ArrayList;
 import java.util.List;
 
+import jdk.test.lib.net.IPSupport;
+
 /*
  * @test
  * @bug 8143554 8044773
+ * @library /test/lib
  * @summary Test checks that UnsupportedOperationException for unsupported
  *          SOCKET_OPTIONS is thrown by both getOption() and setOption() methods.
  * @requires !vm.graal.enabled
  * @run main UnsupportedOptionsTest
  * @run main/othervm -Djava.net.preferIPv4Stack=true UnsupportedOptionsTest
@@ -59,18 +62,27 @@
             Class<?> c = Class.forName("jdk.net.ExtendedSocketOptions");
             Field field = c.getField("SO_FLOW_SLA");
             socketOptions.add((SocketOption<?>)field.get(null));
             field = c.getField("TCP_QUICKACK");
             socketOptions.add((SocketOption<?>)field.get(null));
+            field = c.getField("TCP_KEEPIDLE");
+            socketOptions.add((SocketOption<?>)field.get(null));
+            field = c.getField("TCP_KEEPINTERVAL");
+            socketOptions.add((SocketOption<?>)field.get(null));
+            field = c.getField("TCP_KEEPCOUNT");
+            socketOptions.add((SocketOption<?>)field.get(null));
+
         } catch (ClassNotFoundException e) {
             // ignore, jdk.net module not present
         } catch (ReflectiveOperationException e) {
             throw new AssertionError(e);
         }
     }
 
     public static void main(String[] args) throws IOException {
+        IPSupport.throwSkippedExceptionIfNonOperational();
+
         Socket s = new Socket();
         ServerSocket ss = new ServerSocket();
         DatagramSocket ds = new DatagramSocket();
         MulticastSocket ms = new MulticastSocket();
 
