diff a/test/jdk/java/io/Serializable/oldTests/CheckingEquality.java b/test/jdk/java/io/Serializable/oldTests/CheckingEquality.java
--- a/test/jdk/java/io/Serializable/oldTests/CheckingEquality.java
+++ b/test/jdk/java/io/Serializable/oldTests/CheckingEquality.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2005, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -81,10 +81,12 @@
         }
     }
 }
 
 class Firstpsio implements java.io.Serializable {
+    private static final long serialVersionUID = 1L;
+
     String one;
     int two;
     float three[];
 
     void init() { /* called only before writing */
@@ -123,10 +125,12 @@
         return ret;
     }
 }
 
 class Secondpsio extends Firstpsio  {
+    private static final long serialVersionUID = 1L;
+
     String quatre;
     int cinq;
 
     private void writeObject(ObjectOutputStream pw) throws IOException {
         pw.writeObject(quatre);
@@ -171,10 +175,11 @@
         super.init();
     }
 }
 
 class Thirdpsio extends Secondpsio {
+    private static final long serialVersionUID = 1L;
 
     static String ign = "ignored";
     transient Object oh;
 
     int six;
@@ -182,11 +187,12 @@
     private static int seven[];
     protected byte eight = (byte)9;
     static final byte dcare = (byte) 128;
     private short nine = 8888;
     long ten;
-    java.util.Enumeration zero;
+    @SuppressWarnings("serial") /* Incorrect declarations are being tested */
+    java.util.Enumeration<?> zero;
 
 
     boolean equals(Thirdpsio other) {
         boolean ret = super.equals(other);
 
@@ -225,10 +231,10 @@
         int s7[] = { 7, 7, 7 };
         seven = s7;
         eight = (byte)8;
         nine = (short)9;
         ten = (long)100000;
-        java.util.Enumeration em = null; /* default */
+        java.util.Enumeration<?> em = null; /* default */
 
         super.init();
     }
 }
