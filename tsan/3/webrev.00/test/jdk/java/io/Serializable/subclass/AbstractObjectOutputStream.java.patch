diff a/test/jdk/java/io/Serializable/subclass/AbstractObjectOutputStream.java b/test/jdk/java/io/Serializable/subclass/AbstractObjectOutputStream.java
--- a/test/jdk/java/io/Serializable/subclass/AbstractObjectOutputStream.java
+++ b/test/jdk/java/io/Serializable/subclass/AbstractObjectOutputStream.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1998, 2004, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1998, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -42,11 +42,11 @@
  * subclass of AbstractObjectInputStream must also be implemented to
  * deserializa the new implementation.<p>
  *
  * Since serialization must override java access rules in order to
  * access private, protected and package accessible Serializable fields,
- * only trusted classes are allowed to subclass AbstractObjectInputStream.
+ * only trusted classes are allowed to subclass AbstractObjectOutputStream.
  * Subclasses of AbstractObjectOututStream must have SerializablePermission
  * "enableAbstractSubclass" or this constructor will throw a
  * SecurityException.Implementations of this class should protect themselves
  * from being subclassed in a way that will provide access to object
  * references and other sensitive info. Specifically, writeObjectOverride()
