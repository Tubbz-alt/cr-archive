diff a/test/jdk/java/io/Serializable/replaceStringArray/ReplaceStringArray.java b/test/jdk/java/io/Serializable/replaceStringArray/ReplaceStringArray.java
--- a/test/jdk/java/io/Serializable/replaceStringArray/ReplaceStringArray.java
+++ b/test/jdk/java/io/Serializable/replaceStringArray/ReplaceStringArray.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1998, 2012, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1998, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -28,10 +28,12 @@
 
 import java.io.*;
 import java.lang.reflect.Array;
 
 class A implements Serializable {
+    private static final long serialVersionUID = 1L;
+
     String stringA;
     String stringB;
     String stringC;
     String[] arrayOfString;
 
@@ -72,11 +74,11 @@
         }
         if (obj.getClass().isArray()) {
             Object[] array = (Object[]) obj;
             /* Double the array.
              * Initialize new array elements with original array. */
-            Class arrayComponentType = array.getClass().getComponentType();
+            Class<?> arrayComponentType = array.getClass().getComponentType();
             Object[] newarray =
                 (Object[])Array.newInstance(arrayComponentType,
                                             array.length * 2);
             for (int i = 0; i < array.length; i++)
                 newarray[i] = array[i];
@@ -106,11 +108,11 @@
         if (obj.getClass().isArray()) {
             Object[] array = (Object[])obj;
 
             /* Double the array.
              * Initialize new array elements with original array. */
-            Class arrayComponentType = array.getClass().getComponentType();
+            Class<?> arrayComponentType = array.getClass().getComponentType();
             Object[] newarray =
                 (Object[])Array.newInstance(arrayComponentType,
                                             array.length * 2);
             for (int i = 0; i < array.length; i++)
                 newarray[i] = array[i];
