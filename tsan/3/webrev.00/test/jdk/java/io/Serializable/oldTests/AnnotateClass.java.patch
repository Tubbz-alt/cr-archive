diff a/test/jdk/java/io/Serializable/oldTests/AnnotateClass.java b/test/jdk/java/io/Serializable/oldTests/AnnotateClass.java
--- a/test/jdk/java/io/Serializable/oldTests/AnnotateClass.java
+++ b/test/jdk/java/io/Serializable/oldTests/AnnotateClass.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2005, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -100,21 +100,20 @@
     }
 
     /* When any class is written, add a "magic" string
      * that must be verified by the TestInputStream.
      */
-    protected void annotateClass(Class cl) throws IOException {
+    protected void annotateClass(Class<?> cl) throws IOException {
         this.writeUTF("magic");
     }
 
     /* For each object of type PrintStream, substitute
      * a StdStream handle object that encodes which
      * of the standard print streams is being written.
      * Other objects are written as themselves.
      */
     protected Object replaceObject(Object obj)
-        throws IOException
     {
         /* For PrintStreams, like stdout and stderr, encode */
         if (obj instanceof PrintStream) {
             return new StdStream((PrintStream)obj);
         }
@@ -167,10 +166,11 @@
 
 /* A holder class to map between standard print streams (stdout, stderr)
  * and a small integer.
  */
 class StdStream implements java.io.Serializable {
+    private static final long serialVersionUID = 1L;
     private int stream = 0;
 
     public StdStream(PrintStream s) {
         if (s == System.out) {
             stream = 1;
