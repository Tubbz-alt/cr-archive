diff a/test/jdk/java/io/Serializable/badSerialVersionUID/BadSerialVersionUID.java b/test/jdk/java/io/Serializable/badSerialVersionUID/BadSerialVersionUID.java
--- a/test/jdk/java/io/Serializable/badSerialVersionUID/BadSerialVersionUID.java
+++ b/test/jdk/java/io/Serializable/badSerialVersionUID/BadSerialVersionUID.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2001, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2001, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -30,46 +30,54 @@
  */
 
 import java.io.*;
 
 class Z implements Serializable {
+    @SuppressWarnings("serial") /* Incorrect declarations are being tested */
     private static final boolean serialVersionUID = false;
 }
 
 class B implements Serializable {
+    @SuppressWarnings("serial") /* Incorrect declarations are being tested */
     private static final byte serialVersionUID = 5;
 }
 
 class C implements Serializable {
+    @SuppressWarnings("serial") /* Incorrect declarations are being tested */
     private static final char serialVersionUID = 5;
 }
 
 class S implements Serializable {
+    @SuppressWarnings("serial") /* Incorrect declarations are being tested */
     private static final short serialVersionUID = 5;
 }
 
 class I implements Serializable {
+    @SuppressWarnings("serial") /* Incorrect declarations are being tested */
     private static final int serialVersionUID = 5;
 }
 
 class F implements Serializable {
+    @SuppressWarnings("serial") /* Incorrect declarations are being tested */
     private static final float serialVersionUID = 5.0F;
 }
 
 class D implements Serializable {
+    @SuppressWarnings("serial") /* Incorrect declarations are being tested */
     private static final double serialVersionUID = 5.0;
 }
 
 class L implements Serializable {
+    @SuppressWarnings("serial") /* Incorrect declarations are being tested */
     private static final Object serialVersionUID = "5";
 }
 
 
 public class BadSerialVersionUID {
     public static void main(String[] args) throws Exception {
-        Class[] ignore = { Z.class, F.class, D.class, L.class };
-        Class[] convert = { B.class, C.class, S.class, I.class };
+        Class<?>[] ignore = { Z.class, F.class, D.class, L.class };
+        Class<?>[] convert = { B.class, C.class, S.class, I.class };
 
         for (int i = 0; i < ignore.length; i++) {
             ObjectStreamClass.lookup(ignore[i]).getSerialVersionUID();
         }
         for (int i = 0; i < convert.length; i++) {
