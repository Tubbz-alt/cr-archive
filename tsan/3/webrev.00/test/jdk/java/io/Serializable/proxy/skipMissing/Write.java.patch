diff a/test/jdk/java/io/Serializable/proxy/skipMissing/Write.java b/test/jdk/java/io/Serializable/proxy/skipMissing/Write.java
--- a/test/jdk/java/io/Serializable/proxy/skipMissing/Write.java
+++ b/test/jdk/java/io/Serializable/proxy/skipMissing/Write.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2000, 2010, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -40,10 +40,11 @@
 interface I {}          // interface present only on writing side
 
 class A implements Serializable {
     private static final long serialVersionUID = 0L;
     String a = "a";
+    @SuppressWarnings("serial") /* Incorrect declarations are being tested */
     Object proxy;
     String z = "z";
 
     A(Object proxy) { this.proxy = proxy; }
 }
@@ -63,11 +64,11 @@
 
 public class Write {
     public static void main(String[] args) throws Exception {
         Object proxy = Proxy.newProxyInstance(
             Write.class.getClassLoader(),
-            new Class[] { I.class }, new Handler());
+            new Class<?>[] { I.class }, new Handler());
         ObjectOutputStream oout = new ObjectOutputStream(
             new FileOutputStream("tmp.ser"));
         oout.writeObject(new A(proxy));
         oout.reset();
         oout.writeObject(new B(proxy));
