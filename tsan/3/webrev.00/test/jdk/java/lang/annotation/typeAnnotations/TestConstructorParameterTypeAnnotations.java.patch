diff a/test/jdk/java/lang/annotation/typeAnnotations/TestConstructorParameterTypeAnnotations.java b/test/jdk/java/lang/annotation/typeAnnotations/TestConstructorParameterTypeAnnotations.java
--- a/test/jdk/java/lang/annotation/typeAnnotations/TestConstructorParameterTypeAnnotations.java
+++ b/test/jdk/java/lang/annotation/typeAnnotations/TestConstructorParameterTypeAnnotations.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2017, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -126,39 +126,39 @@
     }
 
     @ExpectedGetParameterAnnotations("[[], []]")
     @ExpectedParameterTypeAnnotations({
         "null",
-        "@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(value=1)"})
+        "@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(1)"})
     public class NestedClass1 {
         public NestedClass1(@MarkerTypeAnnotation(1) int parameter) {}
     }
 
     @ExpectedGetParameterAnnotations("[[], [], []]")
     @ExpectedParameterTypeAnnotations({
         "null",
-        "@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(value=2)",
+        "@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(2)",
         "null"})
     public class NestedClass2 {
         public NestedClass2(@MarkerTypeAnnotation(2) int parameter1,
                             int parameter2) {}
     }
 
     @ExpectedGetParameterAnnotations("[[], [], []]")
     @ExpectedParameterTypeAnnotations({
         "null",
-        "@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(value=3)",
+        "@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(3)",
         "null"})
     public class NestedClass3 {
         public <P> NestedClass3(@MarkerTypeAnnotation(3) P parameter1,
                                 int parameter2) {}
     }
 
     @ExpectedGetParameterAnnotations("[[], [], []]")
     @ExpectedParameterTypeAnnotations({
         "null",
-        "@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(value=4)",
+        "@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(4)",
         "null"})
     public class NestedClass4 {
         public <P, Q> NestedClass4(@MarkerTypeAnnotation(4) P parameter1,
                                    Q parameter2) {}
     }
@@ -169,36 +169,36 @@
         public StaticNestedClass0() {}
     }
 
     @ExpectedGetParameterAnnotations("[[]]")
     @ExpectedParameterTypeAnnotations({
-        "@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(value=1)"})
+        "@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(1)"})
     public static class StaticNestedClass1 {
         public StaticNestedClass1(@MarkerTypeAnnotation(1) int parameter) {}
     }
 
     @ExpectedGetParameterAnnotations("[[], []]")
     @ExpectedParameterTypeAnnotations({
-        "@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(value=2)",
+        "@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(2)",
         "null"})
     public static class StaticNestedClass2 {
         public StaticNestedClass2(@MarkerTypeAnnotation(2) int parameter1,
                                   int parameter2) {}
     }
 
     @ExpectedGetParameterAnnotations("[[], []]")
     @ExpectedParameterTypeAnnotations({
-        "@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(value=3)",
+        "@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(3)",
         "null"})
     public static class StaticNestedClass3 {
          public <P> StaticNestedClass3(@MarkerTypeAnnotation(3) P parameter1,
                                       int parameter2) {}
     }
 
     @ExpectedGetParameterAnnotations("[[], []]")
     @ExpectedParameterTypeAnnotations({
-        "@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(value=4)",
+        "@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(4)",
         "null"})
     public static class StaticNestedClass4 {
         public <P, Q> StaticNestedClass4(@MarkerTypeAnnotation(4) P parameter1,
                                          Q parameter2) {}
     }
