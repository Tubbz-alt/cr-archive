diff a/test/jdk/java/lang/annotation/TestConstructorParameterAnnotations.java b/test/jdk/java/lang/annotation/TestConstructorParameterAnnotations.java
--- a/test/jdk/java/lang/annotation/TestConstructorParameterAnnotations.java
+++ b/test/jdk/java/lang/annotation/TestConstructorParameterAnnotations.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2017, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -127,51 +127,51 @@
         public NestedClass0() {}
     }
 
     @ExpectedGetParameterAnnotations(
         "[[], " +
-        "[@TestConstructorParameterAnnotations$MarkerAnnotation(value=1)]]")
+        "[@TestConstructorParameterAnnotations$MarkerAnnotation(1)]]")
     @ExpectedParameterAnnotations({
         "null",
-        "@TestConstructorParameterAnnotations$MarkerAnnotation(value=1)"})
+        "@TestConstructorParameterAnnotations$MarkerAnnotation(1)"})
     public class NestedClass1 {
         public NestedClass1(@MarkerAnnotation(1) int parameter) {}
     }
 
     @ExpectedGetParameterAnnotations(
         "[[], " +
-        "[@TestConstructorParameterAnnotations$MarkerAnnotation(value=2)], " +
+        "[@TestConstructorParameterAnnotations$MarkerAnnotation(2)], " +
         "[]]")
     @ExpectedParameterAnnotations({
         "null",
-        "@TestConstructorParameterAnnotations$MarkerAnnotation(value=2)",
+        "@TestConstructorParameterAnnotations$MarkerAnnotation(2)",
         "null"})
     public class NestedClass2 {
         public NestedClass2(@MarkerAnnotation(2) int parameter1,
                             int parameter2) {}
     }
 
     @ExpectedGetParameterAnnotations(
         "[[], " +
-        "[@TestConstructorParameterAnnotations$MarkerAnnotation(value=3)], " +
+        "[@TestConstructorParameterAnnotations$MarkerAnnotation(3)], " +
         "[]]")
     @ExpectedParameterAnnotations({
         "null",
-        "@TestConstructorParameterAnnotations$MarkerAnnotation(value=3)",
+        "@TestConstructorParameterAnnotations$MarkerAnnotation(3)",
             "null"})
     public class NestedClass3 {
         public <P> NestedClass3(@MarkerAnnotation(3) P parameter1,
                                 int parameter2) {}
     }
 
     @ExpectedGetParameterAnnotations(
         "[[], " +
-        "[@TestConstructorParameterAnnotations$MarkerAnnotation(value=4)], " +
+        "[@TestConstructorParameterAnnotations$MarkerAnnotation(4)], " +
         "[]]")
     @ExpectedParameterAnnotations({
         "null",
-        "@TestConstructorParameterAnnotations$MarkerAnnotation(value=4)",
+        "@TestConstructorParameterAnnotations$MarkerAnnotation(4)",
         "null"})
     public class NestedClass4 {
         public <P, Q> NestedClass4(@MarkerAnnotation(4) P parameter1,
                                    Q parameter2) {}
     }
@@ -181,44 +181,44 @@
     public static class StaticNestedClass0 {
         public StaticNestedClass0() {}
     }
 
     @ExpectedGetParameterAnnotations(
-        "[[@TestConstructorParameterAnnotations$MarkerAnnotation(value=1)]]")
+        "[[@TestConstructorParameterAnnotations$MarkerAnnotation(1)]]")
     @ExpectedParameterAnnotations({
-        "@TestConstructorParameterAnnotations$MarkerAnnotation(value=1)"})
+        "@TestConstructorParameterAnnotations$MarkerAnnotation(1)"})
     public static class StaticNestedClass1 {
         public StaticNestedClass1(@MarkerAnnotation(1) int parameter) {}
     }
 
     @ExpectedGetParameterAnnotations(
-        "[[@TestConstructorParameterAnnotations$MarkerAnnotation(value=2)], " +
+        "[[@TestConstructorParameterAnnotations$MarkerAnnotation(2)], " +
         "[]]")
     @ExpectedParameterAnnotations({
-        "@TestConstructorParameterAnnotations$MarkerAnnotation(value=2)",
+        "@TestConstructorParameterAnnotations$MarkerAnnotation(2)",
         "null"})
     public static class StaticNestedClass2 {
         public StaticNestedClass2(@MarkerAnnotation(2) int parameter1,
                             int parameter2) {}
     }
 
     @ExpectedGetParameterAnnotations(
-        "[[@TestConstructorParameterAnnotations$MarkerAnnotation(value=3)], " +
+        "[[@TestConstructorParameterAnnotations$MarkerAnnotation(3)], " +
         "[]]")
     @ExpectedParameterAnnotations({
-        "@TestConstructorParameterAnnotations$MarkerAnnotation(value=3)",
+        "@TestConstructorParameterAnnotations$MarkerAnnotation(3)",
         "null"})
     public static class StaticNestedClass3 {
         public <P> StaticNestedClass3(@MarkerAnnotation(3) P parameter1,
                                       int parameter2) {}
     }
 
     @ExpectedGetParameterAnnotations(
-        "[[@TestConstructorParameterAnnotations$MarkerAnnotation(value=4)], " +
+        "[[@TestConstructorParameterAnnotations$MarkerAnnotation(4)], " +
         "[]]")
     @ExpectedParameterAnnotations({
-        "@TestConstructorParameterAnnotations$MarkerAnnotation(value=4)",
+        "@TestConstructorParameterAnnotations$MarkerAnnotation(4)",
         "null"})
     public static class StaticNestedClass4 {
         public <P, Q> StaticNestedClass4(@MarkerAnnotation(4) P parameter1,
                                          Q parameter2) {}
     }
