diff a/test/jdk/java/lang/module/ClassFileVersionsTest.java b/test/jdk/java/lang/module/ClassFileVersionsTest.java
--- a/test/jdk/java/lang/module/ClassFileVersionsTest.java
+++ b/test/jdk/java/lang/module/ClassFileVersionsTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2017, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -55,10 +55,12 @@
 
                 { 54,   0,  Set.of() },                      // JDK 10
                 { 55,   0,  Set.of() },                      // JDK 11
                 { 56,   0,  Set.of() },                      // JDK 12
                 { 57,   0,  Set.of() },                      // JDK 13
+                { 58,   0,  Set.of() },                      // JDK 14
+                { 59,   0,  Set.of() },                      // JDK 15
         };
     }
 
     // major, minor, modifiers for requires java.base
     @DataProvider(name = "unsupported")
@@ -82,11 +84,19 @@
 
                 { 57,   0,  Set.of(STATIC) },                // JDK 13
                 { 57,   0,  Set.of(TRANSITIVE) },
                 { 57,   0,  Set.of(STATIC, TRANSITIVE) },
 
-                { 58,   0,  Set.of()},                       // JDK 14
+                { 58,   0,  Set.of(STATIC) },                // JDK 14
+                { 58,   0,  Set.of(TRANSITIVE) },
+                { 58,   0,  Set.of(STATIC, TRANSITIVE) },
+
+                { 59,   0,  Set.of(STATIC) },                // JDK 15
+                { 59,   0,  Set.of(TRANSITIVE) },
+                { 59,   0,  Set.of(STATIC, TRANSITIVE) },
+
+                { 60,   0,  Set.of()},                       // JDK 16
         };
     }
 
     @Test(dataProvider = "supported")
     public void testSupported(int major, int minor, Set<Modifier> ms) {
