diff a/test/jdk/java/lang/management/MemoryMXBean/ResetPeakMemoryUsage.java b/test/jdk/java/lang/management/MemoryMXBean/ResetPeakMemoryUsage.java
--- a/test/jdk/java/lang/management/MemoryMXBean/ResetPeakMemoryUsage.java
+++ b/test/jdk/java/lang/management/MemoryMXBean/ResetPeakMemoryUsage.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -61,13 +61,11 @@
      */
     public static void main(String a[]) throws Throwable {
         final String main = "ResetPeakMemoryUsage$TestMain";
         final String ms = "-Xms256m";
         final String mn = "-Xmn8m";
-        if (!Compiler.isGraalEnabled()) { // Graal does not support CMS
-            RunUtil.runTestClearGcOpts(main, ms, mn, "-XX:+UseConcMarkSweepGC");
-        }
+
         RunUtil.runTestClearGcOpts(main, ms, mn, "-XX:+UseParallelGC");
         RunUtil.runTestClearGcOpts(main, ms, mn, "-XX:+UseG1GC", "-XX:G1HeapRegionSize=1m");
         RunUtil.runTestClearGcOpts(main, ms, mn, "-XX:+UseSerialGC",
                 "-XX:MarkSweepAlwaysCompactCount=1");
     }
