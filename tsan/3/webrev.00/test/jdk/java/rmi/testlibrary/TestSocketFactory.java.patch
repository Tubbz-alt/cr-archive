diff a/test/jdk/java/rmi/testlibrary/TestSocketFactory.java b/test/jdk/java/rmi/testlibrary/TestSocketFactory.java
--- a/test/jdk/java/rmi/testlibrary/TestSocketFactory.java
+++ b/test/jdk/java/rmi/testlibrary/TestSocketFactory.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2017, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2017, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -90,20 +90,21 @@
 
     private transient final List<InterposeServerSocket> serverSockets = new ArrayList<>();
 
     static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
 
-    public static final boolean DEBUG = false;
+    // True to enable logging of matches and replacements.
+    private static volatile boolean debugLogging = false;
 
     /**
      * Debugging output can be synchronized with logging of RMI actions.
      *
      * @param format a printf format
      * @param args   any args
      */
-    private static void DEBUG(String format, Object... args) {
-        if (DEBUG) {
+    public static void DEBUG(String format, Object... args) {
+        if (debugLogging) {
             System.err.printf(format, args);
         }
     }
 
     /**
@@ -114,10 +115,21 @@
         this.triggerBytes = EMPTY_BYTE_ARRAY;
         this.matchBytes = EMPTY_BYTE_ARRAY;
         this.replaceBytes = EMPTY_BYTE_ARRAY;
     }
 
+    /**
+     * Set debug to true to generate logging output of matches and substitutions.
+     * @param debug {@code true} to generate logging output
+     * @return the previous value
+     */
+    public static boolean setDebug(boolean debug) {
+        boolean oldDebug = debugLogging;
+        debugLogging = debug;
+        return oldDebug;
+    }
+
     /**
      * Set the match and replacement bytes, with an empty trigger.
      * The match and replacements are propagated to all existing sockets.
      *
      * @param matchBytes bytes to match
