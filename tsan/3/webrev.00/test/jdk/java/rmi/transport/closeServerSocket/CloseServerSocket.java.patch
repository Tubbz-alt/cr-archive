diff a/test/jdk/java/rmi/transport/closeServerSocket/CloseServerSocket.java b/test/jdk/java/rmi/transport/closeServerSocket/CloseServerSocket.java
--- a/test/jdk/java/rmi/transport/closeServerSocket/CloseServerSocket.java
+++ b/test/jdk/java/rmi/transport/closeServerSocket/CloseServerSocket.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2005, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2005, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -61,12 +61,23 @@
         Registry registry = LocateRegistry.createRegistry(PORT);
         System.err.println("- exported registry: " + registry);
         verifyPortInUse(PORT);
         UnicastRemoteObject.unexportObject(registry, true);
         System.err.println("- unexported registry");
-        Thread.sleep(1000);        // work around BindException (bug?)
-        verifyPortFree(PORT);
+        int tries = (int)TestLibrary.getTimeoutFactor();
+        tries = Math.max(tries, 1);
+        while (tries-- > 0) {
+            Thread.sleep(1000);
+            try {
+                verifyPortFree(PORT);
+                break;
+            } catch (IOException ignore) { }
+        }
+        if (tries < 0) {
+            throw new RuntimeException("time out after tries: " + tries);
+        }
+
 
         /*
          * The follow portion of this test is disabled temporarily
          * because 4457683 was partially backed out because of
          * 6269166; for now, only server sockets originally opened for
@@ -99,10 +110,11 @@
     }
 
     private static void verifyPortInUse(int port) throws IOException {
         try {
             verifyPortFree(port);
+            throw new RuntimeException("port is not in use: " + port);
         } catch (BindException e) {
             System.err.println("- port " + port + " is in use");
             return;
         }
     }
