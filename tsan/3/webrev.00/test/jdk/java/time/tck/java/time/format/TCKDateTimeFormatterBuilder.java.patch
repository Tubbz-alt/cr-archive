diff a/test/jdk/java/time/tck/java/time/format/TCKDateTimeFormatterBuilder.java b/test/jdk/java/time/tck/java/time/format/TCKDateTimeFormatterBuilder.java
--- a/test/jdk/java/time/tck/java/time/format/TCKDateTimeFormatterBuilder.java
+++ b/test/jdk/java/time/tck/java/time/format/TCKDateTimeFormatterBuilder.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2012, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2012, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -612,11 +612,11 @@
         };
     }
 
     @Test(dataProvider = "parseGenericTimeZonePatterns")
     public void test_appendZoneText_parseGenericTimeZonePatterns(String pattern, LocalDateTime ldt, ZoneId zId, String input) {
-        DateTimeFormatter df = new DateTimeFormatterBuilder().appendPattern(pattern).toFormatter();
+        DateTimeFormatter df = new DateTimeFormatterBuilder().appendPattern(pattern).toFormatter(Locale.US);
         ZonedDateTime expected = ZonedDateTime.parse(input, df);
         ZonedDateTime actual = ZonedDateTime.of(ldt, zId);
         assertEquals(actual, expected);
     }
 
