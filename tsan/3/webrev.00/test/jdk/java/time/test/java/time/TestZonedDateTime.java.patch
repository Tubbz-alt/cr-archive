diff a/test/jdk/java/time/test/java/time/TestZonedDateTime.java b/test/jdk/java/time/test/java/time/TestZonedDateTime.java
--- a/test/jdk/java/time/test/java/time/TestZonedDateTime.java
+++ b/test/jdk/java/time/test/java/time/TestZonedDateTime.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2012, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -57,21 +57,38 @@
  * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 package test.java.time;
 
+import static org.testng.Assert.assertEquals;
+
+import java.time.Duration;
+import java.time.LocalDateTime;
 import java.time.ZonedDateTime;
+import java.time.ZoneId;
 
 import org.testng.annotations.Test;
 
 /**
  * Test ZonedDateTime.
+ *
+ * @bug 8211990
  */
 @Test
 public class TestZonedDateTime extends AbstractTest {
 
     @Test
     public void test_immutable() {
         assertImmutable(ZonedDateTime.class);
     }
 
+    @Test
+    public void test_duration() {
+        ZoneId tokyo = ZoneId.of("Asia/Tokyo");
+        ZoneId sanJose = ZoneId.of("America/Los_Angeles");
+
+        ZonedDateTime end = ZonedDateTime.of(LocalDateTime.MAX, sanJose);
+        ZonedDateTime start = end.withZoneSameLocal(tokyo);
+
+        assertEquals(Duration.between(start, end), Duration.ofHours(17));
+    }
 }
