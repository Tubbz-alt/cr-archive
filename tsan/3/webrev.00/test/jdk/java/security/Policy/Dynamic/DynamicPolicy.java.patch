diff a/test/jdk/java/security/Policy/Dynamic/DynamicPolicy.java b/test/jdk/java/security/Policy/Dynamic/DynamicPolicy.java
--- a/test/jdk/java/security/Policy/Dynamic/DynamicPolicy.java
+++ b/test/jdk/java/security/Policy/Dynamic/DynamicPolicy.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2000, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -26,10 +26,11 @@
 import java.net.SocketPermission;
 import java.lang.*;
 
 public class DynamicPolicy extends Policy{
 
+    static final Policy DEFAULT_POLICY = Policy.getPolicy(); // do this early before setPolicy is called
     static int refresher = 0;
 
 
     public DynamicPolicy() {
     }
@@ -46,11 +47,11 @@
         System.err.println("perms=[" + perms + "]");
         return perms;
     }
 
     public boolean implies(ProtectionDomain pd, Permission p) {
-        return getPermissions(pd).implies(p);
+        return getPermissions(pd).implies(p) || DEFAULT_POLICY.implies(pd, p);
     }
 
     public PermissionCollection getPermissions(ProtectionDomain pd) {
 
         Permissions perms = new Permissions();
