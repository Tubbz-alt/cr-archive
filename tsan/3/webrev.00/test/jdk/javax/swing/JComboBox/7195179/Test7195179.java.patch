diff a/test/jdk/javax/swing/JComboBox/7195179/Test7195179.java b/test/jdk/javax/swing/JComboBox/7195179/Test7195179.java
--- a/test/jdk/javax/swing/JComboBox/7195179/Test7195179.java
+++ b/test/jdk/javax/swing/JComboBox/7195179/Test7195179.java
@@ -40,46 +40,51 @@
  * @summary Tests that combobox works with generified renderers
  * @author Sergey Malenkov
  */
 
 public class Test7195179 {
+    private static JFrame frame;
     public static void main(String[] args) throws Exception {
         invokeAndWait(new Runnable() {
             @Override
             public void run() {
-                Integer[] items = {null, 1, 2, 3};
-                JComboBox<Integer> combo = new JComboBox<>(items);
-                JLabel label = new JLabel("choose:");
-                JPanel panel = new JPanel();
-                GroupLayout layout = new GroupLayout(panel);
-                panel.setLayout(layout);
-                label.setLabelFor(combo);
-                combo.setSelectedIndex(0);
-                combo.setRenderer(new ListCellRenderer<Integer>() {
-                    private final BasicComboBoxRenderer renderer = new BasicComboBoxRenderer();
+                try {
+                    Integer[] items = {null, 1, 2, 3};
+                    JComboBox<Integer> combo = new JComboBox<>(items);
+                    JLabel label = new JLabel("choose:");
+                    JPanel panel = new JPanel();
+                    GroupLayout layout = new GroupLayout(panel);
+                    panel.setLayout(layout);
+                    label.setLabelFor(combo);
+                    combo.setSelectedIndex(0);
+                    combo.setRenderer(new ListCellRenderer<Integer>() {
+                        private final BasicComboBoxRenderer renderer = new BasicComboBoxRenderer();
 
-                    @Override
-                    public Component getListCellRendererComponent(JList<? extends Integer> list, Integer value, int index, boolean isSelected, boolean cellHasFocus) {
-                        return this.renderer.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
-                    }
-                });
-                layout.setAutoCreateContainerGaps(true);
-                layout.setAutoCreateGaps(true);
-                layout.setHorizontalGroup(layout.createSequentialGroup()
-                        .addGroup(layout.createParallelGroup().addComponent(label))
-                        .addGroup(layout.createParallelGroup().addComponent(combo)));
-                layout.setVerticalGroup(layout
-                        .createSequentialGroup()
-                        .addGroup(layout
+                        @Override
+                        public Component getListCellRendererComponent(JList<? extends Integer> list, Integer value, int index, boolean isSelected, boolean cellHasFocus) {
+                            return this.renderer.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
+                        }
+                    });
+                    layout.setAutoCreateContainerGaps(true);
+                    layout.setAutoCreateGaps(true);
+                    layout.setHorizontalGroup(layout.createSequentialGroup()
+                            .addGroup(layout.createParallelGroup().addComponent(label))
+                            .addGroup(layout.createParallelGroup().addComponent(combo)));
+                    layout.setVerticalGroup(layout
+                            .createSequentialGroup()
+                            .addGroup(layout
                                 .createParallelGroup(GroupLayout.Alignment.BASELINE)
                                 .addComponent(label)
                                 .addComponent(combo)));
 
-                JFrame frame = new JFrame(getClass().getSimpleName());
-                frame.add(panel);
-                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
-                frame.pack();
-                frame.setVisible(true);
+                    frame = new JFrame(getClass().getSimpleName());
+                    frame.add(panel);
+                    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
+                    frame.pack();
+                    frame.setVisible(true);
+                } finally {
+                    if (frame != null) frame.dispose();
+                }
             }
         });
     }
 }
