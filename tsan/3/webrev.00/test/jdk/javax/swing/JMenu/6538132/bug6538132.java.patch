diff a/test/jdk/javax/swing/JMenu/6538132/bug6538132.java b/test/jdk/javax/swing/JMenu/6538132/bug6538132.java
--- a/test/jdk/javax/swing/JMenu/6538132/bug6538132.java
+++ b/test/jdk/javax/swing/JMenu/6538132/bug6538132.java
@@ -40,10 +40,11 @@
 
 public class bug6538132 {
     private static JMenu menu1;
     private static JMenu menu2;
     private static volatile boolean isWinLaf;
+    private static JFrame frame;
 
     private static void createGui() {
         try {
             UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
             isWinLaf = true;
@@ -51,11 +52,11 @@
             // If we can't set WinLaf it means we are not under Windows
             // make the test pass
             isWinLaf = false;
             return;
         }
-        JFrame frame = new JFrame();
+        frame = new JFrame();
         frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
 
         JMenuBar menuBar = new JMenuBar();
         menu1 = createMenu();
         menuBar.add(menu1);
@@ -74,39 +75,43 @@
         menu.add(new JMenuItem("MenuItem"));
         return menu;
     }
 
     public static void main(String[] args) throws Exception {
-        SwingUtilities.invokeAndWait(new Runnable() {
-            public void run() {
-                bug6538132.createGui();
+        try {
+            SwingUtilities.invokeAndWait(new Runnable() {
+                public void run() {
+                    bug6538132.createGui();
+                }
+            });
+            if(isWinLaf) {
+                ExtendedRobot robot = new ExtendedRobot();
+                robot.setAutoDelay(10);
+                robot.waitForIdle();
+                Point p1 = menu1.getLocationOnScreen();
+                final int x1 = p1.x + menu1.getWidth() / 2;
+                final int y1 = p1.y + menu1.getHeight() / 2;
+                robot.glide(0, 0, x1, y1);
+                robot.mousePress(InputEvent.BUTTON1_MASK);
+                robot.mouseRelease(InputEvent.BUTTON1_MASK);
+                assertPopupOpen();
+                Point p2 = menu2.getLocationOnScreen();
+                final int x2 = p2.x + menu2.getWidth() / 2;
+                final int y2 = p2.y + menu2.getHeight() / 2;
+                robot.glide(x1, y1, x2, y2);
+                assertPopupOpen();
+                robot.keyPress(KeyEvent.VK_ESCAPE);
+                robot.keyRelease(KeyEvent.VK_ESCAPE);
+                assertPopupNotOpen();
+                robot.glide(x2, y2, x1, y1);
+                assertPopupNotOpen();
+                robot.mousePress(InputEvent.BUTTON1_MASK);
+                robot.mouseRelease(InputEvent.BUTTON1_MASK);
+                assertPopupOpen();
             }
-        });
-        if(isWinLaf) {
-            ExtendedRobot robot = new ExtendedRobot();
-            robot.setAutoDelay(10);
-            robot.waitForIdle();
-            Point p1 = menu1.getLocationOnScreen();
-            final int x1 = p1.x + menu1.getWidth() / 2;
-            final int y1 = p1.y + menu1.getHeight() / 2;
-            robot.glide(0, 0, x1, y1);
-            robot.mousePress(InputEvent.BUTTON1_MASK);
-            robot.mouseRelease(InputEvent.BUTTON1_MASK);
-            assertPopupOpen();
-            Point p2 = menu2.getLocationOnScreen();
-            final int x2 = p2.x + menu2.getWidth() / 2;
-            final int y2 = p2.y + menu2.getHeight() / 2;
-            robot.glide(x1, y1, x2, y2);
-            assertPopupOpen();
-            robot.keyPress(KeyEvent.VK_ESCAPE);
-            robot.keyRelease(KeyEvent.VK_ESCAPE);
-            assertPopupNotOpen();
-            robot.glide(x2, y2, x1, y1);
-            assertPopupNotOpen();
-            robot.mousePress(InputEvent.BUTTON1_MASK);
-            robot.mouseRelease(InputEvent.BUTTON1_MASK);
-            assertPopupOpen();
+        } finally {
+            if (frame != null) SwingUtilities.invokeAndWait(() -> frame.dispose());
         }
     }
 
     static void assertPopupOpen() {
         if (getLastPopup() == null) {
