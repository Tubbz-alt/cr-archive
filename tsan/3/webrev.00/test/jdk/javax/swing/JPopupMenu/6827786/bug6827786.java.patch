diff a/test/jdk/javax/swing/JPopupMenu/6827786/bug6827786.java b/test/jdk/javax/swing/JPopupMenu/6827786/bug6827786.java
--- a/test/jdk/javax/swing/JPopupMenu/6827786/bug6827786.java
+++ b/test/jdk/javax/swing/JPopupMenu/6827786/bug6827786.java
@@ -42,60 +42,64 @@
 
 public class bug6827786 {
 
     private static JMenu menu;
     private static Component focusable;
+    private static JFrame frame;
 
     public static void main(String[] args) throws Exception {
-        Robot robot = new Robot();
-        robot.setAutoDelay(50);
-        // move mouse outside menu to prevent auto selection
-        robot.mouseMove(100,100);
+        try {
+            Robot robot = new Robot();
+            robot.setAutoDelay(50);
+            // move mouse outside menu to prevent auto selection
+           robot.mouseMove(100,100);
 
-        SwingUtilities.invokeAndWait(new Runnable() {
+            SwingUtilities.invokeAndWait(new Runnable() {
 
-            public void run() {
-                createAndShowGUI();
-            }
-        });
+                public void run() {
+                    createAndShowGUI();
+                }
+            });
 
-        robot.waitForIdle();
+            robot.waitForIdle();
 
-        SwingUtilities.invokeAndWait(new Runnable() {
+            SwingUtilities.invokeAndWait(new Runnable() {
 
-            public void run() {
-                focusable.requestFocus();
-            }
-        });
+                public void run() {
+                    focusable.requestFocus();
+                }
+            });
 
-        robot.waitForIdle();
-        checkfocus();
+            robot.waitForIdle();
+            checkfocus();
 
-        // select menu
-        if (Platform.isOSX()) {
-            Util.hitKeys(robot, KeyEvent.VK_CONTROL, KeyEvent.VK_ALT, KeyEvent.VK_F);
-        } else {
-            Util.hitKeys(robot, KeyEvent.VK_ALT, KeyEvent.VK_F);
+            // select menu
+            if (Platform.isOSX()) {
+                Util.hitKeys(robot, KeyEvent.VK_CONTROL, KeyEvent.VK_ALT, KeyEvent.VK_F);
+            } else {
+                Util.hitKeys(robot, KeyEvent.VK_ALT, KeyEvent.VK_F);
+            }
+            // select submenu
+            Util.hitKeys(robot, KeyEvent.VK_S);
+            robot.waitForIdle();
+            // verify submenu is selected
+            verify(1);
+
+            Util.hitKeys(robot, KeyEvent.VK_S);
+            robot.waitForIdle();
+            // verify last item is selected
+            verify(2);
+
+            Util.hitKeys(robot, KeyEvent.VK_S);
+            robot.waitForIdle();
+            // selection should wrap to first item
+            verify(0);
+
+            System.out.println("PASSED");
+        } finally {
+            if (frame != null) SwingUtilities.invokeAndWait(() -> frame.dispose());
         }
-        // select submenu
-        Util.hitKeys(robot, KeyEvent.VK_S);
-        robot.waitForIdle();
-        // verify submenu is selected
-        verify(1);
-
-        Util.hitKeys(robot, KeyEvent.VK_S);
-        robot.waitForIdle();
-        // verify last item is selected
-        verify(2);
-
-        Util.hitKeys(robot, KeyEvent.VK_S);
-        robot.waitForIdle();
-        // selection should wrap to first item
-        verify(0);
-
-        System.out.println("PASSED");
-
     }
 
     private static void checkfocus() throws Exception {
         SwingUtilities.invokeAndWait(new Runnable() {
 
@@ -142,11 +146,11 @@
         bar.add(menu);
         return bar;
     }
 
     private static void createAndShowGUI() {
-        JFrame frame = new JFrame("bug6827786");
+        frame = new JFrame("bug6827786");
         frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
         frame.setJMenuBar(createMenuBar());
         focusable = new JButton("Set Focus Here");
         frame.add(focusable);
         frame.pack();
