diff a/test/jdk/javax/swing/JScrollBar/4708809/bug4708809.java b/test/jdk/javax/swing/JScrollBar/4708809/bug4708809.java
--- a/test/jdk/javax/swing/JScrollBar/4708809/bug4708809.java
+++ b/test/jdk/javax/swing/JScrollBar/4708809/bug4708809.java
@@ -38,66 +38,71 @@
 
     private static volatile boolean do_test = false;
     private static volatile boolean passed = true;
     private static JScrollPane spane;
     private static JScrollBar sbar;
+    private static JFrame fr;
 
     public static void main(String[] args) throws Exception {
-        Robot robot = new Robot();
-        robot.setAutoDelay(350);
+        try {
+            Robot robot = new Robot();
+            robot.setAutoDelay(350);
 
-        SwingUtilities.invokeAndWait(new Runnable() {
+            SwingUtilities.invokeAndWait(new Runnable() {
 
-            public void run() {
-                createAndShowGUI();
-            }
-        });
+                public void run() {
+                    createAndShowGUI();
+                }
+            });
 
-        robot.waitForIdle();
+            robot.waitForIdle();
 
-        SwingUtilities.invokeAndWait(new Runnable() {
+            SwingUtilities.invokeAndWait(new Runnable() {
 
-            public void run() {
-                spane.requestFocus();
-                sbar.setValue(sbar.getMaximum());
-            }
-        });
+                public void run() {
+                    spane.requestFocus();
+                    sbar.setValue(sbar.getMaximum());
+                }
+            });
 
-        robot.waitForIdle();
+            robot.waitForIdle();
 
-        Point point = getClickPoint(0.5, 0.5);
-        robot.mouseMove(point.x, point.y);
-        robot.mousePress(InputEvent.BUTTON1_MASK);
+            Point point = getClickPoint(0.5, 0.5);
+            robot.mouseMove(point.x, point.y);
+            robot.mousePress(InputEvent.BUTTON1_MASK);
 
-        robot.waitForIdle();
+            robot.waitForIdle();
 
-        SwingUtilities.invokeAndWait(new Runnable() {
+            SwingUtilities.invokeAndWait(new Runnable() {
 
-            public void run() {
-                final int oldValue = sbar.getValue();
-                sbar.addAdjustmentListener(new AdjustmentListener() {
+                public void run() {
+                    final int oldValue = sbar.getValue();
+                    sbar.addAdjustmentListener(new AdjustmentListener() {
 
-                    public void adjustmentValueChanged(AdjustmentEvent e) {
-                        if (e.getValue() >= oldValue) {
-                            passed = false;
+                        public void adjustmentValueChanged(AdjustmentEvent e) {
+                            if (e.getValue() >= oldValue) {
+                                passed = false;
+                            }
+                            do_test = true;
                         }
-                        do_test = true;
-                    }
-                });
+                    });
 
-            }
-        });
+                }
+            });
 
-        robot.waitForIdle();
+            robot.waitForIdle();
 
-        point = getClickPoint(0.5, 0.2);
-        robot.mouseMove(point.x, point.y);
-        robot.mouseRelease(InputEvent.BUTTON1_MASK);
-        robot.waitForIdle();
+            point = getClickPoint(0.5, 0.2);
+            robot.mouseMove(point.x, point.y);
+            robot.mouseRelease(InputEvent.BUTTON1_MASK);
+            robot.waitForIdle();
 
-        if (!do_test || !passed) {
-            throw new Exception("The scrollbar moved with incorrect direction");
+            if (!do_test || !passed) {
+                throw new Exception("The scrollbar moved with incorrect direction");
+            }
+        } finally {
+            if (fr != null) SwingUtilities.invokeAndWait(() -> fr.dispose());
         }
 
     }
 
     private static Point getClickPoint(final double scaleX, final double scaleY) throws Exception {
@@ -117,11 +122,11 @@
         return result[0];
 
     }
 
     private static void createAndShowGUI() {
-        JFrame fr = new JFrame("Test");
+        fr = new JFrame("Test");
 
         JLabel label = new JLabel("picture");
         label.setPreferredSize(new Dimension(500, 500));
         spane = new JScrollPane(label);
         fr.getContentPane().add(spane);
