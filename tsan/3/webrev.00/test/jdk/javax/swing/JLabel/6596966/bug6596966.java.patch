diff a/test/jdk/javax/swing/JLabel/6596966/bug6596966.java b/test/jdk/javax/swing/JLabel/6596966/bug6596966.java
--- a/test/jdk/javax/swing/JLabel/6596966/bug6596966.java
+++ b/test/jdk/javax/swing/JLabel/6596966/bug6596966.java
@@ -47,67 +47,71 @@
     private static JLabel label;
     private static JButton button;
     private static JComboBox comboBox;
 
     public static void main(String[] args) throws Exception {
-        Robot robot = new Robot();
+        try {
+            Robot robot = new Robot();
 
-        SwingUtilities.invokeAndWait(new Runnable() {
-            public void run() {
-                button = new JButton("Button");
-                comboBox = new JComboBox();
+            SwingUtilities.invokeAndWait(new Runnable() {
+                public void run() {
+                    button = new JButton("Button");
+                    comboBox = new JComboBox();
 
-                label = new JLabel("Label");
-                label.setDisplayedMnemonic('L');
-                label.setLabelFor(comboBox);
+                    label = new JLabel("Label");
+                    label.setDisplayedMnemonic('L');
+                    label.setLabelFor(comboBox);
 
-                JPanel pnContent = new JPanel();
+                    JPanel pnContent = new JPanel();
 
-                pnContent.add(button);
-                pnContent.add(label);
-                pnContent.add(comboBox);
+                    pnContent.add(button);
+                    pnContent.add(label);
+                    pnContent.add(comboBox);
 
-                frame = new JFrame();
+                    frame = new JFrame();
 
-                frame.add(pnContent);
-                frame.pack();
-                frame.setVisible(true);
-            }
-        });
+                    frame.add(pnContent);
+                    frame.pack();
+                    frame.setVisible(true);
+                }
+            });
 
-        robot.waitForIdle();
+            robot.waitForIdle();
 
 
-        int keyMask = InputEvent.ALT_MASK;
-        if (Platform.isOSX()) {
-            keyMask = InputEvent.CTRL_MASK | InputEvent.ALT_MASK;
-        }
-        ArrayList<Integer> keys = Util.getKeyCodesFromKeyMask(keyMask);
-        for (int i = 0; i < keys.size(); ++i) {
-            robot.keyPress(keys.get(i));
-        }
+            int keyMask = InputEvent.ALT_MASK;
+            if (Platform.isOSX()) {
+                keyMask = InputEvent.CTRL_MASK | InputEvent.ALT_MASK;
+            }
+            ArrayList<Integer> keys = Util.getKeyCodesFromKeyMask(keyMask);
+            for (int i = 0; i < keys.size(); ++i) {
+                robot.keyPress(keys.get(i));
+            }
 
-        robot.keyPress(KeyEvent.VK_L);
+            robot.keyPress(KeyEvent.VK_L);
 
-        robot.waitForIdle();
-        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(new KeyEvent(label, KeyEvent.KEY_RELEASED,
-                EventQueue.getMostRecentEventTime(), 0, KeyEvent.VK_L, 'L'));
+            robot.waitForIdle();
+            Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(new KeyEvent(label, KeyEvent.KEY_RELEASED,
+                    EventQueue.getMostRecentEventTime(), 0, KeyEvent.VK_L, 'L'));
 
-        robot.waitForIdle();
+            robot.waitForIdle();
 
-        try {
-            SwingUtilities.invokeAndWait(new Runnable() {
-                public void run() {
-                    if (!comboBox.isFocusOwner()) {
-                        throw new RuntimeException("comboBox isn't focus owner");
+            try {
+                SwingUtilities.invokeAndWait(new Runnable() {
+                    public void run() {
+                        if (!comboBox.isFocusOwner()) {
+                            throw new RuntimeException("comboBox isn't focus owner");
+                        }
                     }
+                });
+            } finally {
+                robot.keyRelease(KeyEvent.VK_L);
+                for (int i = 0; i < keys.size(); ++i) {
+                    robot.keyRelease(keys.get(i));
                 }
-            });
-        } finally {
-            robot.keyRelease(KeyEvent.VK_L);
-            for (int i = 0; i < keys.size(); ++i) {
-                robot.keyRelease(keys.get(i));
+                robot.waitForIdle();
             }
-            robot.waitForIdle();
+        } finally {
+            if (frame != null) SwingUtilities.invokeAndWait(() -> frame.dispose());
         }
     }
 }
