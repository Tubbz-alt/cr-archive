diff a/test/jdk/javax/swing/JMenuItem/6209975/bug6209975.java b/test/jdk/javax/swing/JMenuItem/6209975/bug6209975.java
--- a/test/jdk/javax/swing/JMenuItem/6209975/bug6209975.java
+++ b/test/jdk/javax/swing/JMenuItem/6209975/bug6209975.java
@@ -38,41 +38,45 @@
     private static final ReturnObject RO1 = new ReturnObject();
     private static final ReturnObject RO2 = new ReturnObject();
 
     private static JMenu menu;
     private static JButton button;
+    private static JFrame frame;
 
     public static void main(String[] args) throws Exception {
+        try {
+            Robot robot = new Robot();
+            robot.setAutoDelay(500);
 
-        Robot robot = new Robot();
-        robot.setAutoDelay(500);
 
+            SwingUtilities.invokeAndWait(new Runnable() {
 
-        SwingUtilities.invokeAndWait(new Runnable() {
+                @Override
+                public void run() {
+                    createAndShowGUI();
+                }
+            });
 
-            @Override
-            public void run() {
-                createAndShowGUI();
-            }
-        });
-
-        robot.waitForIdle();
+            robot.waitForIdle();
 
-        Point clickPoint = getButtonClickPoint();
-        robot.mouseMove(clickPoint.x, clickPoint.y);
-        robot.mousePress(InputEvent.BUTTON1_MASK);
-        robot.mouseRelease(InputEvent.BUTTON1_MASK);
-        robot.waitForIdle();
+            Point clickPoint = getButtonClickPoint();
+            robot.mouseMove(clickPoint.x, clickPoint.y);
+            robot.mousePress(InputEvent.BUTTON1_MASK);
+            robot.mouseRelease(InputEvent.BUTTON1_MASK);
+            robot.waitForIdle();
 
-        clickPoint = getMenuClickPoint();
-        robot.mouseMove(clickPoint.x, clickPoint.y);
-        robot.mousePress(InputEvent.BUTTON1_MASK);
-        robot.mouseRelease(InputEvent.BUTTON1_MASK);
-        robot.waitForIdle();
+            clickPoint = getMenuClickPoint();
+            robot.mouseMove(clickPoint.x, clickPoint.y);
+            robot.mousePress(InputEvent.BUTTON1_MASK);
+            robot.mouseRelease(InputEvent.BUTTON1_MASK);
+            robot.waitForIdle();
 
-        if (RO1.itsValue <= RO2.itsValue) {
-            throw new RuntimeException("Offset if the second icon is invalid.");
+            if (RO1.itsValue <= RO2.itsValue) {
+                throw new RuntimeException("Offset if the second icon is invalid.");
+            }
+        } finally {
+            if (frame != null) SwingUtilities.invokeAndWait(() -> frame.dispose());
         }
     }
 
     private static Point getButtonClickPoint() throws Exception {
         final Point[] result = new Point[1];
@@ -103,11 +107,11 @@
         });
         return result[0];
     }
 
     private static void createAndShowGUI() {
-        JFrame frame = new JFrame("Test6209975");
+        frame = new JFrame("Test6209975");
         frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
         frame.applyComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
         frame.setLayout(new BorderLayout());
         button = new JButton("Focus holder");
         frame.add(button);
