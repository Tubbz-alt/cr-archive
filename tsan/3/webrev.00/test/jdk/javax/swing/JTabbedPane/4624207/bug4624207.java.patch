diff a/test/jdk/javax/swing/JTabbedPane/4624207/bug4624207.java b/test/jdk/javax/swing/JTabbedPane/4624207/bug4624207.java
--- a/test/jdk/javax/swing/JTabbedPane/4624207/bug4624207.java
+++ b/test/jdk/javax/swing/JTabbedPane/4624207/bug4624207.java
@@ -47,10 +47,11 @@
     private static volatile boolean stateChanged = false;
     private static volatile boolean focusGained = false;
     private static JTextField txtField;
     private static JTabbedPane tab;
     private static Object listener;
+    private static JFrame frame;
 
     public void stateChanged(ChangeEvent e) {
         System.out.println("stateChanged called");
         stateChanged = true;
     }
@@ -64,66 +65,70 @@
         System.out.println("focusLost called");
         focusGained = false;
     }
 
     public static void main(String[] args) throws Exception {
-        Robot robot = new Robot();
-        robot.setAutoDelay(50);
+        try {
+            Robot robot = new Robot();
+            robot.setAutoDelay(50);
 
-        SwingUtilities.invokeAndWait(new Runnable() {
+            SwingUtilities.invokeAndWait(new Runnable() {
 
-            public void run() {
-                createAndShowGUI();
-            }
-        });
+                public void run() {
+                    createAndShowGUI();
+                }
+            });
 
-        robot.waitForIdle();
+            robot.waitForIdle();
 
-        SwingUtilities.invokeAndWait(new Runnable() {
+            SwingUtilities.invokeAndWait(new Runnable() {
 
-            public void run() {
-                txtField.requestFocus();
-            }
-        });
+                public void run() {
+                    txtField.requestFocus();
+                }
+            });
 
-        robot.waitForIdle();
+            robot.waitForIdle();
 
-        if (!focusGained) {
-            throw new RuntimeException("Couldn't gain focus for text field");
-        }
+            if (!focusGained) {
+                throw new RuntimeException("Couldn't gain focus for text field");
+            }
 
-        SwingUtilities.invokeAndWait(new Runnable() {
+            SwingUtilities.invokeAndWait(new Runnable() {
 
-            public void run() {
-                tab.addChangeListener((ChangeListener) listener);
-                txtField.removeFocusListener((FocusListener) listener);
-            }
-        });
+                public void run() {
+                    tab.addChangeListener((ChangeListener) listener);
+                    txtField.removeFocusListener((FocusListener) listener);
+                }
+            });
 
-        robot.waitForIdle();
+            robot.waitForIdle();
 
-        if (Platform.isOSX()) {
-            Util.hitKeys(robot, KeyEvent.VK_CONTROL, KeyEvent.VK_ALT, KeyEvent.VK_B);
-        } else {
-            Util.hitKeys(robot, KeyEvent.VK_ALT, KeyEvent.VK_B);
-        }
+            if (Platform.isOSX()) {
+                Util.hitKeys(robot, KeyEvent.VK_CONTROL, KeyEvent.VK_ALT, KeyEvent.VK_B);
+            } else {
+                Util.hitKeys(robot, KeyEvent.VK_ALT, KeyEvent.VK_B);
+            }
 
-        robot.waitForIdle();
+            robot.waitForIdle();
 
-        if (!stateChanged || tab.getSelectedIndex() != 1) {
-            throw new RuntimeException("JTabbedPane mnemonics don't work from outside the tabbed pane");
+            if (!stateChanged || tab.getSelectedIndex() != 1) {
+                throw new RuntimeException("JTabbedPane mnemonics don't work from outside the tabbed pane");
+            }
+        } finally {
+            if (frame != null) SwingUtilities.invokeAndWait(() ->  frame.dispose());
         }
     }
 
     private static void createAndShowGUI() {
         tab = new JTabbedPane();
         tab.add("Tab1", new JButton("Button1"));
         tab.add("Tab2", new JButton("Button2"));
         tab.setMnemonicAt(0, KeyEvent.VK_T);
         tab.setMnemonicAt(1, KeyEvent.VK_B);
 
-        JFrame frame = new JFrame();
+        frame = new JFrame();
         frame.getContentPane().add(tab, BorderLayout.CENTER);
         txtField = new JTextField();
         frame.getContentPane().add(txtField, BorderLayout.NORTH);
         listener = new bug4624207();
         txtField.addFocusListener((FocusListener) listener);
