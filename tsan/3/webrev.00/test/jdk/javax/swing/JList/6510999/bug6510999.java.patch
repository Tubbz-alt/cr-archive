diff a/test/jdk/javax/swing/JList/6510999/bug6510999.java b/test/jdk/javax/swing/JList/6510999/bug6510999.java
--- a/test/jdk/javax/swing/JList/6510999/bug6510999.java
+++ b/test/jdk/javax/swing/JList/6510999/bug6510999.java
@@ -33,13 +33,14 @@
 import java.awt.*;
 import java.awt.event.KeyEvent;
 
 public class bug6510999 {
     private static JScrollPane s;
+    static JFrame frame;
 
     private static void createGui() {
-        final JFrame frame = new JFrame();
+        frame = new JFrame();
         frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
 
         DefaultListModel dlm = new DefaultListModel();
         for (int i = 0; i < 100; i++)
           dlm
@@ -55,22 +56,26 @@
         frame.setLocationRelativeTo(null);
         frame.setVisible(true);
     }
 
     public static void main(String[] args) throws Exception {
-        Robot robot = new Robot();
-        robot.setAutoDelay(10);
-        SwingUtilities.invokeAndWait(new Runnable() {
-            public void run() {
-                bug6510999.createGui();
+        try {
+            Robot robot = new Robot();
+            robot.setAutoDelay(10);
+            SwingUtilities.invokeAndWait(new Runnable() {
+                public void run() {
+                    bug6510999.createGui();
+                }
+            });
+            robot.waitForIdle();
+            Point viewPosition = s.getViewport().getViewPosition();
+            robot.keyPress(KeyEvent.VK_DOWN);
+            robot.keyRelease(KeyEvent.VK_DOWN);
+            robot.waitForIdle();
+            if (!s.getViewport().getViewPosition().equals(viewPosition)) {
+                throw new RuntimeException("JScrollPane was unexpectedly scrolled");
             }
-        });
-        robot.waitForIdle();
-        Point viewPosition = s.getViewport().getViewPosition();
-        robot.keyPress(KeyEvent.VK_DOWN);
-        robot.keyRelease(KeyEvent.VK_DOWN);
-        robot.waitForIdle();
-        if (!s.getViewport().getViewPosition().equals(viewPosition)) {
-            throw new RuntimeException("JScrollPane was unexpectedly scrolled");
+        } finally {
+            if (frame != null) SwingUtilities.invokeAndWait(() -> frame.dispose());
         }
     }
 }
