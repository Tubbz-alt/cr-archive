diff a/test/jdk/javax/net/ssl/TLS/TLSClientPropertyTest.java b/test/jdk/javax/net/ssl/TLS/TLSClientPropertyTest.java
--- a/test/jdk/javax/net/ssl/TLS/TLSClientPropertyTest.java
+++ b/test/jdk/javax/net/ssl/TLS/TLSClientPropertyTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2014, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2014, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -21,11 +21,11 @@
  * questions.
  */
 
 /*
  * @test
- * @bug 8049432 8069038
+ * @bug 8049432 8069038 8234723
  * @summary New tests for TLS property jdk.tls.client.protocols
  * @summary javax/net/ssl/TLS/TLSClientPropertyTest.java needs to be
  *     updated for JDK-8061210
  * @modules java.security.jgss
  *          java.security.jgss/sun.security.jgss.krb5
@@ -38,10 +38,12 @@
  * @run main/othervm TLSClientPropertyTest NoProperty
  * @run main/othervm TLSClientPropertyTest SSLv3
  * @run main/othervm TLSClientPropertyTest TLSv1
  * @run main/othervm TLSClientPropertyTest TLSv11
  * @run main/othervm TLSClientPropertyTest TLSv12
+ * @run main/othervm TLSClientPropertyTest TLSv13
+ * @run main/othervm TLSClientPropertyTest TLS
  * @run main/othervm TLSClientPropertyTest WrongProperty
  */
 
 import java.security.KeyManagementException;
 import java.security.NoSuchAlgorithmException;
@@ -55,11 +57,11 @@
  * property (if any),then validates the default, supported and current
  * protocols in the SSLContext.
  */
 public class TLSClientPropertyTest {
     private final String[] expectedSupportedProtos = new String[] {
-            "SSLv2Hello", "SSLv3", "TLSv1", "TLSv1.1", "TLSv1.2"
+            "SSLv2Hello", "SSLv3", "TLSv1", "TLSv1.1", "TLSv1.2", "TLSv1.3"
     };
 
     public static void main(String[] args) throws Exception {
 
         if (args.length < 1) {
@@ -75,11 +77,11 @@
             if (System.getProperty("jdk.tls.client.protocols") != null) {
                 System.getProperties().remove("jdk.tls.client.protocols");
             }
             contextProtocol = null;
             expectedDefaultProtos = new String[] {
-                    "TLSv1", "TLSv1.1", "TLSv1.2"
+                    "TLSv1", "TLSv1.1", "TLSv1.2", "TLSv1.3"
             };
             break;
         case "SSLv3":
             contextProtocol = "SSLv3";
             expectedDefaultProtos = new String[] {
@@ -101,10 +103,17 @@
             contextProtocol = "TLSv1.2";
             expectedDefaultProtos = new String[] {
                     "TLSv1", "TLSv1.1", "TLSv1.2"
             };
             break;
+        case "TLSv13":
+        case "TLS":
+            contextProtocol = "TLSv1.3";
+            expectedDefaultProtos = new String[] {
+                    "TLSv1", "TLSv1.1", "TLSv1.2", "TLSv1.3"
+            };
+            break;
         case "WrongProperty":
             expectedDefaultProtos = new String[] {};
             contextProtocol = "TLSV";
             break;
         default:
