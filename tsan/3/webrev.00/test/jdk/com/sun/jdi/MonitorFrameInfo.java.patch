diff a/test/jdk/com/sun/jdi/MonitorFrameInfo.java b/test/jdk/com/sun/jdi/MonitorFrameInfo.java
--- a/test/jdk/com/sun/jdi/MonitorFrameInfo.java
+++ b/test/jdk/com/sun/jdi/MonitorFrameInfo.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2005, 2015, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2005, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -31,19 +31,21 @@
  *
  * @run build TestScaffold VMConnection TargetListener TargetAdapter
  * @run compile -g MonitorFrameInfo.java
  * @run driver MonitorFrameInfo
  */
-import com.sun.jdi.*;
-import com.sun.jdi.event.*;
-import com.sun.jdi.request.*;
+import java.util.List;
 
-import java.util.*;
+import com.sun.jdi.InvalidStackFrameException;
+import com.sun.jdi.MonitorInfo;
+import com.sun.jdi.ReferenceType;
+import com.sun.jdi.ThreadReference;
+import com.sun.jdi.event.BreakpointEvent;
 
     /********** target program **********/
 
-class MonitorTestTarg {
+class MonitorFrameInfoTarg {
     static void foo3() {
         System.out.println("executing foo3");
 
     }
     static void foo2() {
@@ -69,11 +71,11 @@
     /********** test program **********/
 
 public class MonitorFrameInfo extends TestScaffold {
     ReferenceType targetClass;
     ThreadReference mainThread;
-    List monitors;
+    List<MonitorInfo> monitors;
 
     static int expectedCount = 2;
     static int[] expectedDepth = { 1, 3 };
 
     static String[] expectedNames = {"foo3", "foo2", "foo1", "main"};
@@ -91,17 +93,17 @@
     protected void runTests() throws Exception {
         /*
          * Get to the top of main()
          * to determine targetClass and mainThread
          */
-        BreakpointEvent bpe = startToMain("MonitorTestTarg");
+        BreakpointEvent bpe = startToMain("MonitorFrameInfoTarg");
         targetClass = bpe.location().declaringType();
         mainThread = bpe.thread();
 
         int initialSize = mainThread.frames().size();
 
-        resumeTo("MonitorTestTarg", "foo3", "()V");
+        resumeTo("MonitorFrameInfoTarg", "foo3", "()V");
 
         if (!mainThread.frame(0).location().method().name()
                         .equals("foo3")) {
             failure("FAILED: frame failed");
         }
