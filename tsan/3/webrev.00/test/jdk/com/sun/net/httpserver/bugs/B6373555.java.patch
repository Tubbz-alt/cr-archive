diff a/test/jdk/com/sun/net/httpserver/bugs/B6373555.java b/test/jdk/com/sun/net/httpserver/bugs/B6373555.java
--- a/test/jdk/com/sun/net/httpserver/bugs/B6373555.java
+++ b/test/jdk/com/sun/net/httpserver/bugs/B6373555.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2006, 2011, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2006, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -22,18 +22,22 @@
  */
 
 /**
  * @test
  * @bug 6373555
+ * @library /test/lib
  * @summary HTTP Server failing to answer client requests
+ * @run main B6373555
+ * @run main/othervm -Djava.net.preferIPv6Addresses=true B6373555
  */
 
 import java.net.*;
 import java.io.*;
 import java.util.*;
 import com.sun.net.httpserver.*;
 import java.util.concurrent.*;
+import jdk.test.lib.net.URIBuilder;
 
 public class B6373555 {
 
     private static int s_received = 0;
     private static int sent = 0;
@@ -94,12 +98,18 @@
 
         public void run() {
             try {
                 Thread.sleep(10);
                 byte[] buf = getBuf();
-                URL url = new URL("http://127.0.0.1:"+port+"/test");
-                HttpURLConnection con = (HttpURLConnection)url.openConnection();
+                URL url = URIBuilder.newBuilder()
+                    .scheme("http")
+                    .loopback()
+                    .port(port)
+                    .path("/test")
+                    .toURLUnchecked();
+                System.out.println("URL: " + url);
+                HttpURLConnection con = (HttpURLConnection)url.openConnection(Proxy.NO_PROXY);
                 con.setDoOutput(true);
                 con.setDoInput(true);
                 con.setRequestMethod("POST");
                 con.setRequestProperty(
                     "Content-Type",
@@ -138,11 +148,12 @@
     }
 
 
     private static HttpServer createHttpServer(ExecutorService execs)
         throws Exception {
-        InetSocketAddress inetAddress = new InetSocketAddress(0);
+        InetAddress loopback = InetAddress.getLoopbackAddress();
+        InetSocketAddress inetAddress = new InetSocketAddress(loopback, 0);
         HttpServer testServer = HttpServer.create(inetAddress, 15);
         testServer.setExecutor(execs);
         HttpContext context = testServer.createContext("/test");
         context.setHandler(new HttpHandler() {
             public void handle(HttpExchange msg) {
