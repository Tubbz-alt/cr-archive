diff a/test/jdk/com/sun/net/httpserver/Test6a.java b/test/jdk/com/sun/net/httpserver/Test6a.java
--- a/test/jdk/com/sun/net/httpserver/Test6a.java
+++ b/test/jdk/com/sun/net/httpserver/Test6a.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2005, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2005, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -25,10 +25,11 @@
  * @test
  * @bug 6270015
  * @library /test/lib
  * @build jdk.test.lib.net.SimpleSSLContext
  * @run main/othervm Test6a
+ * @run main/othervm -Djava.net.preferIPv6Addresses=true Test6a
  * @summary Light weight HTTP server
  */
 
 import com.sun.net.httpserver.*;
 
@@ -36,30 +37,40 @@
 import java.io.*;
 import java.net.*;
 import javax.net.ssl.*;
 import jdk.test.lib.net.SimpleSSLContext;
 
+import jdk.test.lib.net.URIBuilder;
+
 /**
  * Test https POST large file via chunked encoding (unusually small chunks)
  */
 
 public class Test6a extends Test {
 
     public static void main (String[] args) throws Exception {
         Handler handler = new Handler();
-        InetSocketAddress addr = new InetSocketAddress (0);
+        InetAddress loopback = InetAddress.getLoopbackAddress();
+        InetSocketAddress addr = new InetSocketAddress (loopback, 0);
         HttpsServer server = HttpsServer.create (addr, 0);
         HttpContext ctx = server.createContext ("/test", handler);
         ExecutorService executor = Executors.newCachedThreadPool();
         SSLContext ssl = new SimpleSSLContext().get();
         server.setExecutor (executor);
         server.setHttpsConfigurator(new HttpsConfigurator (ssl));
         server.start ();
 
-        URL url = new URL ("https://localhost:"+server.getAddress().getPort()+"/test/foo.html");
-        System.out.print ("Test6a: " );
-        HttpsURLConnection urlc = (HttpsURLConnection)url.openConnection ();
+        URL url = URIBuilder.newBuilder()
+                  .scheme("https")
+                  .host(server.getAddress().getAddress())
+                  .port(server.getAddress().getPort())
+                  .path("/test/foo.html")
+                  .toURL();
+
+        System.out.println("Test6a: URL=" + url);
+        System.out.print("Test6a: ");
+        HttpsURLConnection urlc = (HttpsURLConnection)url.openConnection(Proxy.NO_PROXY);
         urlc.setDoOutput (true);
         urlc.setRequestMethod ("POST");
         urlc.setChunkedStreamingMode (32); // small chunks
         urlc.setSSLSocketFactory (ssl.getSocketFactory());
         urlc.setHostnameVerifier (new DummyVerifier());
