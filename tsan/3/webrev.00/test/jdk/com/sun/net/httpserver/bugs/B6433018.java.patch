diff a/test/jdk/com/sun/net/httpserver/bugs/B6433018.java b/test/jdk/com/sun/net/httpserver/bugs/B6433018.java
--- a/test/jdk/com/sun/net/httpserver/bugs/B6433018.java
+++ b/test/jdk/com/sun/net/httpserver/bugs/B6433018.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2006, 2013, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2006, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -23,10 +23,12 @@
 
 /**
  * @test
  * @bug 6433018
  * @summary  HTTP server sometimes sends bad request for browsers javascript
+ * @run main B6433018
+ * @run main/othervm -Djava.net.preferIPv6Addresses=true B6433018
  */
 
 import com.sun.net.httpserver.*;
 
 import java.util.concurrent.*;
@@ -61,17 +63,18 @@
         "Cache-Control: no-cache"+CRLF+CRLF;
 
     public static void main(String[] args) throws Exception {
         CountDownLatch finished = new CountDownLatch(2);
         Handler handler = new Handler(finished);
-        InetSocketAddress addr = new InetSocketAddress(0);
+        InetAddress loopback = InetAddress.getLoopbackAddress();
+        InetSocketAddress addr = new InetSocketAddress(loopback, 0);
         HttpServer server = HttpServer.create(addr, 0);
         HttpContext ctx = server.createContext("/test", handler);
 
         server.start();
         int port = server.getAddress().getPort();
-        try (Socket s = new Socket("localhost", port);
+        try (Socket s = new Socket(loopback, port);
              OutputStream os = s.getOutputStream()) {
             os.write(cmd.getBytes());
             finished.await(30, TimeUnit.SECONDS);
         } finally {
             server.stop(2);
