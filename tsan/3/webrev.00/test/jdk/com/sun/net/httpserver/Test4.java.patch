diff a/test/jdk/com/sun/net/httpserver/Test4.java b/test/jdk/com/sun/net/httpserver/Test4.java
--- a/test/jdk/com/sun/net/httpserver/Test4.java
+++ b/test/jdk/com/sun/net/httpserver/Test4.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2005, 2006, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2005, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -24,10 +24,12 @@
 /**
  * @test
  * @bug 6270015
  * @summary  Light weight HTTP server
  * @run main/othervm -Dsun.net.httpserver.idleInterval=4 Test4
+ * @run main/othervm -Djava.net.preferIPv6Addresses=true
+ *                   -Dsun.net.httpserver.idleInterval=4 Test4
  */
 
 import com.sun.net.httpserver.*;
 
 import java.util.*;
@@ -44,11 +46,12 @@
 public class Test4 extends Test {
     static int count = 1;
     public static void main (String[] args) throws Exception {
         System.out.print ("Test4: ");
         Handler handler = new Handler();
-        InetSocketAddress addr = new InetSocketAddress (0);
+        InetAddress loopback = InetAddress.getLoopbackAddress();
+        InetSocketAddress addr = new InetSocketAddress(loopback, 0);
         HttpServer server = HttpServer.create (addr, 0);
         int port = server.getAddress().getPort();
         HttpContext c2 = server.createContext ("/test", handler);
         c2.getAttributes().put ("name", "This is the http handler");
 
@@ -131,11 +134,11 @@
         "GET /test/3.html HTTP/1.1\r\nContent-length: 10\r\n"+
         "\r\n"+ body3 +
         "GET /test/4.html HTTP/1.1\r\nContent-length: 10\r\n"+
         "\r\n"+body4;
 
-        Socket socket = new Socket ("localhost", port);
+        Socket socket = new Socket (InetAddress.getLoopbackAddress(), port);
         OutputStream os = socket.getOutputStream();
         os.write (s.getBytes());
         InputStream is = socket.getInputStream();
         int c, count=0;
         byte[] b = new byte [1024];
