diff a/test/jdk/com/sun/net/httpserver/bugs/TruncatedRequestBody.java b/test/jdk/com/sun/net/httpserver/bugs/TruncatedRequestBody.java
--- a/test/jdk/com/sun/net/httpserver/bugs/TruncatedRequestBody.java
+++ b/test/jdk/com/sun/net/httpserver/bugs/TruncatedRequestBody.java
@@ -88,22 +88,23 @@
         ConsoleHandler h = new ConsoleHandler();
         h.setLevel(Level.ALL);
         logger.setLevel(Level.ALL);
         logger.addHandler(h);
 
-        InetSocketAddress addr = new InetSocketAddress(0);
+        InetAddress loopback = InetAddress.getLoopbackAddress();
+        InetSocketAddress addr = new InetSocketAddress(loopback, 0);
         HttpServer server = HttpServer.create(addr, 10);
         HttpContext ct = server.createContext("/", new Handler());
         ExecutorService ex = Executors.newCachedThreadPool();
         server.setExecutor(ex);
         server.start();
 
         int port = server.getAddress().getPort();
 
         // Test 1: fixed length
 
-        Socket sock = new Socket(InetAddress.getLoopbackAddress(), port);
+        Socket sock = new Socket(loopback, port);
         String s1 = "POST /foo HTTP/1.1\r\nContent-length: 200000\r\n"
                 + "\r\nfoo bar99";
 
         OutputStream os = sock.getOutputStream();
         os.write(s1.getBytes(StandardCharsets.ISO_8859_1));
@@ -113,11 +114,11 @@
 
         // Test 2: chunked
 
         String s2 = "POST /foo HTTP/1.1\r\nTransfer-encoding: chunked\r\n\r\n" +
                 "100\r\nFoo bar";
-        sock = new Socket(InetAddress.getLoopbackAddress(), port);
+        sock = new Socket(loopback, port);
         os = sock.getOutputStream();
         os.write(s2.getBytes(StandardCharsets.ISO_8859_1));
         Thread.sleep(500);
         sock.close();
         latch.await();
