diff a/test/jdk/com/sun/net/httpserver/bugs/B6393710.java b/test/jdk/com/sun/net/httpserver/bugs/B6393710.java
--- a/test/jdk/com/sun/net/httpserver/bugs/B6393710.java
+++ b/test/jdk/com/sun/net/httpserver/bugs/B6393710.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2006, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2006, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -23,10 +23,12 @@
 
 /**
  * @test
  * @bug 6393710
  * @summary  Non authenticated call followed by authenticated call never returns
+ * @run main B6393710
+ * @run main/othervm -Djava.net.preferIPv6Addresses=true B6393710
  */
 
 import com.sun.net.httpserver.*;
 
 import java.util.*;
@@ -63,22 +65,23 @@
         "Cache-Control: no-cache"+CRLF+ CRLF+
         "<item desc=\"excuse\" />";
 
     public static void main (String[] args) throws Exception {
         Handler handler = new Handler();
-        InetSocketAddress addr = new InetSocketAddress (0);
+        InetAddress loopback = InetAddress.getLoopbackAddress();
+        InetSocketAddress addr = new InetSocketAddress (loopback, 0);
         HttpServer server = HttpServer.create (addr, 0);
         HttpContext ctx = server.createContext ("/test", handler);
         ctx.setAuthenticator (new BasicAuthenticator ("test") {
             public boolean checkCredentials (String user, String pass) {
                 return user.equals ("fred") && pass.equals("fredpassword");
             }
         });
 
         server.start ();
 
-        Socket s = new Socket ("localhost", server.getAddress().getPort());
+        Socket s = new Socket (loopback, server.getAddress().getPort());
         s.setSoTimeout (5000);
 
         OutputStream os = s.getOutputStream();
         os.write (cmd.getBytes());
         InputStream is = s.getInputStream ();
