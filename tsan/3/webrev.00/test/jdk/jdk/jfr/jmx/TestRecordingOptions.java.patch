diff a/test/jdk/jdk/jfr/jmx/TestRecordingOptions.java b/test/jdk/jdk/jfr/jmx/TestRecordingOptions.java
--- a/test/jdk/jdk/jfr/jmx/TestRecordingOptions.java
+++ b/test/jdk/jdk/jfr/jmx/TestRecordingOptions.java
@@ -23,10 +23,11 @@
  * questions.
  */
 
 package jdk.jfr.jmx;
 
+import java.io.File;
 import java.util.HashMap;
 import java.util.LinkedHashMap;
 import java.util.Map;
 
 import jdk.management.jfr.FlightRecorderMXBean;
@@ -47,11 +48,11 @@
         options.put("maxAge", "2 h");
         options.put("maxSize", "1234567890");
         options.put("dumpOnExit", "false");
         options.put("disk", "false");
         options.put("duration", "1 h"); // don't want recording to stop
-
+        options.put("destination", "." + File.separator + "dump.jfr");
         FlightRecorderMXBean bean = JmxHelper.getFlighteRecorderMXBean();
         long recId = bean.newRecording();
         Map<String, String> defaults = bean.getRecordingOptions(recId);
         bean.setRecordingOptions(recId, options);
 
@@ -70,10 +71,11 @@
         Asserts.assertEquals(outOptions.get("maxAge"), "2 h", "Wrong maxAge");
         Asserts.assertEquals(outOptions.get("maxSize"), "1234567890", "Wrong maxSize");
         Asserts.assertEquals(outOptions.get("dumpOnExit"), "false", "Wrong dumpOnExit");
         Asserts.assertEquals(outOptions.get("disk"), "false", "Wrong disk");
         Asserts.assertEquals(outOptions.get("duration"), "1 h", "Wrong duration");
+        Asserts.assertEquals(outOptions.get("destination"), "." + File.separator + "dump.jfr", "Wrong destination");
 
         // try empty map
         bean.setRecordingOptions(recId, new HashMap<>());
 
         // try map that does not have string keys
@@ -114,10 +116,11 @@
         nullMap.put("maxAge", null);
         nullMap.put("maxSize", null);
         nullMap.put("dumpOnExit", null);
         nullMap.put("disk", null);
         nullMap.put("duration", null);
+        nullMap.put("destination", null);
         bean.setRecordingOptions(recId, nullMap);
         Asserts.assertEquals(bean.getRecordingOptions(recId), defaults);
 
         bean.closeRecording(recId);
     }
