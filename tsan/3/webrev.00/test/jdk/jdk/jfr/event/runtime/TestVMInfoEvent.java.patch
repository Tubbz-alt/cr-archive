diff a/test/jdk/jdk/jfr/event/runtime/TestVMInfoEvent.java b/test/jdk/jdk/jfr/event/runtime/TestVMInfoEvent.java
--- a/test/jdk/jdk/jfr/event/runtime/TestVMInfoEvent.java
+++ b/test/jdk/jdk/jfr/event/runtime/TestVMInfoEvent.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2013, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2013, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -23,31 +23,39 @@
  * questions.
  */
 
 package jdk.jfr.event.runtime;
 
-
-
 import java.lang.management.ManagementFactory;
 import java.lang.management.RuntimeMXBean;
+import java.nio.file.Files;
+import java.nio.file.Paths;
 import java.util.List;
 import java.util.stream.Collectors;
 
 import jdk.jfr.Recording;
 import jdk.jfr.consumer.RecordedEvent;
 import jdk.test.lib.Asserts;
 import jdk.test.lib.jfr.EventNames;
 import jdk.test.lib.jfr.Events;
 
 /**
- * The test will verify that JVM Information event values are delivered
- * and compare them with the RuntimeMXBean's values.
+ * @test
+ * @key jfr
+ * @requires vm.hasJFR
+ * @library /test/lib
+ * @run driver jdk.jfr.event.runtime.TestVMInfoEvent generateFlagsFile
+ * @run main/othervm -XX:Flags=TestVMInfoEvent.flags -Xmx500m jdk.jfr.event.runtime.TestVMInfoEvent arg1 arg2
  */
 public class TestVMInfoEvent {
     private final static String EVENT_NAME = EventNames.JVMInformation;
 
     public static void main(String[] args) throws Exception {
+        if( (args.length > 0) && ("generateFlagsFile".equals(args[0])) ) {
+            generateFlagsFile();
+            return;
+        }
         RuntimeMXBean mbean = ManagementFactory.getRuntimeMXBean();
         Recording recording = new Recording();
         recording.enable(EVENT_NAME);
         recording.start();
         recording.stop();
@@ -74,6 +82,9 @@
             Events.assertField(event, "javaArguments").equal(javaCommand);
             Events.assertField(event, "jvmStartTime").equal(mbean.getStartTime());
         }
     }
 
+    public static void generateFlagsFile() throws Exception {
+        Files.writeString(Paths.get("", "TestVMInfoEvent.flags"), "+UseSerialGC");
+    }
 }
