diff a/test/jdk/jdk/jfr/event/runtime/TestClassLoadingStatisticsEvent.java b/test/jdk/jdk/jfr/event/runtime/TestClassLoadingStatisticsEvent.java
--- a/test/jdk/jdk/jfr/event/runtime/TestClassLoadingStatisticsEvent.java
+++ b/test/jdk/jdk/jfr/event/runtime/TestClassLoadingStatisticsEvent.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2013, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2013, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -45,13 +45,12 @@
 /**
  * This test will load a number of classes. After each load step we verify that
  * the loadedClassCount and unloadedClassCount attributes are correct.
  *
  * System.gc() will trigger class unloading if -XX:+ExplicitGCInvokesConcurrent
- * is NOT set. If this flag is set G1 will never unload classes on System.gc()
- * and CMS will not guarantee that all semantically dead classes will be
- * unloaded. As far as the "jfr" key guarantees no VM flags are set from the
+ * is NOT set. If this flag is set G1 will never unload classes on System.gc().
+ * As far as the "jfr" key guarantees no VM flags are set from the
  * outside it should be enough with System.gc().
  */
 public class TestClassLoadingStatisticsEvent {
 
     private final static String EVENT_PATH = EventNames.ClassLoadingStatistics;
