diff a/test/jdk/sun/net/www/ftptest/FtpServer.java b/test/jdk/sun/net/www/ftptest/FtpServer.java
--- a/test/jdk/sun/net/www/ftptest/FtpServer.java
+++ b/test/jdk/sun/net/www/ftptest/FtpServer.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2006, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2006, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -52,10 +52,20 @@
     private FtpFileSystemHandler fsh = null;
     private FtpAuthHandler auth = null;
     private boolean done = false;
     private ArrayList<FtpCommandHandler> clients = new ArrayList<FtpCommandHandler>();
 
+    /**
+     * Creates an instance of an FTP server which will listen for incoming
+     * connections on the specified port. If the port is set to 0, it will
+     * automatically select an available ephemeral port.
+     */
+    public FtpServer(InetAddress addr, int port) throws IOException {
+        listener = new ServerSocket();
+        listener.bind(new InetSocketAddress(addr, port));
+    }
+
     /**
      * Creates an instance of an FTP server which will listen for incoming
      * connections on the specified port. If the port is set to 0, it will
      * automatically select an available ephemeral port.
      */
@@ -98,10 +108,25 @@
 
     public int getLocalPort() {
         return listener.getLocalPort();
     }
 
+    public InetAddress getInetAddress() {
+        return listener.getInetAddress();
+    }
+
+    public String getAuthority() {
+        InetAddress address = getInetAddress();
+        String hostaddr = address.isAnyLocalAddress()
+            ? "localhost" : address.getHostAddress();
+        if (hostaddr.indexOf(':') > -1) {
+            hostaddr = "[" + hostaddr + "]";
+        }
+        return hostaddr + ":" + getLocalPort();
+    }
+
+
     void addClient(Socket client) {
         FtpCommandHandler h = new FtpCommandHandler(client, this);
         h.setHandlers(fsh, auth);
         synchronized (clients) {
             clients.add(h);
