diff a/test/jdk/sun/net/www/http/ChunkedInputStream/TestAvailable.java b/test/jdk/sun/net/www/http/ChunkedInputStream/TestAvailable.java
--- a/test/jdk/sun/net/www/http/ChunkedInputStream/TestAvailable.java
+++ b/test/jdk/sun/net/www/http/ChunkedInputStream/TestAvailable.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2006, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2006, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -23,20 +23,22 @@
 
 /*
  * @test
  * @bug 6446990
  * @modules jdk.httpserver
+ * @library /test/lib
  * @run main/othervm TestAvailable
  * @summary HttpURLConnection#available() reads more and more data into memory
  */
 
 import java.net.*;
 import java.util.*;
 import java.io.*;
 import com.sun.net.httpserver.*;
 import java.util.concurrent.Executors;
 import java.util.concurrent.ExecutorService;
+import jdk.test.lib.net.URIBuilder;
 
 public class TestAvailable
 {
     com.sun.net.httpserver.HttpServer httpServer;
     ExecutorService executorService;
@@ -58,11 +60,17 @@
 
     void doClient() {
         try {
             InetSocketAddress address = httpServer.getAddress();
 
-            URL url = new URL("http://localhost:" + address.getPort() + "/testAvailable/");
+            URL url = URIBuilder.newBuilder()
+                      .scheme("http")
+                      .host(address.getAddress())
+                      .port(address.getPort())
+                      .path("/testAvailable/")
+                      .toURLUnchecked();
+
             HttpURLConnection uc = (HttpURLConnection)url.openConnection();
 
             uc.setDoOutput(true);
             uc.setRequestMethod("POST");
             uc.setChunkedStreamingMode(0);
@@ -100,11 +108,13 @@
 
      /**
      * Http Server
      */
     public void startHttpServer() throws IOException {
-        httpServer = com.sun.net.httpserver.HttpServer.create(new InetSocketAddress(0), 0);
+        InetAddress loopback = InetAddress.getLoopbackAddress();
+        InetSocketAddress sockaddr = new InetSocketAddress(loopback, 0);
+        httpServer = com.sun.net.httpserver.HttpServer.create(sockaddr, 0);
 
         // create HttpServer context
         HttpContext ctx = httpServer.createContext("/testAvailable/", new MyHandler());
 
         executorService = Executors.newCachedThreadPool();
