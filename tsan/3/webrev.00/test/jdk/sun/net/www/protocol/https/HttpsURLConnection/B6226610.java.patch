diff a/test/jdk/sun/net/www/protocol/https/HttpsURLConnection/B6226610.java b/test/jdk/sun/net/www/protocol/https/HttpsURLConnection/B6226610.java
--- a/test/jdk/sun/net/www/protocol/https/HttpsURLConnection/B6226610.java
+++ b/test/jdk/sun/net/www/protocol/https/HttpsURLConnection/B6226610.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2005, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -45,16 +45,18 @@
     public static void main(String[] args) throws Exception
     {
         proxy = new HeaderCheckerProxyTunnelServer();
         proxy.start();
 
-        String hostname = InetAddress.getLocalHost().getHostName();
+        InetAddress localHost = InetAddress.getLocalHost();
+        String hostname = localHost.getHostName();
+        String hostAddress = localHost.getHostAddress();
 
         try {
            URL u = new URL("https://" + hostname + "/");
            System.out.println("Connecting to " + u);
-           InetSocketAddress proxyAddr = new InetSocketAddress(hostname, proxy.getLocalPort());
+           InetSocketAddress proxyAddr = InetSocketAddress.createUnresolved(hostAddress, proxy.getLocalPort());
            java.net.URLConnection c = u.openConnection(new Proxy(Proxy.Type.HTTP, proxyAddr));
 
            /* I want this header to go to the destination server only, protected
             * by SSL
             */
@@ -94,11 +96,12 @@
     private int serverPort;
 
     public HeaderCheckerProxyTunnelServer() throws IOException
     {
        if (ss == null) {
-          ss = new ServerSocket(0);
+           ss = new ServerSocket();
+           ss.bind(new InetSocketAddress(InetAddress.getLocalHost(), 0));
        }
     }
 
     void shutdown() {
         try { ss.close(); } catch (IOException e) {}
@@ -141,20 +144,20 @@
         if (statusLine.startsWith("CONNECT")) {
            // retrieve the host and port info from the status-line
            retrieveConnectInfo(statusLine);
 
            if (mheader.findValue("X-TestHeader") != null) {
-             System.out.println("Proxy should not receive user defined headers for tunneled requests");
-             failed = true;
+               System.out.println("Proxy should not receive user defined headers for tunneled requests");
+               failed = true;
            }
 
            // 6973030
            String value;
            if ((value = mheader.findValue("Proxy-Connection")) == null ||
                 !value.equals("keep-alive")) {
-             System.out.println("Proxy-Connection:keep-alive not being sent");
-             failed = true;
+               System.out.println("Proxy-Connection:keep-alive not being sent");
+               failed = true;
            }
 
            //This will allow the main thread to terminate without trying to perform the SSL handshake.
            send400();
 
@@ -204,10 +207,10 @@
             endi = connectInfo.indexOf(':');
             serverName = connectInfo.substring(0, endi);
             serverPort = Integer.parseInt(connectInfo.substring(endi+1));
         } catch (Exception e) {
             throw new IOException("Proxy recieved a request: "
-                                        + connectStr);
-          }
+                                  + connectStr, e);
+        }
         serverInetAddr = InetAddress.getByName(serverName);
     }
 }
