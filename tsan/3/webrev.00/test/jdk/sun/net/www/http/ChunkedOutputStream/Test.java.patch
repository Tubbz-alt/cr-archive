diff a/test/jdk/sun/net/www/http/ChunkedOutputStream/Test.java b/test/jdk/sun/net/www/http/ChunkedOutputStream/Test.java
--- a/test/jdk/sun/net/www/http/ChunkedOutputStream/Test.java
+++ b/test/jdk/sun/net/www/http/ChunkedOutputStream/Test.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2004, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2004, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -23,18 +23,21 @@
 
 /**
  * @test
  * @bug 5026745 6631048
  * @modules jdk.httpserver
+ * @library /test/lib
  * @run main/othervm/timeout=500 Test
  * @summary Cannot flush output stream when writing to an HttpUrlConnection
  */
 
 import java.io.*;
 import java.net.*;
 import com.sun.net.httpserver.*;
 
+import jdk.test.lib.net.URIBuilder;
+
 public class Test implements HttpHandler {
 
     static volatile int count = 0;
 
     static final String str1 = "Helloworld1234567890abcdefghijklmnopqrstuvwxyz"+
@@ -270,13 +273,12 @@
         }
     }
 
     /* basic chunked test (runs twice) */
 
-    static void test1 (String u) throws Exception {
-        URL url = new URL (u);
-        System.out.println ("client opening connection to: " + u);
+    static void test1(URL url) throws Exception {
+        System.out.println("client opening connection to: " + url);
         HttpURLConnection urlc = (HttpURLConnection)url.openConnection ();
         urlc.setChunkedStreamingMode (20);
         urlc.setDoOutput(true);
         urlc.setRequestMethod ("POST");
         OutputStream os = urlc.getOutputStream ();
@@ -287,13 +289,12 @@
         is.close();
     }
 
     /* basic fixed length test */
 
-    static void test3 (String u) throws Exception {
-        URL url = new URL (u);
-        System.out.println ("client opening connection to: " + u);
+    static void test3(URL url) throws Exception {
+        System.out.println("client opening connection to: " + url);
         HttpURLConnection urlc = (HttpURLConnection)url.openConnection ();
         urlc.setFixedLengthStreamingMode (str2.length());
         urlc.setDoOutput(true);
         urlc.setRequestMethod ("POST");
         OutputStream os = urlc.getOutputStream ();
@@ -304,13 +305,12 @@
         is.close();
     }
 
     /* write too few bytes */
 
-    static void test4 (String u) throws Exception {
-        URL url = new URL (u);
-        System.out.println ("client opening connection to: " + u);
+    static void test4(URL url) throws Exception {
+        System.out.println("client opening connection to: " + url);
         HttpURLConnection urlc = (HttpURLConnection)url.openConnection ();
         urlc.setFixedLengthStreamingMode (str2.length()+1);
         urlc.setDoOutput(true);
         urlc.setRequestMethod ("POST");
         OutputStream os = urlc.getOutputStream ();
@@ -321,13 +321,12 @@
         } catch (IOException e) {}
     }
 
     /* write too many bytes */
 
-    static void test5 (String u) throws Exception {
-        URL url = new URL (u);
-        System.out.println ("client opening connection to: " + u);
+    static void test5(URL url) throws Exception {
+        System.out.println("client opening connection to: " + url);
         HttpURLConnection urlc = (HttpURLConnection)url.openConnection ();
         urlc.setFixedLengthStreamingMode (str2.length()-1);
         urlc.setDoOutput(true);
         urlc.setRequestMethod ("POST");
         OutputStream os = urlc.getOutputStream ();
@@ -337,13 +336,12 @@
         } catch (IOException e) {}
     }
 
     /* check for HttpRetryException on redirection */
 
-    static void test6 (String u) throws Exception {
-        URL url = new URL (u);
-        System.out.println ("client opening connection to: " + u);
+    static void test6(URL url) throws Exception {
+        System.out.println("client opening connection to: " + url);
         HttpURLConnection urlc = (HttpURLConnection)url.openConnection ();
         urlc.setChunkedStreamingMode (20);
         urlc.setDoOutput(true);
         urlc.setRequestMethod ("POST");
         OutputStream os = urlc.getOutputStream ();
@@ -362,13 +360,12 @@
         }
     }
 
     /* next two tests send zero length posts */
 
-    static void test7 (String u) throws Exception {
-        URL url = new URL (u);
-        System.out.println ("client opening connection to: " + u);
+    static void test7(URL url) throws Exception {
+        System.out.println("client opening connection to: " + url);
         HttpURLConnection urlc = (HttpURLConnection)url.openConnection ();
         urlc.setChunkedStreamingMode (20);
         urlc.setDoOutput(true);
         urlc.setRequestMethod ("POST");
         OutputStream os = urlc.getOutputStream ();
@@ -377,13 +374,12 @@
         if (ret != 200) {
             throw new Exception ("Expected 200: got " + ret);
         }
     }
 
-    static void test8 (String u) throws Exception {
-        URL url = new URL (u);
-        System.out.println ("client opening connection to: " + u);
+    static void test8(URL url) throws Exception {
+        System.out.println("client opening connection to: " + url);
         HttpURLConnection urlc = (HttpURLConnection)url.openConnection ();
         urlc.setFixedLengthStreamingMode (0);
         urlc.setDoOutput(true);
         urlc.setRequestMethod ("POST");
         OutputStream os = urlc.getOutputStream ();
@@ -394,13 +390,12 @@
         }
     }
 
     /* calling setChunkedStreamingMode with -1 should entail using
        the default chunk size */
-   static void test9 (String u) throws Exception {
-        URL url = new URL (u);
-        System.out.println ("client opening connection to: " + u);
+    static void test9(URL url) throws Exception {
+        System.out.println("client opening connection to: " + url);
         HttpURLConnection urlc = (HttpURLConnection)url.openConnection ();
         urlc.setChunkedStreamingMode (-1);
         urlc.setDoOutput(true);
         urlc.setRequestMethod ("POST");
         OutputStream os = urlc.getOutputStream ();
@@ -409,13 +404,12 @@
         InputStream is = urlc.getInputStream();
         readAndCompare (is, str1);
         is.close();
     }
 
-   static void test10 (String u) throws Exception {
-        URL url = new URL (u);
-        System.out.println ("client opening connection to: " + u);
+    static void test10(URL url) throws Exception {
+        System.out.println("client opening connection to: " + url);
         HttpURLConnection urlc = (HttpURLConnection)url.openConnection ();
         urlc.setChunkedStreamingMode (4 * 1024);
         urlc.setDoOutput(true);
         urlc.setRequestMethod ("POST");
         OutputStream os = urlc.getOutputStream ();
@@ -433,13 +427,12 @@
         if (ret != 200) {
             throw new Exception ("Expected 200: got " + ret);
         }
     }
 
-    static void test11 (String u) throws Exception {
-        URL url = new URL (u);
-        System.out.println ("client opening connection to: " + u);
+    static void test11(URL url) throws Exception {
+        System.out.println("client opening connection to: " + url);
         HttpURLConnection urlc = (HttpURLConnection)url.openConnection ();
         urlc.setChunkedStreamingMode (36 * 1024);
         urlc.setDoOutput(true);
         urlc.setRequestMethod ("POST");
         OutputStream os = urlc.getOutputStream ();
@@ -460,13 +453,12 @@
         if (ret != 200) {
             throw new Exception ("Expected 200: got " + ret);
         }
     }
 
-    static void test12 (String u) throws Exception {
-        URL url = new URL (u);
-        System.out.println ("client opening connection to: " + u);
+    static void test12(URL url) throws Exception {
+        System.out.println("client opening connection to: " + url);
         HttpURLConnection urlc = (HttpURLConnection)url.openConnection ();
         urlc.setChunkedStreamingMode (36 * 1024);
         urlc.setDoOutput(true);
         urlc.setRequestMethod ("POST");
         OutputStream os = urlc.getOutputStream ();
@@ -483,33 +475,43 @@
             throw new Exception ("Expected 200: got " + ret);
         }
     }
 
 
-    static com.sun.net.httpserver.HttpServer httpserver;
+    static HttpServer httpserver;
+
+    private static URL buildTestURL(int port, String path)
+            throws MalformedURLException, URISyntaxException {
+        return URIBuilder.newBuilder()
+                .scheme("http")
+                .loopback()
+                .port(port)
+                .path(path)
+                .toURL();
+    }
 
     public static void main (String[] args) throws Exception {
         try {
-            httpserver = com.sun.net.httpserver.HttpServer.create(new InetSocketAddress(0), 0);
-            HttpContext ctx = httpserver.createContext("/test/", new Test() );
+            httpserver = HttpServer.create(new InetSocketAddress(InetAddress.getLoopbackAddress(), 0), 0);
+            httpserver.createContext("/test/", new Test());
             httpserver.start();
 
             int port = httpserver.getAddress().getPort();
 
             System.out.println ("Server started: listening on port: " + port);
-            test1("http://localhost:"+ port + "/test/test1");
-            test1("http://localhost:"+ port + "/test/test2");
-            test3("http://localhost:"+ port + "/test/test3");
-            test4("http://localhost:"+ port + "/test/test4");
-            test5("http://localhost:"+ port + "/test/test5");
-            test6("http://localhost:"+ port + "/test/test6");
-            test7("http://localhost:"+ port + "/test/test7");
-            test8("http://localhost:"+ port + "/test/test8");
-            test9("http://localhost:"+ port + "/test/test9");
-            test10("http://localhost:"+ port + "/test/test10");
-            test11("http://localhost:"+ port + "/test/test11");
-            test12("http://localhost:"+ port + "/test/test12");
+            test1(buildTestURL(port, "/test/test1"));
+            test1(buildTestURL(port, "/test/test2"));
+            test3(buildTestURL(port, "/test/test3"));
+            test4(buildTestURL(port, "/test/test4"));
+            test5(buildTestURL(port, "/test/test5"));
+            test6(buildTestURL(port, "/test/test6"));
+            test7(buildTestURL(port, "/test/test7"));
+            test8(buildTestURL(port, "/test/test8"));
+            test9(buildTestURL(port, "/test/test9"));
+            test10(buildTestURL(port, "/test/test10"));
+            test11(buildTestURL(port, "/test/test11"));
+            test12(buildTestURL(port, "/test/test12"));
         } finally {
             if (httpserver != null)
                 httpserver.stop(0);
         }
     }
