diff a/test/jdk/sun/net/www/protocol/http/HttpInputStream.java b/test/jdk/sun/net/www/protocol/http/HttpInputStream.java
--- a/test/jdk/sun/net/www/protocol/http/HttpInputStream.java
+++ b/test/jdk/sun/net/www/protocol/http/HttpInputStream.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -21,21 +21,26 @@
  * questions.
  */
 
 /* @test
  * @bug 4937598
+ * @library /test/lib
  * @summary http://www.clipstream.com video does not play; read() problem
  */
 
 
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
+import java.net.InetAddress;
+import java.net.InetSocketAddress;
 import java.net.ServerSocket;
 import java.net.Socket;
 import java.net.URL;
 
+import jdk.test.lib.net.URIBuilder;
+
 public class HttpInputStream {
 
     private static final int CONTENT_LENGTH = 20;
 
     static class Server implements AutoCloseable, Runnable {
@@ -43,11 +48,13 @@
         final ServerSocket serverSocket;
         static final byte[] requestEnd = new byte[]{'\r', '\n', '\r', '\n'};
         static final int TIMEOUT = 10 * 1000;
 
         Server() throws IOException {
-            serverSocket = new ServerSocket(0);
+            serverSocket = new ServerSocket();
+            serverSocket.bind(new InetSocketAddress(
+                    InetAddress.getLoopbackAddress(), 0));
         }
 
         void readOneRequest(InputStream is) throws IOException {
             int requestEndCount = 0, r;
             while ((r = is.read()) != -1) {
@@ -104,11 +111,16 @@
     }
 
     public static void main(String args[]) throws IOException {
         try (Server server = new Server()) {
             (new Thread(server)).start();
-            URL url = new URL("http://localhost:" + server.getPort() + "/anything");
+            URL url = URIBuilder.newBuilder()
+                    .scheme("http")
+                    .loopback()
+                    .port(server.getPort())
+                    .path("/anything")
+                    .toURLUnchecked();
             try (InputStream is = url.openConnection().getInputStream()) {
                 if (read(is) != CONTENT_LENGTH) {
                     throw new RuntimeException("HttpInputStream.read() failed with 0xff");
                 }
             }
