diff a/test/jdk/sun/net/www/protocol/http/B6518816.java b/test/jdk/sun/net/www/protocol/http/B6518816.java
--- a/test/jdk/sun/net/www/protocol/http/B6518816.java
+++ b/test/jdk/sun/net/www/protocol/http/B6518816.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2007, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2007, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -22,10 +22,11 @@
  */
 
 /*
  * @test
  * @bug 6518816
+ * @library /test/lib
  * @modules jdk.httpserver
  * @run main/othervm B6518816
  */
 
 import java.net.*;
@@ -33,10 +34,12 @@
 import java.io.*;
 import com.sun.net.httpserver.*;
 import java.util.concurrent.Executors;
 import java.util.concurrent.ExecutorService;
 
+import jdk.test.lib.net.URIBuilder;
+
 public class B6518816
 {
     com.sun.net.httpserver.HttpServer httpServer;
     ExecutorService executorService;
 
@@ -77,12 +80,16 @@
             System.out.println ("At start: " + totalmem1/1024 + " KB");
 
             byte [] buf = new byte [TEN_MB];
 
             for (int j=0; j<MAX_CONNS; j++) {
-
-                URL url = new URL("http://localhost:"+address.getPort()+"/test/");
+                URL url = URIBuilder.newBuilder()
+                        .scheme("http")
+                        .loopback()
+                        .port(address.getPort())
+                        .path("/test/")
+                        .toURLUnchecked();
                 HttpURLConnection uc = (HttpURLConnection)url.openConnection();
                 uc.setDoOutput (true);
                 OutputStream os = uc.getOutputStream ();
                 os.write (buf);
                 InputStream is = uc.getInputStream();
@@ -128,11 +135,13 @@
 
     /**
      * Http Server
      */
     public void startHttpServer() throws IOException {
-        httpServer = com.sun.net.httpserver.HttpServer.create(new InetSocketAddress(0), 0);
+        httpServer = com.sun.net.httpserver.HttpServer.create(
+                new InetSocketAddress(InetAddress.getLoopbackAddress(), 0),
+                0);
 
         // create HttpServer context for Part 1.
         HttpContext ctx = httpServer.createContext("/test/", new MyHandler());
 
         executorService = Executors.newCachedThreadPool();
