diff a/test/jdk/sun/net/www/http/HttpURLConnection/NTLMAuthWithSM.java b/test/jdk/sun/net/www/http/HttpURLConnection/NTLMAuthWithSM.java
--- a/test/jdk/sun/net/www/http/HttpURLConnection/NTLMAuthWithSM.java
+++ b/test/jdk/sun/net/www/http/HttpURLConnection/NTLMAuthWithSM.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2015, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2015, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -27,10 +27,11 @@
 import java.io.BufferedReader;
 import java.io.InputStreamReader;
 import java.io.IOException;
 import java.io.InputStream;
 import java.net.Authenticator;
+import java.net.InetAddress;
 import java.net.InetSocketAddress;
 import java.net.PasswordAuthentication;
 import java.net.URL;
 import java.net.URLConnection;
 import java.util.List;
@@ -60,12 +61,12 @@
 
         try (LocalHttpServer server = LocalHttpServer.startServer()) {
             // set authenticator
             Authenticator.setDefault(new AuthenticatorImpl());
 
-            String url = String.format("http://localhost:%d/test/",
-                    server.getPort());
+            String url = String.format("http://%s/test/",
+                    server.getAuthority());
 
             // load a document which is protected with NTML authentication
             System.out.println("load() called: " + url);
             URLConnection conn = new URL(url).openConnection();
             try (BufferedReader reader = new BufferedReader(
@@ -105,12 +106,13 @@
         private LocalHttpServer(HttpServer server) {
             this.server = server;
         }
 
         static LocalHttpServer startServer() throws IOException {
+            InetAddress loopback = InetAddress.getLoopbackAddress();
             HttpServer httpServer = HttpServer.create(
-                    new InetSocketAddress(0), 0);
+                    new InetSocketAddress(loopback, 0), 0);
             LocalHttpServer localHttpServer = new LocalHttpServer(httpServer);
             localHttpServer.start();
 
             return localHttpServer;
         }
@@ -124,10 +126,18 @@
         void stop() {
             server.stop(0);
             System.out.println("HttpServer: stopped");
         }
 
+        String getAuthority() {
+            InetAddress address = server.getAddress().getAddress();
+            String hostaddr = address.isAnyLocalAddress()
+                   ? "localhost" : address.getHostAddress();
+            if (hostaddr.indexOf(':') > -1) hostaddr = "[" + hostaddr + "]";
+            return hostaddr + ":" + getPort();
+        }
+
         int getPort() {
             return server.getAddress().getPort();
         }
 
         @Override
