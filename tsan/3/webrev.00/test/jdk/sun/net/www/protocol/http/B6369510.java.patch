diff a/test/jdk/sun/net/www/protocol/http/B6369510.java b/test/jdk/sun/net/www/protocol/http/B6369510.java
--- a/test/jdk/sun/net/www/protocol/http/B6369510.java
+++ b/test/jdk/sun/net/www/protocol/http/B6369510.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2006, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2006, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -57,15 +57,16 @@
     }
 
     void doClient() {
         try {
             InetSocketAddress address = httpServer.getAddress();
-            String urlString = "http://" + InetAddress.getLocalHost().getHostName() + ":" + address.getPort() + "/test/";
+            String urlString = "http://" + InetAddress.getLocalHost().getHostName()
+                               + ":" + address.getPort() + "/test/";
             System.out.println("URL == " + urlString);
 
             // GET Request
-            URL url = new URL("http://" + InetAddress.getLocalHost().getHostName() + ":" + address.getPort() + "/test/");
+            URL url = new URL(urlString);
             HttpURLConnection uc = (HttpURLConnection)url.openConnection(Proxy.NO_PROXY);
             int resp = uc.getResponseCode();
             if (resp != 200)
                 throw new RuntimeException("Failed: Response code from GET is not 200 RSP == " + resp);
 
@@ -93,11 +94,12 @@
 
     /**
      * Http Server
      */
     public void startHttpServer() throws IOException {
-        httpServer = com.sun.net.httpserver.HttpServer.create(new InetSocketAddress(0), 0);
+        InetAddress localhost = InetAddress.getLocalHost();
+        httpServer = HttpServer.create(new InetSocketAddress(localhost, 0), 0);
 
         // create HttpServer context
         HttpContext ctx = httpServer.createContext("/test/", new MyHandler());
 
         executorService = Executors.newCachedThreadPool();
