diff a/test/jdk/sun/net/ftp/TestFtpClientNameListWithNull.java b/test/jdk/sun/net/ftp/TestFtpClientNameListWithNull.java
--- a/test/jdk/sun/net/ftp/TestFtpClientNameListWithNull.java
+++ b/test/jdk/sun/net/ftp/TestFtpClientNameListWithNull.java
@@ -35,10 +35,11 @@
 
 import java.io.BufferedReader;
 import java.io.IOException;
 import java.io.InputStreamReader;
 import java.io.PrintWriter;
+import java.net.InetAddress;
 import java.net.InetSocketAddress;
 import java.net.ServerSocket;
 import java.net.Socket;
 import java.net.SocketException;
 
@@ -50,11 +51,12 @@
     public static void main(String[] args) throws Exception {
         try (FtpServer server = new FtpServer();
              FtpClient client = FtpClient.create()) {
             (new Thread(server)).start();
             int port = server.getPort();
-            client.connect(new InetSocketAddress("localhost", port));
+            InetAddress loopback = InetAddress.getLoopbackAddress();
+            client.connect(new InetSocketAddress(loopback, port));
             client.nameList(null);
         } finally {
             if (commandHasArgs) {
                 throw new RuntimeException("Test failed. NLST shouldn't have " +
                         "args if nameList parameter is null");
@@ -64,11 +66,13 @@
 
     private static class FtpServer implements AutoCloseable, Runnable {
         private final ServerSocket serverSocket;
 
         FtpServer() throws IOException {
-            serverSocket = new ServerSocket(0);
+            InetAddress loopback = InetAddress.getLoopbackAddress();
+            serverSocket = new ServerSocket();
+            serverSocket.bind(new InetSocketAddress(loopback, 0));
         }
 
         public void handleClient(Socket client) throws IOException {
             boolean done = false;
             String str;
