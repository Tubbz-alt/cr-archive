diff a/test/jdk/sun/security/util/misc/SetNullSigParams.java b/test/jdk/sun/security/util/misc/SetNullSigParams.java
--- a/test/jdk/sun/security/util/misc/SetNullSigParams.java
+++ b/test/jdk/sun/security/util/misc/SetNullSigParams.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2018, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -21,24 +21,24 @@
  * questions.
  */
 
 /*
  * @test
- * @bug 8214096
- * @summary Make sure SignatureUtil can accept null algorithm parameters
+ * @bug 8214096 8216039
+ * @summary Make sure SignatureUtil works with null algorithm parameters
  * @modules java.base/sun.security.util
  */
 import java.security.*;
 import java.security.spec.AlgorithmParameterSpec;
 import sun.security.util.SignatureUtil;
 
 public class SetNullSigParams {
 
     public static void main(String[] args) throws Exception {
         Signature sig = new SpecialSigImpl();
-        SignatureUtil.specialSetParameter(sig, (byte[]) null);
-        SignatureUtil.specialSetParameter(sig, (AlgorithmParameters) null);
+        SignatureUtil.initVerifyWithParam(sig, (PublicKey) null, null);
+        SignatureUtil.initSignWithParam(sig, null, null, null);
     }
 
     // Sample Signature impl class which simulates 3rd party provider behavior
     // and throws NPE when given null algorithm parameters
     // For max backward-compatibility, sun.security.util.SignatureUtil class
