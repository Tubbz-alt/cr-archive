diff a/test/jdk/sun/security/ssl/SSLContextImpl/SSLContextVersion.java b/test/jdk/sun/security/ssl/SSLContextImpl/SSLContextVersion.java
--- a/test/jdk/sun/security/ssl/SSLContextImpl/SSLContextVersion.java
+++ b/test/jdk/sun/security/ssl/SSLContextImpl/SSLContextVersion.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2011, 2013, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2011, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -24,11 +24,11 @@
 // SunJSSE does not support dynamic system properties, no way to re-use
 // system properties in samevm/agentvm mode.
 
 /*
  * @test
- * @bug 6976117
+ * @bug 6976117 8234725
  * @summary SSLContext.getInstance("TLSv1.1") returns SSLEngines/SSLSockets
  *          without TLSv1.1 enabled
  * @run main/othervm SSLContextVersion
  */
 
@@ -40,11 +40,14 @@
         TLS_CV_02("TLS", "TLSv1.2", "TLSv1.2"),
         TLS_CV_03("SSLv3", "TLSv1", "TLSv1.2"),
         TLS_CV_04("TLSv1", "TLSv1", "TLSv1.2"),
         TLS_CV_05("TLSv1.1", "TLSv1.1", "TLSv1.2"),
         TLS_CV_06("TLSv1.2", "TLSv1.2", "TLSv1.2"),
-        TLS_CV_07("Default", "TLSv1.2", "TLSv1.2");
+        TLS_CV_07("Default", "TLSv1.2", "TLSv1.2"),
+        TLS_CV_08("Default", "TLSv1.3", "TLSv1.3"),
+        TLS_CV_09("TLS", "TLSv1.3", "TLSv1.3"),
+        TLS_CV_10("TLSv1.3", "TLSv1.3", "TLSv1.3");
 
         final String contextVersion;
         final String defaultProtocolVersion;
         final String supportedProtocolVersion;
 
