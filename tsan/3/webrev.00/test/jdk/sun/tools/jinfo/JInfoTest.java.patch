diff a/test/jdk/sun/tools/jinfo/JInfoTest.java b/test/jdk/sun/tools/jinfo/JInfoTest.java
--- a/test/jdk/sun/tools/jinfo/JInfoTest.java
+++ b/test/jdk/sun/tools/jinfo/JInfoTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2005, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2005, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -57,13 +57,13 @@
     private static void setFlag() throws Exception {
         System.out.println("#### setFlag ####");
         LingeredApp app1 = new JInfoTestLingeredApp();
         LingeredApp app2 = new JInfoTestLingeredApp();
         try {
-            ArrayList<String> params = new ArrayList<String>();
-            LingeredApp.startApp(params, app1);
-            LingeredApp.startApp(params, app2);
+            String[] params = new String[0];;
+            LingeredApp.startApp(app1, params);
+            LingeredApp.startApp(app2, params);
             OutputAnalyzer output = jinfo("-flag", "MinHeapFreeRatio=1", "JInfoTestLingeredApp");
             output.shouldHaveExitValue(0);
             output = jinfo("-flag", "MinHeapFreeRatio", "JInfoTestLingeredApp");
             output.shouldHaveExitValue(0);
             documentMatch(output.getStdout(), ".*MinHeapFreeRatio=1.*MinHeapFreeRatio=1.*");
@@ -82,13 +82,13 @@
     private static void classNameMatch() throws Exception {
         System.out.println("#### classNameMatch ####");
         LingeredApp app1 = new JInfoTestLingeredApp();
         LingeredApp app2 = new JInfoTestLingeredApp();
         try {
-            ArrayList<String> params = new ArrayList<String>();
-            LingeredApp.startApp(params, app1);
-            LingeredApp.startApp(params, app2);
+            String[] params = new String[0];
+            LingeredApp.startApp(app1, params);
+            LingeredApp.startApp(app2, params);
             OutputAnalyzer output = jinfo("JInfoTestLingeredApp");
             output.shouldHaveExitValue(0);
             // "Runtime Environment" written once per proc
             documentMatch(output.getStdout(), ".*Runtime Environment.*Runtime Environment.*");
         } finally {
@@ -120,6 +120,5 @@
 }
 
 // Sometime there is LingeredApp's from other test still around
 class JInfoTestLingeredApp extends LingeredApp {
 }
-
