diff a/test/jdk/sun/tools/jps/JpsHelper.java b/test/jdk/sun/tools/jps/JpsHelper.java
--- a/test/jdk/sun/tools/jps/JpsHelper.java
+++ b/test/jdk/sun/tools/jps/JpsHelper.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2014, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2014, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -91,25 +91,24 @@
             return list.toArray(new String[list.size()]);
         }
 
     }
 
-    /**
-     * VM arguments to start test application with.
-     * -XX:+UsePerfData is required for running the tests on embedded platforms.
-     */
-    public static final String[] VM_ARGS = {
-        "-XX:+UsePerfData", "-Xmx512m", "-Xlog:gc",
-        "-Dmultiline.prop=value1\nvalue2\r\nvalue3"
-    };
     /**
      * VM flag to start test application with
      */
     public static final String VM_FLAG = "+DisableExplicitGC";
 
     private static File vmFlagsFile = null;
-    private static List<String> testVmArgs = null;
+    /**
+     * VM arguments to start test application with.
+     * -XX:+UsePerfData is required for running the tests on embedded platforms.
+     */
+    private static String[] testVmArgs = {
+      "-XX:+UsePerfData", "-Xmx512m", "-Xlog:gc",
+      "-Dmultiline.prop=value1\nvalue2\r\nvalue3",
+      null /* lazily initialized -XX:Flags */};
     private static File manifestFile = null;
 
     /**
      * Create a file containing VM_FLAG in the working directory
      */
@@ -125,15 +124,13 @@
     }
 
     /**
      * Return a list of VM arguments
      */
-    public static List<String> getVmArgs() throws IOException {
-        if (testVmArgs == null) {
-            testVmArgs = new ArrayList<>();
-            testVmArgs.addAll(Arrays.asList(VM_ARGS));
-            testVmArgs.add("-XX:Flags=" + getVmFlagsFile().getAbsolutePath());
+    public static String[] getVmArgs() throws IOException {
+        if (testVmArgs[testVmArgs.length - 1] == null) {
+            testVmArgs[testVmArgs.length - 1] = "-XX:Flags=" + getVmFlagsFile().getAbsolutePath();
         }
         return testVmArgs;
     }
 
     /**
