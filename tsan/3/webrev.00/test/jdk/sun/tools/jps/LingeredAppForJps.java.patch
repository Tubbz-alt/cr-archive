diff a/test/jdk/sun/tools/jps/LingeredAppForJps.java b/test/jdk/sun/tools/jps/LingeredAppForJps.java
--- a/test/jdk/sun/tools/jps/LingeredAppForJps.java
+++ b/test/jdk/sun/tools/jps/LingeredAppForJps.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2016, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -30,11 +30,11 @@
 import java.net.URL;
 
 public class LingeredAppForJps extends LingeredApp {
 
     // Copy runApp logic here to be able to run an app from JarFile
-    public void runAppWithName(List<String> vmArguments, String runName)
+    public void runAppWithName(String[] vmArguments, String runName)
             throws IOException {
 
         List<String> cmd = runAppPrepare(vmArguments);
         if (runName.endsWith(".jar")) {
             cmd.add("-Xdiag");
@@ -50,11 +50,11 @@
         pb.redirectError(ProcessBuilder.Redirect.INHERIT);
         appProcess = pb.start();
         startGobblerPipe();
     }
 
-    public static LingeredApp startAppJar(List<String> cmd, LingeredAppForJps app, File jar) throws IOException {
+    public static LingeredApp startAppJar(LingeredAppForJps app, String[] cmd, File jar) throws IOException {
         app.createLock();
         try {
             app.runAppWithName(cmd, jar.getAbsolutePath());
             app.waitAppReady(appWaitTime);
         } catch (Exception ex) {
