diff a/test/langtools/tools/javac/processing/model/element/repeatingAnnotations/SingularInheritedBTest.java b/test/langtools/tools/javac/processing/model/element/repeatingAnnotations/SingularInheritedBTest.java
--- a/test/langtools/tools/javac/processing/model/element/repeatingAnnotations/SingularInheritedBTest.java
+++ b/test/langtools/tools/javac/processing/model/element/repeatingAnnotations/SingularInheritedBTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2013, 2015, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2013, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -32,17 +32,17 @@
  *          jdk.compiler
  * @build   JavacTestingAbstractProcessor ElementRepAnnoTester
  * @compile -processor ElementRepAnnoTester -proc:only SingularInheritedBTest.java
  */
 
-@FooInherited(value = 1)
+@FooInherited(1)
 class P {}
 
 @ExpectedBase(
         value = FooInherited.class,
-        getAnnotation = "@FooInherited(value=2)",
-        getAnnotationsByType = {"@FooInherited(value=2)"},
+        getAnnotation = "@FooInherited(2)",
+        getAnnotationsByType = {"@FooInherited(2)"},
         getAllAnnotationMirrors = {
             "@FooInherited(2)",
             "ExpectedBase",
             "ExpectedContainer"
         },
@@ -53,7 +53,7 @@
         })
 @ExpectedContainer(
         value = UnofficialInheritedContainer.class,
         getAnnotation = "null",
         getAnnotationsByType = {})
-@FooInherited(value = 2)
+@FooInherited(2)
 class SingularInheritedBTest extends P {}
