diff a/test/langtools/tools/javac/processing/model/element/repeatingAnnotations/OfficialContainerBasicTest.java b/test/langtools/tools/javac/processing/model/element/repeatingAnnotations/OfficialContainerBasicTest.java
--- a/test/langtools/tools/javac/processing/model/element/repeatingAnnotations/OfficialContainerBasicTest.java
+++ b/test/langtools/tools/javac/processing/model/element/repeatingAnnotations/OfficialContainerBasicTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2013, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2013, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -36,12 +36,12 @@
 
 @ExpectedBase(
         value = Bar.class,
         getAnnotation = "null",
         getAnnotationsByType = {
-            "@Bar(value=1)",
-            "@Bar(value=2)"
+            "@Bar(1)",
+            "@Bar(2)"
         },
         getAllAnnotationMirrors = {
             "@BarContainer({@Bar(1), @Bar(2)})",
             "ExpectedBase",
             "ExpectedContainer"
@@ -51,21 +51,21 @@
             "ExpectedBase",
             "ExpectedContainer"
         })
 @ExpectedContainer(
         value = BarContainer.class,
-        getAnnotation = "@BarContainer(value={@Bar(value=1), @Bar(value=2)})",
-        getAnnotationsByType = {"@BarContainer(value={@Bar(value=1), @Bar(value=2)})"})
-@BarContainer(value = {@Bar(value = 1), @Bar(value = 2)})
+        getAnnotation = "@BarContainer({@Bar(1), @Bar(2)})",
+        getAnnotationsByType = {"@BarContainer({@Bar(1), @Bar(2)})"})
+@BarContainer({@Bar(1), @Bar(2)})
 class OfficialContainerBasicTest {
 
     @ExpectedBase(
             value = Bar.class,
             getAnnotation = "null",
             getAnnotationsByType = {
-                "@Bar(value=1)",
-                "@Bar(value=2)"
+                "@Bar(1)",
+                "@Bar(2)"
             },
             getAllAnnotationMirrors = {
                 "@BarContainer({@Bar(1), @Bar(2)})",
                 "ExpectedBase",
                 "ExpectedContainer"
@@ -75,21 +75,21 @@
                 "ExpectedBase",
                 "ExpectedContainer"
             })
     @ExpectedContainer(
             value = BarContainer.class,
-            getAnnotation = "@BarContainer(value={@Bar(value=1), @Bar(value=2)})",
-            getAnnotationsByType = {"@BarContainer(value={@Bar(value=1), @Bar(value=2)})"})
-    @BarContainer(value = {@Bar(value = 1), @Bar(value = 2)})
+            getAnnotation = "@BarContainer({@Bar(1), @Bar(2)})",
+            getAnnotationsByType = {"@BarContainer({@Bar(1), @Bar(2)})"})
+    @BarContainer({@Bar(1), @Bar(2)})
     int testField = 0;
 
     @ExpectedBase(
             value = Bar.class,
             getAnnotation = "null",
             getAnnotationsByType = {
-                "@Bar(value=1)",
-                "@Bar(value=2)"
+                "@Bar(1)",
+                "@Bar(2)"
             },
             getAllAnnotationMirrors = {
                 "@BarContainer({@Bar(1), @Bar(2)})",
                 "ExpectedBase",
                 "ExpectedContainer"
@@ -99,10 +99,10 @@
                 "ExpectedBase",
                 "ExpectedContainer"
             })
     @ExpectedContainer(
             value = BarContainer.class,
-            getAnnotation = "@BarContainer(value={@Bar(value=1), @Bar(value=2)})",
-            getAnnotationsByType = {"@BarContainer(value={@Bar(value=1), @Bar(value=2)})"})
-    @BarContainer(value = {@Bar(value = 1), @Bar(value = 2)})
+            getAnnotation = "@BarContainer({@Bar(1), @Bar(2)})",
+            getAnnotationsByType = {"@BarContainer({@Bar(1), @Bar(2)})"})
+    @BarContainer({@Bar(1), @Bar(2)})
     void testMethod() {}
 }
