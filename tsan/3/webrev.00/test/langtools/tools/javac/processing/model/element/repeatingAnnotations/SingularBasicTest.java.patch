diff a/test/langtools/tools/javac/processing/model/element/repeatingAnnotations/SingularBasicTest.java b/test/langtools/tools/javac/processing/model/element/repeatingAnnotations/SingularBasicTest.java
--- a/test/langtools/tools/javac/processing/model/element/repeatingAnnotations/SingularBasicTest.java
+++ b/test/langtools/tools/javac/processing/model/element/repeatingAnnotations/SingularBasicTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2013, 2015, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2013, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -34,12 +34,12 @@
  * @compile -processor ElementRepAnnoTester -proc:only SingularBasicTest.java
  */
 
 @ExpectedBase(
         value = Foo.class,
-        getAnnotation = "@Foo(value=0)",
-        getAnnotationsByType = {"@Foo(value=0)"},
+        getAnnotation = "@Foo(0)",
+        getAnnotationsByType = {"@Foo(0)"},
         getAllAnnotationMirrors = {
             "@Foo(0)",
             "ExpectedBase",
             "ExpectedContainer"
         },
@@ -47,17 +47,17 @@
             "@Foo(0)",
             "ExpectedBase",
             "ExpectedContainer"
         })
 @ExpectedContainer
-@Foo(value = 0)
+@Foo(0)
 public class SingularBasicTest {
 
     @ExpectedBase(
             value = Foo.class,
-            getAnnotation = "@Foo(value=0)",
-            getAnnotationsByType = {"@Foo(value=0)"},
+            getAnnotation = "@Foo(0)",
+            getAnnotationsByType = {"@Foo(0)"},
             getAllAnnotationMirrors = {
                 "@Foo(0)",
                 "ExpectedBase",
                 "ExpectedContainer"
             },
@@ -65,17 +65,17 @@
                 "@Foo(0)",
                 "ExpectedBase",
                 "ExpectedContainer"
             })
     @ExpectedContainer
-    @Foo(value = 0)
+    @Foo(0)
     int testField = 0;
 
     @ExpectedBase(
             value = Foo.class,
-            getAnnotation = "@Foo(value=0)",
-            getAnnotationsByType = {"@Foo(value=0)"},
+            getAnnotation = "@Foo(0)",
+            getAnnotationsByType = {"@Foo(0)"},
             getAllAnnotationMirrors = {
                 "@Foo(0)",
                 "ExpectedBase",
                 "ExpectedContainer"
             },
@@ -83,9 +83,9 @@
                 "@Foo(0)",
                 "ExpectedBase",
                 "ExpectedContainer"
             })
     @ExpectedContainer
-    @Foo(value = 0)
+    @Foo(0)
     void testMethod() {
     }
 }
