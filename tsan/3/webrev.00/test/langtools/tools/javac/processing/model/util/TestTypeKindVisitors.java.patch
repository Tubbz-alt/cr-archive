diff a/test/langtools/tools/javac/processing/model/util/TestTypeKindVisitors.java b/test/langtools/tools/javac/processing/model/util/TestTypeKindVisitors.java
--- a/test/langtools/tools/javac/processing/model/util/TestTypeKindVisitors.java
+++ b/test/langtools/tools/javac/processing/model/util/TestTypeKindVisitors.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2013, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2013, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -189,8 +189,36 @@
 
                            @Override
                            public TypeKind visitNoTypeAsModule(NoType t, String p) {
                                return t.getKind();
                            }
-                       });
+                       },
+
+                        new TypeKindVisitor14<>(null){
+                           @Override
+                           protected TypeKind defaultAction(TypeMirror e, String p) {
+                               throw new AssertionError("Should not reach");
+                           }
+
+                           @Override
+                           public TypeKind visitNoTypeAsVoid(NoType t, String p) {
+                               return t.getKind();
+                           }
+
+                           @Override
+                           public TypeKind visitNoTypeAsNone(NoType t, String p) {
+                               return t.getKind();
+                           }
+
+                           @Override
+                           public TypeKind visitNoTypeAsPackage(NoType t, String p) {
+                               return t.getKind();
+                           }
+
+                           @Override
+                           public TypeKind visitNoTypeAsModule(NoType t, String p) {
+                               return t.getKind();
+                           }
+                       }
+        );
     }
 }
