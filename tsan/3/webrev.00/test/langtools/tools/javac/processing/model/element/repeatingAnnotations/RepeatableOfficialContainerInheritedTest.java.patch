diff a/test/langtools/tools/javac/processing/model/element/repeatingAnnotations/RepeatableOfficialContainerInheritedTest.java b/test/langtools/tools/javac/processing/model/element/repeatingAnnotations/RepeatableOfficialContainerInheritedTest.java
--- a/test/langtools/tools/javac/processing/model/element/repeatingAnnotations/RepeatableOfficialContainerInheritedTest.java
+++ b/test/langtools/tools/javac/processing/model/element/repeatingAnnotations/RepeatableOfficialContainerInheritedTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2013, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2013, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -33,20 +33,20 @@
  * @build   JavacTestingAbstractProcessor ElementRepAnnoTester
  * @compile -processor ElementRepAnnoTester -proc:only
  * RepeatableOfficialContainerInheritedTest.java
  */
 
-@BarInheritedContainer(value = {@BarInherited(value = 1)})
-@BarInheritedContainer(value = {@BarInherited(value = 2)})
+@BarInheritedContainer({@BarInherited(1)})
+@BarInheritedContainer({@BarInherited(2)})
 class O {}
 
 @ExpectedBase(
         value = BarInheritedContainer.class,
         getAnnotation = "null",
         getAnnotationsByType = {
-            "@BarInheritedContainer(value={@BarInherited(value=1)})",
-            "@BarInheritedContainer(value={@BarInherited(value=2)})"
+            "@BarInheritedContainer({@BarInherited(1)})",
+            "@BarInheritedContainer({@BarInherited(2)})"
         },
         getAllAnnotationMirrors = {
             "@BarInheritedContainerContainer("
                 + "{@BarInheritedContainer({@BarInherited(1)}),"
                 + " @BarInheritedContainer({@BarInherited(2)})})",
@@ -58,11 +58,11 @@
             "ExpectedContainer"
         })
 @ExpectedContainer(
         value = BarInheritedContainerContainer.class,
         getAnnotation = "@BarInheritedContainerContainer("
-        + "value={@BarInheritedContainer(value={@BarInherited(value=1)}),"
-        + " @BarInheritedContainer(value={@BarInherited(value=2)})})",
+        + "{@BarInheritedContainer({@BarInherited(1)}),"
+        + " @BarInheritedContainer({@BarInherited(2)})})",
         getAnnotationsByType = {"@BarInheritedContainerContainer("
-                + "value={@BarInheritedContainer(value={@BarInherited(value=1)}),"
-        + " @BarInheritedContainer(value={@BarInherited(value=2)})})"})
+                + "{@BarInheritedContainer({@BarInherited(1)}),"
+        + " @BarInheritedContainer({@BarInherited(2)})})"})
 class RepeatableOfficialContainerInheritedTest extends O {}
