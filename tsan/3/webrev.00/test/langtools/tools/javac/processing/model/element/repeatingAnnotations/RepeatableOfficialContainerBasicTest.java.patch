diff a/test/langtools/tools/javac/processing/model/element/repeatingAnnotations/RepeatableOfficialContainerBasicTest.java b/test/langtools/tools/javac/processing/model/element/repeatingAnnotations/RepeatableOfficialContainerBasicTest.java
--- a/test/langtools/tools/javac/processing/model/element/repeatingAnnotations/RepeatableOfficialContainerBasicTest.java
+++ b/test/langtools/tools/javac/processing/model/element/repeatingAnnotations/RepeatableOfficialContainerBasicTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2013, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2013, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -50,14 +50,14 @@
         })
 @ExpectedContainer(
         value = BarContainer.class,
         getAnnotation = "null",
         getAnnotationsByType = {
-            "@BarContainer(value={@Bar(value=1)})",
-            "@BarContainer(value={@Bar(value=2)})"})
-@BarContainer(value = {@Bar(value = 1)})
-@BarContainer(value = {@Bar(value = 2)})
+            "@BarContainer({@Bar(1)})",
+            "@BarContainer({@Bar(2)})"})
+@BarContainer({@Bar(1)})
+@BarContainer({@Bar(2)})
 class RepeatableOfficialContainerBasicTest {
 
     @ExpectedBase(
             value = Bar.class,
             getAnnotation = "null",
@@ -74,14 +74,14 @@
             })
     @ExpectedContainer(
             value = BarContainer.class,
             getAnnotation = "null",
             getAnnotationsByType = {
-                "@BarContainer(value={@Bar(value=1)})",
-                "@BarContainer(value={@Bar(value=2)})"})
-    @BarContainer(value = {@Bar(value = 1)})
-    @BarContainer(value = {@Bar(value = 2)})
+                "@BarContainer({@Bar(1)})",
+                "@BarContainer({@Bar(2)})"})
+    @BarContainer({@Bar(1)})
+    @BarContainer({@Bar(2)})
     int testField = 0;
 
     @ExpectedBase(
             value = Bar.class,
             getAnnotation = "null",
@@ -98,11 +98,11 @@
             })
     @ExpectedContainer(
             value = BarContainer.class,
             getAnnotation = "null",
             getAnnotationsByType = {
-                "@BarContainer(value={@Bar(value=1)})",
-                "@BarContainer(value={@Bar(value=2)})"})
-    @BarContainer(value = {@Bar(value = 1)})
-    @BarContainer(value = {@Bar(value = 2)})
+                "@BarContainer({@Bar(1)})",
+                "@BarContainer({@Bar(2)})"})
+    @BarContainer({@Bar(1)})
+    @BarContainer({@Bar(2)})
     void testMethod() {}
 }
