diff a/test/langtools/tools/javac/versions/Versions.java b/test/langtools/tools/javac/versions/Versions.java
--- a/test/langtools/tools/javac/versions/Versions.java
+++ b/test/langtools/tools/javac/versions/Versions.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2014, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2014, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -67,22 +67,24 @@
 
     public static final Set<String> RETIRED_SOURCES =
         Set.of("1.2", "1.3", "1.4", "1.5", "1.6");
 
     public static final Set<String> VALID_SOURCES =
-        Set.of("1.7", "1.8", "1.9", "1.10", "11", "12", "13");
+        Set.of("1.7", "1.8", "1.9", "1.10", "11", "12", "13", "14", "15");
 
-    public static final String LATEST_MAJOR_VERSION = "57.0";
+    public static final String LATEST_MAJOR_VERSION = "59.0";
 
     static enum SourceTarget {
         SEVEN(true,   "51.0",  "7", Versions::checksrc17),
         EIGHT(true,   "52.0",  "8", Versions::checksrc18),
         NINE(true,    "53.0",  "9", Versions::checksrc19),
         TEN(true,     "54.0", "10", Versions::checksrc110),
         ELEVEN(false, "55.0", "11", Versions::checksrc111),
         TWELVE(false, "56.0", "12", Versions::checksrc112),
-        THIRTEEN(false, "57.0", "13", Versions::checksrc113);
+        THIRTEEN(false, "57.0", "13", Versions::checksrc113),
+        FOURTEEN(false, "58.0", "14", Versions::checksrc114),
+        FIFTEEN(false,  "59.0", "15", Versions::checksrc115);
 
         private final boolean dotOne;
         private final String classFileVer;
         private final String target;
         private final BiConsumer<Versions, String[]> checker;
@@ -297,10 +299,20 @@
     protected void checksrc113(String... args) {
         printargs("checksrc113", args);
         checksrc111(args);
     }
 
+    protected void checksrc114(String... args) {
+        printargs("checksrc114", args);
+        checksrc111(args);
+    }
+
+    protected void checksrc115(String... args) {
+        printargs("checksrc115", args);
+        checksrc111(args);
+    }
+
     protected void pass(String... args) {
         printargs("pass", args);
 
         List<String> jcargs = new ArrayList<String>();
         jcargs.add("-Xlint:-options");
