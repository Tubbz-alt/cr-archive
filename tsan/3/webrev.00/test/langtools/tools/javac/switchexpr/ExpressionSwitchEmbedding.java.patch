diff a/test/langtools/tools/javac/switchexpr/ExpressionSwitchEmbedding.java b/test/langtools/tools/javac/switchexpr/ExpressionSwitchEmbedding.java
--- a/test/langtools/tools/javac/switchexpr/ExpressionSwitchEmbedding.java
+++ b/test/langtools/tools/javac/switchexpr/ExpressionSwitchEmbedding.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2018, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2018, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -21,14 +21,14 @@
  * questions.
  */
 
 /*
  * @test
- * @bug 8214031 8214114
+ * @bug 8214031 8214114 8236546
  * @summary Verify switch expressions embedded in various statements work properly.
- * @compile --enable-preview -source ${jdk.version} ExpressionSwitchEmbedding.java
- * @run main/othervm --enable-preview ExpressionSwitchEmbedding
+ * @compile ExpressionSwitchEmbedding.java
+ * @run main ExpressionSwitchEmbedding
  */
 
 public class ExpressionSwitchEmbedding {
     public static void main(String... args) {
         new ExpressionSwitchEmbedding().run();
@@ -37,23 +37,23 @@
     private void run() {
         {
             int i = 6;
             int o = 0;
             while (switch (i) {
-                case 1: i = 0; break true;
-                case 2: i = 1; break true;
+                case 1: i = 0; yield true;
+                case 2: i = 1; yield true;
                 case 3, 4: i--;
                     if (i == 2 || i == 4) {
-                        break switch (i) {
+                        yield switch (i) {
                             case 2 -> true;
                             case 4 -> false;
                             default -> throw new IllegalStateException();
                         };
                     } else {
-                        break true;
+                        yield true;
                     }
-                default: i--; break switch (i) {
+                default: i--; yield switch (i) {
                     case -1 -> false;
                     case 3 -> true;
                     default -> true;
                 };
             }) {
@@ -65,37 +65,37 @@
         }
         {
             int i = 6;
             int o = 0;
             while (switch (i) {
-                case 1: try { new ExpressionSwitchEmbedding().throwException(); } catch (Throwable t) { i = 0; break true; }
-                case 2: try { new ExpressionSwitchEmbedding().throwException(); } catch (Throwable t) { i = 1; break true; }
+                case 1: try { new ExpressionSwitchEmbedding().throwException(); } catch (Throwable t) { i = 0; yield true; }
+                case 2: try { new ExpressionSwitchEmbedding().throwException(); } catch (Throwable t) { i = 1; yield true; }
                 case 3, 4:
                     try {
                         new ExpressionSwitchEmbedding().throwException();
                     } catch (Throwable t) {
                         i--;
                         if (i == 2 || i == 4) {
                             try {
-                                break switch (i) {
+                                yield switch (i) {
                                     case 2 -> throw new ResultException(true);
                                     case 4 -> false;
                                     default -> throw new IllegalStateException();
                                 };
                             } catch (ResultException ex) {
-                                break ex.result;
+                                yield ex.result;
                             }
                         } else {
-                            break true;
+                            yield true;
                         }
                     }
                 default:
                     try {
                         new ExpressionSwitchEmbedding().throwException();
                     } catch (Throwable t) {
                         i--;
-                        break switch (i) {
+                        yield switch (i) {
                             case -1 -> false;
                             case 3 -> true;
                             default -> true;
                         };
                     }
@@ -109,23 +109,23 @@
         }
         {
             int i = 6;
             int o = 0;
             if (switch (i) {
-                case 1: i = 0; break true;
-                case 2: i = 1; break true;
+                case 1: i = 0; yield true;
+                case 2: i = 1; yield true;
                 case 3, 4: i--;
                     if (i == 2 || i == 4) {
-                        break (switch (i) {
+                        yield (switch (i) {
                             case 2 -> 3;
                             case 4 -> 5;
                             default -> throw new IllegalStateException();
                         }) == i + 1;
                     } else {
-                        break true;
+                        yield true;
                     }
-                default: i--; break switch (i) {
+                default: i--; yield switch (i) {
                     case -1 -> false;
                     case 3 -> true;
                     default -> true;
                 };
             }) {
@@ -137,37 +137,37 @@
         }
         {
             int i = 6;
             int o = 0;
             if (switch (i) {
-                case 1: try { new ExpressionSwitchEmbedding().throwException(); } catch (Throwable t) { i = 0; break true; }
-                case 2: try { new ExpressionSwitchEmbedding().throwException(); } catch (Throwable t) { i = 1; break true; }
+                case 1: try { new ExpressionSwitchEmbedding().throwException(); } catch (Throwable t) { i = 0; yield true; }
+                case 2: try { new ExpressionSwitchEmbedding().throwException(); } catch (Throwable t) { i = 1; yield true; }
                 case 3, 4:
                     try {
                         new ExpressionSwitchEmbedding().throwException();
                     } catch (Throwable t) {
                         i--;
                         if (i == 2 || i == 4) {
                             try {
-                                break switch (i) {
+                                yield switch (i) {
                                     case 2 -> throw new ResultException(true);
                                     case 4 -> false;
                                     default -> throw new IllegalStateException();
                                 };
                             } catch (ResultException ex) {
-                                break ex.result;
+                                yield ex.result;
                             }
                         } else {
-                            break true;
+                            yield true;
                         }
                     }
                 default:
                     try {
                         new ExpressionSwitchEmbedding().throwException();
                     } catch (Throwable t) {
                         i--;
-                        break switch (i) {
+                        yield switch (i) {
                             case -1 -> false;
                             case 3 -> true;
                             default -> true;
                         };
                     }
@@ -180,23 +180,23 @@
             }
         }
         {
             int o = 0;
             for (int i = 6; (switch (i) {
-                case 1: i = 0; break true;
-                case 2: i = 1; break true;
+                case 1: i = 0; yield true;
+                case 2: i = 1; yield true;
                 case 3, 4: i--;
                     if (i == 2 || i == 4) {
-                        break switch (i) {
+                        yield switch (i) {
                             case 2 -> true;
                             case 4 -> false;
                             default -> throw new IllegalStateException();
                         };
                     } else {
-                        break true;
+                        yield true;
                     }
-                default: i--; break switch (i) {
+                default: i--; yield switch (i) {
                     case -1 -> false;
                     case 3 -> true;
                     default -> true;
                 };
             }); ) {
@@ -207,37 +207,37 @@
             }
         }
         {
             int o = 0;
             for (int i = 6; (switch (i) {
-                case 1: try { new ExpressionSwitchEmbedding().throwException(); } catch (Throwable t) { i = 0; break true; }
-                case 2: try { new ExpressionSwitchEmbedding().throwException(); } catch (Throwable t) { i = 1; break true; }
+                case 1: try { new ExpressionSwitchEmbedding().throwException(); } catch (Throwable t) { i = 0; yield true; }
+                case 2: try { new ExpressionSwitchEmbedding().throwException(); } catch (Throwable t) { i = 1; yield true; }
                 case 3, 4:
                     try {
                         new ExpressionSwitchEmbedding().throwException();
                     } catch (Throwable t) {
                         i--;
                         if (i == 2 || i == 4) {
                             try {
-                                break switch (i) {
+                                yield switch (i) {
                                     case 2 -> throw new ResultException(true);
                                     case 4 -> false;
                                     default -> throw new IllegalStateException();
                                 };
                             } catch (ResultException ex) {
-                                break ex.result;
+                                yield ex.result;
                             }
                         } else {
-                            break true;
+                            yield true;
                         }
                     }
                 default:
                     try {
                         new ExpressionSwitchEmbedding().throwException();
                     } catch (Throwable t) {
                         i--;
-                        break switch (i) {
+                        yield switch (i) {
                             case -1 -> false;
                             case 3 -> true;
                             default -> true;
                         };
                     }
@@ -253,23 +253,23 @@
             int i = 6;
             int o = 0;
             do {
                 o++;
             } while (switch (i) {
-                case 1: i = 0; break true;
-                case 2: i = 1; break true;
+                case 1: i = 0; yield true;
+                case 2: i = 1; yield true;
                 case 3, 4: i--;
                     if (i == 2 || i == 4) {
-                        break switch (i) {
+                        yield switch (i) {
                             case 2 -> true;
                             case 4 -> false;
                             default -> throw new IllegalStateException();
                         };
                     } else {
-                        break true;
+                        yield true;
                     }
-                default: i--; break switch (i) {
+                default: i--; yield switch (i) {
                     case -1 -> false;
                     case 3 -> true;
                     default -> true;
                 };
             });
@@ -281,37 +281,37 @@
             int i = 6;
             int o = 0;
             do {
                 o++;
             } while (switch (i) {
-                case 1: try { new ExpressionSwitchEmbedding().throwException(); } catch (Throwable t) { i = 0; break true; }
-                case 2: try { new ExpressionSwitchEmbedding().throwException(); } catch (Throwable t) { i = 1; break true; }
+                case 1: try { new ExpressionSwitchEmbedding().throwException(); } catch (Throwable t) { i = 0; yield true; }
+                case 2: try { new ExpressionSwitchEmbedding().throwException(); } catch (Throwable t) { i = 1; yield true; }
                 case 3, 4:
                     try {
                         new ExpressionSwitchEmbedding().throwException();
                     } catch (Throwable t) {
                         i--;
                         if (i == 2 || i == 4) {
                             try {
-                                break switch (i) {
+                                yield switch (i) {
                                     case 2 -> throw new ResultException(true);
                                     case 4 -> false;
                                     default -> throw new IllegalStateException();
                                 };
                             } catch (ResultException ex) {
-                                break ex.result;
+                                yield ex.result;
                             }
                         } else {
-                            break true;
+                            yield true;
                         }
                     }
                 default:
                     try {
                         new ExpressionSwitchEmbedding().throwException();
                     } catch (Throwable t) {
                         i--;
-                        break switch (i) {
+                        yield switch (i) {
                             case -1 -> false;
                             case 3 -> true;
                             default -> true;
                         };
                     }
@@ -319,10 +319,17 @@
             });
             if (o != 6 && i >= 0) {
                 throw new IllegalStateException();
             }
         }
+        {
+            String s = "";
+            Object o = switch (s) { default -> s != null && s == s; };
+            if (!(Boolean) o) {
+                throw new IllegalStateException();
+            }
+        }
     }
 
     private void throwException() {
         throw new RuntimeException();
     }
