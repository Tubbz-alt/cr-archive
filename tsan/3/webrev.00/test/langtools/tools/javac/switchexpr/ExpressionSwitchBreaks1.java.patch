diff a/test/langtools/tools/javac/switchexpr/ExpressionSwitchBreaks1.java b/test/langtools/tools/javac/switchexpr/ExpressionSwitchBreaks1.java
--- a/test/langtools/tools/javac/switchexpr/ExpressionSwitchBreaks1.java
+++ b/test/langtools/tools/javac/switchexpr/ExpressionSwitchBreaks1.java
@@ -23,12 +23,12 @@
 
 /*
  * @test
  * @bug 8206986
  * @summary Verify behavior of various kinds of breaks.
- * @compile --enable-preview -source ${jdk.version} ExpressionSwitchBreaks1.java
- * @run main/othervm --enable-preview ExpressionSwitchBreaks1
+ * @compile ExpressionSwitchBreaks1.java
+ * @run main ExpressionSwitchBreaks1
  */
 
 import java.util.Objects;
 import java.util.function.Supplier;
 
@@ -56,15 +56,15 @@
     private String print1(int i, int j) {
         switch (i) {
             case 0:
                 return switch (j) {
                     case 0:
-                        if (true) break "0-0";
+                        if (true) yield "0-0";
                     case 1:
-                        break "0-1";
+                        yield "0-1";
                     default:
-                        break "0-X";
+                        yield "0-X";
                 };
             default: return "X";
         }
     }
 
@@ -88,25 +88,25 @@
                         break;
                     default:
                         r = "0-X";
                         break;
                 }
-                break r;
+                yield r;
             case 1:
-                break "1";
+                yield "1";
             case 2:
                 LOP: while (j-- > 0) {
                     if (k == 5) {
                         k--;
                         continue;
                     }
                     break LOP;
                 }
                 Supplier<String> getter = () -> { return "2-X-5"; };
-                break getter.get();
+                yield getter.get();
             default:
-                break "X";
+                yield "X";
         };
     }
 
     private void check(String result, String expected) {
         if (!Objects.equals(result, expected)) {
