diff a/test/langtools/lib/combo/tools/javac/combo/Diagnostics.java b/test/langtools/lib/combo/tools/javac/combo/Diagnostics.java
--- a/test/langtools/lib/combo/tools/javac/combo/Diagnostics.java
+++ b/test/langtools/lib/combo/tools/javac/combo/Diagnostics.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2013, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -37,20 +37,19 @@
  * @author Brian Goetz
 */
 public class Diagnostics implements javax.tools.DiagnosticListener<JavaFileObject> {
 
     protected List<Diagnostic<? extends JavaFileObject>> diags = new ArrayList<>();
-    protected boolean foundErrors = false;
 
     public void report(Diagnostic<? extends JavaFileObject> diagnostic) {
         diags.add(diagnostic);
-        foundErrors = foundErrors || diagnostic.getKind() == Diagnostic.Kind.ERROR;
     }
 
     /** Were there any errors found? */
     public boolean errorsFound() {
-        return foundErrors;
+        return diags.stream()
+                    .anyMatch(d -> d.getKind() == Diagnostic.Kind.ERROR);
     }
 
     /** Get all diagnostic keys */
     public List<String> keys() {
         return diags.stream()
@@ -83,8 +82,7 @@
     public String toString() { return keys().toString(); }
 
     /** Clear all diagnostic state */
     public void reset() {
         diags.clear();
-        foundErrors = false;
     }
 }
