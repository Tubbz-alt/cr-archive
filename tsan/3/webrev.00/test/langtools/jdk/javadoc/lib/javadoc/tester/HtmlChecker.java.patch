diff a/test/langtools/jdk/javadoc/lib/javadoc/tester/HtmlChecker.java b/test/langtools/jdk/javadoc/lib/javadoc/tester/HtmlChecker.java
--- a/test/langtools/jdk/javadoc/lib/javadoc/tester/HtmlChecker.java
+++ b/test/langtools/jdk/javadoc/lib/javadoc/tester/HtmlChecker.java
@@ -41,19 +41,19 @@
 
     protected Path currFile;
     protected int files;
     protected int errors;
 
-    HtmlChecker(PrintStream out, Function<Path,String> fileReader) {
+    protected HtmlChecker(PrintStream out, Function<Path,String> fileReader) {
         super(out, fileReader);
     }
 
-    void checkDirectory(Path dir) throws IOException {
+    public void checkDirectory(Path dir) throws IOException {
         checkFiles(List.of(dir), false, Collections.emptySet());
     }
 
-    void checkFiles(List<Path> files, boolean skipSubdirs, Set<Path> excludeFiles) throws IOException {
+    public void checkFiles(List<Path> files, boolean skipSubdirs, Set<Path> excludeFiles) throws IOException {
         for (Path file : files) {
             Files.walkFileTree(file, new SimpleFileVisitor<Path>() {
                 int depth = 0;
 
                 @Override
@@ -84,23 +84,23 @@
                 }
             });
         }
     }
 
-    void checkFile(Path file) {
+    protected void checkFile(Path file) {
         try {
             currFile = file.toAbsolutePath().normalize();
             read(file);
             files++;
         } catch (IOException e) {
             error(file, 0, e);
         }
     }
 
-    abstract void report();
+    protected abstract void report();
 
-    int getErrorCount() {
+    protected int getErrorCount() {
         return errors;
     }
 
     @Override
     protected void error(Path file, int lineNumber, String message) {
