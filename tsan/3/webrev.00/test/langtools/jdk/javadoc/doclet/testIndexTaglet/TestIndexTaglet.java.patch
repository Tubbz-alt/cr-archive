diff a/test/langtools/jdk/javadoc/doclet/testIndexTaglet/TestIndexTaglet.java b/test/langtools/jdk/javadoc/doclet/testIndexTaglet/TestIndexTaglet.java
--- a/test/langtools/jdk/javadoc/doclet/testIndexTaglet/TestIndexTaglet.java
+++ b/test/langtools/jdk/javadoc/doclet/testIndexTaglet/TestIndexTaglet.java
@@ -45,11 +45,11 @@
 
     final ToolBox tb;
 
     public static void main(String... args) throws Exception {
         TestIndexTaglet tester = new TestIndexTaglet();
-        tester.runTests(m -> new Object[]{Paths.get(m.getName())});
+        tester.runTests(m -> new Object[] { Paths.get(m.getName()) });
     }
 
     TestIndexTaglet() {
         tb = new ToolBox();
     }
@@ -73,13 +73,13 @@
                 "pkg");
 
         checkExit(Exit.OK);
 
         checkOrder("pkg/A.html",
-                "<h2>Method Detail</h2>\n",
-                "<div class=\"block\">test description with <a id=\"search_phrase_a\" "
-                 +    "class=\"searchTagResult\">search_phrase_a</a></div>");
+                "<h2>Method Details</h2>\n",
+                "<div class=\"block\">test description with <span id=\"search_phrase_a\" "
+                 +    "class=\"searchTagResult\">search_phrase_a</span></div>");
 
         checkOrder("pkg/A.html",
                 "<h2>Method Summary</h2>\n",
                 "<div class=\"block\">test description with search_phrase_a</div>");
     }
@@ -102,6 +102,29 @@
         checkExit(Exit.OK);
 
         checkOutput(Output.OUT, true,
                 "warning: {@index} tag, which expands to <a>, within <a>");
     }
+
+    @Test
+    public void testDuplicateReferences(Path base) throws Exception {
+        Path srcDir = base.resolve("src");
+        Path outDir = base.resolve("out");
+
+        new ClassBuilder(tb, "pkg.A")
+                .setModifiers("public", "class")
+                .setComments("This is a class. Here is {@index foo first}.")
+                .addMembers(MethodBuilder.parse("public void m() {}")
+                        .setComments("This is a method. Here is {@index foo second}."))
+                .write(srcDir);
+
+        javadoc("-d", outDir.toString(),
+                "-sourcepath", srcDir.toString(),
+                "pkg");
+
+        checkExit(Exit.OK);
+
+        checkOutput("pkg/A.html", true,
+                "This is a class. Here is <span id=\"foo\" class=\"searchTagResult\">foo</span>.",
+                "This is a method. Here is <span id=\"foo-1\" class=\"searchTagResult\">foo</span>.");
+    }
 }
