diff a/test/langtools/jdk/javadoc/tool/TestScriptInComment.java b/test/langtools/jdk/javadoc/tool/TestScriptInComment.java
--- a/test/langtools/jdk/javadoc/tool/TestScriptInComment.java
+++ b/test/langtools/jdk/javadoc/tool/TestScriptInComment.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2016, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2016, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -21,11 +21,11 @@
  * questions.
  */
 
 /**
  * @test
- * @bug 8138725
+ * @bug 8138725 8226765
  * @summary test --allow-script-in-comments
  * @modules jdk.javadoc/jdk.javadoc.internal.tool
  */
 
 import java.io.File;
@@ -61,10 +61,14 @@
         LC("<script>#ALERT</script>", true), // script tag in Lower Case
         UC("<SCRIPT>#ALERT</script>", true), // script tag in Upper Case
         WS("< script >#ALERT</script>", false, "-Xdoclint:none"), // script tag with invalid white space
         SP("<script src=\"file\"> #ALERT </script>", true), // script tag with an attribute
         ON("<a onclick='#ALERT'>x</a>", true), // event handler attribute
+        OME("<img alt='1' onmouseenter='#ALERT'>", true), // onmouseenter event handler attribute
+        OML("<img alt='1' onmouseleave='#ALERT'>", true), // onmouseleave event handler attribute
+        OFI("<a href='#' onfocusin='#ALERT'>x</a>", true), // onfocusin event handler attribute
+        OBE("<a onbogusevent='#ALERT'>x</a>", true), // bogus/future event handler attribute
         URI("<a href='javascript:#ALERT'>x</a>", true); // javascript URI
 
         /**
          * Creates an HTML fragment to be injected into a template.
          * @param text the HTML fragment to put into a doc comment or option.
@@ -238,11 +242,10 @@
         List<String> opts = new ArrayList<String>();
         opts.add("-sourcepath");
         opts.add(srcDir.getPath());
         opts.add("-d");
         opts.add(outDir.getPath());
-        opts.add("--frames");
         if (option.text != null)
             opts.add(option.text);
         for (String opt: template.getOpts(srcDir)) {
             opts.add(opt.replace("#COMMENT", comment.text.replace("#ALERT", alert)));
         }
