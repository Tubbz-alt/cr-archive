diff a/test/langtools/jdk/javadoc/tool/modules/ModuleTestBase.java b/test/langtools/jdk/javadoc/tool/modules/ModuleTestBase.java
--- a/test/langtools/jdk/javadoc/tool/modules/ModuleTestBase.java
+++ b/test/langtools/jdk/javadoc/tool/modules/ModuleTestBase.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2016, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2016, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -39,11 +39,11 @@
 import javax.lang.model.element.ElementKind;
 import javax.lang.model.element.ModuleElement;
 import javax.lang.model.element.PackageElement;
 import javax.lang.model.element.TypeElement;
 import javax.lang.model.util.ElementFilter;
-import javax.lang.model.util.SimpleElementVisitor9;
+import javax.lang.model.util.SimpleElementVisitor14;
 
 import jdk.javadoc.doclet.Doclet;
 import jdk.javadoc.doclet.DocletEnvironment;
 import jdk.javadoc.doclet.Reporter;
 
@@ -299,11 +299,11 @@
 
         // csv style output, for simple regex verification
         void printDataSet(String header, Set<? extends Element> set) {
             for (Element e : set) {
                 ps.print(header);
-                new SimpleElementVisitor9<Void, Void>() {
+                new SimpleElementVisitor14<Void, Void>() {
                     @Override
                     public Void visitModule(ModuleElement e, Void p) {
                         ps.print(FS);
                         ps.print(e.getKind());
                         ps.print(FS);
@@ -345,11 +345,11 @@
                     }
 
                     @Override
                     protected Void defaultAction(Element e, Void p) {
                         Element encl = e.getEnclosingElement();
-                        CharSequence fqn = new SimpleElementVisitor9<CharSequence, Void>() {
+                        CharSequence fqn = new SimpleElementVisitor14<CharSequence, Void>() {
                             @Override
                             public CharSequence visitModule(ModuleElement e, Void p) {
                                 return e.getQualifiedName();
                             }
 
