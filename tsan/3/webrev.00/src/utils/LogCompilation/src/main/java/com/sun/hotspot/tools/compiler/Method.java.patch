diff a/src/utils/LogCompilation/src/main/java/com/sun/hotspot/tools/compiler/Method.java b/src/utils/LogCompilation/src/main/java/com/sun/hotspot/tools/compiler/Method.java
--- a/src/utils/LogCompilation/src/main/java/com/sun/hotspot/tools/compiler/Method.java
+++ b/src/utils/LogCompilation/src/main/java/com/sun/hotspot/tools/compiler/Method.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2009, 2015, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2009, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -68,10 +68,20 @@
      * The method's flags, in the form of a {@code String} representing the
      * {@code int} encoding them.
      */
     private String flags;
 
+    /**
+     * The name of the compiler performing this compilation.
+     */
+    private String compiler;
+
+    /**
+     * The nmethod's compilation level.
+     */
+    private long level;
+
     /**
      * Decode the {@link flags} numerical string to a format for console
      * output. The result does not honour all possible flags but includes
      * information about OSR compilation.
      *
@@ -184,6 +194,35 @@
     }
 
     public int hashCode() {
         return holder.hashCode() ^ name.hashCode();
     }
+
+    /**
+     * @return the compiler
+     */
+    public String getCompiler() {
+        return compiler;
+    }
+
+    /**
+     * @param compiler the compiler to set
+     */
+    public void setCompiler(String compiler) {
+        this.compiler = compiler;
+    }
+
+    /**
+     * @return the level
+     */
+    public long getLevel() {
+        return level;
+    }
+
+    /**
+     * @param level the level to set
+     */
+    public void setLevel(long level) {
+        assert this.level == 0 || this.level == level;
+        this.level = level;
+    }
 }
