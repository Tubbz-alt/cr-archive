diff a/src/java.compiler/share/classes/javax/annotation/processing/Filer.java b/src/java.compiler/share/classes/javax/annotation/processing/Filer.java
--- a/src/java.compiler/share/classes/javax/annotation/processing/Filer.java
+++ b/src/java.compiler/share/classes/javax/annotation/processing/Filer.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2005, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2005, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -58,11 +58,11 @@
  * and writing resources take a relative name argument.  A relative
  * name is a non-null, non-empty sequence of path segments separated
  * by {@code '/'}; {@code '.'} and {@code '..'} are invalid path
  * segments.  A valid relative name must match the
  * &quot;path-rootless&quot; rule of <a
- * href="http://www.ietf.org/html/rfc3986.txt">RFC 3986</a>, section
+ * href="http://www.ietf.org/rfc/rfc3986.txt">RFC&nbsp;3986</a>, section
  * 3.3.
  *
  * <p>The file creation methods take a variable number of arguments to
  * allow the <em>originating elements</em> to be provided as hints to
  * the tool infrastructure to better manage dependencies.  The
@@ -111,11 +111,11 @@
  * invoker of the annotation processing tool must not knowingly
  * configure the tool such that the discovered processors will attempt
  * to overwrite existing files that were not generated.
  *
  * <p> Processors can indicate a source or class file is generated by
- * including a {@code javax.annotation.Generated} annotation if the
+ * including a {@link javax.annotation.processing.Generated} annotation if the
  * environment is configured so that that type is accessible.
  *
  * @apiNote Some of the effect of overwriting a file can be
  * achieved by using a <i>decorator</i>-style pattern.  Instead of
  * modifying a class directly, the class is designed so that either
