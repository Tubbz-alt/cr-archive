diff a/src/java.compiler/share/classes/javax/lang/model/util/ElementScanner6.java b/src/java.compiler/share/classes/javax/lang/model/util/ElementScanner6.java
--- a/src/java.compiler/share/classes/javax/lang/model/util/ElementScanner6.java
+++ b/src/java.compiler/share/classes/javax/lang/model/util/ElementScanner6.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2005, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2005, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -89,10 +89,11 @@
  * @author Peter von der Ah&eacute;
  *
  * @see ElementScanner7
  * @see ElementScanner8
  * @see ElementScanner9
+ * @see ElementScanner14
  * @since 1.6
  */
 @SupportedSourceVersion(RELEASE_6)
 public class ElementScanner6<R, P> extends AbstractElementVisitor6<R, P> {
     /**
@@ -178,10 +179,14 @@
 
     /**
      * {@inheritDoc}
      *
      * @implSpec This implementation scans the enclosed elements.
+     * Note that type parameters are <em>not</em> scanned by this
+     * implementation since type parameters are not considered to be
+     * {@linkplain TypeElement#getEnclosedElements enclosed elements
+     * of a type}.
      *
      * @param e  {@inheritDoc}
      * @param p  {@inheritDoc}
      * @return the result of scanning
      */
@@ -209,10 +214,12 @@
 
     /**
      * {@inheritDoc}
      *
      * @implSpec This implementation scans the parameters.
+     * Note that type parameters are <em>not</em> scanned by this
+     * implementation.
      *
      * @param e  {@inheritDoc}
      * @param p  {@inheritDoc}
      * @return the result of scanning
      */
