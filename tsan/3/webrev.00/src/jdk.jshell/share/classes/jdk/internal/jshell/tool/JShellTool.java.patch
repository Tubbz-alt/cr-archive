diff a/src/jdk.jshell/share/classes/jdk/internal/jshell/tool/JShellTool.java b/src/jdk.jshell/share/classes/jdk/internal/jshell/tool/JShellTool.java
--- a/src/jdk.jshell/share/classes/jdk/internal/jshell/tool/JShellTool.java
+++ b/src/jdk.jshell/share/classes/jdk/internal/jshell/tool/JShellTool.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2014, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2014, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -3322,10 +3322,13 @@
                     kind = "enum";
                     break;
                 case ANNOTATION_TYPE_SUBKIND:
                     kind = "@interface";
                     break;
+                case RECORD_SUBKIND:
+                    kind = "record";
+                    break;
                 default:
                     assert false : "Wrong kind" + ck.subKind();
                     kind = "class";
                     break;
             }
@@ -3497,10 +3500,14 @@
             }
         }
 
         int pstart = (int) diag.getStartPosition();
         int pend = (int) diag.getEndPosition();
+        if (pstart < 0 || pend < 0) {
+            pstart = 0;
+            pend = source.length();
+        }
         Matcher m = LINEBREAK.matcher(source);
         int pstartl = 0;
         int pendl = -2;
         while (m.find(pstartl)) {
             pendl = m.start();
@@ -3508,11 +3515,11 @@
                 break;
             } else {
                 pstartl = m.end();
             }
         }
-        if (pendl < pstart) {
+        if (pendl < pstartl) {
             pendl = source.length();
         }
         toDisplay.add(source.substring(pstartl, pendl));
 
         StringBuilder sb = new StringBuilder();
@@ -3813,10 +3820,13 @@
                     custom(FormatCase.ENUM, ((TypeDeclSnippet) sn).name());
                     break;
                 case ANNOTATION_TYPE_SUBKIND:
                     custom(FormatCase.ANNOTATION, ((TypeDeclSnippet) sn).name());
                     break;
+                case RECORD_SUBKIND:
+                    custom(FormatCase.RECORD, ((TypeDeclSnippet) sn).name());
+                    break;
                 case METHOD_SUBKIND:
                     custom(FormatCase.METHOD, ((MethodSnippet) sn).name(), ((MethodSnippet) sn).parameterTypes());
                     break;
                 case VAR_DECLARATION_SUBKIND: {
                     VarSnippet vk = (VarSnippet) sn;
