diff a/src/jdk.jshell/share/classes/jdk/internal/jshell/tool/resources/l10n.properties b/src/jdk.jshell/share/classes/jdk/internal/jshell/tool/resources/l10n.properties
--- a/src/jdk.jshell/share/classes/jdk/internal/jshell/tool/resources/l10n.properties
+++ b/src/jdk.jshell/share/classes/jdk/internal/jshell/tool/resources/l10n.properties
@@ -1,7 +1,7 @@
 #
-# Copyright (c) 2016, 2018, Oracle and/or its affiliates. All rights reserved.
+# Copyright (c) 2016, 2020, Oracle and/or its affiliates. All rights reserved.
 # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 #
 # This code is free software; you can redistribute it and/or modify it
 # under the terms of the GNU General Public License version 2 only, as
 # published by the Free Software Foundation.  Oracle designates this
@@ -486,13 +486,13 @@
 help.help =\
 Display information about using the jshell tool.\n\
 /help\n\t\
      List the jshell tool commands and help subjects\n\n\
 /help <command>\n\t\
-     Display information about the specified command. The slash must be included.\n\t\
-     Only the first few letters of the command are needed -- if more than one\n\t\
-     each will be displayed.  Example:  /help /li\n\n\
+     Display information about the specified command.\n\t\
+     Only the first few letters of the command are needed -- if there is more than\n\t\
+     one match, each will be displayed.  Example:  /help /li\n\n\
 /help <subject>\n\t\
      Display information about the specified help subject. Example: /help intro
 
 help.set.summary = set configuration information
 help.set.args = editor|start|feedback|mode|prompt|truncation|format ...
@@ -527,13 +527,13 @@
 help.quest =\
 Display information about using the jshell tool (abbreviation for /help).\n\
 /?\n\t\
      Display list of commands and help subjects\n\
 /? <command>\n\t\
-     Display information about the specified command. The slash must be included.\n\t\
-     Only the first few letters of the command are needed -- if more than one\n\t\
-     match, each will be displayed.  Example:  /? /li\n\
+     Display information about the specified command.\n\t\
+     Only the first few letters of the command are needed -- if there is more than\n\t\
+     one match, each will be displayed.  Example:  /? /li\n\n\
 /? <subject>\n\t\
      Display information about the specified help subject. Example: /? intro
 
 help.bang.summary = rerun last snippet -- see /help rerun
 help.bang.args =
@@ -853,10 +853,11 @@
    import     -- import declaration\n\t\
    class      -- class declaration\n\t\
    interface  -- interface declaration\n\t\
    enum       -- enum declaration\n\t\
    annotation -- annotation interface declaration\n\t\
+   record     -- record declaration\n\t\
    method     -- method declaration -- note: {type}==parameter-types\n\t\
    vardecl    -- variable declaration without init\n\t\
    varinit    -- variable declaration with init\n\t\
    expression -- expression -- note: {name}==scratch-variable-name\n\t\
    varvalue   -- variable value expression\n\t\
@@ -1156,16 +1157,16 @@
 /set format verbose action '  update modified' modified-update    \n\
 /set format verbose action '  update replaced' replaced-update    \n\
 /set format verbose action '  update overwrote' overwrote-update    \n\
 /set format verbose action '  update dropped' dropped-update    \n\
 \n\
-/set format verbose until ', however, it cannot be instantiated or its methods invoked until'   defined-class-primary    \n\
+/set format verbose until ', however, it cannot be instantiated or its methods invoked until'   defined-class,record-primary    \n\
 /set format verbose until ', however, its methods cannot be invoked until'                      defined-interface-primary    \n\
 /set format verbose until ', however, it cannot be used until'                                  defined-enum,annotation-primary    \n\
 /set format verbose until ', however, it cannot be invoked until'                               defined-method-primary    \n\
 /set format verbose until ', however, it cannot be referenced until'                            notdefined-primary    \n\
-/set format verbose until ' which cannot be instantiated or its methods invoked until'          defined-class-update    \n\
+/set format verbose until ' which cannot be instantiated or its methods invoked until'          defined-class,record-update    \n\
 /set format verbose until ' whose methods cannot be invoked until'                              defined-interface-update    \n\
 /set format verbose until ' which cannot be invoked until'                                      defined-method-update    \n\
 /set format verbose until ' which cannot be referenced until'                                   notdefined-update    \n\
 \n\
 /set format verbose unrerr '{unresolved} is declared'                                           unresolved1-error0    \n\
@@ -1181,10 +1182,11 @@
 \n\
 /set format verbose typeKind 'class'                  class    \n\
 /set format verbose typeKind 'interface'              interface    \n\
 /set format verbose typeKind 'enum'                   enum    \n\
 /set format verbose typeKind 'annotation interface'   annotation    \n\
+/set format verbose typeKind 'record'                 record    \n\
 \n\
 /set format verbose result '{name} ==> {value}{post}'                                        added,modified,replaced-ok-primary    \n\
 \n\
 /set format verbose display '{result}{pre}created scratch variable {name} : {type}{post}'    expression-added,modified,replaced-primary    \n\
 /set format verbose display '{result}{pre}value of {name} : {type}{post}'                    varvalue-added,modified,replaced-primary    \n\
@@ -1192,14 +1194,14 @@
 /set format verbose display '{result}{pre}{action} variable {name} : {type}{resolve}{post}'  varinit,vardecl    \n\
 /set format verbose display '{pre}{action} variable {name}{resolve}{post}'                   vardecl,varinit-notdefined    \n\
 /set format verbose display '{pre}{action} variable {name}{post}'                            dropped-vardecl,varinit,expression    \n\
 /set format verbose display '{pre}{action} variable {name}, reset to null{post}'             replaced-vardecl,varinit-ok-update    \n\
 \n\
-/set format verbose display '{pre}{action} {typeKind} {name}{resolve}{post}'                 class,interface,enum,annotation    \n\
+/set format verbose display '{pre}{action} {typeKind} {name}{resolve}{post}'                 class,interface,enum,annotation,record    \n\
 /set format verbose display '{pre}{action} method {name}({type}){resolve}{post}'             method    \n\
 \n\
-/set format verbose display '{pre}attempted to use {typeKind} {name}{resolve}{post}'         used-class,interface,enum,annotation    \n\
+/set format verbose display '{pre}attempted to use {typeKind} {name}{resolve}{post}'         used-class,interface,enum,annotation,record    \n\
 /set format verbose display '{pre}attempted to call method {name}({type}){resolve}{post}'    used-method    \n\
 \n\
 /set truncation verbose 80\n\
 /set truncation verbose 1000                                                                  varvalue,expression\n\
 \n\
@@ -1209,11 +1211,11 @@
 /set format normal display '{result}'                                                       added,modified,replaced-expression,varvalue,assignment,varinit,vardecl-ok-primary    \n\
 /set mode concise -quiet normal    \n\
 \n\
 /set prompt concise 'jshell> '   '   ...> '    \n\
 \n\
-/set format concise display ''                                                              class,interface,enum,annotation,method,assignment,varinit,vardecl-ok    \n\
+/set format concise display ''                                                              class,interface,enum,annotation,record,method,assignment,varinit,vardecl-ok    \n\
 \n\
 /set feedback normal    \n\
 \n\
 /set mode silent -quiet    \n\
 /set prompt silent '-> ' '>> '    \n\
