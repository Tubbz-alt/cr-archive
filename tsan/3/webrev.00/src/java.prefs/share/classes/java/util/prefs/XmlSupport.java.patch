diff a/src/java.prefs/share/classes/java/util/prefs/XmlSupport.java b/src/java.prefs/share/classes/java/util/prefs/XmlSupport.java
--- a/src/java.prefs/share/classes/java/util/prefs/XmlSupport.java
+++ b/src/java.prefs/share/classes/java/util/prefs/XmlSupport.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2002, 2012, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2002, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -32,10 +32,12 @@
 import javax.xml.transform.dom.*;
 import javax.xml.transform.stream.*;
 import org.xml.sax.*;
 import org.w3c.dom.*;
 
+import static java.nio.charset.StandardCharsets.UTF_8;
+
 /**
  * XML Support for java.util.prefs. Methods to import and export preference
  * nodes and subtrees.
  *
  * @author  Josh Bloch and Mark Reinhold
@@ -272,11 +274,11 @@
             t.setOutputProperty(OutputKeys.INDENT, "yes");
             //Transformer resets the "indent" info if the "result" is a StreamResult with
             //an OutputStream object embedded, creating a Writer object on top of that
             //OutputStream object however works.
             t.transform(new DOMSource(doc),
-                        new StreamResult(new BufferedWriter(new OutputStreamWriter(out, "UTF-8"))));
+                        new StreamResult(new BufferedWriter(new OutputStreamWriter(out, UTF_8))));
         } catch(TransformerException e) {
             throw new AssertionError(e);
         }
     }
 
