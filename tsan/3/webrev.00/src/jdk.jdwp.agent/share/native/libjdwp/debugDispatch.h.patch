diff a/src/jdk.jdwp.agent/share/native/libjdwp/debugDispatch.h b/src/jdk.jdwp.agent/share/native/libjdwp/debugDispatch.h
--- a/src/jdk.jdwp.agent/share/native/libjdwp/debugDispatch.h
+++ b/src/jdk.jdwp.agent/share/native/libjdwp/debugDispatch.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1998, 2003, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1998, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -24,10 +24,12 @@
  */
 
 #ifndef JDWP_DEBUGDISPATCH_H
 #define JDWP_DEBUGDISPATCH_H
 
+#include "vm_interface.h"
+
 /*
  * Type of all command handler functions. First argument is the
  * input stream. Second argument is the output sent back to the
  * originator, but only if JNI_TRUE is returned. If JNI_FALSE
  * is returned, no reply is made.
@@ -37,8 +39,27 @@
 
 typedef jboolean (*CommandHandler)(struct PacketInputStream *,
                                   struct PacketOutputStream *);
 void debugDispatch_initialize(void);
 void debugDispatch_reset(void);
-CommandHandler debugDispatch_getHandler(int cmdSet, int cmd) ;
+CommandHandler debugDispatch_getHandler(int cmdSetNum, int cmdNum,
+                                        const char **cmdSetName_p, const char **cmdName_p);
+
+typedef struct Command {
+    CommandHandler cmd_handler;
+    const char *cmd_name;
+} Command;
+
+typedef struct CommandSet {
+    const int num_cmds;
+    const char *cmd_set_name;
+    const Command *cmds;
+} CommandSet;
+
+#define DEBUG_DISPATCH_DEFINE_CMDSET(_name)     \
+CommandSet _name##_CmdSet = {                   \
+    sizeof(_name##_Commands) / sizeof(Command), \
+    #_name,                                     \
+    _name##_Commands                            \
+};
 
 #endif
