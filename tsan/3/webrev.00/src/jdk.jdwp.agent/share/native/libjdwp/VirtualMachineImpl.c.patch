diff a/src/jdk.jdwp.agent/share/native/libjdwp/VirtualMachineImpl.c b/src/jdk.jdwp.agent/share/native/libjdwp/VirtualMachineImpl.c
--- a/src/jdk.jdwp.agent/share/native/libjdwp/VirtualMachineImpl.c
+++ b/src/jdk.jdwp.agent/share/native/libjdwp/VirtualMachineImpl.c
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1998, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1998, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -33,21 +33,23 @@
 #include "threadControl.h"
 #include "SDE.h"
 #include "FrameID.h"
 
 static char *versionName = "Java Debug Wire Protocol (Reference Implementation)";
-static int majorVersion = 11;  /* JDWP major version */
-static int minorVersion = 0;  /* JDWP minor version */
 
 static jboolean
 version(PacketInputStream *in, PacketOutputStream *out)
 {
     char buf[500];
     char *vmName;
     char *vmVersion;
     char *vmInfo;
 
+    /* Now the JDWP versions are the same as JVMTI versions */
+    int majorVersion = jvmtiMajorVersion();
+    int minorVersion = 0;
+
     if (gdata->vmDead) {
         outStream_setError(out, JDWP_ERROR(VM_DEAD));
         return JNI_TRUE;
     }
 
@@ -923,29 +925,31 @@
 {
     eventHelper_releaseEvents();
     return JNI_TRUE;
 }
 
-void *VirtualMachine_Cmds[] = { (void *)22
-    ,(void *)version
-    ,(void *)classesForSignature
-    ,(void *)allClasses
-    ,(void *)getAllThreads
-    ,(void *)topLevelThreadGroups
-    ,(void *)dispose
-    ,(void *)idSizes
-    ,(void *)suspend
-    ,(void *)resume
-    ,(void *)doExit
-    ,(void *)createString
-    ,(void *)capabilities
-    ,(void *)classPaths
-    ,(void *)disposeObjects
-    ,(void *)holdEvents
-    ,(void *)releaseEvents
-    ,(void *)capabilitiesNew
-    ,(void *)redefineClasses
-    ,(void *)setDefaultStratum
-    ,(void *)allClassesWithGeneric
-    ,(void *)instanceCounts
-    ,(void *)allModules
+Command VirtualMachine_Commands[] = {
+    {version, "Version"},
+    {classesForSignature, "ClassesForSignature"},
+    {allClasses, "AllClasses"},
+    {getAllThreads, "GetAllThreads"},
+    {topLevelThreadGroups, "TopLevelThreadGroups"},
+    {dispose, "Dispose"},
+    {idSizes, "IDSizes"},
+    {suspend, "Suspend"},
+    {resume, "Resume"},
+    {doExit, "DoExit"},
+    {createString, "CreateString"},
+    {capabilities, "Capabilities"},
+    {classPaths, "ClassPaths"},
+    {disposeObjects, "DisposeObjects"},
+    {holdEvents, "HoldEvents"},
+    {releaseEvents, "ReleaseEvents"},
+    {capabilitiesNew, "CapabilitiesNew"},
+    {redefineClasses, "RedefineClasses"},
+    {setDefaultStratum, "SetDefaultStratum"},
+    {allClassesWithGeneric, "AllClassesWithGeneric"},
+    {instanceCounts, "InstanceCounts"},
+    {allModules, "AllModules"}
 };
+
+DEBUG_DISPATCH_DEFINE_CMDSET(VirtualMachine)
