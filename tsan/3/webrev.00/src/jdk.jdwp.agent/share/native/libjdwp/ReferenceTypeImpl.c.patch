diff a/src/jdk.jdwp.agent/share/native/libjdwp/ReferenceTypeImpl.c b/src/jdk.jdwp.agent/share/native/libjdwp/ReferenceTypeImpl.c
--- a/src/jdk.jdwp.agent/share/native/libjdwp/ReferenceTypeImpl.c
+++ b/src/jdk.jdwp.agent/share/native/libjdwp/ReferenceTypeImpl.c
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1998, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1998, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -231,12 +231,11 @@
     }
     return JNI_TRUE;
 }
 
 static jboolean
-methods(PacketInputStream *in, PacketOutputStream *out,
-         int outputGenerics)
+methods(PacketInputStream *in, PacketOutputStream *out)
 {
     return methods1(in, out, 0);
 }
 
 static jboolean
@@ -623,26 +622,28 @@
     (void)outStream_writeObjectRef(env, out, clazz);
 
     return JNI_TRUE;
 }
 
-void *ReferenceType_Cmds[] = { (void *)19
-    ,(void *)signature
-    ,(void *)getClassLoader
-    ,(void *)modifiers
-    ,(void *)fields
-    ,(void *)methods
-    ,(void *)getValues
-    ,(void *)sourceFile
-    ,(void *)nestedTypes
-    ,(void *)getClassStatus
-    ,(void *)interfaces
-    ,(void *)classObject
-    ,(void *)sourceDebugExtension
-    ,(void *)signatureWithGeneric
-    ,(void *)fieldsWithGeneric
-    ,(void *)methodsWithGeneric
-    ,(void *)instances
-    ,(void *)getClassVersion
-    ,(void *)getConstantPool
-    ,(void *)getModule
+Command ReferenceType_Commands[] = {
+    {signature, "Signature"},
+    {getClassLoader, "GetClassLoader"},
+    {modifiers, "Modifiers"},
+    {fields, "Fields"},
+    {methods, "Methods"},
+    {getValues, "GetValues"},
+    {sourceFile, "SourceFile"},
+    {nestedTypes, "NestedTypes"},
+    {getClassStatus, "GetClassStatus"},
+    {interfaces, "Interfaces"},
+    {classObject, "ClassObject"},
+    {sourceDebugExtension, "SourceDebugExtension"},
+    {signatureWithGeneric, "SignatureWithGeneric"},
+    {fieldsWithGeneric, "FieldsWithGeneric"},
+    {methodsWithGeneric, "MethodsWithGeneric"},
+    {instances, "Instances"},
+    {getClassVersion, "GetClassVersion"},
+    {getConstantPool, "GetConstantPool"},
+    {getModule, "GetModule"}
 };
+
+DEBUG_DISPATCH_DEFINE_CMDSET(ReferenceType)
