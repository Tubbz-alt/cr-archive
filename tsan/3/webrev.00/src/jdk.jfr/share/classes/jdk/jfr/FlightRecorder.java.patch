diff a/src/jdk.jfr/share/classes/jdk/jfr/FlightRecorder.java b/src/jdk.jfr/share/classes/jdk/jfr/FlightRecorder.java
--- a/src/jdk.jfr/share/classes/jdk/jfr/FlightRecorder.java
+++ b/src/jdk.jfr/share/classes/jdk/jfr/FlightRecorder.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2016, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2016, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -195,11 +195,11 @@
                 Logger.log(JFR, DEBUG, "globalbuffercount: " + Options.getGlobalBufferCount());
                 Logger.log(JFR, DEBUG, "dumppath: " + Options.getDumpPath());
                 Logger.log(JFR, DEBUG, "samplethreads: " + Options.getSampleThreads());
                 Logger.log(JFR, DEBUG, "stackdepth: " + Options.getStackDepth());
                 Logger.log(JFR, DEBUG, "threadbuffersize: " + Options.getThreadBufferSize());
-                Logger.log(JFR, LogLevel.INFO, "Created repository " + Repository.getRepository().getRepositoryPath().toString());
+                Logger.log(JFR, LogLevel.INFO, "Repository base directory: " + Repository.getRepository().getBaseLocation());
                 PlatformRecorder.notifyRecorderInitialized(platformRecorder);
             }
         }
         return platformRecorder;
     }
