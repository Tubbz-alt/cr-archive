diff a/src/hotspot/share/prims/jvmti.xsl b/src/hotspot/share/prims/jvmti.xsl
--- a/src/hotspot/share/prims/jvmti.xsl
+++ b/src/hotspot/share/prims/jvmti.xsl
@@ -1,8 +1,8 @@
-<?xml version="1.0"?> 
+<?xml version="1.0"?>
 <!--
- Copyright (c) 2002, 2018, Oracle and/or its affiliates. All rights reserved.
+ Copyright (c) 2002, 2019, Oracle and/or its affiliates. All rights reserved.
  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 
  This code is free software; you can redistribute it and/or modify it
  under the terms of the GNU General Public License version 2 only, as
  published by the Free Software Foundation.
@@ -18,18 +18,18 @@
  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 
  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
  or visit www.oracle.com if you need additional information or have any
  questions.
-  
+
 -->
 
 <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
 
 <xsl:import href="jvmtiLib.xsl"/>
 
-<xsl:output method="html" indent="yes" 
+<xsl:output method="html" indent="yes"
   doctype-system="about:legacy-compat"/>
 
 <xsl:param name="development"></xsl:param>
 
 <xsl:template match="specification">
@@ -44,132 +44,160 @@
           .centered { text-align: center; }
           .leftAligned { text-align: left; }
           .rightAligned { text-align: right; }
           .bgLight { background-color: #EEEEFF; }
           .bgDark { background-color: #CCCCFF}
-          th { background-color: #EEEEFF; }
-          td.tableHeader {font-size: larger; text-align:center; }
+          th { font-weight: normal; text-align: left; }
           div.sep { height: 10px; }
           div.callbackCtnr { margin: 0 5%; }
           hr { border-width:0; color:gray; background-color:gray; }
           hr.thick { height:3px; }
           hr.thin { height:1px; }
-          table.bordered { border: 1px solid gray; border-spacing: 0; border-collapse: separate; }
-          table.bordered td, table.bordered th { padding: 3px; border: 1px solid black; }
-          table.wide { width: 100%; }
+          table.bordered, div.bordered { border: 2px solid black; border-spacing: 0; border-collapse: collapse; }
+          table.bordered td, table.bordered th, div.bordered div.divTableHead, div.bordered .divTableCell {
+            padding: 3px;
+            border: 2px solid black;
+          }
+          .wide { width: 100%; }
+          table.bordered caption, divCaption {
+            border: 2px solid black;
+            border-bottom-width: 0;
+          }
+          .captionTitle {
+            background-color: #CCCCFF;
+            font-size: larger;
+            text-align:center;
+            padding: 3px;
+          }
+          .captionDescr {
+            border-top: 2px solid black;
+            padding: 3px;
+            text-align: left;
+          }
+          div.divTable { display: table; }
+          <!-- workaround for <div> with border, display: table & width: 100% -->
+          div.wideDivTableCtnr { padding-right: 2px; }
+          div.divTableRow { display: table-row; }
+          div.divTableHead, div.divTableCell { display: table-cell; vertical-align: middle; }
+          div.divTableHead { font-weight: bold; text-align: center; }
+          table.bordered td.noPadding { padding: 0; }
+          div.withPadding { padding: 3px; }
+          div.topBorder { border-top: 2px solid black; }
         </style>
   </head>
   <body>
-    <div class="centered" role="banner">
+    <header class="centered">
       <xsl:apply-templates select="title"/>
-    </div>
-    <ul role="navigation">
-      <li>
-        <a href="#SpecificationIntro"><b>Introduction</b></a>
-        <ul>
-          <xsl:for-each select="intro">
+    </header>
+    <nav>
+      <ul>
+        <li>
+          <a href="#SpecificationIntro"><b>Introduction</b></a>
+          <ul>
+            <xsl:for-each select="intro">
+              <li>
+                <a>
+                  <xsl:attribute name="href">#<xsl:value-of select="@id"/>
+                  </xsl:attribute>
+                  <b><xsl:value-of select="@label"/></b>
+                </a>
+              </li>
+            </xsl:for-each>
+          </ul>
+        </li>
+        <li>
+          <a href="#FunctionSection"><b>Functions</b></a>
+          <ul>
+            <xsl:for-each select="functionsection/intro">
+              <li>
+                <a>
+                  <xsl:attribute name="href">#<xsl:value-of select="@id"/>
+                  </xsl:attribute>
+                  <b><xsl:value-of select="@label"/></b>
+                </a>
+              </li>
+            </xsl:for-each>
             <li>
-              <a>
-                <xsl:attribute name="href">#<xsl:value-of select="@id"/>
-                </xsl:attribute>
-                <b><xsl:value-of select="@label"/></b>
-              </a>
+              <a href="#FunctionIndex"><b>Function Index</b></a>
+              <ul>
+                <xsl:for-each select="functionsection/category">
+                  <li>
+                    <a>
+                      <xsl:attribute name="href">#<xsl:value-of select="@id"/>
+                      </xsl:attribute>
+                      <b><xsl:value-of select="@label"/></b>
+                    </a>
+                  </li>
+                </xsl:for-each>
+              </ul>
             </li>
-          </xsl:for-each>
-        </ul>
-      </li>
-      <li>
-        <a href="#FunctionSection"><b>Functions</b></a>
-        <ul>
-          <xsl:for-each select="functionsection/intro">
+            <li>
+              <a href="#ErrorSection"><b>Error Codes</b></a>
+            </li>
+          </ul>
+        </li>
+        <li>
+          <a href="#EventSection"><b>Events</b></a>
+          <ul>
+            <li>
+              <a href="#EventIndex"><b>Event Index</b></a>
+            </li>
+          </ul>
+        </li>
+        <li>
+          <a href="#DataSection"><b>Data Types</b></a>
+          <ul>
+            <xsl:for-each select="//basetypes">
             <li>
               <a>
-                <xsl:attribute name="href">#<xsl:value-of select="@id"/>
-                </xsl:attribute>
-                <b><xsl:value-of select="@label"/></b>
+                <xsl:attribute name="href">#<xsl:value-of select="@id"/></xsl:attribute>
+                <b>
+                  <xsl:value-of select="@label"/>
+                </b>
               </a>
             </li>
-          </xsl:for-each>
+            </xsl:for-each>
+            <li>
+              <a href="#StructureTypeDefinitions"><b>Structure Type Definitions</b></a>
+            </li>
+            <li>
+              <a href="#FunctionTypeDefinitions"><b>Function Type Definitions</b></a>
+            </li>
+            <li>
+              <a href="#EnumerationDefinitions"><b>Enumeration Definitions</b></a>
+            </li>
+            <li>
+              <a href="#FunctionTable"><b>Function Table</b></a>
+            </li>
+          </ul>
+        </li>
+        <li>
+          <a href="#ConstantIndex"><b>Constant Index</b></a>
+        </li>
+        <xsl:if test="$development = 'Show'">
           <li>
-            <a href="#FunctionIndex"><b>Function Index</b></a>
+            <a href="#SpecificationIssues"><b>Issues</b></a>
             <ul>
-              <xsl:for-each select="functionsection/category">
+              <xsl:for-each select="issuessection/intro">
                 <li>
                   <a>
                     <xsl:attribute name="href">#<xsl:value-of select="@id"/>
                     </xsl:attribute>
                     <b><xsl:value-of select="@label"/></b>
                   </a>
                 </li>
               </xsl:for-each>
             </ul>
           </li>
-          <li>
-            <a href="#ErrorSection"><b>Error Codes</b></a>
-          </li>
-        </ul>
-      </li>
-      <li>
-        <a href="#EventSection"><b>Events</b></a>
-        <ul>
-          <li>
-            <a href="#EventIndex"><b>Event Index</b></a>
-          </li>
-        </ul>
-      </li>
-      <li>
-        <a href="#DataSection"><b>Data Types</b></a>
-        <ul>
-          <xsl:for-each select="//basetypes">   
-          <li>
-            <a>
-              <xsl:attribute name="href">#<xsl:value-of select="@id"/></xsl:attribute>
-              <b>
-                <xsl:value-of select="@label"/>
-              </b>
-            </a>
-          </li>
-          </xsl:for-each>
-          <li>
-            <a href="#StructureTypeDefinitions"><b>Structure Type Definitions</b></a>
-          </li>
-          <li>
-            <a href="#FunctionTypeDefinitions"><b>Function Type Definitions</b></a>
-          </li>
-          <li>
-            <a href="#EnumerationDefinitions"><b>Enumeration Definitions</b></a>
-          </li>
-          <li>
-            <a href="#FunctionTable"><b>Function Table</b></a>
-          </li>
-        </ul>
-      </li>
-      <li>
-        <a href="#ConstantIndex"><b>Constant Index</b></a>
-      </li>
-      <xsl:if test="$development = 'Show'">
+        </xsl:if>
         <li>
-          <a href="#SpecificationIssues"><b>Issues</b></a>
-          <ul>
-            <xsl:for-each select="issuessection/intro">
-              <li>
-                <a>
-                  <xsl:attribute name="href">#<xsl:value-of select="@id"/>
-                  </xsl:attribute>
-                  <b><xsl:value-of select="@label"/></b>
-                </a>
-              </li>
-            </xsl:for-each>
-          </ul>
+          <a href="#ChangeHistory"><b>Change History</b></a>
         </li>
-      </xsl:if>
-      <li>
-        <a href="#ChangeHistory"><b>Change History</b></a>
-      </li>
-    </ul>
+      </ul>
+    </nav>
     <!-- end table of contents, begin body -->
-    <div role="main">
+    <main>
     <div class="sep"/>
     <hr class="thick"/>
     <div class="sep"/>
     <p id="SpecificationIntro"/>
       <xsl:apply-templates select="intro"/>
@@ -201,31 +229,24 @@
       </h2>
       <xsl:apply-templates select="issuessection/intro"/>
     </xsl:if>
     <p id="ChangeHistory"/>
       <xsl:apply-templates select="changehistory"/>
-    </div>
-    <xsl:apply-templates select="copyright"/>
+    </main>
   </body>
 </html>
 </xsl:template>
 
 <xsl:template match="title">
     <h1>
       <xsl:apply-templates/>
     </h1>
-    <h3>
+    <h2>
       <xsl:value-of select="@subtitle"/>
       <xsl:text> </xsl:text>
       <xsl:call-template name="showbasicversion"/>
-    </h3>
-</xsl:template>
-
-<xsl:template match="copyright">
-  <p>
-    <xsl:apply-templates/>
-  </p>
+    </h2>
 </xsl:template>
 
 <xsl:template match="functionsection">
   <div class="sep"/>
   <hr class="thick"/>
@@ -284,11 +305,11 @@
     <xsl:value-of select="@label"/> function types:
     <ul>
       <xsl:apply-templates select="$calltypes" mode="index"/>
     </ul>
   </xsl:if>
-  <xsl:variable name="cattypes" 
+  <xsl:variable name="cattypes"
     select="(descendant::typedef|descendant::uniontypedef|descendant::capabilitiestypedef|descendant::constants[@kind='enum'])"/>
   <xsl:if test="count($cattypes)!=0">
     <xsl:value-of select="@label"/> types:
     <ul>
       <xsl:for-each select="$cattypes">
@@ -302,13 +323,13 @@
           </a>
           <xsl:text> - </xsl:text>
           <xsl:value-of select="@label"/>
         </li>
       </xsl:for-each>
-    </ul>    
+    </ul>
   </xsl:if>
-  <xsl:variable name="catconst" 
+  <xsl:variable name="catconst"
     select="(descendant::constants[@kind!='enum'])"/>
   <xsl:if test="count($catconst)!=0">
     <xsl:value-of select="@label"/> flags and constants:
     <ul>
       <xsl:for-each select="$catconst">
@@ -320,11 +341,11 @@
             </xsl:attribute>
             <xsl:value-of select="@label"/>
           </a>
         </li>
       </xsl:for-each>
-    </ul>    
+    </ul>
   </xsl:if>
   <xsl:apply-templates select="intro|typedef|uniontypedef|capabilitiestypedef"/>
   <div class="sep"/>
   <xsl:apply-templates select="function[count(@hide)=0]|callback" mode="body"/>
 </xsl:template>
@@ -332,11 +353,11 @@
 <xsl:template match="function" mode="body">
   <hr class="thin">
     <xsl:attribute name="id">
       <xsl:value-of select="@id"/>
     </xsl:attribute>
-    
+
   </hr>
   <xsl:apply-templates select="synopsis" mode="body"/>
   <blockquote>
     <xsl:apply-templates select="typedef" mode="code"/>
     <xsl:apply-templates select="descendant::constants[@kind='enum']" mode="signature"/>
@@ -352,80 +373,66 @@
   <xsl:apply-templates select="parameters" mode="body"/>
   <xsl:apply-templates select="." mode="errors"/>
 </xsl:template>
 
 <xsl:template match="function" mode="generalinfo">
-  <table class="bordered wide">
-     <tr class="bgLight">
-      <td >
-        <a href="#jvmtiPhase">Phase</a>
-      </td>
-      <td>
-        <a href="#heapCallbacks">Callback Safe</a>
-      </td>
-      <td>
-        <a href="#FunctionTable">Position</a>
-      </td>
-      <td>
-        <a href="#ChangeHistory">Since</a>
-      </td>
-    </tr>
-    <tr>
-      <td >
+  <div class="wideDivTableCtnr">
+  <div class="divTable bordered wide">
+    <div class="divTableRow bgLight">
+      <div class="divTableCell"><a href="#jvmtiPhase">Phase</a></div>
+      <div class="divTableCell"><a href="#heapCallbacks">Callback Safe</a></div>
+      <div class="divTableCell"><a href="#FunctionTable">Position</a></div>
+      <div class="divTableCell"><a href="#ChangeHistory">Since</a></div>
+    </div>
+    <div class="divTableRow">
+      <div class="divTableCell">
         <xsl:apply-templates select="." mode="phaseinfo"/>
-      </td>
-      <td>
+      </div>
+      <div class="divTableCell">
         <xsl:apply-templates select="." mode="callbacksafeinfo"/>
-      </td>
-      <td>
+      </div>
+      <div class="divTableCell">
         <xsl:value-of select="@num"/>
-      </td>
-      <td>
+      </div>
+      <div class="divTableCell">
         <xsl:value-of select="@since"/>
-      </td>
-    </tr>
-  </table>
+      </div>
+    </div>
+  </div>
+  </div>
 </xsl:template>
 
 <xsl:template match="event" mode="generalinfo">
-  <table class="bordered wide">
-    <tr class="bgLight">
-      <td >
-        <a href="#jvmtiPhase">Phase</a>
-      </td>
-      <td>
-        <a href="#jvmtiEvent">Event Type</a>
-      </td>
-      <td>
-        <a href="#jvmtiEvent">Number</a>
-      </td>
-      <td>
-        <a href="#enablingevents">Enabling</a>
-      </td>
-      <td>
-        <a href="#ChangeHistory">Since</a>
-      </td>
-    </tr>
-    <tr>
-      <td >
+  <div class="wideDivTableCtnr">
+  <div class="divTable bordered wide">
+    <div class="divTableRow bgLight">
+      <div class="divTableCell"><a href="#jvmtiPhase">Phase</a></div>
+      <div class="divTableCell"><a href="#heapCallbacks">Event Type</a></div>
+      <div class="divTableCell"><a href="#FunctionTable">Number</a></div>
+      <div class="divTableCell"><a href="#FunctionTable">Enabling</a></div>
+      <div class="divTableCell"><a href="#ChangeHistory">Since</a></div>
+    </div>
+    <div class="divTableRow">
+      <div class="divTableCell">
         <xsl:apply-templates select="." mode="phaseinfo"/>
-      </td>
-      <td>
+      </div>
+      <div class="divTableCell">
         <code><xsl:value-of select="@const"/></code>
-      </td>
-      <td>
+      </div>
+      <div class="divTableCell">
         <xsl:value-of select="@num"/>
-      </td>
-      <td>
-          <code><a href="#SetEventNotificationMode">SetEventNotificationMode</a>(JVMTI_ENABLE, 
-          <xsl:value-of select="@const"/>, NULL)</code>
-      </td>
-      <td>
+      </div>
+      <div class="divTableCell">
+        <code><a href="#SetEventNotificationMode">SetEventNotificationMode</a>(JVMTI_ENABLE, 
+        <xsl:value-of select="@const"/>, NULL)</code>
+      </div>
+      <div class="divTableCell">
         <xsl:value-of select="@since"/>
-      </td>
-    </tr>
-  </table>
+      </div>
+    </div>
+  </div>
+  </div>
 </xsl:template>
 
 <xsl:template match="function" mode="phaseinfo">
   may
   <xsl:choose>
@@ -503,11 +510,11 @@
 <xsl:template match="function" mode="callbacksafeinfo">
   <xsl:choose>
     <xsl:when test="contains(@callbacksafe,'safe')">
     This function may be called from the callbacks to the
     <a href="#Heap">Heap</a> iteration functions, or from the
-    event handlers for the 
+    event handlers for the
     <a href="#GarbageCollectionStart"><code>GarbageCollectionStart</code></a>,
     <a href="#GarbageCollectionFinish"><code>GarbageCollectionFinish</code></a>,
     and <a href="#ObjectFree"><code>ObjectFree</code></a> events.
     </xsl:when>
     <xsl:otherwise>
@@ -534,11 +541,11 @@
       <xsl:text>)
     (</xsl:text>
       <xsl:for-each select="parameters">
         <xsl:apply-templates select="param[position()=1]" mode="signature"/>
         <xsl:for-each select="param[position()>1]">
-          <xsl:text>, 
+          <xsl:text>,
      </xsl:text>
           <xsl:apply-templates select="." mode="signature"/>
         </xsl:for-each>
       </xsl:for-each>
       <xsl:text>);</xsl:text>
@@ -647,16 +654,16 @@
 <xsl:template match="capabilitiestypedef|typedef|uniontypedef" mode="description">
   <xsl:apply-templates select="description"/>
 </xsl:template>
 
 <xsl:template match="capabilitiestypedef|typedef|uniontypedef">
-  <h4>
+  <h3>
     <xsl:attribute name="id">
       <xsl:value-of select="@id"/>
     </xsl:attribute>
     <xsl:value-of select="@label"/>
-  </h4>
+  </h3>
   <xsl:apply-templates select="." mode="description"/>
   <blockquote>
     <xsl:apply-templates select="." mode="code"/>
     <xsl:apply-templates select="." mode="justbody"/>
   </blockquote>
@@ -677,25 +684,17 @@
   <xsl:apply-templates select="." mode="justbody"/>
 </xsl:template>
 
 <xsl:template match="typedef|uniontypedef" mode="justbody">
     <table class="bordered wide">
-      <tr class="bgDark">
-        <td colspan="3" class="tableHeader">
-          <code><xsl:value-of select="@id"/></code> - <xsl:value-of select="@label"/>
-        </td>
-      </tr>
+      <caption class="captionTitle">
+        <code><xsl:value-of select="@id"/></code> - <xsl:value-of select="@label"/>
+      </caption>
       <tr class="bgLight">
-        <td>
-          Field
-        </td>
-        <td>
-          Type
-        </td>
-        <td>
-          Description
-        </td>
+        <th scope="col">Field</th>
+        <th scope="col">Type</th>
+        <th scope="col">Description</th>
       </tr>
       <xsl:apply-templates select="field" mode="body"/>
     </table>
 </xsl:template>
 
@@ -708,62 +707,52 @@
   <xsl:apply-templates select="." mode="justbody"/>
 </xsl:template>
 
 <xsl:template match="capabilitiestypedef" mode="justbody">
     <table class="bordered wide">
-      <tr class="bgDark">
-        <td colspan="3" class="tableHeader">
+      <caption>
+        <div class="captionTitle">
           <code><xsl:value-of select="@id"/></code> - <xsl:value-of select="@label"/>
-        </td>
-      </tr>
+        </div>
+        <div class="captionDescr">All types are <code>unsigned int : 1</code></div>
+      </caption>
       <tr class="bgLight">
-        <td colspan="3">
-          All types are <code>unsigned int : 1</code>
-        </td>
-      </tr>
-      <tr class="bgLight">
-        <td>
-          Field
-        </td>
-        <td>
-          Description
-        </td>
-        <td>
-          <a href="#ChangeHistory">Since</a>
-        </td>
+        <th scope="col">Field</th>
+        <th scope="col">Description</th>
+        <th scope="col"><a href="#ChangeHistory">Since</a></th>
       </tr>
       <xsl:apply-templates select="capabilityfield" mode="body"/>
     </table>
 </xsl:template>
 
 <xsl:template match="typedef|uniontypedef|capabilitiestypedef|constants" mode="tableentry">
   <tr>
-    <td>
+    <th scope="row">
       <a>
         <xsl:attribute name="href">
           <xsl:text>#</xsl:text>
           <xsl:value-of select="@id"/>
         </xsl:attribute>
         <code><xsl:value-of select="@id"/></code>
       </a>
-    </td>
+    </th>
     <td>
       <xsl:value-of select="@label"/>
     </td>
   </tr>
 </xsl:template>
 
 <xsl:template match="field" mode="body">
   <tr>
-    <td>
+    <th scope="row">
       <code>
         <xsl:attribute name="id">
           <xsl:value-of select="../@id"/>.<xsl:value-of select="@id"/>
         </xsl:attribute>
         <xsl:value-of select="@id"/>
       </code>
-    </td>
+    </th>
     <td>
       <code>
         <xsl:apply-templates select="child::*[position()=1]" mode="link"/>
       </code>
     </td>
@@ -773,11 +762,11 @@
   </tr>
 </xsl:template>
 
 <xsl:template match="capabilityfield" mode="body">
   <tr>
-    <td>
+    <th scope="row">
       <code>
         <xsl:choose>
           <xsl:when test="@disp1!=''">
             <xsl:value-of select="@disp1"/>
             <br></br>
@@ -786,11 +775,11 @@
           <xsl:otherwise>
             <xsl:value-of select="@id"/>
           </xsl:otherwise>
         </xsl:choose>
       </code>
-    </td>
+    </th>
     <td>
       <xsl:attribute name="id">
         <xsl:value-of select="../@id"/>.<xsl:value-of select="@id"/>
       </xsl:attribute>
       <xsl:apply-templates select="description" mode="brief"/>
@@ -801,21 +790,21 @@
   </tr>
 </xsl:template>
 
 <xsl:template match="callback" mode="tableentry">
   <tr>
-    <td>
+    <th scope="row">
       <a>
         <xsl:attribute name="href">
           <xsl:text>#</xsl:text>
           <xsl:value-of select="@id"/>
         </xsl:attribute>
         <code>
           <xsl:value-of select="@id"/>
         </code>
       </a>
-    </td>
+    </th>
     <td>
       <xsl:apply-templates select="synopsis" mode="index"/>
     </td>
   </tr>
 </xsl:template>
@@ -824,32 +813,25 @@
   <blockquote>
     <table class="bordered">
       <xsl:attribute name="id">
         <xsl:value-of select="@id"/>
       </xsl:attribute>
-      <tr class="bgDark">
-        <td colspan="3" class="tableHeader">
-            <xsl:value-of select="@label"/>
-            <xsl:if test="@kind='enum'">
-              <xsl:text> (</xsl:text>
-              <code>
-                <xsl:value-of select="@id"/>
-              </code>
-              <xsl:text>)</xsl:text>
-            </xsl:if>
-        </td>
-      </tr>
+      <caption class="captionTitle">
+        <xsl:value-of select="@label"/>
+        <xsl:if test="@kind='enum'">
+          <xsl:text> (</xsl:text>
+          <code>
+            <xsl:value-of select="@id"/>
+          </code>
+          <xsl:text>)</xsl:text>
+        </xsl:if>
+      </caption>
+
       <tr class="bgLight">
-        <td>
-          Constant
-        </td>
-        <td>
-          Value
-        </td>
-        <td>
-          Description
-        </td>
+        <th scope="col">Constant</th>
+        <th scope="col">Value</th>
+        <th scope="col">Description</th>
       </tr>
       <xsl:apply-templates select="constant" mode="body"/>
     </table>
   </blockquote>
 </xsl:template>
@@ -865,18 +847,18 @@
   <br/>
 </xsl:template>
 
 <xsl:template match="constant" mode="body">
   <tr>
-    <td>
+    <th scope="row">
       <code>
         <xsl:attribute name="id">
           <xsl:value-of select="@id"/>
         </xsl:attribute>
         <xsl:value-of select="@id"/>
       </code>
-    </td>
+    </th>
     <td class="rightAligned">
       <xsl:value-of select="@num"/>
     </td>
     <td>
       <xsl:apply-templates/>
@@ -889,78 +871,51 @@
     <xsl:attribute name="id">
       <xsl:value-of select="@id"/>
     </xsl:attribute>
   </p>
     <table class="bordered wide">
-      <tr class="bgDark">
-        <td colspan="2" class="tableHeader">
-          <xsl:value-of select="@label"/>
-        </td>
-      </tr>
+      <caption class="captionTitle"><xsl:value-of select="@label"/></caption>
       <tr class="bgLight">
-        <td>
-          Type
-        </td>
-        <td>
-          Description
-        </td>
+        <th scope="col">Type</th>
+        <th scope="col">Description</th>
       </tr>
       <xsl:apply-templates select="basetype" mode="body"/>
     </table>
 </xsl:template>
 
 <xsl:template match="basetype" mode="body">
-  <xsl:choose>
-    <xsl:when test="count(definition)=0">
-      <tr>
-        <td>
-          <code>
-            <xsl:value-of select="@id"/>
-          </code>
-        </td>
-        <td>
-          <a>
-            <xsl:attribute name="id">
-              <xsl:choose>
-                <xsl:when test="count(@name)=1">
-                  <xsl:value-of select="@name"/>
-                </xsl:when>
-                <xsl:otherwise>
-                  <xsl:value-of select="@id"/>
-                </xsl:otherwise>
-              </xsl:choose>
-            </xsl:attribute>
-          </a>
-          <xsl:apply-templates select="description" mode="brief"/>
-        </td>
-      </tr>      
-    </xsl:when>
-    <xsl:otherwise>
-      <tr>
-        <td rowspan="2">
-          <code>
-            <xsl:value-of select="@id"/>
-          </code>
-        </td>
-        <td>
-          <a>
-            <xsl:attribute name="id">
-              <xsl:value-of select="@id"/>
-            </xsl:attribute>
-          </a>
-          <xsl:apply-templates select="description" mode="brief"/>
-        </td>
-      </tr>      
-      <tr>
-        <td>
+  <tr>
+    <th scope="row">
+      <code>
+        <xsl:value-of select="@id"/>
+      </code>
+    </th>
+    <td class="noPadding">
+      <div class="withPadding">
+        <a>
+          <xsl:attribute name="id">
+            <xsl:choose>
+              <xsl:when test="count(@name)=1">
+                <xsl:value-of select="@name"/>
+              </xsl:when>
+              <xsl:otherwise>
+                <xsl:value-of select="@id"/>
+              </xsl:otherwise>
+            </xsl:choose>
+          </xsl:attribute>
+        </a>
+        <xsl:apply-templates select="description" mode="brief"/>
+      </div>
+      <xsl:if test="count(definition)!=0">
+        <div class="withPadding topBorder">
           <pre>
             <xsl:apply-templates select="definition"/>
-          </pre>          
-        </td>
-      </tr>
-    </xsl:otherwise>
-  </xsl:choose>
+          </pre>
+        </div>
+      </xsl:if>
+    </td>
+  </tr>
 </xsl:template>
 
 <xsl:template match="description">
   <xsl:apply-templates/>
   <div class="sep"/>
@@ -975,11 +930,11 @@
     <xsl:attribute name="href">#<xsl:value-of select="@struct"/>.<xsl:value-of select="@id"/></xsl:attribute>
     <xsl:choose>
       <xsl:when test=".=''">
         <code>
           <xsl:value-of select="@id"/>
-        </code>        
+        </code>
       </xsl:when>
       <xsl:otherwise>
         <xsl:apply-templates/>
       </xsl:otherwise>
     </xsl:choose>
@@ -992,11 +947,11 @@
     </xsl:attribute>
     <xsl:choose>
       <xsl:when test=".=''">
         <code>
           <xsl:value-of select="@id"/>
-        </code>        
+        </code>
       </xsl:when>
       <xsl:otherwise>
         <xsl:apply-templates/>
       </xsl:otherwise>
     </xsl:choose>
@@ -1008,11 +963,11 @@
     <xsl:attribute name="href">#<xsl:value-of select="@id"/></xsl:attribute>
     <xsl:choose>
       <xsl:when test=".=''">
         <code>
           <xsl:value-of select="@id"/>
-        </code>        
+        </code>
       </xsl:when>
       <xsl:otherwise>
         <xsl:apply-templates/>
       </xsl:otherwise>
     </xsl:choose>
@@ -1036,11 +991,11 @@
 </xsl:template>
 
 <xsl:template match="eventphaselist">
   <xsl:variable name="phase" select="@phase"/>
   <ul>
-    <xsl:for-each select="//eventsection/event[@phase=$phase]">   
+    <xsl:for-each select="//eventsection/event[@phase=$phase]">
       <li>
         <a>
           <xsl:attribute name="href">#<xsl:value-of select="@id"/></xsl:attribute>
           <b>
             <xsl:value-of select="@id"/>
@@ -1062,11 +1017,11 @@
 
 <xsl:template match="vmspec">
   <cite>
     <xsl:text>The Java&#8482; Virtual Machine Specification</xsl:text>
     <xsl:if test="count(@chapter)=1">
-      <xsl:text>, Chapter </xsl:text> 
+      <xsl:text>, Chapter </xsl:text>
       <xsl:value-of select="@chapter"/>
     </xsl:if>
   </cite>
 </xsl:template>
 
@@ -1077,41 +1032,44 @@
   </a>
 </xsl:template>
 
 <xsl:template match="parameters" mode="body">
   <div class="sep"/>
-  <table class="bordered wide">
-    <tr class="bgDark">
-      <td colspan="3" class="tableHeader">
-        Parameters
-      </td>
-    </tr>
-    <tr class="bgLight">
-      <td>
-        Name
-      </td>
-      <td>
-        Type
-      </td>
-      <td>
-        Description
-      </td>
-    </tr>
-    <xsl:apply-templates select="param[count(jclass/@method)=0]" mode="body"/>
-  </table>
+  <!--
+  docchecker complains if a table has only one row.
+  -->
+  <xsl:choose>
+    <xsl:when test="count(param)!=0">
+      <table class="bordered wide">
+        <caption class="captionTitle">Parameters</caption>
+        <tr class="bgLight">
+          <th scope="col">Name</th>
+          <th scope="col">Type</th>
+          <th scope="col">Description</th>
+        </tr>
+        <xsl:apply-templates select="param[count(jclass/@method)=0]" mode="body"/>
+      </table>
+    </xsl:when>
+    <xsl:otherwise>
+      <div class="bordered">
+        <div class="captionTitle">Parameters</div>
+        <div class="captionDescr">None</div>
+      </div>
+    </xsl:otherwise>
+  </xsl:choose>
 </xsl:template>
 
 <xsl:template match="param" mode="body">
   <tr>
-    <td>
+    <th scope="row">
       <code>
         <xsl:attribute name="id">
           <xsl:value-of select="../../@id"/>.<xsl:value-of select="@id"/>
         </xsl:attribute>
         <xsl:value-of select="@id"/>
       </code>
-    </td>
+    </th>
     <td>
       <code>
         <xsl:apply-templates select="child::*[position()=1]" mode="link"/>
       </code>
     </td>
@@ -1125,132 +1083,109 @@
 </xsl:template>
 
 <xsl:template match="capabilities">
   <div class="sep"/>
   <!--
-  W3C Validator reports error if all cells has colspan==2.
-  The workaround is to detect the case and set colspan = 1 for all cells
-  which fills the entire row.
+  docchecker complains if a table has only one column.
   -->
-  <xsl:variable name="fullRowColspan">
-    <xsl:choose>
-      <xsl:when test="count(required)!=0 or count(capability)!=0">2</xsl:when>
-      <xsl:otherwise>1</xsl:otherwise>
-    </xsl:choose>
-  </xsl:variable>
-  <table class="bordered wide">
-    <tr class="bgDark">
-      <td colspan="{$fullRowColspan}" class="tableHeader">
-        Capabilities
-      </td>
-    </tr>
-    <xsl:choose>
-      <xsl:when test="count(required)=0">
-        <tr>
-          <td colspan="{$fullRowColspan}">
-            <b>Required Functionality</b>
-          </td>
-        </tr>
-      </xsl:when>
-      <xsl:otherwise>
-        <tr>
-          <td colspan="2">
-            <b>Optional Functionality:</b> might not be implemented for all
-            virtual machines. 
-            <xsl:choose>
-              <xsl:when test="count(required)=1">
-                The following capability 
-              </xsl:when>
-              <xsl:otherwise>
-                One of the following capabilities
-              </xsl:otherwise>
-            </xsl:choose>
-            (as returned by 
-            <a href="#GetCapabilities"><code>GetCapabilities</code></a>)
-            must be true to use this      
-            <xsl:choose>
-              <xsl:when test="ancestor::function">
-                function.
-              </xsl:when>
-              <xsl:otherwise>
-                event.
-              </xsl:otherwise>
-            </xsl:choose>
-          </td>
-        </tr>
-        <tr class="bgLight">
-          <td >
-            Capability
-          </td>
-          <td>
-            Effect
-          </td>
-        </tr>
-        <xsl:apply-templates select="required"/>
-      </xsl:otherwise>
-    </xsl:choose>
-    <xsl:if test="count(capability)!=0">
-      <tr class="bgDark">
-        <td colspan="{$fullRowColspan}" class="centered">
-          Optional Features
-        </td>
-      </tr>
-      <xsl:if test="count(required)=0">
-        <tr class="bgLight">
-          <td >
-            Capability
-          </td>
-          <td>
-            Effect
-          </td>
-        </tr>
-      </xsl:if>
-      <xsl:apply-templates select="capability"/>
-    </xsl:if>
-  </table>
+  <xsl:choose>
+    <xsl:when test="count(required)!=0 or count(capability)!=0">
+      <table class="bordered wide">
+        <caption>
+          <div class="captionTitle">Capabilities</div>
+          <xsl:choose>
+            <xsl:when test="count(required)=0">
+              <div class="captionDescr"><b>Required Functionality</b></div>
+            </xsl:when>
+            <xsl:otherwise>
+              <div class="captionDescr">
+                <b>Optional Functionality:</b> might not be implemented for all virtual machines.
+                <xsl:choose>
+                  <xsl:when test="count(required)=1">
+                    The following capability
+                  </xsl:when>
+                  <xsl:otherwise>
+                    One of the following capabilities
+                  </xsl:otherwise>
+                </xsl:choose>
+                (as returned by <a href="#GetCapabilities"><code>GetCapabilities</code></a>)
+                must be true to use this
+                <xsl:choose>
+                  <xsl:when test="ancestor::function">
+                    function.
+                  </xsl:when>
+                  <xsl:otherwise>
+                    event.
+                  </xsl:otherwise>
+                </xsl:choose>
+              </div>
+            </xsl:otherwise>
+          </xsl:choose>
+        </caption>
+        <xsl:if test="count(required)!=0">
+          <tr class="bgLight">
+            <th scope="col">Capability</th>
+            <th scope="col">Effect</th>
+          </tr>
+          <xsl:apply-templates select="required"/>
+        </xsl:if>
+
+        <xsl:if test="count(capability)!=0">
+          <tr class="bgDark">
+            <th colspan="2" scope="rowgroup" class="centered">
+              Optional Features
+            </th>
+          </tr>
+          <xsl:if test="count(required)=0">
+            <tr class="bgLight">
+              <th scope="col">Capability</th>
+              <th scope="col">Effect</th>
+            </tr>
+          </xsl:if>
+          <xsl:apply-templates select="capability"/>
+        </xsl:if>
+      </table>
+    </xsl:when>
+    <xsl:otherwise>
+      <div class="bordered">
+        <div class="captionTitle">Capabilities</div>
+        <div class="captionDescr"><b>Required Functionality</b></div>
+      </div>
+    </xsl:otherwise>
+  </xsl:choose>
 </xsl:template>
 
 <xsl:template match="eventcapabilities">
   <div class="sep"/>
   <table class="bordered wide">
+    <caption>
+      <div class="captionTitle">Capabilities</div>
+      <div class="captionDescr"><b>Required Functionality</b></div>
+    </caption>
     <tr class="bgDark">
-      <td colspan="2" class="tableHeader">
-        Capabilities
-      </td>
-    </tr>
-    <tr>
-      <td colspan="2">
-        <b>Required Functionality</b>
-      </td>
-    </tr>
-    <tr class="bgDark">
-      <td colspan="2" class="centered">
+      <th colspan="2" scope="rowgroup" class="centered">
         Event Enabling Capabilities
-      </td>
+      </th>
     </tr>
     <tr class="bgLight">
-      <td >
-        Capability
-      </td>
-      <td>
-        Events
-      </td>
+      <th scope="col">Capability</th>
+      <th scope="col">Events</th>
     </tr>
     <xsl:for-each select="//capabilityfield">
       <xsl:variable name="capa" select="@id"/>
       <xsl:variable name="events" select="//event[capabilities/required/@id=$capa]"/>
       <xsl:if test="count($events)">
         <tr>
-          <td>
+          <th scope="row">
             <a>
               <xsl:attribute name="href">#jvmtiCapabilities.<xsl:value-of select="@id"/>
               </xsl:attribute>
               <code>
                 <xsl:value-of select="@id"/>
               </code>
             </a>
-          </td>
+          </th>
           <td>
             <xsl:for-each select="$events">
               <a>
                 <xsl:attribute name="href">#<xsl:value-of select="@id"/>
                 </xsl:attribute>
@@ -1267,19 +1202,19 @@
   </table>
 </xsl:template>
 
 <xsl:template match="capability|required">
   <tr>
-    <td>
+    <th scope="row">
       <a>
         <xsl:attribute name="href">#jvmtiCapabilities.<xsl:value-of select="@id"/>
         </xsl:attribute>
         <code>
           <xsl:value-of select="@id"/>
         </code>
       </a>
-    </td>
+    </th>
     <td>
       <xsl:choose>
         <xsl:when test=".=''">
           <xsl:variable name="desiredID" select="@id"/>
           <xsl:for-each select="//capabilityfield[@id=$desiredID]">
@@ -1300,79 +1235,64 @@
     <xsl:apply-templates select="errors/error" mode="haserrors"/>
     <xsl:apply-templates select="parameters/param" mode="haserrors"/>
   </xsl:variable>
   <div class="sep"/>
   <!--
-  W3C Validator reports error if all cells has colspan==2.
-  The workaround is to detect the case and set colspan = 1 for all cells
-  which fills the entire row.
+  docchecker complains if a table has only one column.
   -->
-  <xsl:variable name="fullRowColspan">
-    <xsl:choose>
-      <xsl:when test="contains($haserrors,'yes')">2</xsl:when>
-      <xsl:otherwise>1</xsl:otherwise>
-    </xsl:choose>
-  </xsl:variable>
-  <table class="bordered wide">
-    <tr class="bgDark">
-      <td colspan="{$fullRowColspan}" class="tableHeader">
-        Errors
-      </td>
-    </tr>
-    <xsl:choose>
-      <xsl:when test="contains($haserrors,'yes')">
-        <tr>
-          <td colspan="2">
-            This function returns either a 
-            <a href="#universal-error">universal error</a> 
+  <xsl:choose>
+    <xsl:when test="contains($haserrors,'yes')">
+      <table class="bordered wide">
+        <caption>
+          <div class="captionTitle">Errors</div>
+          <div class="captionDescr">
+            This function returns either a
+            <a href="#universal-error">universal error</a>
             or one of the following errors
-          </td>
-        </tr>
+          </div>
+        </caption>
         <tr class="bgLight">
-          <td>
-            Error
-          </td>
-          <td>
-            Description
-          </td>
+          <th scope="col">Error</th>
+          <th scope="col">Description</th>
         </tr>
         <xsl:apply-templates select="capabilities/required" mode="errors"/>
         <xsl:apply-templates select="errors/error"/>
         <xsl:apply-templates select="parameters/param" mode="errors"/>
-      </xsl:when>
-      <xsl:otherwise>
-        <tr>
-          <td colspan="{$fullRowColspan}">
-            This function returns a 
+      </table>
+    </xsl:when>
+    <xsl:otherwise>
+      <div class="bordered">
+        <div class="captionTitle">Errors</div>
+        <div class="captionDescr">
+            This function returns a
             <a href="#universal-error">universal error</a>
-          </td>
-        </tr>
-      </xsl:otherwise>
-    </xsl:choose>
-  </table>
+        </div>
+      </div>
+    </xsl:otherwise>
+  </xsl:choose>
 </xsl:template>
 
 <xsl:template match="required" mode="haserrors">
   yes
 </xsl:template>
 
 <xsl:template match="required" mode="errors">
   <tr>
-    <td>
+    <th scope="row">
       <a href="#JVMTI_ERROR_MUST_POSSESS_CAPABILITY">
         <code>
           JVMTI_ERROR_MUST_POSSESS_CAPABILITY
         </code>
       </a>
-    </td>
+    </th>
     <td>
       The environment does not possess the capability
       <a>
         <xsl:attribute name="href">#jvmtiCapabilities.<xsl:value-of select="@id"/></xsl:attribute>
         <code>
           <xsl:value-of select="@id"/>
-        </code>        
+        </code>
       </a>.
       Use <a href="#AddCapabilities"><code>AddCapabilities</code></a>.
     </td>
   </tr>
 </xsl:template>
@@ -1394,54 +1314,54 @@
     <xsl:variable name="erroridraw">
       <xsl:apply-templates mode="errorid"/>
     </xsl:variable>
     <xsl:variable name="errorid" select="normalize-space($erroridraw)"/>
     <tr>
-      <td>
+      <th scope="row">
         <a>
           <xsl:attribute name="href">#<xsl:value-of select="$errorid"/></xsl:attribute>
           <code>
             <xsl:value-of select="$errorid"/>
           </code>
         </a>
-      </td>
+      </th>
       <td>
         <xsl:apply-templates mode="errordesc">
           <xsl:with-param name="id" select="@id"/>
         </xsl:apply-templates>
       </td>
     </tr>
   </xsl:if>
 </xsl:template>
- 
+
 <xsl:template match="param" mode="errors2">
   <xsl:variable name="haserrors2">
     <xsl:apply-templates mode="haserrors2"/>
   </xsl:variable>
   <xsl:if test="contains($haserrors2,'yes')!=0">
     <xsl:variable name="erroridraw2">
       <xsl:apply-templates mode="errorid2"/>
     </xsl:variable>
     <xsl:variable name="errorid2" select="normalize-space($erroridraw2)"/>
     <tr>
-      <td>
+      <th scope="row">
         <a>
           <xsl:attribute name="href">#<xsl:value-of select="$errorid2"/></xsl:attribute>
           <code>
             <xsl:value-of select="$errorid2"/>
           </code>
         </a>
-      </td>
+      </th>
       <td>
         <xsl:apply-templates mode="errordesc2">
           <xsl:with-param name="id" select="@id"/>
         </xsl:apply-templates>
       </td>
     </tr>
   </xsl:if>
 </xsl:template>
- 
+
 <xsl:template match="description" mode="haserrors">
 </xsl:template>
 
 <xsl:template match="description" mode="errorid">
 </xsl:template>
@@ -1682,28 +1602,28 @@
   <a>
     <xsl:attribute name="href">#<xsl:value-of select="ancestor::function/@id|ancestor::event/@id"/>.<xsl:value-of select="ancestor::param/@id"/>
     </xsl:attribute>
     <code>
       <xsl:value-of select="ancestor::param/@id"/>
-    </code>        
+    </code>
   </a>
 </xsl:template>
 
 <xsl:template match="error" mode="haserrors">
   yes
 </xsl:template>
 
 <xsl:template match="error">
   <tr>
-    <td>
+    <th scope="row">
       <a>
         <xsl:attribute name="href">#<xsl:value-of select="@id"/></xsl:attribute>
         <code>
           <xsl:value-of select="@id"/>
         </code>
       </a>
-    </td>
+    </th>
     <td>
       <xsl:apply-templates/>
     </td>
   </tr>
 </xsl:template>
@@ -1730,82 +1650,48 @@
   <div class="sep"/>
   <xsl:apply-templates select="intro"/>
   <xsl:apply-templates select="basetypes"/>
   <div class="sep"/>
   <table id="StructureTypeDefinitions" class="bordered wide">
-    <tr class="bgDark">
-      <td colspan="2" class="tableHeader">
-        Structure Type Definitions
-      </td>
-    </tr>
+    <caption class="captionTitle">Structure Type Definitions</caption>
     <tr class="bgLight">
-      <td>
-        Type
-      </td>
-      <td>
-        Description
-      </td>
+      <th scope="col">Type</th>
+      <th scope="col">Description</th>
     </tr>
     <xsl:apply-templates select="//typedef|//uniontypedef|//capabilitiestypedef" mode="tableentry">
       <xsl:sort select="@id"/>
     </xsl:apply-templates>
   </table>
   <div class="sep"/>
   <table id="FunctionTypeDefinitions" class="bordered wide">
-    <tr class="bgDark">
-      <td colspan="2" class="tableHeader">
-        Function Type Definitions
-      </td>
-    </tr>
+    <caption class="captionTitle">Function Type Definitions</caption>
     <tr class="bgLight">
-      <td>
-        Type
-      </td>
-      <td>
-        Description
-      </td>
+      <th scope="col">Type</th>
+      <th scope="col">Description</th>
     </tr>
     <xsl:apply-templates select="//callback" mode="tableentry">
       <xsl:sort select="@id"/>
     </xsl:apply-templates>
   </table>
   <div class="sep"/>
   <table id="EnumerationDefinitions" class="bordered wide">
-    <tr class="bgDark">
-      <td colspan="2" class="tableHeader">
-        Enumeration Definitions
-      </td>
-    </tr>
+    <caption class="captionTitle">Enumeration Definitions</caption>
     <tr class="bgLight">
-      <td>
-        Type
-      </td>
-      <td>
-        Description
-      </td>
+      <th scope="col">Type</th>
+      <th scope="col">Description</th>
     </tr>
     <xsl:apply-templates select="//constants[@kind='enum']" mode="tableentry">
       <xsl:sort select="@id"/>
     </xsl:apply-templates>
   </table>
   <div class="sep"/>
   <table id="FunctionTable" class="bordered wide">
-    <tr class="bgDark">
-      <td colspan="3" class="tableHeader">
-        Function Table Layout
-      </td>
-    </tr>
+    <caption class="captionTitle">Function Table Layout</caption>
     <tr class="bgLight">
-      <td>
-        Position
-      </td>
-      <td>
-        Function
-      </td>
-      <td>
-        Declaration
-      </td>
+      <th scope="col">Position</th>
+      <th scope="col">Function</th>
+      <th scope="col">Declaration</th>
     </tr>
     <xsl:call-template name="funcStruct">
       <xsl:with-param name="funcs" select="//functionsection/category/function[count(@hide)=0]"/>
       <xsl:with-param name="index" select="1"/>
     </xsl:call-template>
@@ -1817,13 +1703,13 @@
 <xsl:template name="funcStruct">
   <xsl:param name="funcs"/>
   <xsl:param name="index"/>
   <xsl:variable name="thisFunction" select="$funcs[@num=$index]"/>
   <tr>
-    <td class="rightAligned">
+    <th scope="row" class="rightAligned">
       <xsl:number value="$index" format="  1"/>
-    </td>
+    </th>
     <xsl:choose>
       <xsl:when test="count($thisFunction)=1">
         <td>
           <a>
             <xsl:attribute name="href">
@@ -1856,11 +1742,11 @@
       <td>
         <i>reserved</i>
       </td>
       <td>
         <pre>
-          <xsl:text>void *reserved</xsl:text>        
+          <xsl:text>void *reserved</xsl:text>
           <xsl:value-of select="$index"/>
           <xsl:text>;</xsl:text>
         </pre>
       </td>
     </xsl:otherwise>
@@ -1904,60 +1790,68 @@
     <xsl:apply-templates/>
     <div class="sep"/>
   </dd>
 </xsl:template>
 
+<xsl:template name="lastchangeversion">
+  <xsl:for-each select="//change">
+     <xsl:if test="position() = last()">
+       <xsl:value-of select="@version"/>
+     </xsl:if>
+  </xsl:for-each>
+</xsl:template>
+
 <xsl:template match="changehistory">
     <div class="sep"/>
     <hr class="thick"/>
     <h2>Change History</h2>
     Last update: <xsl:value-of select="@update"/><br/>
-    Version: <xsl:call-template name="showversion"/>
+    Version: <xsl:call-template name="lastchangeversion"/>
     <div class="sep"/>
     <xsl:apply-templates select="intro"/>
     <div class="sep"/>
     <table class="bordered wide">
       <tr class="bgLight">
-        <td>
+        <th scope="col">
           <b>Version</b><br/>
           <b>Date</b>
-        </td>
-        <td>
+        </th>
+        <th scope="col">
           <b>Changes</b>
-        </td>
+        </th>
       </tr>
       <xsl:apply-templates select="change"/>
     </table>
 </xsl:template>
 
 <xsl:template match="change">
   <tr>
-    <td>
+    <th scope="row">
       <xsl:if test="count(@version)">
         <b>
           <xsl:value-of select="@version"/>
         </b>
         <br/>
       </xsl:if>
       <xsl:value-of select="@date"/>
-    </td>
+    </th>
     <td>
       <xsl:apply-templates/>
     </td>
   </tr>
 </xsl:template>
 
 <xsl:template match="intro">
   <xsl:if test="@id!=''">
     <xsl:choose>
       <xsl:when test="@label!=''">
-        <h4>
+        <h3>
           <xsl:attribute name="id">
             <xsl:value-of select="@id"/>
           </xsl:attribute>
           <xsl:value-of select="@label"/>
-        </h4>
+        </h3>
       </xsl:when>
       <xsl:otherwise>
         <a>
           <xsl:attribute name="name">
             <xsl:value-of select="@id"/>
@@ -2018,10 +1912,15 @@
   </table>
 </xsl:template>
 
 <xsl:template match="tr">
   <tr>
+    <xsl:if test="@class">
+      <xsl:attribute name="class">
+        <xsl:value-of select="@class"/>
+      </xsl:attribute>
+    </xsl:if>
     <xsl:apply-templates/>
   </tr>
 </xsl:template>
 
 <xsl:template match="td">
@@ -2040,10 +1939,15 @@
     <xsl:if test="@class">
       <xsl:attribute name="class">
         <xsl:value-of select="@class"/>
       </xsl:attribute>
     </xsl:if>
+    <xsl:if test="@scope">
+      <xsl:attribute name="scope">
+        <xsl:value-of select="@scope"/>
+      </xsl:attribute>
+    </xsl:if>
     <xsl:apply-templates/>
   </th>
 </xsl:template>
 
 <xsl:template match="dl">
