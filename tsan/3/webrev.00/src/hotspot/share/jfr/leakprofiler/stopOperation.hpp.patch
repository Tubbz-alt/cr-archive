diff a/src/hotspot/share/jfr/leakprofiler/stopOperation.hpp b/src/hotspot/share/jfr/leakprofiler/stopOperation.hpp
--- a/src/hotspot/share/jfr/leakprofiler/stopOperation.hpp
+++ b/src/hotspot/share/jfr/leakprofiler/stopOperation.hpp
@@ -23,34 +23,17 @@
  */
 
 #ifndef SHARE_JFR_LEAKPROFILER_STOPOPERATION_HPP
 #define SHARE_JFR_LEAKPROFILER_STOPOPERATION_HPP
 
-#include "jfr/leakprofiler/leakProfiler.hpp"
 #include "jfr/leakprofiler/sampling/objectSampler.hpp"
-#include "jfr/recorder/service/jfrOptionSet.hpp"
-#include "logging/log.hpp"
-#include "runtime/vmOperations.hpp"
+#include "jfr/leakprofiler/utilities/vmOperation.hpp"
 
-// Safepoint operation for stopping leak profiler object sampler
-class StopOperation : public VM_Operation {
+// Safepoint operation for stopping and destroying the leak profiler object sampler
+class StopOperation : public OldObjectVMOperation {
  public:
-  StopOperation() {}
-
-  Mode evaluation_mode() const {
-    return _safepoint;
-  }
-
-  VMOp_Type type() const {
-    return VMOp_GC_HeapInspection;
-  }
-
   virtual void doit() {
-    assert(LeakProfiler::is_running(), "invariant");
-    ObjectSampler* object_sampler = LeakProfiler::object_sampler();
-    delete object_sampler;
-    LeakProfiler::set_object_sampler(NULL);
-    log_trace(jfr, system)( "Object sampling stopped");
+    ObjectSampler::destroy();
   }
 };
 
 #endif // SHARE_JFR_LEAKPROFILER_STOPOPERATION_HPP
