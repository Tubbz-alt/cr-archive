diff a/src/hotspot/share/jfr/leakprofiler/chains/edgeQueue.cpp b/src/hotspot/share/jfr/leakprofiler/chains/edgeQueue.cpp
--- a/src/hotspot/share/jfr/leakprofiler/chains/edgeQueue.cpp
+++ b/src/hotspot/share/jfr/leakprofiler/chains/edgeQueue.cpp
@@ -22,10 +22,11 @@
  *
  */
 
 #include "precompiled.hpp"
 #include "jfr/leakprofiler/chains/edgeQueue.hpp"
+#include "jfr/leakprofiler/utilities/unifiedOopRef.inline.hpp"
 #include "jfr/recorder/storage/jfrVirtualMemory.hpp"
 
 EdgeQueue::EdgeQueue(size_t reservation_size_bytes, size_t commit_block_size_bytes) :
   _vmm(NULL),
   _reservation_size_bytes(reservation_size_bytes),
@@ -43,12 +44,12 @@
 
 EdgeQueue::~EdgeQueue() {
   delete _vmm;
 }
 
-void EdgeQueue::add(const Edge* parent, const oop* ref) {
-  assert(ref != NULL, "Null objects not allowed in EdgeQueue");
+void EdgeQueue::add(const Edge* parent, UnifiedOopRef ref) {
+  assert(!ref.is_null(), "Null objects not allowed in EdgeQueue");
   assert(!is_full(), "EdgeQueue is full. Check is_full before adding another Edge");
   assert(!_vmm->is_full(), "invariant");
   void* const allocation = _vmm->new_datum();
   assert(allocation != NULL, "invariant");
   new (allocation)Edge(parent, ref);
