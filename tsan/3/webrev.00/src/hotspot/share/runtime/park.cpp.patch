diff a/src/hotspot/share/runtime/park.cpp b/src/hotspot/share/runtime/park.cpp
--- a/src/hotspot/share/runtime/park.cpp
+++ b/src/hotspot/share/runtime/park.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1997, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -51,11 +51,10 @@
 
 volatile int ParkEvent::ListLock = 0 ;
 ParkEvent * volatile ParkEvent::FreeList = NULL ;
 
 ParkEvent * ParkEvent::Allocate (Thread * t) {
-  // In rare cases -- JVM_RawMonitor* operations -- we can find t == null.
   ParkEvent * ev ;
 
   // Start by trying to recycle an existing but unassociated
   // ParkEvent from the global free list.
   // Using a spin lock since we are part of the mutex impl.
@@ -162,6 +161,5 @@
     p->FreeNext = FreeList;
     FreeList = p;
   }
   Thread::SpinRelease(&ListLock);
 }
-
