diff a/src/hotspot/share/runtime/os_perf.hpp b/src/hotspot/share/runtime/os_perf.hpp
--- a/src/hotspot/share/runtime/os_perf.hpp
+++ b/src/hotspot/share/runtime/os_perf.hpp
@@ -24,10 +24,11 @@
 
 #ifndef SHARE_RUNTIME_OS_PERF_HPP
 #define SHARE_RUNTIME_OS_PERF_HPP
 
 #include "memory/allocation.hpp"
+#include "utilities/globalDefinitions.hpp"
 #include "utilities/macros.hpp"
 
 #define FUNCTIONALITY_NOT_IMPLEMENTED -8
 
 class EnvironmentVariable : public CHeapObj<mtInternal> {
@@ -39,16 +40,12 @@
     _key = NULL;
     _value = NULL;
   }
 
   ~EnvironmentVariable() {
-    if (_key != NULL) {
-      FREE_C_HEAP_ARRAY(char, _key);
-    }
-    if (_value != NULL) {
-      FREE_C_HEAP_ARRAY(char, _value);
-    }
+    FREE_C_HEAP_ARRAY(char, _key);
+    FREE_C_HEAP_ARRAY(char, _value);
   }
 
   EnvironmentVariable(char* key, char* value) {
     _key = key;
     _value = value;
@@ -179,32 +176,25 @@
   void set_command_line(char* command_line) {
     _command_line = command_line;
   }
 
   virtual ~SystemProcess(void) {
-    if (_name != NULL) {
-      FREE_C_HEAP_ARRAY(char, _name);
-    }
-    if (_path != NULL) {
-      FREE_C_HEAP_ARRAY(char, _path);
-    }
-    if (_command_line != NULL) {
-      FREE_C_HEAP_ARRAY(char, _command_line);
-    }
+    FREE_C_HEAP_ARRAY(char, _name);
+    FREE_C_HEAP_ARRAY(char, _path);
+    FREE_C_HEAP_ARRAY(char, _command_line);
   }
 };
 
 class NetworkInterface : public ResourceObj {
  private:
   char* _name;
   uint64_t _bytes_in;
   uint64_t _bytes_out;
   NetworkInterface* _next;
 
-  NetworkInterface(); // no impl
-  NetworkInterface(const NetworkInterface& rhs); // no impl
-  NetworkInterface& operator=(const NetworkInterface& rhs); // no impl
+  NONCOPYABLE(NetworkInterface);
+
  public:
   NetworkInterface(const char* name, uint64_t bytes_in, uint64_t bytes_out, NetworkInterface* next) :
   _name(NULL),
   _bytes_in(bytes_in),
   _bytes_out(bytes_out),
@@ -276,12 +266,12 @@
 
 class NetworkPerformanceInterface : public CHeapObj<mtInternal> {
  private:
   class NetworkPerformance;
   NetworkPerformance* _impl;
-  NetworkPerformanceInterface(const NetworkPerformanceInterface& rhs); // no impl
-  NetworkPerformanceInterface& operator=(const NetworkPerformanceInterface& rhs); // no impl
+  NONCOPYABLE(NetworkPerformanceInterface);
+
  public:
   NetworkPerformanceInterface();
   bool initialize();
   ~NetworkPerformanceInterface();
   int network_utilization(NetworkInterface** network_interfaces) const;
