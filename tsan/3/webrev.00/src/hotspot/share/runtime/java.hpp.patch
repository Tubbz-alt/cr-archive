diff a/src/hotspot/share/runtime/java.hpp b/src/hotspot/share/runtime/java.hpp
--- a/src/hotspot/share/runtime/java.hpp
+++ b/src/hotspot/share/runtime/java.hpp
@@ -65,39 +65,35 @@
  private:
 
   static JDK_Version _current;
   static const char* _runtime_name;
   static const char* _runtime_version;
+  static const char* _runtime_vendor_version;
+  static const char* _runtime_vendor_vm_bug_url;
 
   uint8_t _major;
   uint8_t _minor;
   uint8_t _security;
   uint8_t _patch;
   uint8_t _build;
 
-  bool _thread_park_blocker;
-  bool _post_vm_init_hook_enabled;
-
   bool is_valid() const {
     return (_major != 0);
   }
 
   // initializes or partially initializes the _current static field
   static void initialize();
 
  public:
 
-  JDK_Version() : _major(0), _minor(0), _security(0), _patch(0), _build(0),
-                  _thread_park_blocker(false), _post_vm_init_hook_enabled(false)
-                  {}
+  JDK_Version() :
+      _major(0), _minor(0), _security(0), _patch(0), _build(0)
+      {}
 
   JDK_Version(uint8_t major, uint8_t minor = 0, uint8_t security = 0,
-              uint8_t patch = 0, uint8_t build = 0,
-              bool thread_park_blocker = false, bool post_vm_init_hook_enabled = false) :
-      _major(major), _minor(minor), _security(security), _patch(patch), _build(build),
-      _thread_park_blocker(thread_park_blocker),
-      _post_vm_init_hook_enabled(post_vm_init_hook_enabled)
+              uint8_t patch = 0, uint8_t build = 0) :
+      _major(major), _minor(minor), _security(security), _patch(patch), _build(build)
       {}
 
   // Returns the current running JDK version
   static JDK_Version current() { return _current; }
 
@@ -118,17 +114,10 @@
   uint8_t minor_version() const          { return _minor; }
   uint8_t security_version() const       { return _security; }
   uint8_t patch_version() const          { return _patch; }
   uint8_t build_number() const           { return _build; }
 
-  bool supports_thread_park_blocker() const {
-    return _thread_park_blocker;
-  }
-  bool post_vm_init_hook_enabled() const {
-    return _post_vm_init_hook_enabled;
-  }
-
   // Performs a full ordering comparison using all fields (patch, build, etc.)
   int compare(const JDK_Version& other) const;
 
   /**
    * Performs comparison using only the major version, returning negative
@@ -153,8 +142,22 @@
   }
   static void set_runtime_version(const char* version) {
     _runtime_version = version;
   }
 
+  static const char* runtime_vendor_version() {
+    return _runtime_vendor_version;
+  }
+  static void set_runtime_vendor_version(const char* vendor_version) {
+    _runtime_vendor_version = vendor_version;
+  }
+
+  static const char* runtime_vendor_vm_bug_url() {
+    return _runtime_vendor_vm_bug_url;
+  }
+  static void set_runtime_vendor_vm_bug_url(const char* vendor_vm_bug_url) {
+    _runtime_vendor_vm_bug_url = vendor_vm_bug_url;
+  }
+
 };
 
 #endif // SHARE_RUNTIME_JAVA_HPP
