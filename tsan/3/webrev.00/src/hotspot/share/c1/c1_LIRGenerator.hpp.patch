diff a/src/hotspot/share/c1/c1_LIRGenerator.hpp b/src/hotspot/share/c1/c1_LIRGenerator.hpp
--- a/src/hotspot/share/c1/c1_LIRGenerator.hpp
+++ b/src/hotspot/share/c1/c1_LIRGenerator.hpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2005, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2005, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -40,31 +40,30 @@
 
 
 class LIRGenerator;
 class LIREmitter;
 class Invoke;
-class SwitchRange;
 class LIRItem;
 
 typedef GrowableArray<LIRItem*> LIRItemList;
 
-class SwitchRange: public CompilationResourceObj {
+class C1SwitchRange: public CompilationResourceObj {
  private:
   int _low_key;
   int _high_key;
   BlockBegin* _sux;
  public:
-  SwitchRange(int start_key, BlockBegin* sux): _low_key(start_key), _high_key(start_key), _sux(sux) {}
+  C1SwitchRange(int start_key, BlockBegin* sux): _low_key(start_key), _high_key(start_key), _sux(sux) {}
   void set_high_key(int key) { _high_key = key; }
 
   int high_key() const { return _high_key; }
   int low_key() const { return _low_key; }
   BlockBegin* sux() const { return _sux; }
 };
 
-typedef GrowableArray<SwitchRange*> SwitchRangeArray;
-typedef GrowableArray<SwitchRange*> SwitchRangeList;
+typedef GrowableArray<C1SwitchRange*> SwitchRangeArray;
+typedef GrowableArray<C1SwitchRange*> SwitchRangeList;
 
 class ResolveNode;
 
 typedef GrowableArray<ResolveNode*> NodeList;
 
