diff a/src/hotspot/share/c1/c1_RangeCheckElimination.hpp b/src/hotspot/share/c1/c1_RangeCheckElimination.hpp
--- a/src/hotspot/share/c1/c1_RangeCheckElimination.hpp
+++ b/src/hotspot/share/c1/c1_RangeCheckElimination.hpp
@@ -41,29 +41,33 @@
   IR *_ir;
 
   typedef GrowableArray<BlockBegin*> BlockBeginList;
   typedef GrowableArray<int> IntegerStack;
 
+#ifdef ASSERT
   class Verification : public BlockClosure {
   // RangeCheckEliminator::Verification should never get instatiated on the heap.
   private:
     void* operator new(size_t size) throw();
     void* operator new[](size_t size) throw();
     void operator delete(void* p) { ShouldNotReachHere(); }
     void operator delete[](void* p) { ShouldNotReachHere(); }
 
+    bool can_reach(BlockBegin *start, BlockBegin *end, BlockBegin *dont_use = NULL);
+    bool dominates(BlockBegin *dominator, BlockBegin *block);
+    bool is_backbranch_from_xhandler(BlockBegin* block);
+
     IR *_ir;
     boolArray _used;
     BlockBeginList _current;
     BlockBeginList _successors;
 
   public:
     Verification(IR *ir);
     virtual void block_do(BlockBegin *block);
-    bool can_reach(BlockBegin *start, BlockBegin *end, BlockBegin *dont_use = NULL);
-    bool dominates(BlockBegin *dominator, BlockBegin *block);
   };
+#endif
 
 public:
   // Bounds for an instruction in the form x + c which c integer
   // constant and x another instruction
   class Bound : public CompilationResourceObj {
