diff a/src/hotspot/share/gc/z/zPageTable.inline.hpp b/src/hotspot/share/gc/z/zPageTable.inline.hpp
--- a/src/hotspot/share/gc/z/zPageTable.inline.hpp
+++ b/src/hotspot/share/gc/z/zPageTable.inline.hpp
@@ -27,29 +27,23 @@
 #include "gc/z/zAddress.inline.hpp"
 #include "gc/z/zGranuleMap.inline.hpp"
 #include "gc/z/zPageTable.hpp"
 
 inline ZPage* ZPageTable::get(uintptr_t addr) const {
-  return _map.get(addr).page();
+  assert(!ZAddress::is_null(addr), "Invalid address");
+  return _map.get(ZAddress::offset(addr));
 }
 
-inline bool ZPageTable::is_relocating(uintptr_t addr) const {
-  return _map.get(addr).relocating();
-}
-
-inline ZPageTableIterator::ZPageTableIterator(const ZPageTable* pagetable) :
-    _iter(&pagetable->_map),
+inline ZPageTableIterator::ZPageTableIterator(const ZPageTable* page_table) :
+    _iter(&page_table->_map),
     _prev(NULL) {}
 
 inline bool ZPageTableIterator::next(ZPage** page) {
-  ZPageTableEntry entry;
-
-  while (_iter.next(&entry)) {
-    ZPage* const next = entry.page();
-    if (next != NULL && next != _prev) {
+  for (ZPage* entry; _iter.next(&entry);) {
+    if (entry != NULL && entry != _prev) {
       // Next page found
-      *page = _prev = next;
+      *page = _prev = entry;
       return true;
     }
   }
 
   // No more pages
