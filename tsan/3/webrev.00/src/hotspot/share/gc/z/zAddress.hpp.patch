diff a/src/hotspot/share/gc/z/zAddress.hpp b/src/hotspot/share/gc/z/zAddress.hpp
--- a/src/hotspot/share/gc/z/zAddress.hpp
+++ b/src/hotspot/share/gc/z/zAddress.hpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2015, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2015, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -25,22 +25,34 @@
 #define SHARE_GC_Z_ZADDRESS_HPP
 
 #include "memory/allocation.hpp"
 
 class ZAddress : public AllStatic {
+  friend class ZAddressTest;
+
+private:
+  static void set_good_mask(uintptr_t mask);
+
 public:
+  static void initialize();
+
+  static void flip_to_marked();
+  static void flip_to_remapped();
+
   static bool is_null(uintptr_t value);
   static bool is_bad(uintptr_t value);
   static bool is_good(uintptr_t value);
   static bool is_good_or_null(uintptr_t value);
   static bool is_weak_bad(uintptr_t value);
   static bool is_weak_good(uintptr_t value);
   static bool is_weak_good_or_null(uintptr_t value);
   static bool is_marked(uintptr_t value);
+  static bool is_marked_or_null(uintptr_t value);
   static bool is_finalizable(uintptr_t value);
   static bool is_finalizable_good(uintptr_t value);
   static bool is_remapped(uintptr_t value);
+  static bool is_in(uintptr_t value);
 
   static uintptr_t address(uintptr_t value);
   static uintptr_t offset(uintptr_t value);
   static uintptr_t good(uintptr_t value);
   static uintptr_t good_or_null(uintptr_t value);
@@ -50,18 +62,6 @@
   static uintptr_t marked1(uintptr_t value);
   static uintptr_t remapped(uintptr_t value);
   static uintptr_t remapped_or_null(uintptr_t value);
 };
 
-class ZAddressMasks : public AllStatic {
-  friend class ZAddressTest;
-
-private:
-  static void set_good_mask(uintptr_t mask);
-
-public:
-  static void initialize();
-  static void flip_to_marked();
-  static void flip_to_remapped();
-};
-
 #endif // SHARE_GC_Z_ZADDRESS_HPP
