diff a/src/hotspot/share/gc/g1/g1HeterogeneousHeapYoungGenSizer.cpp b/src/hotspot/share/gc/g1/g1HeterogeneousHeapYoungGenSizer.cpp
--- a/src/hotspot/share/gc/g1/g1HeterogeneousHeapYoungGenSizer.cpp
+++ b/src/hotspot/share/gc/g1/g1HeterogeneousHeapYoungGenSizer.cpp
@@ -21,17 +21,17 @@
  * questions.
  *
  */
 
 #include "precompiled.hpp"
-#include "gc/g1/g1HeterogeneousCollectorPolicy.hpp"
+#include "gc/g1/g1Arguments.hpp"
 #include "gc/g1/g1HeterogeneousHeapYoungGenSizer.hpp"
 #include "gc/g1/heapRegion.hpp"
 
 G1HeterogeneousHeapYoungGenSizer::G1HeterogeneousHeapYoungGenSizer() : G1YoungGenSizer() {
   // will be used later when min and max young size is calculated.
-  _max_young_length = (uint)(G1HeterogeneousCollectorPolicy::reasonable_max_memory_for_young() / HeapRegion::GrainBytes);
+  _max_young_length = (uint)(G1Arguments::reasonable_max_memory_for_young() / HeapRegion::GrainBytes);
 }
 
 // Since heap is sized potentially to larger value accounting for dram + nvdimm, we need to limit
 // max young gen size to the available dram.
 // Call parent class method first and then adjust sizes based on available dram
