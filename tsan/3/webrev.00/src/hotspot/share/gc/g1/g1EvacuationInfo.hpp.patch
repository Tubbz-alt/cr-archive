diff a/src/hotspot/share/gc/g1/g1EvacuationInfo.hpp b/src/hotspot/share/gc/g1/g1EvacuationInfo.hpp
--- a/src/hotspot/share/gc/g1/g1EvacuationInfo.hpp
+++ b/src/hotspot/share/gc/g1/g1EvacuationInfo.hpp
@@ -31,17 +31,18 @@
   uint _collectionset_regions;
   uint _allocation_regions;
   size_t _collectionset_used_before;
   size_t _collectionset_used_after;
   size_t _alloc_regions_used_before;
-  size_t _bytes_copied;
+  size_t _bytes_used;
   uint   _regions_freed;
 
 public:
-  G1EvacuationInfo() : _collectionset_regions(0), _allocation_regions(0), _collectionset_used_before(0),
-                     _collectionset_used_after(0), _alloc_regions_used_before(0),
-                     _bytes_copied(0), _regions_freed(0) { }
+  G1EvacuationInfo() :
+    _collectionset_regions(0), _allocation_regions(0), _collectionset_used_before(0),
+    _collectionset_used_after(0), _alloc_regions_used_before(0),
+    _bytes_used(0), _regions_freed(0) { }
 
   void set_collectionset_regions(uint collectionset_regions) {
     _collectionset_regions = collectionset_regions;
   }
 
@@ -59,12 +60,12 @@
 
   void set_alloc_regions_used_before(size_t used) {
     _alloc_regions_used_before = used;
   }
 
-  void set_bytes_copied(size_t copied) {
-    _bytes_copied = copied;
+  void set_bytes_used(size_t used) {
+    _bytes_used = used;
   }
 
   void set_regions_freed(uint freed) {
     _regions_freed += freed;
   }
@@ -72,10 +73,10 @@
   uint   collectionset_regions()     { return _collectionset_regions; }
   uint   allocation_regions()        { return _allocation_regions; }
   size_t collectionset_used_before() { return _collectionset_used_before; }
   size_t collectionset_used_after()  { return _collectionset_used_after; }
   size_t alloc_regions_used_before() { return _alloc_regions_used_before; }
-  size_t bytes_copied()              { return _bytes_copied; }
+  size_t bytes_used()                { return _bytes_used; }
   uint   regions_freed()             { return _regions_freed; }
 };
 
 #endif // SHARE_GC_G1_G1EVACUATIONINFO_HPP
