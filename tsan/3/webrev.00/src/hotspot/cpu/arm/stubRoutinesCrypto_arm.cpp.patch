diff a/src/hotspot/cpu/arm/stubRoutinesCrypto_arm.cpp b/src/hotspot/cpu/arm/stubRoutinesCrypto_arm.cpp
--- a/src/hotspot/cpu/arm/stubRoutinesCrypto_arm.cpp
+++ b/src/hotspot/cpu/arm/stubRoutinesCrypto_arm.cpp
@@ -127,11 +127,11 @@
   //    Register to = R1;   // destination byte array
   //    Register key = R2;  // expanded key array
   //    Register tbox = R3; // transposition box reference
 
   __ push (RegisterSet(R4, R12) | LR);
-  __ fstmdbd(SP, FloatRegisterSet(D0, 4), writeback);
+  __ fpush(FloatRegisterSet(D0, 4));
   __ sub(SP, SP, 32);
 
   // preserve TBox references
   __ add(R3, R3, arrayOopDesc::base_offset_in_bytes(T_INT));
   __ str(R3, Address(SP, 16));
@@ -306,11 +306,11 @@
   __ rev(R0, R0);
 
   __ str(R0, Address(R9));
 
   __ add(SP, SP, 32);
-  __ fldmiad(SP, FloatRegisterSet(D0, 4), writeback);;
+  __ fpop(FloatRegisterSet(D0, 4));
 
   __ pop(RegisterSet(R4, R12) | PC);
   return start;
 }
 
@@ -324,11 +324,11 @@
   //    Register to = R1;   // destination byte array
   //    Register key = R2;  // expanded key array
   //    Register tbox = R3; // transposition box reference
 
   __ push (RegisterSet(R4, R12) | LR);
-  __ fstmdbd(SP, FloatRegisterSet(D0, 4), writeback);
+  __ fpush(FloatRegisterSet(D0, 4));
   __ sub(SP, SP, 32);
 
   // retrieve key length
   __ ldr(R9, Address(R2, arrayOopDesc::length_offset_in_bytes() - arrayOopDesc::base_offset_in_bytes(T_INT)));
 
@@ -519,11 +519,11 @@
   __ eor(R0, R0, R11);
   __ rev(R0, R0);
   __ str(R0, Address(R9));
 
   __ add(SP, SP, 32);
-  __ fldmiad(SP, FloatRegisterSet(D0, 4), writeback);;
+  __ fpop(FloatRegisterSet(D0, 4));
   __ pop(RegisterSet(R4, R12) | PC);
 
   return start;
 }
 
@@ -678,11 +678,11 @@
   __ b(cbc_done, eq);
 
   Label decrypt_8_blocks;
   int quad = 1;
   // Process 8 blocks in parallel
-  __ fstmdbd(SP, FloatRegisterSet(D8, 8), writeback);
+  __ fpush(FloatRegisterSet(D8, 8));
   __ sub(SP, SP, 40);
 
   // record output buffer end address (used as a block counter)
   Address output_buffer_end(SP, 16);
   __ add(R5, R1, R4);
@@ -1018,11 +1018,11 @@
   __ add(R0, R0, 16);
 
   __ b(decrypt_8_blocks, ne);
 
   __ add(SP, SP, 40);
-  __ fldmiad(SP, FloatRegisterSet(D8, 8), writeback);;
+  __ fpop(FloatRegisterSet(D8, 8));
   }
 
   __ bind(cbc_done);
   __ pop(RegisterSet(R4, R12) | LR);
   __ ldr(R0, Address(SP));
