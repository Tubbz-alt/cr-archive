diff a/src/java.rmi/share/man/rmiregistry.1 b/src/java.rmi/share/man/rmiregistry.1
--- a/src/java.rmi/share/man/rmiregistry.1
+++ b/src/java.rmi/share/man/rmiregistry.1
@@ -1,16 +1,15 @@
-'\" t
-.\" Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
+.\" Copyright (c) 1994, 2019, Oracle and/or its affiliates. All rights reserved.
 .\" DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 .\"
 .\" This code is free software; you can redistribute it and/or modify it
 .\" under the terms of the GNU General Public License version 2 only, as
 .\" published by the Free Software Foundation.
 .\"
 .\" This code is distributed in the hope that it will be useful, but WITHOUT
 .\" ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-.\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+.\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 .\" version 2 for more details (a copy is included in the LICENSE file that
 .\" accompanied this code).
 .\"
 .\" You should have received a copy of the GNU General Public License version
 .\" 2 along with this work; if not, write to the Free Software Foundation,
@@ -18,81 +17,76 @@
 .\"
 .\" Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 .\" or visit www.oracle.com if you need additional information or have any
 .\" questions.
 .\"
-.\"     Arch: generic
-.\"     Software: JDK 8
-.\"     Date: 21 November 2013
-.\"     SectDesc: Remote Method Invocation (RMI) Tools
-.\"     Title: rmiregistry.1
+.\" Automatically generated by Pandoc 2.3.1
 .\"
-.if n .pl 99999
-.TH rmiregistry 1 "21 November 2013" "JDK 8" "Remote Method Invocation (RMI) Tools"
-.\" -----------------------------------------------------------------
-.\" * Define some portability stuff
-.\" -----------------------------------------------------------------
-.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-.\" http://bugs.debian.org/507673
-.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
-.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-.ie \n(.g .ds Aq \(aq
-.el       .ds Aq '
-.\" -----------------------------------------------------------------
-.\" * set default formatting
-.\" -----------------------------------------------------------------
-.\" disable hyphenation
-.nh
-.\" disable justification (adjust text to left margin only)
-.ad l
-.\" -----------------------------------------------------------------
-.\" * MAIN CONTENT STARTS HERE *
-.\" -----------------------------------------------------------------
-
-.SH NAME    
-rmiregistry \- Starts a remote object registry on the specified port on the current host\&.
-.SH SYNOPSIS    
-.sp     
-.nf     
-
-\fBrmiregistry\fR [ \fIport\fR ]
-.fi     
-.sp     
-.TP     
-\fIport\fR
-The number of a \f3port\fR on the current host at which to start the remote object registry\&.
-.SH DESCRIPTION    
-The \f3rmiregistry\fR command creates and starts a remote object registry on the specified port on the current host\&. If the port is omitted, then the registry is started on port 1099\&. The \f3rmiregistry\fR command produces no output and is typically run in the background, for example:
-.sp     
-.nf     
-\f3rmiregistry &\fP
-.fi     
-.nf     
-\f3\fP
-.fi     
-.sp     
-A remote object registry is a bootstrap naming service that is used by RMI servers on the same host to bind remote objects to names\&. Clients on local and remote hosts can then look up remote objects and make remote method invocations\&.
+.TH "RMIREGISTRY" "1" "2020" "JDK 14" "JDK Commands"
+.hy
+.SH NAME
 .PP
-The registry is typically used to locate the first remote object on which an application needs to call methods\&. That object then provides application-specific support for finding other objects\&.
+rmiregistry \- create and start a remote object registry on the
+specified port on the current host
+.SH SYNOPSIS
 .PP
-The methods of the \f3java\&.rmi\&.registry\&.LocateRegistry\fR class are used to get a registry operating on the local host or local host and port\&.
+\f[CB]rmiregistry\f[R] [\f[I]options\f[R]] [\f[I]port\f[R]]
+.TP
+.B \f[I]options\f[R]
+This represents the option for the \f[CB]rmiregistry\f[R] command.
+See \f[B]Options\f[R]
+.RS
+.RE
+.TP
+.B \f[I]port\f[R]
+The number of a port on the current host at which to start the remote
+object registry.
+.RS
+.RE
+.SH DESCRIPTION
+.PP
+The \f[CB]rmiregistry\f[R] command creates and starts a remote object
+registry on the specified port on the current host.
+If the port is omitted, then the registry is started on port 1099.
+The \f[CB]rmiregistry\f[R] command produces no output and is typically run
+in the background, for example:
+.RS
+.PP
+\f[CB]rmiregistry\ &\f[R]
+.RE
+.PP
+A remote object registry is a bootstrap naming service that\[aq]s used
+by RMI servers on the same host to bind remote objects to names.
+Clients on local and remote hosts can then look up remote objects and
+make remote method invocations.
+.PP
+The registry is typically used to locate the first remote object on
+which an application needs to call methods.
+That object then provides application\-specific support for finding
+other objects.
+.PP
+The methods of the \f[CB]java.rmi.registry.LocateRegistry\f[R] class are
+used to get a registry operating on the local host or local host and
+port.
 .PP
-The URL-based methods of the \f3java\&.rmi\&.Naming\fR class operate on a registry and can be used to look up a remote object on any host and on the local host\&. Bind a simple name (string) to a remote object, rebind a new name to a remote object (overriding the old binding), unbind a remote object, and list the URL bound in the registry\&.
-.SH OPTIONS    
+The URL\-based methods of the \f[CB]java.rmi.Naming\f[R] class operate on
+a registry and can be used to:
+.IP \[bu] 2
+Bind the specified name to a remote object
+.IP \[bu] 2
+Return an array of the names bound in the registry
+.IP \[bu] 2
+Return a reference, a stub, for the remote object associated with the
+specified name
+.IP \[bu] 2
+Rebind the specified name to a new remote object
+.IP \[bu] 2
+Destroy the binding for the specified name that\[aq]s associated with a
+remote object
+.SH OPTIONS
 .TP
--J
-.br
-Used with any Java option to pass the option following the \f3-J\fR (no spaces between the \f3-J\fR and the option) to the Java interpreter\&.
-.SH SEE\ ALSO    
-.TP 0.2i    
-\(bu
-java(1)
-.TP 0.2i    
-\(bu
-\f3java\&.rmi\&.registry\&.LocateRegistry\fR class description at http://docs\&.oracle\&.com/javase/8/docs/api/java/rmi/registry/LocateRegistry\&.html
-.TP 0.2i    
-\(bu
-\f3java\&.rmi\&.Naming class description\fR at http://docs\&.oracle\&.com/javase/8/docs/api/java/rmi/Naming\&.html
+.B \f[CB]\-J\f[R]\f[I]option\f[R]
+Used with any Java option to pass the \f[I]option\f[R] following the
+\f[CB]\-J\f[R] (no spaces between the \f[CB]\-J\f[R] and the option) to the
+Java interpreter.
+.RS
 .RE
-.br
-'pl 8.5i
-'bp
