diff a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/ui/JavaThreadsPanel.java b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/ui/JavaThreadsPanel.java
--- a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/ui/JavaThreadsPanel.java
+++ b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/ui/JavaThreadsPanel.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2000, 2004, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -457,16 +457,17 @@
         crashed.ifPresent(this::showThreadStackMemory);
         return crashed.isPresent();
     }
 
     private void cache() {
-        Threads threads = VM.getVM().getThreads();
-        for (JavaThread t = threads.first(); t != null; t = t.next()) {
-            if (t.isJavaThread()) {
-                cachedThreads.add(new CachedThread(t));
-            }
+      Threads threads = VM.getVM().getThreads();
+      for (int i = 0; i < threads.getNumberOfThreads(); i++) {
+        JavaThread t = threads.getJavaThreadAt(i);
+        if (t.isJavaThread()) {
+            cachedThreads.add(new CachedThread(t));
         }
+      }
     }
 
     private void decache() {
         cachedThreads.clear();
     }
