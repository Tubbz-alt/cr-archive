diff a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/tools/JMap.java b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/tools/JMap.java
--- a/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/tools/JMap.java
+++ b/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/tools/JMap.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2004, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2004, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -180,13 +180,12 @@
         try {
             HeapGraphWriter hgw = new HeapHprofBinWriter();
             hgw.write(fileName);
             System.out.println("heap written to " + fileName);
             return true;
-        } catch (IOException | RuntimeException exp) {
-            System.err.println(exp.getMessage());
-            return false;
+        } catch (IOException exp) {
+            throw new RuntimeException(exp);
         }
     }
 
     public boolean writeHeapHprofBin() {
         return writeHeapHprofBin("heap.bin");
@@ -197,12 +196,11 @@
             HeapGraphWriter hgw = new HeapGXLWriter();
             hgw.write(fileName);
             System.out.println("heap written to " + fileName);
             return true;
         } catch (IOException exp) {
-            System.err.println(exp.getMessage());
-            return false;
+            throw new RuntimeException(exp);
         }
     }
 
     public boolean writeHeapGXL() {
         return writeHeapGXL("heap.xml");
