diff a/src/jdk.internal.le/share/classes/jdk/internal/org/jline/terminal/Terminal.java b/src/jdk.internal.le/share/classes/jdk/internal/org/jline/terminal/Terminal.java
--- a/src/jdk.internal.le/share/classes/jdk/internal/org/jline/terminal/Terminal.java
+++ b/src/jdk.internal.le/share/classes/jdk/internal/org/jline/terminal/Terminal.java
@@ -2,11 +2,11 @@
  * Copyright (c) 2002-2018, the original author or authors.
  *
  * This software is distributable under the BSD license. See the terms of the
  * BSD license in the documentation provided with this software.
  *
- * http://www.opensource.org/licenses/bsd-license.php
+ * https://opensource.org/licenses/BSD-3-Clause
  */
 package jdk.internal.org.jline.terminal;
 
 import java.io.Closeable;
 import java.io.Flushable;
@@ -109,11 +109,11 @@
      * terminal output stream directly. In the usual cases,
      * use the {@link #writer()} instead.
      *
      * @return The output stream
      *
-     * @see #writer();
+     * @see #writer()
      */
     OutputStream output();
 
     //
     // Input control
@@ -181,10 +181,15 @@
 
     Attributes getAttributes();
 
     void setAttributes(Attributes attr);
 
+    /**
+     * Retrieve the size of the visible window
+     * @return the visible terminal size
+     * @see #getBufferSize()
+     */
     Size getSize();
 
     void setSize(Size size);
 
     default int getWidth() {
@@ -193,10 +198,26 @@
 
     default int getHeight() {
         return getSize().getRows();
     }
 
+    /**
+     * Retrieve the size of the window buffer.
+     * Some terminals can be configured to have a buffer size
+     * larger than the visible window size and provide scroll bars.
+     * In such cases, this method should attempt to return the size
+     * of the whole buffer.  The <code>getBufferSize()</code> method
+     * can be used to avoid wrapping when using the terminal in a line
+     * editing mode, while the {@link #getSize()} method should be
+     * used when using full screen mode.
+     * @return the terminal buffer size
+     * @see #getSize()
+     */
+    default Size getBufferSize() {
+        return getSize();
+    }
+
     void flush();
 
     //
     // Infocmp capabilities
     //
