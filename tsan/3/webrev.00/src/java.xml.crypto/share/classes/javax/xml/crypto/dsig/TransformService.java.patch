diff a/src/java.xml.crypto/share/classes/javax/xml/crypto/dsig/TransformService.java b/src/java.xml.crypto/share/classes/javax/xml/crypto/dsig/TransformService.java
--- a/src/java.xml.crypto/share/classes/javax/xml/crypto/dsig/TransformService.java
+++ b/src/java.xml.crypto/share/classes/javax/xml/crypto/dsig/TransformService.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2005, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2005, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -139,13 +139,22 @@
      * {@link Security#getProperty(String) Security} property to determine
      * the preferred provider order for the specified algorithm. This
      * may be different than the order of providers returned by
      * {@link Security#getProviders() Security.getProviders()}.
      *
-     * @param algorithm the URI of the algorithm
+     * @param algorithm the URI of the algorithm. See the
+     *    {@code TransformService} section in the
+     *    <a href=
+     *    "{@docRoot}/../specs/security/standard-names.html#xml-signature-transform-transformservice-algorithms">
+     *    Java Security Standard Algorithm Names Specification</a> for a list of
+     *    standard transform algorithms.
      * @param mechanismType the type of the XML processing mechanism and
-     *   representation
+     *    representation. See the {@code TransformService} section in the
+     *    <a href=
+     *    "{@docRoot}/../specs/security/standard-names.html#xml-signature-xmlsignaturefactorykeyinfofactorytransformservice-mechanisms">
+     *    Java Security Standard Algorithm Names Specification</a> for a list of
+     *    standard mechanism types.
      * @return a new <code>TransformService</code>
      * @throws NullPointerException if <code>algorithm</code> or
      *   <code>mechanismType</code> is  <code>null</code>
      * @throws NoSuchAlgorithmException if no <code>Provider</code> supports a
      *   <code>TransformService</code> implementation for the specified
@@ -191,13 +200,22 @@
      * algorithm URI (ex: {@link Transform#XPATH2}) and mechanism type
      * (ex: DOM) as supplied by the specified provider. Note that the specified
      * <code>Provider</code> object does not have to be registered in the
      * provider list.
      *
-     * @param algorithm the URI of the algorithm
+     * @param algorithm the URI of the algorithm. See the
+     *    {@code TransformService} section in the
+     *    <a href=
+     *    "{@docRoot}/../specs/security/standard-names.html#xml-signature-transform-transformservice-algorithms">
+     *    Java Security Standard Algorithm Names Specification</a> for a list of
+     *    standard transform algorithms.
      * @param mechanismType the type of the XML processing mechanism and
-     *   representation
+     *    representation. See the {@code TransformService} section in the
+     *    <a href=
+     *    "{@docRoot}/../specs/security/standard-names.html#xml-signature-xmlsignaturefactorykeyinfofactorytransformservice-mechanisms">
+     *    Java Security Standard Algorithm Names Specification</a> for a list of
+     *    standard mechanism types.
      * @param provider the <code>Provider</code> object
      * @return a new <code>TransformService</code>
      * @throws NullPointerException if <code>provider</code>,
      *   <code>algorithm</code>, or <code>mechanismType</code> is
      *   <code>null</code>
@@ -244,13 +262,22 @@
      * must be registered in the security provider list.
      *
      * <p>Note that the list of registered providers may be retrieved via
      * the {@link Security#getProviders() Security.getProviders()} method.
      *
-     * @param algorithm the URI of the algorithm
+     * @param algorithm the URI of the algorithm. See the
+     *    {@code TransformService} section in the
+     *    <a href=
+     *    "{@docRoot}/../specs/security/standard-names.html#xml-signature-transform-transformservice-algorithms">
+     *    Java Security Standard Algorithm Names Specification</a> for a list of
+     *    standard transform algorithms.
      * @param mechanismType the type of the XML processing mechanism and
-     *   representation
+     *    representation. See the {@code TransformService} section in the
+     *    <a href=
+     *    "{@docRoot}/../specs/security/standard-names.html#xml-signature-xmlsignaturefactorykeyinfofactorytransformservice-mechanisms">
+     *    Java Security Standard Algorithm Names Specification</a> for a list of
+     *    standard mechanism types.
      * @param provider the string name of the provider
      * @return a new <code>TransformService</code>
      * @throws NoSuchProviderException if the specified provider is not
      *   registered in the security provider list
      * @throws NullPointerException if <code>provider</code>,
