diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/Messager.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/Messager.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/Messager.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/Messager.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1997, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1997, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -57,11 +57,10 @@
  *  This code and its internal interfaces are subject to change or
  *  deletion without notice.</b>
  *
  * @see java.util.ResourceBundle
  * @see java.text.MessageFormat
- * @author Neal Gafter (rewrite)
  */
 public class Messager extends Log implements Reporter {
     final Context context;
 
     /** Get the current messager, which is also the compiler log. */
@@ -122,13 +121,15 @@
                 return;
             case WARNING:
             case MANDATORY_WARNING:
                 printWarning(e, msg);
                 return;
-            default:
-                printWarning(e, msg);
+            case NOTE:
+                printNotice(e, msg);
                 return;
+            default:
+                throw new IllegalArgumentException(String.format("unexpected option %s", kind));
         }
     }
 
     final String programName;
 
@@ -199,10 +200,13 @@
         if (e == null) {
             return programName;
         }
         JavacTrees trees = JavacTrees.instance(context);
         TreePath path = trees.getPath(e);
+        if (path == null) {
+            return programName;
+        }
         DocSourcePositions sourcePositions = trees.getSourcePositions();
         JCTree tree = trees.getTree(e);
         CompilationUnitTree cu = path.getCompilationUnit();
         long spos = sourcePositions.getStartPosition(cu, tree);
         long lineNumber = cu.getLineMap().getLineNumber(spos);
