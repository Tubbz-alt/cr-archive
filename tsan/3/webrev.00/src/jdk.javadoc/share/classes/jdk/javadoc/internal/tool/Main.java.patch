diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/Main.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/Main.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/Main.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/Main.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -36,13 +36,13 @@
  */
 
 public class Main {
 
     /**
-     * Constructor should never be called.
+     * This constructor should never be called.
      */
-    private Main() {}
+    private Main() { throw new AssertionError(); }
 
     /**
      * The main entry point called by the launcher. This will call
      * System.exit with an appropriate return value.
      *
@@ -86,11 +86,11 @@
     public static int execute(String[] args, PrintWriter outWriter, PrintWriter errWriter) {
         Start jdoc = new Start(outWriter, errWriter);
         return jdoc.begin(args).exitCode;
     }
 
-    public static enum Result {
+    public enum Result {
         /** completed with no errors */
         OK(0),
         /** Completed with reported errors */
         ERROR(1),
         /** Bad command-line arguments */
@@ -98,12 +98,10 @@
         /** System error or resource exhaustion */
         SYSERR(3),
         /** Terminated abnormally */
         ABNORMAL(4);
 
-        private static final long serialVersionUID = 1L;
-
         Result(int exitCode) {
             this.exitCode = exitCode;
         }
 
         public boolean isOK() {
