diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/DocFileElement.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/DocFileElement.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/DocFileElement.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/DocFileElement.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2015, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2015, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -23,23 +23,16 @@
  * questions.
  */
 
 package jdk.javadoc.internal.doclets.toolkit;
 
-import java.lang.annotation.Annotation;
-import java.util.Set;
-
-import javax.lang.model.element.AnnotationMirror;
 import javax.lang.model.element.Element;
-import javax.lang.model.element.ElementKind;
-import javax.lang.model.element.ElementVisitor;
-import javax.lang.model.element.Name;
+import javax.lang.model.element.ModuleElement;
 import javax.lang.model.element.PackageElement;
-import javax.lang.model.type.TypeMirror;
 import javax.tools.FileObject;
 
-import jdk.javadoc.doclet.DocletEnvironment;
+import jdk.javadoc.internal.doclets.toolkit.util.Utils;
 
 /**
  * This is a pseudo element wrapper for doc-files html contents, essentially to
  * associate the doc-file's html documentation's DocCommentTree to an element.
  *
@@ -48,32 +41,36 @@
  *  This code and its internal interfaces are subject to change or
  *  deletion without notice.</b>
  */
 public class DocFileElement implements DocletElement {
 
-    private final Element element;
+    private final PackageElement packageElement;
     private final FileObject fo;
 
-    public DocFileElement(Element element, FileObject fo) {
-        this.element = element;
+    public DocFileElement(Utils utils, Element element, FileObject fo) {
         this.fo = fo;
-    }
 
-    @Override
-    public PackageElement getPackageElement() {
         switch(element.getKind()) {
             case MODULE:
-                // uncomment to support doc-files in modules
-                // return configuration.workArounds.getUnnamedPackage();
-                throw new UnsupportedOperationException("not implemented");
+                ModuleElement moduleElement = (ModuleElement) element;
+                packageElement = utils.elementUtils.getPackageElement(moduleElement, "");
+                break;
+
             case PACKAGE:
-                return (PackageElement)element;
+                packageElement = (PackageElement) element;
+                break;
+
             default:
                 throw new AssertionError("unknown kind: " + element.getKind());
         }
     }
 
+    @Override
+    public PackageElement getPackageElement() {
+        return packageElement;
+    }
+
     @Override
     public FileObject getFileObject() {
         return fo;
     }
 
