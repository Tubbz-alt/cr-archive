diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/PropertyWriter.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/PropertyWriter.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/PropertyWriter.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/PropertyWriter.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -23,93 +23,91 @@
  * questions.
  */
 
 package jdk.javadoc.internal.doclets.toolkit;
 
-import java.io.*;
-
 import javax.lang.model.element.ExecutableElement;
 import javax.lang.model.element.TypeElement;
 
 /**
  * The interface for writing property output.
  *
  *  <p><b>This is NOT part of any supported API.
  *  If you write code that depends on this, you do so at your own risk.
  *  This code and its internal interfaces are subject to change or
  *  deletion without notice.</b>
- *
- * @author Jamie Ho
- * @author Bhavesh Patel (Modified)
  */
 
 public interface PropertyWriter {
 
     /**
      * Get the property details tree header.
      *
-     * @param typeElement the class being documented
      * @param memberDetailsTree the content tree representing member details
      * @return content tree for the property details header
      */
-    public Content getPropertyDetailsTreeHeader(TypeElement typeElement,
-            Content memberDetailsTree);
+    Content getPropertyDetailsTreeHeader(Content memberDetailsTree);
 
     /**
      * Get the property documentation tree header.
      *
      * @param property the property being documented
-     * @param propertyDetailsTree the content tree representing property details
      * @return content tree for the property documentation header
      */
-    public Content getPropertyDocTreeHeader(ExecutableElement property,
-            Content propertyDetailsTree);
+    Content getPropertyDocTreeHeader(ExecutableElement property);
 
     /**
      * Get the signature for the given property.
      *
      * @param property the property being documented
      * @return content tree for the property signature
      */
-    public Content getSignature(ExecutableElement property);
+    Content getSignature(ExecutableElement property);
 
     /**
      * Add the deprecated output for the given property.
      *
      * @param property the property being documented
      * @param propertyDocTree content tree to which the deprecated information will be added
      */
-    public void addDeprecated(ExecutableElement property, Content propertyDocTree);
+    void addDeprecated(ExecutableElement property, Content propertyDocTree);
 
     /**
      * Add the comments for the given property.
      *
      * @param property the property being documented
      * @param propertyDocTree the content tree to which the comments will be added
      */
-    public void addComments(ExecutableElement property, Content propertyDocTree);
+    void addComments(ExecutableElement property, Content propertyDocTree);
 
     /**
      * Add the tags for the given property.
      *
      * @param property the property being documented
      * @param propertyDocTree the content tree to which the tags will be added
      */
-    public void addTags(ExecutableElement property, Content propertyDocTree);
+    void addTags(ExecutableElement property, Content propertyDocTree);
 
     /**
      * Get the property details tree.
      *
+     * @param memberDetailsTreeHeader the content tree representing member details header
      * @param memberDetailsTree the content tree representing member details
      * @return content tree for the property details
      */
-    public Content getPropertyDetails(Content memberDetailsTree);
+    Content getPropertyDetails(Content memberDetailsTreeHeader, Content memberDetailsTree);
 
     /**
      * Get the property documentation.
      *
      * @param propertyDocTree the content tree representing property documentation
-     * @param isLastContent true if the content to be added is the last content
      * @return content tree for the property documentation
      */
-    public Content getPropertyDoc(Content propertyDocTree, boolean isLastContent);
+    Content getPropertyDoc(Content propertyDocTree);
+
+    /**
+     * Gets the member header tree.
+     *
+     * @return a content tree for the member header
+     */
+    Content getMemberTreeHeader();
 }
