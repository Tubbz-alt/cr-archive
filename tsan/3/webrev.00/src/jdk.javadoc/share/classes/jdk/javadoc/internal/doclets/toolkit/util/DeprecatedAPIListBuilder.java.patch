diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/DeprecatedAPIListBuilder.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/DeprecatedAPIListBuilder.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/DeprecatedAPIListBuilder.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/DeprecatedAPIListBuilder.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1998, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1998, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -39,21 +39,19 @@
  *
  *  <p><b>This is NOT part of any supported API.
  *  If you write code that depends on this, you do so at your own risk.
  *  This code and its internal interfaces are subject to change or
  *  deletion without notice.</b>
- *
- * @author Atul M Dambalkar
  */
 public class DeprecatedAPIListBuilder {
     /**
      * List of deprecated type Lists.
      */
     private final Map<DeprElementKind, SortedSet<Element>> deprecatedMap;
     private final BaseConfiguration configuration;
     private final Utils utils;
-    public static enum DeprElementKind {
+    public enum DeprElementKind {
         REMOVAL,
         MODULE,
         PACKAGE,
         INTERFACE,
         CLASS,
@@ -192,11 +190,11 @@
     }
 
     /**
      * Return true if the list of a given type has size greater than 0.
      *
-     * @param type the type of list being checked.
+     * @param kind the type of list being checked.
      */
     public boolean hasDocumentation(DeprElementKind kind) {
         return !deprecatedMap.get(kind).isEmpty();
     }
 }
