diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/taglets/BasePropertyTaglet.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/taglets/BasePropertyTaglet.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/taglets/BasePropertyTaglet.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/taglets/BasePropertyTaglet.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2001, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2001, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -27,10 +27,11 @@
 
 import java.util.EnumSet;
 import javax.lang.model.element.Element;
 
 import com.sun.source.doctree.DocTree;
+import jdk.javadoc.doclet.Taglet.Location;
 import jdk.javadoc.internal.doclets.toolkit.Content;
 
 /**
  * An abstract class that implements the {@link Taglet} interface and
  * serves as a base for JavaFX property getter and setter taglets.
@@ -42,30 +43,21 @@
  *
  */
 public abstract class BasePropertyTaglet extends BaseTaglet {
 
     public BasePropertyTaglet(String name) {
-        super(name, false, EnumSet.of(Site.METHOD));
+        super(name, false, EnumSet.of(Location.METHOD));
     }
 
     /**
-     * This method returns the text to be put in the resulting javadoc before
-     * the property name.
+     * Returns the text to be included in the documentation before the property name.
      *
-     * @param tagletWriter the taglet writer for output
-     * @return the string to be put in the resulting javadoc.
+     * @param tagletWriter the taglet-writer used by the doclet
+     * @return the text to be included in the documentation before the property name
      */
     abstract String getText(TagletWriter tagletWriter);
 
-    /**
-     * Given the <code>Tag</code> representation of this custom
-     * tag, return its string representation, which is output
-     * to the generated page.
-     * @param element
-     * @param tag the <code>Tag</code> representation of this custom tag.
-     * @param tagletWriter the taglet writer for output.
-     * @return the TagletOutput representation of this <code>Tag</code>.
-     */
+    @Override
     public Content getTagletOutput(Element element, DocTree tag, TagletWriter tagletWriter) {
         return tagletWriter.propertyTagOutput(element, tag, getText(tagletWriter));
     }
 }
