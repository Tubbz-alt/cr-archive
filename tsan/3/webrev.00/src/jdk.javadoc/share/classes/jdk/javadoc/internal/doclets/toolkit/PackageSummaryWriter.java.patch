diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/PackageSummaryWriter.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/PackageSummaryWriter.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/PackageSummaryWriter.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/PackageSummaryWriter.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -36,131 +36,133 @@
  *
  *  <p><b>This is NOT part of any supported API.
  *  If you write code that depends on this, you do so at your own risk.
  *  This code and its internal interfaces are subject to change or
  *  deletion without notice.</b>
- *
- * @author Jamie Ho
- * @author Bhavesh Patel (Modified)
  */
 
 public interface PackageSummaryWriter {
 
     /**
      * Get the header for the summary.
      *
      * @param heading Package name.
      * @return the header to be added to the content tree
      */
-    public abstract Content getPackageHeader(String heading);
+    Content getPackageHeader(String heading);
 
     /**
      * Get the header for the package content.
      *
      * @return a content tree for the package content header
      */
-    public abstract Content getContentHeader();
+    Content getContentHeader();
 
     /**
      * Get the header for the package summary.
      *
      * @return a content tree with the package summary header
      */
-    public abstract Content getSummaryHeader();
+    Content getSummaryHeader();
 
     /**
      * Adds the table of interfaces to the documentation tree.
      *
      * @param interfaces the interfaces to document.
      * @param summaryContentTree the content tree to which the summaries will be added
      */
-    public abstract void addInterfaceSummary(SortedSet<TypeElement> interfaces,
-            Content summaryContentTree);
+    void addInterfaceSummary(SortedSet<TypeElement> interfaces, Content summaryContentTree);
 
     /**
      * Adds the table of classes to the documentation tree.
      *
      * @param classes the classes to document.
      * @param summaryContentTree the content tree to which the summaries will be added
      */
-    public abstract void addClassSummary(SortedSet<TypeElement> classes,
-            Content summaryContentTree);
+    void addClassSummary(SortedSet<TypeElement> classes, Content summaryContentTree);
 
     /**
      * Adds the table of enums to the documentation tree.
      *
      * @param enums the enums to document.
      * @param summaryContentTree the content tree to which the summaries will be added
      */
-    public abstract void addEnumSummary(SortedSet<TypeElement> enums,
-            Content summaryContentTree);
+    void addEnumSummary(SortedSet<TypeElement> enums, Content summaryContentTree);
+
+    /**
+     * Adds the table of records to the documentation tree.
+     *
+     * @param records the records to document.
+     * @param summaryContentTree the content tree to which the summaries will be added
+     */
+    void addRecordSummary(SortedSet<TypeElement> records, Content summaryContentTree);
 
     /**
      * Adds the table of exceptions to the documentation tree.
      *
      * @param exceptions the exceptions to document.
      * @param summaryContentTree the content tree to which the summaries will be added
      */
-    public abstract void addExceptionSummary(SortedSet<TypeElement> exceptions,
-            Content summaryContentTree);
+    void addExceptionSummary(SortedSet<TypeElement> exceptions, Content summaryContentTree);
 
     /**
      * Adds the table of errors to the documentation tree.
      *
      * @param errors the errors to document.
      * @param summaryContentTree the content tree to which the summaries will be added
      */
-    public abstract void addErrorSummary(SortedSet<TypeElement> errors,
-            Content summaryContentTree);
+    void addErrorSummary(SortedSet<TypeElement> errors, Content summaryContentTree);
 
     /**
      * Adds the table of annotation types to the documentation tree.
      *
      * @param annoTypes the annotation types to document.
      * @param summaryContentTree the content tree to which the summaries will be added
      */
-    public abstract void addAnnotationTypeSummary(SortedSet<TypeElement> annoTypes,
-            Content summaryContentTree);
+    void addAnnotationTypeSummary(SortedSet<TypeElement> annoTypes, Content summaryContentTree);
 
     /**
      * Adds the package description from the "packages.html" file to the documentation
      * tree.
      *
      * @param packageContentTree the content tree to which the package description
      *                           will be added
      */
-    public abstract void addPackageDescription(Content packageContentTree);
+    void addPackageDescription(Content packageContentTree);
 
     /**
      * Adds the tag information from the "packages.html" file to the documentation
      * tree.
      *
      * @param packageContentTree the content tree to which the package tags will
      *                           be added
      */
-    public abstract void addPackageTags(Content packageContentTree);
+    void addPackageTags(Content packageContentTree);
 
     /**
      * Adds the tag information from the "packages.html" or "package-info.java" file to the
      * documentation tree.
      *
-     * @param contentTree the content tree to which the package content tree will be added
      * @param packageContentTree the package content tree to be added
      */
-    public abstract void addPackageContent(Content contentTree, Content packageContentTree);
+    void addPackageContent(Content packageContentTree);
 
     /**
      * Adds the footer to the documentation tree.
-     *
-     * @param contentTree the tree to which the footer will be added
      */
-    public abstract void addPackageFooter(Content contentTree);
+    void addPackageFooter();
 
     /**
      * Print the package summary document.
      *
      * @param contentTree the content tree that will be printed
      * @throws DocFileIOException if there is a problem while writing the document
      */
-    public abstract void printDocument(Content contentTree) throws DocFileIOException;
+    void printDocument(Content contentTree) throws DocFileIOException;
 
+    /**
+     * Gets the package summary tree.
+     * @param summaryContentTree the content tree representing the package summary
+     * @return a content tree for the package summary
+     */
+    Content getPackageSummary(Content summaryContentTree);
 }
