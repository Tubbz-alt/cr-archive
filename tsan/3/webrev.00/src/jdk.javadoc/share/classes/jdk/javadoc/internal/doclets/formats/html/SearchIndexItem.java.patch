diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/SearchIndexItem.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/SearchIndexItem.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/SearchIndexItem.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/SearchIndexItem.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2015, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2015, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -49,10 +49,11 @@
     private String containingModule = "";
     private String containingPackage = "";
     private String containingClass = "";
     private String holder = "";
     private String description = "";
+    private boolean systemProperty;
 
     public void setLabel(String l) {
         label = l;
     }
 
@@ -98,62 +99,72 @@
 
     public String getDescription() {
         return description;
     }
 
+    public void setSystemProperty(boolean value) {
+        systemProperty = value;
+    }
+
+    public boolean isSystemProperty() {
+        return systemProperty;
+    }
+
+    @Override
     public String toString() {
-        StringBuilder item = new StringBuilder("");
+        // TODO: Additional processing is required, see JDK-8238495
+        StringBuilder item = new StringBuilder();
         switch (category) {
-        case MODULES:
-            item.append("{")
-                    .append("\"l\":\"").append(label).append("\"")
-                    .append("}");
-            break;
-        case PACKAGES:
-            item.append("{");
-            if (!containingModule.isEmpty()) {
-                item.append("\"m\":\"").append(containingModule).append("\",");
-            }
-            item.append("\"l\":\"").append(label).append("\"");
-            if (!url.isEmpty()) {
-                item.append(",\"url\":\"").append(url).append("\"");
-            }
-            item.append("}");
-            break;
-        case TYPES:
-            item.append("{");
-            if (!containingPackage.isEmpty()) {
-                item.append("\"p\":\"").append(containingPackage).append("\",");
-            }
-            item.append("\"l\":\"").append(label).append("\"");
-            if (!url.isEmpty()) {
-                item.append(",\"url\":\"").append(url).append("\"");
-            }
-            item.append("}");
-            break;
-        case MEMBERS:
-            item.append("{")
-                    .append("\"p\":\"").append(containingPackage).append("\",")
-                    .append("\"c\":\"").append(containingClass).append("\",")
-                    .append("\"l\":\"").append(label).append("\"");
-            if (!url.isEmpty()) {
-                item.append(",\"url\":\"").append(url).append("\"");
-            }
-            item.append("}");
-            break;
-        case SEARCH_TAGS:
-            item.append("{")
-                    .append("\"l\":\"").append(label).append("\",")
-                    .append("\"h\":\"").append(holder).append("\",");
-            if (!description.isEmpty()) {
-                item.append("\"d\":\"").append(description).append("\",");
-            }
-            item.append("\"u\":\"").append(url).append("\"")
-                    .append("}");
-            break;
-        default:
-            throw new IllegalStateException("category not set");
+            case MODULES:
+                item.append("{")
+                        .append("\"l\":\"").append(label).append("\"")
+                        .append("}");
+                break;
+            case PACKAGES:
+                item.append("{");
+                if (!containingModule.isEmpty()) {
+                    item.append("\"m\":\"").append(containingModule).append("\",");
+                }
+                item.append("\"l\":\"").append(label).append("\"");
+                if (!url.isEmpty()) {
+                    item.append(",\"u\":\"").append(url).append("\"");
+                }
+                item.append("}");
+                break;
+            case TYPES:
+                item.append("{");
+                if (!containingPackage.isEmpty()) {
+                    item.append("\"p\":\"").append(containingPackage).append("\",");
+                }
+                item.append("\"l\":\"").append(label).append("\"");
+                if (!url.isEmpty()) {
+                    item.append(",\"u\":\"").append(url).append("\"");
+                }
+                item.append("}");
+                break;
+            case MEMBERS:
+                item.append("{")
+                        .append("\"p\":\"").append(containingPackage).append("\",")
+                        .append("\"c\":\"").append(containingClass).append("\",")
+                        .append("\"l\":\"").append(label).append("\"");
+                if (!url.isEmpty()) {
+                    item.append(",\"u\":\"").append(url).append("\"");
+                }
+                item.append("}");
+                break;
+            case SEARCH_TAGS:
+                item.append("{")
+                        .append("\"l\":\"").append(label).append("\",")
+                        .append("\"h\":\"").append(holder).append("\",");
+                if (!description.isEmpty()) {
+                    item.append("\"d\":\"").append(description).append("\",");
+                }
+                item.append("\"u\":\"").append(url).append("\"")
+                        .append("}");
+                break;
+            default:
+                throw new AssertionError("Unexpected category: " + category);
         }
         return item.toString();
     }
 
     /**
