diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/Links.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/Links.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/Links.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/Links.java
@@ -58,55 +58,10 @@
      */
     public Links(DocPath file) {
         this.file = file;
     }
 
-    /**
-     * Creates an anchor of the form {@code <a id="name"><!-- --></a>}.
-     *
-     * @param name the value for the {@code id} or {@code name} attribute
-     * @return a content tree for the anchor
-     */
-    public Content createAnchor(String name) {
-        return createAnchor(getName(name), null);
-    }
-
-    /**
-     * Creates an anchor of the form {@code <a id="sectionName"><!-- --></a>}.
-     *
-     * @param sectionName the value for the {@code id} or {@code name} attribute
-     * @return a content tree for the anchor
-     */
-    public Content createAnchor(SectionName sectionName) {
-        return createAnchor(sectionName.getName(), null);
-    }
-
-    /**
-     * Creates an anchor of the form {@code <a id="sectionNameName"><!-- --></a>}.
-     *
-     * @param sectionName the first part of the value for the {@code id} or {@code name} attribute
-     * @param name the second part of the value for the {@code id} or {@code name} attribute
-     * @return a content tree for the anchor
-     */
-    public Content createAnchor(SectionName sectionName, String name) {
-        return createAnchor(sectionName.getName() + getName(name), null);
-    }
-
-    /**
-     * Creates an anchor of the form {@code <a id="anchorName">content</a>}.
-     *
-     * @param name the value for the {@code id} or {@code name} attribute
-     * @param content the content that should be added to the anchor,
-     *              or null, to use an empty comment
-     * @return a content tree for the marker anchor
-     */
-    public Content createAnchor(String name, Content content) {
-        return HtmlTree.A_ID(name, (content == null ? EMPTY_COMMENT : content));
-    }
-
-    private static final Content EMPTY_COMMENT = new Comment(" ");
-
     /**
      * Creates a link of the form {@code <a href="#where">label</a>}.
      *
      * @param where      the position of the link in the file
      * @param label      the content for the link
@@ -310,9 +265,9 @@
      *
      * @param name the string that needs to be converted to a valid HTML name
      * @return a valid HTML name
      */
     public String getName(String name) {
-        return name.replaceAll(" +", "");
+        return name.replaceAll("\\s+", "");
     }
 
 }
