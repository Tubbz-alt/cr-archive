diff a/src/java.management/share/classes/javax/management/remote/package.html b/src/java.management/share/classes/javax/management/remote/package.html
--- a/src/java.management/share/classes/javax/management/remote/package.html
+++ b/src/java.management/share/classes/javax/management/remote/package.html
@@ -1,10 +1,10 @@
 <html>
 <head>
     <title>JMX&trade; Remote API.</title>
 <!--
-Copyright (c) 2002, 2017, Oracle and/or its affiliates. All rights reserved.
+Copyright (c) 2002, 2019, Oracle and/or its affiliates. All rights reserved.
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 
 This code is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License version 2 only, as
 published by the Free Software Foundation.  Oracle designates this
@@ -65,15 +65,15 @@
 
       <p><u>Note</u>: the optional packages implementing
         the optional part of the <em>JMX Remote API</em>
         are not included in the <em>Java SE Platform</em> 
         but are available from the <em>JMX Remote API 
-	<a href="http://java.sun.com/products/JavaManagement/download.html">
+	<a href="https://www.oracle.com/technetwork/java/javasebusiness/downloads/java-archive-downloads-java-plat-419418.html">
 	Reference Implementation</a></em>.</p>
 
 
-      <h3>Connector addresses</h3>
+      <h2>Connector addresses</h2>
 
       <p>Typically, a connector server has an address, represented by the
 	class {@link javax.management.remote.JMXServiceURL
 	JMXServiceURL}.  An address for the RMI Connector can look
 	like this:</p>
@@ -90,11 +90,11 @@
       <p>The example above shows only one form of address.
         An address for the RMI Connector can take several forms,
 	as detailed in the documentation for the package
 	<code>{@link javax.management.remote.rmi}</code>.</p>
 
-      <h3>Creating a connector server</h3>
+      <h2>Creating a connector server</h2>
 
       <p>A connector server is created by constructing an instance of
 	a subclass of {@link
 	javax.management.remote.JMXConnectorServer
 	JMXConnectorServer}.  Usually, this instance is created
@@ -106,11 +106,11 @@
       <p>Typically, a connector server is associated with an MBean
 	server either by registering it in that MBean server, or by
 	supplying the MBean server as a parameter when creating the
 	connector server.</p>
 
-      <h3>Creating a connector client</h3>
+      <h2>Creating a connector client</h2>
 
       <p>A connector client is usually created by supplying the
 	<code>JMXServiceURL</code> of the connector server to connect to 
         to the {@link
 	javax.management.remote.JMXConnectorFactory#connect(JMXServiceURL)
@@ -121,21 +121,21 @@
 	javax.management.remote.JMXConnector JMXConnector} interface,
 	for example the class {@link
 	javax.management.remote.rmi.RMIConnector
 	RMIConnector}.</p>
 
-      <h3>Additional client or server parameters</h3>
+      <h2>Additional client or server parameters</h2>
 
       <p>When creating a connector client or server, it is possible to
 	supply an object of type {@link java.util.Map Map} that defines
 	additional parameters.  Each entry in this Map has a key that is
 	a string and an associated value whose type is appropriate for
 	that key.  The standard keys defined by the JMX Remote API all
 	begin with the string "<code>jmx.remote.</code>".  The document
 	<em>JMX Remote API</em> lists these standard keys.</p>
 
-      <h3>Connection identifiers</h3>
+      <h2>Connection identifiers</h2>
 
       <p>Every connection opened by a connector server has a string
 	identifier, called its <b>connection id</b>.  This identifier
 	appears in the {@link
 	javax.management.remote.JMXConnectionNotification
