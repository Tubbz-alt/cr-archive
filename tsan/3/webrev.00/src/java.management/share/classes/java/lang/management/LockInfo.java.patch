diff a/src/java.management/share/classes/java/lang/management/LockInfo.java b/src/java.management/share/classes/java/lang/management/LockInfo.java
--- a/src/java.management/share/classes/java/lang/management/LockInfo.java
+++ b/src/java.management/share/classes/java/lang/management/LockInfo.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2005, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2005, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -40,11 +40,11 @@
  * (or its subclass) to implement its synchronization property.
  * {@link ReentrantLock ReentrantLock} and the write-lock (but not
  * the read-lock) of {@link ReentrantReadWriteLock ReentrantReadWriteLock} are
  * two examples of ownable synchronizers provided by the platform.
  *
- * <h3><a id="MappedType">MXBean Mapping</a></h3>
+ * <h2><a id="MappedType">MXBean Mapping</a></h2>
  * {@code LockInfo} is mapped to a {@link CompositeData CompositeData}
  * as specified in the {@link #from from} method.
  *
  * @see java.util.concurrent.locks.AbstractOwnableSynchronizer
  * @see java.util.concurrent.locks.Condition
