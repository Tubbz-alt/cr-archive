diff a/src/java.management/share/classes/java/lang/management/ManagementFactory.java b/src/java.management/share/classes/java/lang/management/ManagementFactory.java
--- a/src/java.management/share/classes/java/lang/management/ManagementFactory.java
+++ b/src/java.management/share/classes/java/lang/management/ManagementFactory.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -65,11 +65,11 @@
  * This class consists of static methods each of which returns
  * one or more <i>platform MXBeans</i> representing
  * the management interface of a component of the Java virtual
  * machine.
  *
- * <h3><a id="MXBean">Platform MXBeans</a></h3>
+ * <h2><a id="MXBean">Platform MXBeans</a></h2>
  * <p>
  * A platform MXBean is a <i>managed bean</i> that
  * conforms to the <a href="../../../javax/management/package-summary.html">JMX</a>
  * Instrumentation Specification and only uses a set of basic data types.
  * A JMX management application and the {@linkplain
@@ -91,11 +91,11 @@
  * by the {@link PlatformManagedObject#getObjectName getObjectName}
  * method.
  *
  * <p>
  * An application can access a platform MXBean in the following ways:
- * <h4>1. Direct access to an MXBean interface</h4>
+ * <h3>1. Direct access to an MXBean interface</h3>
  * <blockquote>
  * <ul>
  *     <li>Get an MXBean instance by calling the
  *         {@link #getPlatformMXBean(Class) getPlatformMXBean} or
  *         {@link #getPlatformMXBeans(Class) getPlatformMXBeans} method
@@ -111,11 +111,11 @@
  *         a given {@code ObjectName}.
  *         A proxy is typically constructed to remotely access
  *         an MXBean of another running virtual machine.
  *         </li>
  * </ul>
- * <h4>2. Indirect access to an MXBean interface via MBeanServer</h4>
+ * <h3>2. Indirect access to an MXBean interface via MBeanServer</h3>
  * <ul>
  *     <li>Go through the platform {@code MBeanServer} to access MXBeans
  *         locally or a specific {@code MBeanServerConnection} to access
  *         MXBeans remotely.
  *         The attributes and operations of an MXBean use only
@@ -870,16 +870,17 @@
      * @since 1.7
      */
     public static Set<Class<? extends PlatformManagedObject>>
            getPlatformManagementInterfaces()
     {
-        return platformComponents()
+        // local variable required here; see JDK-8223553
+        Stream<Class<? extends PlatformManagedObject>> pmos = platformComponents()
                 .stream()
                 .flatMap(pc -> pc.mbeanInterfaces().stream())
                 .filter(clazz -> PlatformManagedObject.class.isAssignableFrom(clazz))
-                .map(clazz -> clazz.asSubclass(PlatformManagedObject.class))
-                .collect(Collectors.toSet());
+                .map(clazz -> clazz.asSubclass(PlatformManagedObject.class));
+        return pmos.collect(Collectors.toSet());
     }
 
     private static final String NOTIF_EMITTER =
         "javax.management.NotificationEmitter";
 
