diff a/src/java.sql.rowset/share/classes/javax/sql/rowset/spi/SyncProvider.java b/src/java.sql.rowset/share/classes/javax/sql/rowset/spi/SyncProvider.java
--- a/src/java.sql.rowset/share/classes/javax/sql/rowset/spi/SyncProvider.java
+++ b/src/java.sql.rowset/share/classes/javax/sql/rowset/spi/SyncProvider.java
@@ -53,11 +53,11 @@
  * <code>XmlWriter</code> object. A <code>WebRowSet</code> object uses the
  * <code>XmlReader</code> object to read data in XML format to populate itself with that
  * data.  It uses the <code>XmlWriter</code> object to write itself to a stream or
  * <code>java.io.Writer</code> object in XML format.
  *
- * <h3>1.0 Naming Convention for Implementations</h3>
+ * <h2>1.0 Naming Convention for Implementations</h2>
  * As a guide  to naming <code>SyncProvider</code>
  * implementations, the following should be noted:
  * <UL>
  * <li>The name for a <code>SyncProvider</code> implementation
  * is its fully qualified class name.
@@ -88,17 +88,10 @@
  * implementation uses the following name:
  * <pre>
  *     com.sun.rowset.providers.RIOptimisticProvider
  * </pre>
  * <p>
- * A vendor can register a <code>SyncProvider</code> implementation class name
- * with Oracle Corporation by sending email to jdbc@sun.com.
- * Oracle will maintain a database listing the
- * available <code>SyncProvider</code> implementations for use with compliant
- * <code>RowSet</code> implementations.  This database will be similar to the
- * one already maintained to list available JDBC drivers.
- * <P>
  * Vendors should refer to the reference implementation synchronization
  * providers for additional guidance on how to implement a new
  * <code>SyncProvider</code> implementation.
  *
  * <h2>2.0 How a <code>RowSet</code> Object Gets Its Provider</h2>
