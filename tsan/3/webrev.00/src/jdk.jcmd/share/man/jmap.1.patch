diff a/src/jdk.jcmd/share/man/jmap.1 b/src/jdk.jcmd/share/man/jmap.1
--- a/src/jdk.jcmd/share/man/jmap.1
+++ b/src/jdk.jcmd/share/man/jmap.1
@@ -1,16 +1,15 @@
-'\" t
-.\" Copyright (c) 2004, 2013, Oracle and/or its affiliates. All rights reserved.
+.\" Copyright (c) 1994, 2019, Oracle and/or its affiliates. All rights reserved.
 .\" DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 .\"
 .\" This code is free software; you can redistribute it and/or modify it
 .\" under the terms of the GNU General Public License version 2 only, as
 .\" published by the Free Software Foundation.
 .\"
 .\" This code is distributed in the hope that it will be useful, but WITHOUT
 .\" ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-.\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+.\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 .\" version 2 for more details (a copy is included in the LICENSE file that
 .\" accompanied this code).
 .\"
 .\" You should have received a copy of the GNU General Public License version
 .\" 2 along with this work; if not, write to the Free Software Foundation,
@@ -18,126 +17,93 @@
 .\"
 .\" Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 .\" or visit www.oracle.com if you need additional information or have any
 .\" questions.
 .\"
-.\"     Arch: generic
-.\"     Software: JDK 8
-.\"     Date: 21 November 2013
-.\"     SectDesc: Troubleshooting Tools
-.\"     Title: jmap.1
+.\" Automatically generated by Pandoc 2.3.1
 .\"
-.if n .pl 99999
-.TH jmap 1 "21 November 2013" "JDK 8" "Troubleshooting Tools"
-.\" -----------------------------------------------------------------
-.\" * Define some portability stuff
-.\" -----------------------------------------------------------------
-.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-.\" http://bugs.debian.org/507673
-.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
-.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-.ie \n(.g .ds Aq \(aq
-.el       .ds Aq '
-.\" -----------------------------------------------------------------
-.\" * set default formatting
-.\" -----------------------------------------------------------------
-.\" disable hyphenation
-.nh
-.\" disable justification (adjust text to left margin only)
-.ad l
-.\" -----------------------------------------------------------------
-.\" * MAIN CONTENT STARTS HERE *
-.\" -----------------------------------------------------------------
-
-.SH NAME    
-jmap \- Prints shared object memory maps or heap memory details for a process, core file, or remote debug server\&. This command is experimental and unsupported\&.
-.SH SYNOPSIS    
-.sp     
-.nf     
-
-\fBjmap\fR [ \fIoptions\fR ] \fIpid\fR
-.fi     
-.nf     
-
-\fBjmap\fR [ \fIoptions\fR ] \fIexecutable\fR \fIcore\fR
-.fi     
-.nf     
-
-\fBjmap\fR [ \fIoptions\fR ] [ \fIpid\fR ] \fIserver\-id\fR@ ] \fIremote\-hostname\-or\-IP\fR
-.fi     
-.sp     
-.TP     
-\fIoptions\fR
-The command-line options\&. See Options\&.
-.TP     
-\fIpid\fR
-The process ID for which the memory map is to be printed\&. The process must be a Java process\&. To get a list of Java processes running on a machine, use the jps(1) command\&.
-.TP     
-\fIexecutable\fR
-The Java executable from which the core dump was produced\&.
-.TP     
-\fIcore\fR
-The core file for which the memory map is to be printed\&.
-.TP     
-\fIremote-hostname-or-IP\fR
-The remote debug server \f3hostname\fR or \f3IP\fR address\&. See jsadebugd(1)\&.
-.TP     
-\fIserver-id\fR
-An optional unique ID to use when multiple debug servers are running on the same remote host\&.
-.SH DESCRIPTION    
-The \f3jmap\fR command prints shared object memory maps or heap memory details of a specified process, core file, or remote debug server\&. If the specified process is running on a 64-bit Java Virtual Machine (JVM), then you might need to specify the \f3-J-d64\fR option, for example: \f3jmap\fR\f3-J-d64 -heap pid\fR\&.
+.TH "JMAP" "1" "2020" "JDK 14" "JDK Commands"
+.hy
+.SH NAME
 .PP
-\fINote:\fR This utility is unsupported and might not be available in future releases of the JDK\&. On Windows Systems where the \f3dbgeng\&.dll\fR file is not present, Debugging Tools For Windows must be installed to make these tools work\&. The \f3PATH\fR environment variable should contain the location of the \f3jvm\&.dll\fR file that is used by the target process or the location from which the crash dump file was produced, for example: \f3set PATH=%JDK_HOME%\ejre\ebin\eclient;%PATH%\fR\&.
-.SH OPTIONS    
-.TP     
-<no option>
-When no option is used, the \f3jmap\fR command prints shared object mappings\&. For each shared object loaded in the target JVM, the start address, size of the mapping, and the full path of the shared object file are printed\&. This behavior is similar to the Oracle Solaris \f3pmap\fR utility\&.
-.TP
--dump:[live,] format=b, file=\fIfilename\fR
-.br
-Dumps the Java heap in \f3hprof\fR binary format to \f3filename\fR\&. The \f3live\fR suboption is optional, but when specified, only the active objects in the heap are dumped\&. To browse the heap dump, you can use the jhat(1) command to read the generated file\&.
-.TP
--finalizerinfo
-.br
-Prints information about objects that are awaiting finalization\&.
-.TP
--heap
-.br
-Prints a heap summary of the garbage collection used, the head configuration, and generation-wise heap usage\&. In addition, the number and size of interned Strings are printed\&.
+jmap \- print details of a specified process
+.SH SYNOPSIS
+.PP
+\f[B]Note:\f[R] This command is experimental and unsupported.
+.PP
+\f[CB]jmap\f[R] [\f[I]options\f[R]] \f[I]pid\f[R]
 .TP
--histo[:live]
-.br
-Prints a histogram of the heap\&. For each Java class, the number of objects, memory size in bytes, and the fully qualified class names are printed\&. The JVM internal class names are printed with an asterisk (*) prefix\&. If the \f3live\fR suboption is specified, then only active objects are counted\&.
+.B \f[I]options\f[R]
+This represents the \f[CB]jmap\f[R] command\-line options.
+See \f[B]Options for the jmap Command\f[R].
+.RS
+.RE
 .TP
--clstats
-.br
-Prints class loader wise statistics of Java heap\&. For each class loader, its name, how active it is, address, parent class loader, and the number and size of classes it has loaded are printed\&.
+.B \f[I]pid\f[R]
+The process ID for which the information specified by the
+\f[I]options\f[R] is to be printed.
+The process must be a Java process.
+To get a list of Java processes running on a machine, use either the
+\f[CB]ps\f[R] command or, if the JVM processes are not running in a
+separate docker instance, the \f[B]jps\f[R] command.
+.RS
+.PP
+\f[B]Note:\f[R] JDK 10 has added support for using the Attach API when
+attaching to Java processes running in a separate docker process.
+However, the \f[CB]jps\f[R] command will not list the JVM processes that
+are running in a separate docker instance.
+If you are trying to connect a Linux host with a Virtual Machine that is
+in a docker container, you must use tools such as \f[CB]ps\f[R] to look up
+the PID of the JVM.
+.RE
+.SH DESCRIPTION
+.PP
+The \f[CB]jmap\f[R] command prints details of a specified running process.
+.PP
+\f[B]Note:\f[R]
+.PP
+This command is unsupported and might not be available in future
+releases of the JDK.
+On Windows Systems where the \f[CB]dbgeng.dll\f[R] file isn\[aq]t present,
+the Debugging Tools for Windows must be installed to make these tools
+work.
+The \f[CB]PATH\f[R] environment variable should contain the location of
+the \f[CB]jvm.dll\f[R] file that\[aq]s used by the target process or the
+location from which the core dump file was produced.
+.SH OPTIONS FOR THE JMAP COMMAND
 .TP
--F
-.br
-Force\&. Use this option with the \f3jmap -dump\fR or \f3jmap -histo\fR option when the pid does not respond\&. The \f3live\fR suboption is not supported in this mode\&.
+.B \f[CB]\-clstats\f[R] \f[I]pid\f[R]
+Connects to a running process and prints class loader statistics of Java
+heap.
+.RS
+.RE
 .TP
--h
-.br
-Prints a help message\&.
+.B \f[CB]\-finalizerinfo\f[R] \f[I]pid\f[R]
+Connects to a running process and prints information on objects awaiting
+finalization.
+.RS
+.RE
 .TP
--help
-.br
-Prints a help message\&.
+.B \f[CB]\-histo\f[R][\f[CB]:live\f[R]] \f[I]pid\f[R]
+Connects to a running process and prints a histogram of the Java object
+heap.
+If the \f[CB]live\f[R] suboption is specified, it then counts only live
+objects.
+.RS
+.RE
 .TP
--J\fIflag\fR
-.br
-Passes \f3flag\fR to the Java Virtual Machine where the \f3jmap\fR command is running\&.
-.SH SEE\ ALSO    
-.TP 0.2i    
-\(bu
-jhat(1)
-.TP 0.2i    
-\(bu
-jps(1)
-.TP 0.2i    
-\(bu
-jsadebugd(1)
+.B \f[CB]\-dump:\f[R]\f[I]dump_options\f[R] \f[I]pid\f[R]
+Connects to a running process and dumps the Java heap.
+The \f[I]dump_options\f[R] include:
+.RS
+.IP \[bu] 2
+\f[CB]live\f[R] \-\-\- When specified, dumps only the live objects; if not
+specified, then dumps all objects in the heap.
+.IP \[bu] 2
+\f[CB]format=b\f[R] \-\-\- Dumps the Java heap in \f[CB]hprof\f[R] binary
+format
+.IP \[bu] 2
+\f[CB]file=\f[R]\f[I]filename\f[R] \-\-\- Dumps the heap to
+\f[I]filename\f[R]
+.PP
+Example: \f[CB]jmap\ \-dump:live,format=b,file=heap.bin\f[R] \f[I]pid\f[R]
 .RE
-.br
-'pl 8.5i
-'bp
