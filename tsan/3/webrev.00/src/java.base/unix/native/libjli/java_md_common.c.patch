diff a/src/java.base/unix/native/libjli/java_md_common.c b/src/java.base/unix/native/libjli/java_md_common.c
--- a/src/java.base/unix/native/libjli/java_md_common.c
+++ b/src/java.base/unix/native/libjli/java_md_common.c
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2012, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2012, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -25,11 +25,11 @@
 #include "java.h"
 
 /*
  * Find the last occurrence of a string
  */
-char* findLastPathComponent(char *buffer, const char *comp) {
+static char* findLastPathComponent(char *buffer, const char *comp) {
     char* t = buffer;
     char* p = NULL;
     size_t l = JLI_StrLen(comp);
     t = JLI_StrStr(t, comp);
 
@@ -45,11 +45,11 @@
  * Removes the trailing file name and any intermediate platform
  * directories, if any, and its enclosing directory.
  * Ex: if a buffer contains "/foo/bin/javac" or "/foo/bin/x64/javac", the
  * truncated resulting buffer will contain "/foo".
  */
-jboolean
+static jboolean
 TruncatePath(char *buf)
 {
     // try bin directory, maybe an executable
     char *p = findLastPathComponent(buf, "/bin/");
     if (p != NULL) {
