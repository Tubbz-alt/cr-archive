diff a/src/java.base/unix/classes/sun/nio/ch/DatagramDispatcher.java b/src/java.base/unix/classes/sun/nio/ch/DatagramDispatcher.java
--- a/src/java.base/unix/classes/sun/nio/ch/DatagramDispatcher.java
+++ b/src/java.base/unix/classes/sun/nio/ch/DatagramDispatcher.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2001, 2013, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2001, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -23,20 +23,20 @@
  * questions.
  */
 
 package sun.nio.ch;
 
-import java.io.*;
-import java.net.*;
+import java.io.FileDescriptor;
+import java.io.IOException;
 
 /**
  * Allows different platforms to call different native methods
  * for read and write operations.
  */
 
-class DatagramDispatcher extends NativeDispatcher
-{
+class DatagramDispatcher extends NativeDispatcher {
+
     static {
         IOUtil.load();
     }
 
     int read(FileDescriptor fd, long address, int len) throws IOException {
@@ -61,10 +61,14 @@
 
     void preClose(FileDescriptor fd) throws IOException {
         FileDispatcherImpl.preClose0(fd);
     }
 
+    void dup(FileDescriptor fd1, FileDescriptor fd2) throws IOException {
+        FileDispatcherImpl.dup0(fd1, fd2);
+    }
+
     static native int read0(FileDescriptor fd, long address, int len)
         throws IOException;
 
     static native long readv0(FileDescriptor fd, long address, int len)
         throws IOException;
