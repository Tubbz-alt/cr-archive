diff a/src/java.base/windows/native/libnio/ch/FileChannelImpl.c b/src/java.base/windows/native/libnio/ch/FileChannelImpl.c
--- a/src/java.base/windows/native/libnio/ch/FileChannelImpl.c
+++ b/src/java.base/windows/native/libnio/ch/FileChannelImpl.c
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2000, 2018 Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -58,11 +58,11 @@
  * Channel
  */
 
 JNIEXPORT jlong JNICALL
 Java_sun_nio_ch_FileChannelImpl_map0(JNIEnv *env, jobject this,
-                               jint prot, jlong off, jlong len)
+                                     jint prot, jlong off, jlong len, jboolean map_sync)
 {
     void *mapAddress = 0;
     jint lowOffset = (jint)off;
     jint highOffset = (jint)(off >> 32);
     jlong maxSize = off + len;
@@ -85,10 +85,15 @@
     } else if (prot == sun_nio_ch_FileChannelImpl_MAP_PV) {
         fileProtect = PAGE_WRITECOPY;
         mapAccess = FILE_MAP_COPY;
     }
 
+    if (map_sync) {
+        JNU_ThrowInternalError(env, "should never call map on platform where MAP_SYNC is unimplemented");
+        return IOS_THROWN;
+    }
+
     mapping = CreateFileMapping(
         fileHandle,      /* Handle of file */
         NULL,            /* Not inheritable */
         fileProtect,     /* Read and write */
         highLen,         /* High word of max size */
