diff a/src/java.base/windows/classes/java/net/PlainSocketImpl.java b/src/java.base/windows/classes/java/net/PlainSocketImpl.java
--- a/src/java.base/windows/classes/java/net/PlainSocketImpl.java
+++ b/src/java.base/windows/classes/java/net/PlainSocketImpl.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2007, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2007, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -63,18 +63,12 @@
     private boolean isReuseAddress;
 
     /**
      * Constructs an empty instance.
      */
-    public PlainSocketImpl() {
-    }
-
-    /**
-     * Constructs an instance with the given file descriptor.
-     */
-    public PlainSocketImpl(FileDescriptor fd) {
-        this.fd = fd;
+    PlainSocketImpl(boolean isServer) {
+        super(isServer);
     }
 
     @Override
     void socketCreate(boolean stream) throws IOException {
         if (fd == null)
@@ -220,11 +214,11 @@
 
         if (opt == SO_TIMEOUT) {
             if (preferIPv4Stack) {
                 // Don't enable the socket option on ServerSocket as it's
                 // meaningless (we don't receive on a ServerSocket).
-                if (serverSocket == null) {
+                if (!isServer) {
                     setSoTimeout0(nativefd, ((Integer)value).intValue());
                 }
             } // else timeout is implemented through select.
             return;
         }
