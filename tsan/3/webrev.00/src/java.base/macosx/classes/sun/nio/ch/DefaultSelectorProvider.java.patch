diff a/src/java.base/macosx/classes/sun/nio/ch/DefaultSelectorProvider.java b/src/java.base/macosx/classes/sun/nio/ch/DefaultSelectorProvider.java
--- a/src/java.base/macosx/classes/sun/nio/ch/DefaultSelectorProvider.java
+++ b/src/java.base/macosx/classes/sun/nio/ch/DefaultSelectorProvider.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2011, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2011, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -23,25 +23,31 @@
  * questions.
  */
 
 package sun.nio.ch;
 
-import java.nio.channels.spi.SelectorProvider;
+import java.security.AccessController;
+import java.security.PrivilegedAction;
 
 /**
  * Creates this platform's default SelectorProvider
  */
 
 public class DefaultSelectorProvider {
+    private static final SelectorProviderImpl INSTANCE;
+    static {
+        PrivilegedAction<SelectorProviderImpl> pa = KQueueSelectorProvider::new;
+        INSTANCE = AccessController.doPrivileged(pa);
+    }
 
     /**
      * Prevent instantiation.
      */
     private DefaultSelectorProvider() { }
 
     /**
-     * Returns the default SelectorProvider.
+     * Returns the default SelectorProvider implementation.
      */
-    public static SelectorProvider create() {
-        return new KQueueSelectorProvider();
+    public static SelectorProviderImpl get() {
+        return INSTANCE;
     }
 }
