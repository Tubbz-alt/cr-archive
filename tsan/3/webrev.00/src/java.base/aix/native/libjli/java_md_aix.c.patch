diff a/src/java.base/aix/native/libjli/java_md_aix.c b/src/java.base/aix/native/libjli/java_md_aix.c
--- a/src/java.base/aix/native/libjli/java_md_aix.c
+++ b/src/java.base/aix/native/libjli/java_md_aix.c
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2016, 2018 SAP SE. All rights reserved.
+ * Copyright (c) 2016, 2019 SAP SE. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -21,27 +21,27 @@
  * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */
 #include <stdio.h>
+#include <string.h>
 #include <sys/ldr.h>
 
 #include "java_md_aix.h"
 
-static unsigned char dladdr_buffer[0x4000];
+static unsigned char dladdr_buffer[0x8000];
 
 static int fill_dll_info(void) {
     return loadquery(L_GETINFO, dladdr_buffer, sizeof(dladdr_buffer));
 }
 
 static int dladdr_dont_reload(void *addr, Dl_info *info) {
     const struct ld_info *p = (struct ld_info *)dladdr_buffer;
     memset((void *)info, 0, sizeof(Dl_info));
     for (;;) {
         if (addr >= p->ldinfo_textorg &&
-            addr < (((char*)p->ldinfo_textorg) + p->ldinfo_textsize))
-        {
+            addr < p->ldinfo_textorg + p->ldinfo_textsize) {
             info->dli_fname = p->ldinfo_filename;
             return 1;
         }
         if (!p->ldinfo_next) {
             break;
