diff a/src/java.base/share/classes/javax/crypto/Cipher.java b/src/java.base/share/classes/javax/crypto/Cipher.java
--- a/src/java.base/share/classes/javax/crypto/Cipher.java
+++ b/src/java.base/share/classes/javax/crypto/Cipher.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1997, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1997, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -145,14 +145,10 @@
  * <li>{@code AES/CBC/NoPadding} (128)</li>
  * <li>{@code AES/CBC/PKCS5Padding} (128)</li>
  * <li>{@code AES/ECB/NoPadding} (128)</li>
  * <li>{@code AES/ECB/PKCS5Padding} (128)</li>
  * <li>{@code AES/GCM/NoPadding} (128)</li>
- * <li>{@code DES/CBC/NoPadding} (56)</li>
- * <li>{@code DES/CBC/PKCS5Padding} (56)</li>
- * <li>{@code DES/ECB/NoPadding} (56)</li>
- * <li>{@code DES/ECB/PKCS5Padding} (56)</li>
  * <li>{@code DESede/CBC/NoPadding} (168)</li>
  * <li>{@code DESede/CBC/PKCS5Padding} (168)</li>
  * <li>{@code DESede/ECB/NoPadding} (168)</li>
  * <li>{@code DESede/ECB/PKCS5Padding} (168)</li>
  * <li>{@code RSA/ECB/PKCS1Padding} (1024, 2048)</li>
@@ -266,19 +262,22 @@
      * Creates a Cipher object.
      *
      * @param cipherSpi the delegate
      * @param provider the provider
      * @param transformation the transformation
+     * @throws NullPointerException if {@code provider} is {@code null}
+     * @throws IllegalArgumentException if the supplied arguments
+     *         are deemed invalid for constructing the Cipher object
      */
     protected Cipher(CipherSpi cipherSpi,
                      Provider provider,
                      String transformation) {
         // See bug 4341369 & 4334690 for more info.
         // If the caller is trusted, then okay.
-        // Otherwise throw a NullPointerException.
+        // Otherwise throw an IllegalArgumentException.
         if (!JceSecurityManager.INSTANCE.isCallerTrusted(provider)) {
-            throw new NullPointerException();
+            throw new IllegalArgumentException("Cannot construct cipher");
         }
         this.spi = cipherSpi;
         this.provider = provider;
         this.transformation = transformation;
         this.cryptoPerm = CryptoAllPermission.INSTANCE;
@@ -557,20 +556,20 @@
             int canuse = tr.supportsModePadding(s);
             if (canuse == S_NO) {
                 // does not support mode or padding we need, ignore
                 continue;
             }
-            if (canuse == S_YES) {
+            // S_YES, S_MAYBE
+            // even when mode and padding are both supported, they
+            // may not be used together, try out and see if it works
+            try {
+                CipherSpi spi = (CipherSpi)s.newInstance(null);
+                tr.setModePadding(spi);
+                // specify null instead of spi for delayed provider selection
                 return new Cipher(null, s, t, transformation, transforms);
-            } else { // S_MAYBE, try out if it works
-                try {
-                    CipherSpi spi = (CipherSpi)s.newInstance(null);
-                    tr.setModePadding(spi);
-                    return new Cipher(spi, s, t, transformation, transforms);
-                } catch (Exception e) {
-                    failure = e;
-                }
+            } catch (Exception e) {
+                failure = e;
             }
         }
         throw new NoSuchAlgorithmException
             ("Cannot find any provider supporting " + transformation, failure);
     }
