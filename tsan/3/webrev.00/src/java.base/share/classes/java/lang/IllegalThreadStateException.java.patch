diff a/src/java.base/share/classes/java/lang/IllegalThreadStateException.java b/src/java.base/share/classes/java/lang/IllegalThreadStateException.java
--- a/src/java.base/share/classes/java/lang/IllegalThreadStateException.java
+++ b/src/java.base/share/classes/java/lang/IllegalThreadStateException.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1994, 2008, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1994, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -26,31 +26,32 @@
 package java.lang;
 
 /**
  * Thrown to indicate that a thread is not in an appropriate state
  * for the requested operation. See, for example, the
- * <code>suspend</code> and <code>resume</code> methods in class
- * <code>Thread</code>.
+ * {@code suspend} and {@code resume} methods in class
+ * {@code Thread}.
  *
  * @author  unascribed
  * @see     java.lang.Thread#resume()
  * @see     java.lang.Thread#suspend()
  * @since   1.0
  */
 public class IllegalThreadStateException extends IllegalArgumentException {
+    @java.io.Serial
     private static final long serialVersionUID = -7626246362397460174L;
 
     /**
-     * Constructs an <code>IllegalThreadStateException</code> with no
+     * Constructs an {@code IllegalThreadStateException} with no
      * detail message.
      */
     public IllegalThreadStateException() {
         super();
     }
 
     /**
-     * Constructs an <code>IllegalThreadStateException</code> with the
+     * Constructs an {@code IllegalThreadStateException} with the
      * specified detail message.
      *
      * @param   s   the detail message.
      */
     public IllegalThreadStateException(String s) {
