diff a/src/java.base/share/classes/java/util/concurrent/locks/Condition.java b/src/java.base/share/classes/java/util/concurrent/locks/Condition.java
--- a/src/java.base/share/classes/java/util/concurrent/locks/Condition.java
+++ b/src/java.base/share/classes/java/util/concurrent/locks/Condition.java
@@ -136,11 +136,11 @@
  * instances in this way, except perhaps within their own implementation.
  *
  * <p>Except where noted, passing a {@code null} value for any parameter
  * will result in a {@link NullPointerException} being thrown.
  *
- * <h3>Implementation Considerations</h3>
+ * <h2>Implementation Considerations</h2>
  *
  * <p>When waiting upon a {@code Condition}, a &quot;<em>spurious
  * wakeup</em>&quot; is permitted to occur, in
  * general, as a concession to the underlying platform semantics.
  * This has little practical impact on most application programs as a
