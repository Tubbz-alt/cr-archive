diff a/src/java.base/share/classes/java/lang/ClassCastException.java b/src/java.base/share/classes/java/lang/ClassCastException.java
--- a/src/java.base/share/classes/java/lang/ClassCastException.java
+++ b/src/java.base/share/classes/java/lang/ClassCastException.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1994, 2013, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1994, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -26,32 +26,32 @@
 package java.lang;
 
 /**
  * Thrown to indicate that the code has attempted to cast an object
  * to a subclass of which it is not an instance. For example, the
- * following code generates a <code>ClassCastException</code>:
+ * following code generates a {@code ClassCastException}:
  * <blockquote><pre>
  *     Object x = new Integer(0);
  *     System.out.println((String)x);
  * </pre></blockquote>
  *
  * @author  unascribed
  * @since   1.0
  */
-public
-class ClassCastException extends RuntimeException {
+public class ClassCastException extends RuntimeException {
+    @java.io.Serial
     private static final long serialVersionUID = -9223365651070458532L;
 
     /**
-     * Constructs a <code>ClassCastException</code> with no detail message.
+     * Constructs a {@code ClassCastException} with no detail message.
      */
     public ClassCastException() {
         super();
     }
 
     /**
-     * Constructs a <code>ClassCastException</code> with the specified
+     * Constructs a {@code ClassCastException} with the specified
      * detail message.
      *
      * @param   s   the detail message.
      */
     public ClassCastException(String s) {
