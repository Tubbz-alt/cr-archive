diff a/src/java.base/share/classes/java/lang/Number.java b/src/java.base/share/classes/java/lang/Number.java
--- a/src/java.base/share/classes/java/lang/Number.java
+++ b/src/java.base/share/classes/java/lang/Number.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1994, 2015, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1994, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -46,15 +46,20 @@
  * See the documentation of a given {@code Number} implementation for
  * conversion details.
  *
  * @author      Lee Boynton
  * @author      Arthur van Hoff
- * @jls 5.1.2 Widening Primitive Conversions
- * @jls 5.1.3 Narrowing Primitive Conversions
+ * @jls 5.1.2 Widening Primitive Conversion
+ * @jls 5.1.3 Narrowing Primitive Conversion
  * @since   1.0
  */
 public abstract class Number implements java.io.Serializable {
+    /**
+     * Constructor for subclasses to call.
+     */
+    public Number() {super();}
+
     /**
      * Returns the value of the specified number as an {@code int}.
      *
      * @return  the numeric value represented by this object after conversion
      *          to type {@code int}.
@@ -112,7 +117,8 @@
     public short shortValue() {
         return (short)intValue();
     }
 
     /** use serialVersionUID from JDK 1.0.2 for interoperability */
+    @java.io.Serial
     private static final long serialVersionUID = -8742448824652078965L;
 }
