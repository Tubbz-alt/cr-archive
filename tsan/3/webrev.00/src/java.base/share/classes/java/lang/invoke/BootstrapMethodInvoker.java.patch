diff a/src/java.base/share/classes/java/lang/invoke/BootstrapMethodInvoker.java b/src/java.base/share/classes/java/lang/invoke/BootstrapMethodInvoker.java
--- a/src/java.base/share/classes/java/lang/invoke/BootstrapMethodInvoker.java
+++ b/src/java.base/share/classes/java/lang/invoke/BootstrapMethodInvoker.java
@@ -362,11 +362,11 @@
         private final Class<?> caller;  // for index resolution only
 
         VM_BSCI(MethodHandle bsm, String name, T type,
                 Lookup lookup, int[] indexInfo) {
             super(bsm, name, type, indexInfo[0]);
-            if (!lookup.hasPrivateAccess())  //D.I.D.
+            if (!lookup.hasFullPrivilegeAccess())  //D.I.D.
                 throw new AssertionError("bad Lookup object");
             this.caller = lookup.lookupClass();
             this.indexInfo = indexInfo;
             // scoop up all the easy stuff right away:
             prefetchIntoCache(0, size());
@@ -458,12 +458,12 @@
                 i++;
             }
         }
     }
 
-    /*non-public*/ static final
-    class PushAdapter {
+    /*non-public*/
+    static final class PushAdapter {
         // skeleton for push-mode BSM which wraps a pull-mode BSM:
         static Object pushToBootstrapMethod(MethodHandle pullModeBSM,
                                             MethodHandles.Lookup lookup, String name, Object type,
                                             Object... arguments) throws Throwable {
             ConstantGroup cons = makeConstantGroup(Arrays.asList(arguments));
@@ -485,12 +485,12 @@
                 throw new InternalError(ex);
             }
         }
     }
 
-    /*non-public*/ static final
-    class PullAdapter {
+    /*non-public*/
+    static final class PullAdapter {
         // skeleton for pull-mode BSM which wraps a push-mode BSM:
         static Object pullFromBootstrapMethod(MethodHandle pushModeBSM,
                                               MethodHandles.Lookup lookup,
                                               BootstrapCallInfo<?> bsci)
                 throws Throwable {
