diff a/src/java.base/share/classes/java/util/Dictionary.java b/src/java.base/share/classes/java/util/Dictionary.java
--- a/src/java.base/share/classes/java/util/Dictionary.java
+++ b/src/java.base/share/classes/java/util/Dictionary.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1995, 2004, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1995, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -104,11 +104,11 @@
      *
      * @return  the value to which the key is mapped in this dictionary;
      * @param   key   a key in this dictionary.
      *          {@code null} if the key is not mapped to any value in
      *          this dictionary.
-     * @exception NullPointerException if the {@code key} is {@code null}.
+     * @throws    NullPointerException if the {@code key} is {@code null}.
      * @see     java.util.Dictionary#put(java.lang.Object, java.lang.Object)
      */
     public abstract V get(Object key);
 
     /**
@@ -131,11 +131,11 @@
      * @param      key     the hashtable key.
      * @param      value   the value.
      * @return     the previous value to which the {@code key} was mapped
      *             in this dictionary, or {@code null} if the key did not
      *             have a previous mapping.
-     * @exception  NullPointerException  if the {@code key} or
+     * @throws     NullPointerException  if the {@code key} or
      *               {@code value} is {@code null}.
      * @see        java.lang.Object#equals(java.lang.Object)
      * @see        java.util.Dictionary#get(java.lang.Object)
      */
     public abstract V put(K key, V value);
@@ -147,9 +147,9 @@
      *
      * @param   key   the key that needs to be removed.
      * @return  the value to which the {@code key} had been mapped in this
      *          dictionary, or {@code null} if the key did not have a
      *          mapping.
-     * @exception NullPointerException if {@code key} is {@code null}.
+     * @throws    NullPointerException if {@code key} is {@code null}.
      */
     public abstract V remove(Object key);
 }
