diff a/src/java.base/share/classes/java/security/cert/CertificateRevokedException.java b/src/java.base/share/classes/java/security/cert/CertificateRevokedException.java
--- a/src/java.base/share/classes/java/security/cert/CertificateRevokedException.java
+++ b/src/java.base/share/classes/java/security/cert/CertificateRevokedException.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2007, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -48,10 +48,11 @@
  * @since 1.7
  * @see CertPathValidatorException
  */
 public class CertificateRevokedException extends CertificateException {
 
+    @java.io.Serial
     private static final long serialVersionUID = 7839996631571608627L;
 
     /**
      * @serial the date on which the certificate was revoked
      */
@@ -189,10 +190,11 @@
      * the extensions in the map, in no particular order. For each extension,
      * the following data is emitted: the OID String (Object), the criticality
      * flag (boolean), the length of the encoded extension value byte array
      * (int), and the encoded extension value bytes.
      */
+    @java.io.Serial
     private void writeObject(ObjectOutputStream oos) throws IOException {
         // Write out the non-transient fields
         // (revocationDate, reason, authority)
         oos.defaultWriteObject();
 
@@ -215,10 +217,11 @@
     }
 
     /**
      * Deserialize the {@code CertificateRevokedException} instance.
      */
+    @java.io.Serial
     private void readObject(ObjectInputStream ois)
         throws IOException, ClassNotFoundException {
         // Read in the non-transient fields
         // (revocationDate, reason, authority)
         ois.defaultReadObject();
@@ -239,11 +242,11 @@
 
         // Read in the extensions and put the mappings in the extensions map
         for (int i = 0; i < size; i++) {
             String oid = (String) ois.readObject();
             boolean critical = ois.readBoolean();
-            byte[] extVal = IOUtils.readNBytes(ois, ois.readInt());
+            byte[] extVal = IOUtils.readExactlyNBytes(ois, ois.readInt());
             Extension ext = sun.security.x509.Extension.newExtension
                 (new ObjectIdentifier(oid), critical, extVal);
             extensions.put(oid, ext);
         }
     }
