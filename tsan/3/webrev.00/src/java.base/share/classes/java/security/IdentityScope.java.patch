diff a/src/java.base/share/classes/java/security/IdentityScope.java b/src/java.base/share/classes/java/security/IdentityScope.java
--- a/src/java.base/share/classes/java/security/IdentityScope.java
+++ b/src/java.base/share/classes/java/security/IdentityScope.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1996, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1996, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -65,10 +65,11 @@
 @Deprecated(since="1.2", forRemoval=true)
 @SuppressWarnings("removal")
 public abstract
 class IdentityScope extends Identity {
 
+    @java.io.Serial
     private static final long serialVersionUID = -2337346281189773310L;
 
     /* The system's scope */
     private static IdentityScope scope;
 
@@ -118,11 +119,11 @@
      * Constructs a new identity scope with the specified name and scope.
      *
      * @param name the scope name.
      * @param scope the scope for the new identity scope.
      *
-     * @exception KeyManagementException if there is already an identity
+     * @throws    KeyManagementException if there is already an identity
      * with the same name in the scope.
      */
     public IdentityScope(String name, IdentityScope scope)
     throws KeyManagementException {
         super(name, scope);
@@ -152,11 +153,11 @@
      * method is called with {@code "setSystemScope"}
      * as its argument to see if it's ok to set the identity scope.
      *
      * @param scope the scope to set.
      *
-     * @exception  SecurityException  if a security manager exists and its
+     * @throws     SecurityException  if a security manager exists and its
      * {@code checkSecurityAccess} method doesn't allow
      * setting the identity scope.
      *
      * @see #getSystemScope
      * @see SecurityManager#checkSecurityAccess
@@ -211,11 +212,11 @@
     /**
      * Adds an identity to this identity scope.
      *
      * @param identity the identity to be added.
      *
-     * @exception KeyManagementException if the identity is not
+     * @throws    KeyManagementException if the identity is not
      * valid, a name conflict occurs, another identity has the same
      * public key as the identity being added, or another exception
      * occurs. */
     public abstract void addIdentity(Identity identity)
     throws KeyManagementException;
@@ -223,11 +224,11 @@
     /**
      * Removes an identity from this identity scope.
      *
      * @param identity the identity to be removed.
      *
-     * @exception KeyManagementException if the identity is missing,
+     * @throws    KeyManagementException if the identity is missing,
      * or another exception occurs.
      */
     public abstract void removeIdentity(Identity identity)
     throws KeyManagementException;
 
