diff a/src/java.base/share/classes/java/lang/InstantiationError.java b/src/java.base/share/classes/java/lang/InstantiationError.java
--- a/src/java.base/share/classes/java/lang/InstantiationError.java
+++ b/src/java.base/share/classes/java/lang/InstantiationError.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1995, 2008, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1995, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -24,11 +24,11 @@
  */
 
 package java.lang;
 
 /**
- * Thrown when an application tries to use the Java <code>new</code>
+ * Thrown when an application tries to use the Java {@code new}
  * construct to instantiate an abstract class or an interface.
  * <p>
  * Normally, this error is caught by the compiler; this error can
  * only occur at run time if the definition of a class has
  * incompatibly changed.
@@ -36,23 +36,23 @@
  * @author  unascribed
  * @since   1.0
  */
 
 
-public
-class InstantiationError extends IncompatibleClassChangeError {
+public class InstantiationError extends IncompatibleClassChangeError {
+    @java.io.Serial
     private static final long serialVersionUID = -4885810657349421204L;
 
     /**
-     * Constructs an <code>InstantiationError</code> with no detail  message.
+     * Constructs an {@code InstantiationError} with no detail  message.
      */
     public InstantiationError() {
         super();
     }
 
     /**
-     * Constructs an <code>InstantiationError</code> with the specified
+     * Constructs an {@code InstantiationError} with the specified
      * detail message.
      *
      * @param   s   the detail message.
      */
     public InstantiationError(String s) {
