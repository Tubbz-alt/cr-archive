diff a/src/java.base/share/classes/java/lang/invoke/LambdaMetafactory.java b/src/java.base/share/classes/java/lang/invoke/LambdaMetafactory.java
--- a/src/java.base/share/classes/java/lang/invoke/LambdaMetafactory.java
+++ b/src/java.base/share/classes/java/lang/invoke/LambdaMetafactory.java
@@ -274,13 +274,12 @@
      * signature given by {@code samMethodType}.  It may also override additional
      * methods from {@code Object}.
      *
      * @param caller Represents a lookup context with the accessibility
      *               privileges of the caller.  Specifically, the lookup context
-     *               must have
-     *               <a href="MethodHandles.Lookup.html#privacc">private access</a>
-     *               privileges.
+     *               must have {@linkplain MethodHandles.Lookup#hasFullPrivilegeAccess()
+     *               full privilege access}.
      *               When used with {@code invokedynamic}, this is stacked
      *               automatically by the VM.
      * @param invokedName The name of the method to implement.  When used with
      *                    {@code invokedynamic}, this is provided by the
      *                    {@code NameAndType} of the {@code InvokeDynamic}
@@ -420,13 +419,12 @@
      *     implement methods related to serialization.</li>
      * </ul>
      *
      * @param caller Represents a lookup context with the accessibility
      *               privileges of the caller.  Specifically, the lookup context
-     *               must have
-     *               <a href="MethodHandles.Lookup.html#privacc">private access</a>
-     *               privileges.
+     *               must have {@linkplain MethodHandles.Lookup#hasFullPrivilegeAccess()
+     *               full privilege access}.
      *               When used with {@code invokedynamic}, this is stacked
      *               automatically by the VM.
      * @param invokedName The name of the method to implement.  When used with
      *                    {@code invokedynamic}, this is provided by the
      *                    {@code NameAndType} of the {@code InvokeDynamic}
