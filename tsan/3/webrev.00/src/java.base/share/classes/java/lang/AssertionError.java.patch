diff a/src/java.base/share/classes/java/lang/AssertionError.java b/src/java.base/share/classes/java/lang/AssertionError.java
--- a/src/java.base/share/classes/java/lang/AssertionError.java
+++ b/src/java.base/share/classes/java/lang/AssertionError.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2000, 2011, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -39,10 +39,11 @@
  * regardless of the type of <i>expression</i>.
  *
  * @since   1.4
  */
 public class AssertionError extends Error {
+    @java.io.Serial
     private static final long serialVersionUID = -5013299493970297370L;
 
     /**
      * Constructs an AssertionError with no detail message.
      */
@@ -76,11 +77,11 @@
             initCause((Throwable) detailMessage);
     }
 
     /**
      * Constructs an AssertionError with its detail message derived
-     * from the specified <code>boolean</code>, which is converted to
+     * from the specified {@code boolean}, which is converted to
      * a string as defined in section 15.18.1.1 of
      * <cite>The Java&trade; Language Specification</cite>.
      *
      * @param detailMessage value to be used in constructing detail message
      */
@@ -88,11 +89,11 @@
         this(String.valueOf(detailMessage));
     }
 
     /**
      * Constructs an AssertionError with its detail message derived
-     * from the specified <code>char</code>, which is converted to a
+     * from the specified {@code char}, which is converted to a
      * string as defined in section 15.18.1.1 of
      * <cite>The Java&trade; Language Specification</cite>.
      *
      * @param detailMessage value to be used in constructing detail message
      */
@@ -100,11 +101,11 @@
         this(String.valueOf(detailMessage));
     }
 
     /**
      * Constructs an AssertionError with its detail message derived
-     * from the specified <code>int</code>, which is converted to a
+     * from the specified {@code int}, which is converted to a
      * string as defined in section 15.18.1.1 of
      * <cite>The Java&trade; Language Specification</cite>.
      *
      * @param detailMessage value to be used in constructing detail message
      */
@@ -112,11 +113,11 @@
         this(String.valueOf(detailMessage));
     }
 
     /**
      * Constructs an AssertionError with its detail message derived
-     * from the specified <code>long</code>, which is converted to a
+     * from the specified {@code long}, which is converted to a
      * string as defined in section 15.18.1.1 of
      * <cite>The Java&trade; Language Specification</cite>.
      *
      * @param detailMessage value to be used in constructing detail message
      */
@@ -124,11 +125,11 @@
         this(String.valueOf(detailMessage));
     }
 
     /**
      * Constructs an AssertionError with its detail message derived
-     * from the specified <code>float</code>, which is converted to a
+     * from the specified {@code float}, which is converted to a
      * string as defined in section 15.18.1.1 of
      * <cite>The Java&trade; Language Specification</cite>.
      *
      * @param detailMessage value to be used in constructing detail message
      */
@@ -136,11 +137,11 @@
         this(String.valueOf(detailMessage));
     }
 
     /**
      * Constructs an AssertionError with its detail message derived
-     * from the specified <code>double</code>, which is converted to a
+     * from the specified {@code double}, which is converted to a
      * string as defined in section 15.18.1.1 of
      * <cite>The Java&trade; Language Specification</cite>.
      *
      * @param detailMessage value to be used in constructing detail message
      */
