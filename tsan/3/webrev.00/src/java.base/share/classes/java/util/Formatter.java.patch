diff a/src/java.base/share/classes/java/util/Formatter.java b/src/java.base/share/classes/java/util/Formatter.java
--- a/src/java.base/share/classes/java/util/Formatter.java
+++ b/src/java.base/share/classes/java/util/Formatter.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -138,27 +138,27 @@
  *   Calendar c = new GregorianCalendar(1995, MAY, 23);
  *   String s = String.format("Duke's Birthday: %1$tb %1$te, %1$tY", c);
  *   // -&gt; s == "Duke's Birthday: May 23, 1995"
  * </pre></blockquote>
  *
- * <h3><a id="org">Organization</a></h3>
+ * <h2><a id="org">Organization</a></h2>
  *
  * <p> This specification is divided into two sections.  The first section, <a
  * href="#summary">Summary</a>, covers the basic formatting concepts.  This
  * section is intended for users who want to get started quickly and are
  * familiar with formatted printing in other programming languages.  The second
  * section, <a href="#detail">Details</a>, covers the specific implementation
  * details.  It is intended for users who want more precise specification of
  * formatting behavior.
  *
- * <h3><a id="summary">Summary</a></h3>
+ * <h2><a id="summary">Summary</a></h2>
  *
  * <p> This section is intended to provide a brief overview of formatting
  * concepts.  For precise behavioral details, refer to the <a
  * href="#detail">Details</a> section.
  *
- * <h4><a id="syntax">Format String Syntax</a></h4>
+ * <h3><a id="syntax">Format String Syntax</a></h3>
  *
  * <p> Every method which produces formatted output requires a <i>format
  * string</i> and an <i>argument list</i>.  The format string is a {@link
  * String} which may contain fixed text and one or more embedded <i>format
  * specifiers</i>.  Consider the following example:
@@ -234,11 +234,11 @@
  * <p> The required <i>conversion</i> is a character indicating content to be
  * inserted in the output.
  *
  * </ul>
  *
- * <h4> Conversions </h4>
+ * <h3> Conversions </h3>
  *
  * <p> Conversions are divided into the following categories:
  *
  * <ol>
  *
@@ -374,11 +374,11 @@
  * </table>
  *
  * <p> Any characters not explicitly defined as conversions are illegal and are
  * reserved for future extensions.
  *
- * <h4><a id="dt">Date/Time Conversions</a></h4>
+ * <h3><a id="dt">Date/Time Conversions</a></h3>
  *
  * <p> The following date and time conversion suffix characters are defined for
  * the {@code 't'} and {@code 'T'} conversions.  The types are similar to but
  * not completely identical to those defined by GNU {@code date} and POSIX
  * {@code strftime(3c)}.  Additional conversion types are provided to access
@@ -548,11 +548,11 @@
  * </table>
  *
  * <p> Any characters not explicitly defined as date/time conversion suffixes
  * are illegal and are reserved for future extensions.
  *
- * <h4> Flags </h4>
+ * <h3> Flags </h3>
  *
  * <p> The following table summarizes the supported flags.  <i>y</i> means the
  * flag is supported for the indicated argument types.
  *
  * <table class="striped">
@@ -634,17 +634,17 @@
  * {@code 'g'}, and {@code 'G'} conversions only.
  *
  * <p> Any characters not explicitly defined as flags are illegal and are
  * reserved for future extensions.
  *
- * <h4> Width </h4>
+ * <h3> Width </h3>
  *
  * <p> The width is the minimum number of characters to be written to the
  * output.  For the line separator conversion, width is not applicable; if it
  * is provided, an exception will be thrown.
  *
- * <h4> Precision </h4>
+ * <h3> Precision </h3>
  *
  * <p> For general argument types, the precision is the maximum number of
  * characters to be written to the output.
  *
  * <p> For the floating-point conversions {@code 'a'}, {@code 'A'}, {@code 'e'},
@@ -655,11 +655,11 @@
  *
  * <p> For character, integral, and date/time argument types and the percent
  * and line separator conversions, the precision is not applicable; if a
  * precision is provided, an exception will be thrown.
  *
- * <h4> Argument Index </h4>
+ * <h3> Argument Index </h3>
  *
  * <p> The argument index is a decimal integer indicating the position of the
  * argument in the argument list.  The first argument is referenced by
  * "{@code 1$}", the second by "{@code 2$}", etc.
  *
@@ -674,11 +674,11 @@
  *
  *   String s2 = String.format("Duke's Birthday: %1$tm %&lt;te,%&lt;tY", c);
  * </pre></blockquote>
  *
  * <hr>
- * <h3><a id="detail">Details</a></h3>
+ * <h2><a id="detail">Details</a></h2>
  *
  * <p> This section is intended to provide behavioral details for formatting,
  * including conditions and exceptions, supported data types, localization, and
  * interactions between flags, conversions, and data types.  For an overview of
  * formatting concepts, refer to the <a href="#summary">Summary</a>
@@ -715,11 +715,11 @@
  * java.util.Locale Locale}. If there is no explicit locale specified,
  * either at the construction of the instance or as a parameter to its method
  * invocation, then the {@link java.util.Locale.Category#FORMAT default locale}
  * is used.
  *
- * <h4><a id="dgen">General</a></h4>
+ * <h3><a id="dgen">General</a></h3>
  *
  * <p> The following general conversions may be applied to any argument type:
  *
  * <table class="striped">
  * <caption style="display:none">dgConv</caption>
@@ -812,11 +812,11 @@
  * output.  The precision is applied before the width, thus the output will be
  * truncated to {@code precision} characters even if the width is greater than
  * the precision.  If the precision is not specified then there is no explicit
  * limit on the number of characters.
  *
- * <h4><a id="dchar">Character</a></h4>
+ * <h3><a id="dchar">Character</a></h3>
  *
  * This conversion may be applied to {@code char} and {@link Character}.  It
  * may also be applied to the types {@code byte}, {@link Byte},
  * {@code short}, and {@link Short}, {@code int} and {@link Integer} when
  * {@link Character#isValidCodePoint} returns {@code true}.  If it returns
@@ -851,11 +851,11 @@
  * <p> The width is defined as for <a href="#genWidth">General conversions</a>.
  *
  * <p> The precision is not applicable.  If the precision is specified then an
  * {@link IllegalFormatPrecisionException} will be thrown.
  *
- * <h4><a id="dnum">Numeric</a></h4>
+ * <h3><a id="dnum">Numeric</a></h3>
  *
  * <p> Numeric conversions are divided into the following categories:
  *
  * <ol>
  *
@@ -1545,11 +1545,11 @@
  *
  * <p> The specification of <a href="#floatDWidth">width</a> and <a
  * href="#floatDPrec">precision</a> is the same as defined for Float and
  * Double.
  *
- * <h4><a id="ddt">Date/Time</a></h4>
+ * <h3><a id="ddt">Date/Time</a></h3>
  *
  * <p> This conversion may be applied to {@code long}, {@link Long}, {@link
  * Calendar}, {@link Date} and {@link TemporalAccessor TemporalAccessor}
  *
  * <table class="striped">
@@ -1794,11 +1794,11 @@
  * is no minimum.
  *
  * <p> The precision is not applicable.  If the precision is specified then an
  * {@link IllegalFormatPrecisionException} will be thrown.
  *
- * <h4><a id="dper">Percent</a></h4>
+ * <h3><a id="dper">Percent</a></h3>
  *
  * <p> The conversion does not correspond to any argument.
  *
  * <table class="striped">
  * <caption style="display:none">DTConv</caption>
@@ -1822,11 +1822,11 @@
  * {@link IllegalFormatPrecisionException} will be thrown.
  *
  * </tbody>
  * </table>
  *
- * <h4><a id="dls">Line Separator</a></h4>
+ * <h3><a id="dls">Line Separator</a></h3>
  *
  * <p> The conversion does not correspond to any argument.
  *
  * <table class="striped">
  * <caption style="display:none">DTConv</caption>
@@ -1841,11 +1841,11 @@
  *
  * <p> Flags, width, and precision are not applicable.  If any are provided an
  * {@link IllegalFormatFlagsException}, {@link IllegalFormatWidthException},
  * and {@link IllegalFormatPrecisionException}, respectively will be thrown.
  *
- * <h4><a id="dpos">Argument Index</a></h4>
+ * <h3><a id="dpos">Argument Index</a></h3>
  *
  * <p> Format specifiers can reference arguments in three ways:
  *
  * <ul>
  *
