diff a/src/java.base/share/classes/java/security/interfaces/DSAKeyPairGenerator.java b/src/java.base/share/classes/java/security/interfaces/DSAKeyPairGenerator.java
--- a/src/java.base/share/classes/java/security/interfaces/DSAKeyPairGenerator.java
+++ b/src/java.base/share/classes/java/security/interfaces/DSAKeyPairGenerator.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1997, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1997, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -83,11 +83,11 @@
      * @param params the parameters to use to generate the keys.
      *
      * @param random the random bit source to use to generate key bits;
      * can be null.
      *
-     * @exception InvalidParameterException if the {@code params}
+     * @throws    InvalidParameterException if the {@code params}
      * value is invalid, null, or unsupported.
      */
    public void initialize(DSAParams params, SecureRandom random)
    throws InvalidParameterException;
 
@@ -110,11 +110,11 @@
      * can be null.
      *
      * @param genParams whether or not to generate new parameters for
      * the modulus length requested.
      *
-     * @exception InvalidParameterException if {@code modlen} is
+     * @throws    InvalidParameterException if {@code modlen} is
      * invalid, or unsupported, or if {@code genParams} is false and there
      * are no precomputed parameters for the requested modulus length.
      */
     public void initialize(int modlen, boolean genParams, SecureRandom random)
     throws InvalidParameterException;
