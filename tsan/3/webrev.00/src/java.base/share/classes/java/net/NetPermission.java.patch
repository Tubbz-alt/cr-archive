diff a/src/java.base/share/classes/java/net/NetPermission.java b/src/java.base/share/classes/java/net/NetPermission.java
--- a/src/java.base/share/classes/java/net/NetPermission.java
+++ b/src/java.base/share/classes/java/net/NetPermission.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1997, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1997, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -41,11 +41,11 @@
  * Also, an asterisk
  * may appear at the end of the name, following a ".", or by itself, to
  * signify a wildcard match. For example: "foo.*" and "*" signify a wildcard
  * match, while "*foo" and "a*b" do not.
  * <P>
- * The following table lists all the possible NetPermission target names,
+ * The following table lists the standard NetPermission target names,
  * and for each provides a description of what the permission allows
  * and a discussion of the risks of granting code the permission.
  *
  * <table class="striped">
  * <caption style="display:none">Permission target name, what the permission allows, and associated risks</caption>
@@ -143,10 +143,19 @@
  *   could access security sensitive information, or create false
  *   entries in the response cache.</td>
  *   </tr>
  *
  * <tr>
+ *   <th scope="row">setSocketImpl</th>
+ *   <td>The ability to create a sub-class of Socket or ServerSocket with a
+ *   user specified SocketImpl.</td>
+ *   <td>Malicious user-defined SocketImpls can change the behavior of
+ *   Socket and ServerSocket in surprising ways, by virtue of their
+ *   ability to access the protected fields of SocketImpl.</td>
+ *   </tr>
+ *
+ * <tr>
  *   <th scope="row">specifyStreamHandler</th>
  *   <td>The ability
  *   to specify a stream handler when constructing a URL</td>
  *   <td>Malicious code may create a URL with resources that it would
  *   normally not have access to (like file:/foo/fum/), specifying a
@@ -156,10 +165,14 @@
  *   that class really didn't come from that location.</td>
  * </tr>
    </tbody>
  * </table>
  *
+ * @implNote
+ * Implementations may define additional target names, but should use naming
+ * conventions such as reverse domain name notation to avoid name clashes.
+ *
  * @see java.security.BasicPermission
  * @see java.security.Permission
  * @see java.security.Permissions
  * @see java.security.PermissionCollection
  * @see java.lang.SecurityManager
@@ -169,10 +182,11 @@
  * @author Roland Schemers
  * @since 1.2
  */
 
 public final class NetPermission extends BasicPermission {
+    @java.io.Serial
     private static final long serialVersionUID = -8343910153355041693L;
 
     /**
      * Creates a new NetPermission with the specified name.
      * The name is the symbolic name of the NetPermission, such as
