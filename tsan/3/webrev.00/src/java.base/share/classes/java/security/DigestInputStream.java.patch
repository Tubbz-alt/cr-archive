diff a/src/java.base/share/classes/java/security/DigestInputStream.java b/src/java.base/share/classes/java/security/DigestInputStream.java
--- a/src/java.base/share/classes/java/security/DigestInputStream.java
+++ b/src/java.base/share/classes/java/security/DigestInputStream.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1996, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -115,11 +115,11 @@
      * will then call {@code update} on the message digest associated
      * with this stream, passing it the byte read.
      *
      * @return the byte read.
      *
-     * @exception IOException if an I/O error occurs.
+     * @throws    IOException if an I/O error occurs.
      *
      * @see MessageDigest#update(byte)
      */
     public int read() throws IOException {
         int ch = in.read();
@@ -152,11 +152,11 @@
      * {@code len} if the end of the stream is reached prior to
      * reading {@code len} bytes. -1 is returned if no bytes were
      * read because the end of the stream had already been reached when
      * the call was made.
      *
-     * @exception IOException if an I/O error occurs.
+     * @throws    IOException if an I/O error occurs.
      *
      * @see MessageDigest#update(byte[], int, int)
      */
     public int read(byte[] b, int off, int len) throws IOException {
         int result = in.read(b, off, len);
