diff a/src/java.base/share/classes/java/security/cert/CertificateFactorySpi.java b/src/java.base/share/classes/java/security/cert/CertificateFactorySpi.java
--- a/src/java.base/share/classes/java/security/cert/CertificateFactorySpi.java
+++ b/src/java.base/share/classes/java/security/cert/CertificateFactorySpi.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1998, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1998, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -97,11 +97,11 @@
      * @param inStream an input stream with the certificate data.
      *
      * @return a certificate object initialized with the data
      * from the input stream.
      *
-     * @exception CertificateException on parsing errors.
+     * @throws    CertificateException on parsing errors.
      */
     public abstract Certificate engineGenerateCertificate(InputStream inStream)
         throws CertificateException;
 
     /**
@@ -115,12 +115,12 @@
      * and by default throws an {@code UnsupportedOperationException}.
      *
      * @param inStream an {@code InputStream} containing the data
      * @return a {@code CertPath} initialized with the data from the
      *   {@code InputStream}
-     * @exception CertificateException if an exception occurs while decoding
-     * @exception UnsupportedOperationException if the method is not supported
+     * @throws    CertificateException if an exception occurs while decoding
+     * @throws    UnsupportedOperationException if the method is not supported
      * @since 1.4
      */
     public CertPath engineGenerateCertPath(InputStream inStream)
         throws CertificateException
     {
@@ -139,13 +139,13 @@
      *
      * @param inStream an {@code InputStream} containing the data
      * @param encoding the encoding used for the data
      * @return a {@code CertPath} initialized with the data from the
      *   {@code InputStream}
-     * @exception CertificateException if an exception occurs while decoding or
+     * @throws    CertificateException if an exception occurs while decoding or
      *   the encoding requested is not supported
-     * @exception UnsupportedOperationException if the method is not supported
+     * @throws    UnsupportedOperationException if the method is not supported
      * @since 1.4
      */
     public CertPath engineGenerateCertPath(InputStream inStream,
         String encoding) throws CertificateException
     {
@@ -166,12 +166,12 @@
      * and by default throws an {@code UnsupportedOperationException}.
      *
      * @param certificates a {@code List} of {@code Certificate}s
      * @return a {@code CertPath} initialized with the supplied list of
      *   certificates
-     * @exception CertificateException if an exception occurs
-     * @exception UnsupportedOperationException if the method is not supported
+     * @throws    CertificateException if an exception occurs
+     * @throws    UnsupportedOperationException if the method is not supported
      * @since 1.4
      */
     public CertPath
         engineGenerateCertPath(List<? extends Certificate> certificates)
         throws CertificateException
@@ -196,11 +196,11 @@
      * existing service providers, this method cannot be {@code abstract}
      * and by default throws an {@code UnsupportedOperationException}.
      *
      * @return an {@code Iterator} over the names of the supported
      *         {@code CertPath} encodings (as {@code String}s)
-     * @exception UnsupportedOperationException if the method is not supported
+     * @throws    UnsupportedOperationException if the method is not supported
      * @since 1.4
      */
     public Iterator<String> engineGetCertPathEncodings() {
         throw new UnsupportedOperationException();
     }
@@ -237,11 +237,11 @@
      *
      * @return a (possibly empty) collection view of
      * java.security.cert.Certificate objects
      * initialized with the data from the input stream.
      *
-     * @exception CertificateException on parsing errors.
+     * @throws    CertificateException on parsing errors.
      */
     public abstract Collection<? extends Certificate>
             engineGenerateCertificates(InputStream inStream)
             throws CertificateException;
 
@@ -270,11 +270,11 @@
      * @param inStream an input stream with the CRL data.
      *
      * @return a CRL object initialized with the data
      * from the input stream.
      *
-     * @exception CRLException on parsing errors.
+     * @throws    CRLException on parsing errors.
      */
     public abstract CRL engineGenerateCRL(InputStream inStream)
         throws CRLException;
 
     /**
@@ -306,10 +306,10 @@
      *
      * @return a (possibly empty) collection view of
      * java.security.cert.CRL objects initialized with the data from the input
      * stream.
      *
-     * @exception CRLException on parsing errors.
+     * @throws    CRLException on parsing errors.
      */
     public abstract Collection<? extends CRL> engineGenerateCRLs
             (InputStream inStream) throws CRLException;
 }
