diff a/src/java.base/share/classes/java/lang/IllegalStateException.java b/src/java.base/share/classes/java/lang/IllegalStateException.java
--- a/src/java.base/share/classes/java/lang/IllegalStateException.java
+++ b/src/java.base/share/classes/java/lang/IllegalStateException.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1996, 2003, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1996, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -32,12 +32,11 @@
  * operation.
  *
  * @author  Jonni Kanerva
  * @since   1.1
  */
-public
-class IllegalStateException extends RuntimeException {
+public class IllegalStateException extends RuntimeException {
     /**
      * Constructs an IllegalStateException with no detail message.
      * A detail message is a String that describes this particular exception.
      */
     public IllegalStateException() {
@@ -57,11 +56,11 @@
 
     /**
      * Constructs a new exception with the specified detail message and
      * cause.
      *
-     * <p>Note that the detail message associated with <code>cause</code> is
+     * <p>Note that the detail message associated with {@code cause} is
      * <i>not</i> automatically incorporated in this exception's detail
      * message.
      *
      * @param  message the detail message (which is saved for later retrieval
      *         by the {@link Throwable#getMessage()} method).
@@ -91,7 +90,8 @@
      */
     public IllegalStateException(Throwable cause) {
         super(cause);
     }
 
+    @java.io.Serial
     static final long serialVersionUID = -1848914673093119416L;
 }
