diff a/src/java.base/share/classes/java/security/spec/ECFieldF2m.java b/src/java.base/share/classes/java/security/spec/ECFieldF2m.java
--- a/src/java.base/share/classes/java/security/spec/ECFieldF2m.java
+++ b/src/java.base/share/classes/java/security/spec/ECFieldF2m.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -45,11 +45,11 @@
 
     /**
      * Creates an elliptic curve characteristic 2 finite
      * field which has 2^{@code m} elements with normal basis.
      * @param m with 2^{@code m} being the number of elements.
-     * @exception IllegalArgumentException if {@code m}
+     * @throws    IllegalArgumentException if {@code m}
      * is not positive.
      */
     public ECFieldF2m(int m) {
         if (m <= 0) {
             throw new IllegalArgumentException("m is not positive");
@@ -74,12 +74,12 @@
      * {@code m} &gt; {@code k3} &gt; {@code k2}
      * &gt; {@code k1} &gt;= 1).
      * @param m with 2^{@code m} being the number of elements.
      * @param rp the BigInteger whose i-th bit corresponds to
      * the i-th coefficient of the reduction polynomial.
-     * @exception NullPointerException if {@code rp} is null.
-     * @exception IllegalArgumentException if {@code m}
+     * @throws    NullPointerException if {@code rp} is null.
+     * @throws    IllegalArgumentException if {@code m}
      * is not positive, or {@code rp} does not represent
      * a valid reduction polynomial.
      */
     public ECFieldF2m(int m, BigInteger rp) {
         // check m and rp
@@ -121,12 +121,12 @@
      * have length 1 or 3.
      * @param m with 2^{@code m} being the number of elements.
      * @param ks the order of the middle term(s) of the
      * reduction polynomial. Contents of this array are copied
      * to protect against subsequent modification.
-     * @exception NullPointerException if {@code ks} is null.
-     * @exception IllegalArgumentException if{@code m}
+     * @throws    NullPointerException if {@code ks} is null.
+     * @throws    IllegalArgumentException if{@code m}
      * is not positive, or the length of {@code ks}
      * is neither 1 nor 3, or values in {@code ks}
      * are not between {@code m}-1 and 1 (inclusive)
      * and in descending order.
      */
