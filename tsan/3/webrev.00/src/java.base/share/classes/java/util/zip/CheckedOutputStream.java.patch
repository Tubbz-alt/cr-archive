diff a/src/java.base/share/classes/java/util/zip/CheckedOutputStream.java b/src/java.base/share/classes/java/util/zip/CheckedOutputStream.java
--- a/src/java.base/share/classes/java/util/zip/CheckedOutputStream.java
+++ b/src/java.base/share/classes/java/util/zip/CheckedOutputStream.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1996, 1999, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1996, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -36,12 +36,11 @@
  *
  * @see         Checksum
  * @author      David Connelly
  * @since 1.1
  */
-public
-class CheckedOutputStream extends FilterOutputStream {
+public class CheckedOutputStream extends FilterOutputStream {
     private Checksum cksum;
 
     /**
      * Creates an output stream with the specified Checksum.
      * @param out the output stream
@@ -53,11 +52,11 @@
     }
 
     /**
      * Writes a byte. Will block until the byte is actually written.
      * @param b the byte to be written
-     * @exception IOException if an I/O error has occurred
+     * @throws    IOException if an I/O error has occurred
      */
     public void write(int b) throws IOException {
         out.write(b);
         cksum.update(b);
     }
@@ -66,11 +65,11 @@
      * Writes an array of bytes. Will block until the bytes are
      * actually written.
      * @param b the data to be written
      * @param off the start offset of the data
      * @param len the number of bytes to be written
-     * @exception IOException if an I/O error has occurred
+     * @throws    IOException if an I/O error has occurred
      */
     public void write(byte[] b, int off, int len) throws IOException {
         out.write(b, off, len);
         cksum.update(b, off, len);
     }
