diff a/src/java.base/share/classes/java/io/FileSystem.java b/src/java.base/share/classes/java/io/FileSystem.java
--- a/src/java.base/share/classes/java/io/FileSystem.java
+++ b/src/java.base/share/classes/java/io/FileSystem.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1998, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1998, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -146,53 +146,53 @@
 
     /* -- File operations -- */
 
     /**
      * Create a new empty file with the given pathname.  Return
-     * <code>true</code> if the file was created and <code>false</code> if a
+     * {@code true} if the file was created and {@code false} if a
      * file or directory with the given pathname already exists.  Throw an
      * IOException if an I/O error occurs.
      */
     public abstract boolean createFileExclusively(String pathname)
         throws IOException;
 
     /**
      * Delete the file or directory denoted by the given abstract pathname,
-     * returning <code>true</code> if and only if the operation succeeds.
+     * returning {@code true} if and only if the operation succeeds.
      */
     public abstract boolean delete(File f);
 
     /**
      * List the elements of the directory denoted by the given abstract
      * pathname.  Return an array of strings naming the elements of the
-     * directory if successful; otherwise, return <code>null</code>.
+     * directory if successful; otherwise, return {@code null}.
      */
     public abstract String[] list(File f);
 
     /**
      * Create a new directory denoted by the given abstract pathname,
-     * returning <code>true</code> if and only if the operation succeeds.
+     * returning {@code true} if and only if the operation succeeds.
      */
     public abstract boolean createDirectory(File f);
 
     /**
      * Rename the file or directory denoted by the first abstract pathname to
-     * the second abstract pathname, returning <code>true</code> if and only if
+     * the second abstract pathname, returning {@code true} if and only if
      * the operation succeeds.
      */
     public abstract boolean rename(File f1, File f2);
 
     /**
      * Set the last-modified time of the file or directory denoted by the
-     * given abstract pathname, returning <code>true</code> if and only if the
+     * given abstract pathname, returning {@code true} if and only if the
      * operation succeeds.
      */
     public abstract boolean setLastModifiedTime(File f, long time);
 
     /**
      * Mark the file or directory denoted by the given abstract pathname as
-     * read-only, returning <code>true</code> if and only if the operation
+     * read-only, returning {@code true} if and only if the operation
      * succeeds.
      */
     public abstract boolean setReadOnly(File f);
 
 
