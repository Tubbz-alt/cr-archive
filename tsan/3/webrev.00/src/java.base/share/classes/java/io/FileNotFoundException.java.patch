diff a/src/java.base/share/classes/java/io/FileNotFoundException.java b/src/java.base/share/classes/java/io/FileNotFoundException.java
--- a/src/java.base/share/classes/java/io/FileNotFoundException.java
+++ b/src/java.base/share/classes/java/io/FileNotFoundException.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1994, 2008, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1994, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -39,37 +39,38 @@
  * @author  unascribed
  * @since   1.0
  */
 
 public class FileNotFoundException extends IOException {
+    @java.io.Serial
     private static final long serialVersionUID = -897856973823710492L;
 
     /**
-     * Constructs a <code>FileNotFoundException</code> with
-     * <code>null</code> as its error detail message.
+     * Constructs a {@code FileNotFoundException} with
+     * {@code null} as its error detail message.
      */
     public FileNotFoundException() {
         super();
     }
 
     /**
-     * Constructs a <code>FileNotFoundException</code> with the
-     * specified detail message. The string <code>s</code> can be
+     * Constructs a {@code FileNotFoundException} with the
+     * specified detail message. The string {@code s} can be
      * retrieved later by the
      * <code>{@link java.lang.Throwable#getMessage}</code>
-     * method of class <code>java.lang.Throwable</code>.
+     * method of class {@code java.lang.Throwable}.
      *
      * @param   s   the detail message.
      */
     public FileNotFoundException(String s) {
         super(s);
     }
 
     /**
-     * Constructs a <code>FileNotFoundException</code> with a detail message
+     * Constructs a {@code FileNotFoundException} with a detail message
      * consisting of the given pathname string followed by the given reason
-     * string.  If the <code>reason</code> argument is <code>null</code> then
+     * string.  If the {@code reason} argument is {@code null} then
      * it will be omitted.  This private constructor is invoked only by native
      * I/O methods.
      *
      * @since 1.2
      */
