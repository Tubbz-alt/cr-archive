diff a/src/java.base/share/classes/jdk/internal/module/ModulePath.java b/src/java.base/share/classes/jdk/internal/module/ModulePath.java
--- a/src/java.base/share/classes/jdk/internal/module/ModulePath.java
+++ b/src/java.base/share/classes/jdk/internal/module/ModulePath.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2014, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2014, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -59,10 +59,12 @@
 import java.util.regex.Pattern;
 import java.util.stream.Collectors;
 import java.util.zip.ZipException;
 import java.util.zip.ZipFile;
 
+import sun.nio.cs.UTF_8;
+
 import jdk.internal.jmod.JmodFile;
 import jdk.internal.jmod.JmodFile.Section;
 import jdk.internal.perf.PerfCounter;
 
 /**
@@ -541,11 +543,11 @@
         for (String sn : serviceNames) {
             JarEntry entry = jf.getJarEntry(SERVICES_PREFIX + sn);
             List<String> providerClasses = new ArrayList<>();
             try (InputStream in = jf.getInputStream(entry)) {
                 BufferedReader reader
-                    = new BufferedReader(new InputStreamReader(in, "UTF-8"));
+                    = new BufferedReader(new InputStreamReader(in, UTF_8.INSTANCE));
                 String cn;
                 while ((cn = nextLine(reader)) != null) {
                     if (!cn.isEmpty()) {
                         String pn = packageName(cn);
                         if (!packages.contains(pn)) {
@@ -562,11 +564,11 @@
 
         // Main-Class attribute if it exists
         if (attrs != null) {
             String mainClass = attrs.getValue(Attributes.Name.MAIN_CLASS);
             if (mainClass != null) {
-                mainClass = mainClass.replace("/", ".");
+                mainClass = mainClass.replace('/', '.');
                 if (Checks.isClassName(mainClass)) {
                     String pn = packageName(mainClass);
                     if (packages.contains(pn)) {
                         builder.mainClass(mainClass);
                     }
