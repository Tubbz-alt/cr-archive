diff a/src/java.base/share/classes/jdk/internal/util/jar/JarIndex.java b/src/java.base/share/classes/jdk/internal/util/jar/JarIndex.java
--- a/src/java.base/share/classes/jdk/internal/util/jar/JarIndex.java
+++ b/src/java.base/share/classes/jdk/internal/util/jar/JarIndex.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1999, 2012, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1999, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -23,14 +23,17 @@
  * questions.
  */
 
 package jdk.internal.util.jar;
 
+import sun.nio.cs.UTF_8;
+
 import java.io.*;
 import java.util.*;
 import java.util.jar.*;
 import java.util.zip.*;
+
 import static sun.security.action.GetPropertyAction.privilegedGetProperty;
 
 /**
  * This class is used to maintain mappings from packages, classes
  * and resources to their enclosing JAR files. Mappings are kept
@@ -248,11 +251,11 @@
      * @param out the output stream
      * @exception IOException if an I/O error has occurred
      */
     public void write(OutputStream out) throws IOException {
         BufferedWriter bw = new BufferedWriter
-            (new OutputStreamWriter(out, "UTF8"));
+            (new OutputStreamWriter(out, UTF_8.INSTANCE));
         bw.write("JarIndex-Version: 1.0\n\n");
 
         if (jarFiles != null) {
             for (int i = 0; i < jarFiles.length; i++) {
                 /* print out the jar file name */
@@ -278,11 +281,11 @@
      * @param is the input stream
      * @exception IOException if an I/O error has occurred
      */
     public void read(InputStream is) throws IOException {
         BufferedReader br = new BufferedReader
-            (new InputStreamReader(is, "UTF8"));
+            (new InputStreamReader(is, UTF_8.INSTANCE));
         String line = null;
         String currentJar = null;
 
         /* an ordered list of jar file names */
         Vector<String> jars = new Vector<>();
