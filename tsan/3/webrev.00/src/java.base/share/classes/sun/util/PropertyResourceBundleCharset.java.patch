diff a/src/java.base/share/classes/sun/util/PropertyResourceBundleCharset.java b/src/java.base/share/classes/sun/util/PropertyResourceBundleCharset.java
--- a/src/java.base/share/classes/sun/util/PropertyResourceBundleCharset.java
+++ b/src/java.base/share/classes/sun/util/PropertyResourceBundleCharset.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2015, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2015, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -23,10 +23,13 @@
  * questions.
  */
 
 package sun.util;
 
+import sun.nio.cs.ISO_8859_1;
+import sun.nio.cs.UTF_8;
+
 import java.nio.ByteBuffer;
 import java.nio.CharBuffer;
 import java.nio.charset.Charset;
 import java.nio.charset.CharsetDecoder;
 import java.nio.charset.CharsetEncoder;
@@ -68,11 +71,11 @@
         throw new UnsupportedOperationException("Encoding is not supported");
     }
 
     private final class PropertiesFileDecoder extends CharsetDecoder {
 
-        private CharsetDecoder cdUTF_8 = StandardCharsets.UTF_8.newDecoder()
+        private CharsetDecoder cdUTF_8 = UTF_8.INSTANCE.newDecoder()
                                 .onMalformedInput(CodingErrorAction.REPORT)
                                 .onUnmappableCharacter(CodingErrorAction.REPORT);
         private CharsetDecoder cdISO_8859_1 = null;
 
         protected PropertiesFileDecoder(Charset cs,
@@ -96,10 +99,10 @@
             // Invalid or unmappable UTF-8 sequence detected.
             // Switching to the ISO 8859-1 decorder.
             assert cr.isMalformed() || cr.isUnmappable();
             in.reset();
             out.reset();
-            cdISO_8859_1 = StandardCharsets.ISO_8859_1.newDecoder();
+            cdISO_8859_1 = ISO_8859_1.INSTANCE.newDecoder();
             return cdISO_8859_1.decode(in, out, false);
         }
     }
 }
