diff a/src/java.base/share/classes/sun/security/x509/ExtendedKeyUsageExtension.java b/src/java.base/share/classes/sun/security/x509/ExtendedKeyUsageExtension.java
--- a/src/java.base/share/classes/sun/security/x509/ExtendedKeyUsageExtension.java
+++ b/src/java.base/share/classes/sun/security/x509/ExtendedKeyUsageExtension.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2000, 2014, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -95,34 +95,23 @@
     public static final String USAGES = "usages";
 
     // OID defined in RFC 5280 Sections 4.2.1.12
     // more from http://www.alvestrand.no/objectid/1.3.6.1.5.5.7.3.html
     private static final Map <ObjectIdentifier, String> map =
-            new HashMap <ObjectIdentifier, String> ();
-
-    private static final int[] anyExtendedKeyUsageOidData = {2, 5, 29, 37, 0};
-    private static final int[] serverAuthOidData = {1, 3, 6, 1, 5, 5, 7, 3, 1};
-    private static final int[] clientAuthOidData = {1, 3, 6, 1, 5, 5, 7, 3, 2};
-    private static final int[] codeSigningOidData = {1, 3, 6, 1, 5, 5, 7, 3, 3};
-    private static final int[] emailProtectionOidData = {1, 3, 6, 1, 5, 5, 7, 3, 4};
-    private static final int[] ipsecEndSystemOidData = {1, 3, 6, 1, 5, 5, 7, 3, 5};
-    private static final int[] ipsecTunnelOidData = {1, 3, 6, 1, 5, 5, 7, 3, 6};
-    private static final int[] ipsecUserOidData = {1, 3, 6, 1, 5, 5, 7, 3, 7};
-    private static final int[] timeStampingOidData = {1, 3, 6, 1, 5, 5, 7, 3, 8};
-    private static final int[] OCSPSigningOidData = {1, 3, 6, 1, 5, 5, 7, 3, 9};
+            new HashMap<ObjectIdentifier, String>();
 
     static {
-        map.put(ObjectIdentifier.newInternal(anyExtendedKeyUsageOidData), "anyExtendedKeyUsage");
-        map.put(ObjectIdentifier.newInternal(serverAuthOidData), "serverAuth");
-        map.put(ObjectIdentifier.newInternal(clientAuthOidData), "clientAuth");
-        map.put(ObjectIdentifier.newInternal(codeSigningOidData), "codeSigning");
-        map.put(ObjectIdentifier.newInternal(emailProtectionOidData), "emailProtection");
-        map.put(ObjectIdentifier.newInternal(ipsecEndSystemOidData), "ipsecEndSystem");
-        map.put(ObjectIdentifier.newInternal(ipsecTunnelOidData), "ipsecTunnel");
-        map.put(ObjectIdentifier.newInternal(ipsecUserOidData), "ipsecUser");
-        map.put(ObjectIdentifier.newInternal(timeStampingOidData), "timeStamping");
-        map.put(ObjectIdentifier.newInternal(OCSPSigningOidData), "OCSPSigning");
+        map.put(ObjectIdentifier.of("2.5.29.37.0"), "anyExtendedKeyUsage");
+        map.put(ObjectIdentifier.of("1.3.6.1.5.5.7.3.1"), "serverAuth");
+        map.put(ObjectIdentifier.of("1.3.6.1.5.5.7.3.2"), "clientAuth");
+        map.put(ObjectIdentifier.of("1.3.6.1.5.5.7.3.3"), "codeSigning");
+        map.put(ObjectIdentifier.of("1.3.6.1.5.5.7.3.4"), "emailProtection");
+        map.put(ObjectIdentifier.of("1.3.6.1.5.5.7.3.5"), "ipsecEndSystem");
+        map.put(ObjectIdentifier.of("1.3.6.1.5.5.7.3.6"), "ipsecTunnel");
+        map.put(ObjectIdentifier.of("1.3.6.1.5.5.7.3.7"), "ipsecUser");
+        map.put(ObjectIdentifier.of("1.3.6.1.5.5.7.3.8"), "timeStamping");
+        map.put(ObjectIdentifier.of("1.3.6.1.5.5.7.3.9"), "OCSPSigning");
     };
 
     /**
      * Vector of KeyUsages for this object.
      */
