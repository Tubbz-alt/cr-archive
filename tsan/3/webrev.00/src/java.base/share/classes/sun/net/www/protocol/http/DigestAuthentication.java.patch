diff a/src/java.base/share/classes/sun/net/www/protocol/http/DigestAuthentication.java b/src/java.base/share/classes/sun/net/www/protocol/http/DigestAuthentication.java
--- a/src/java.base/share/classes/sun/net/www/protocol/http/DigestAuthentication.java
+++ b/src/java.base/share/classes/sun/net/www/protocol/http/DigestAuthentication.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1997, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1997, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -24,23 +24,25 @@
  */
 
 package sun.net.www.protocol.http;
 
 import java.io.*;
-import java.net.URL;
-import java.net.ProtocolException;
 import java.net.PasswordAuthentication;
-import java.util.Arrays;
-import java.util.Random;
-
-import sun.net.www.HeaderParser;
-import sun.net.NetProperties;
+import java.net.ProtocolException;
+import java.net.URL;
+import java.security.AccessController;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
 import java.security.PrivilegedAction;
-import java.security.AccessController;
+import java.util.Arrays;
 import java.util.Objects;
+import java.util.Random;
+
+import sun.net.NetProperties;
+import sun.net.www.HeaderParser;
+import sun.nio.cs.ISO_8859_1;
+
 import static sun.net.www.protocol.http.HttpURLConnection.HTTP_CONNECT;
 
 /**
  * DigestAuthentication: Encapsulate an http server authentication using
  * the "Digest" scheme, as described in RFC2069 and updated in RFC2617
@@ -48,10 +50,11 @@
  * @author Bill Foote
  */
 
 class DigestAuthentication extends AuthenticationInfo {
 
+    @java.io.Serial
     private static final long serialVersionUID = 100L;
 
     private String authMethod;
 
     private static final String compatPropName = "http.auth.digest." +
@@ -518,15 +521,11 @@
         // 0         1          2         3        4       5      6     7
         "00000000", "0000000", "000000", "00000", "0000", "000", "00", "0"
     };
 
     private String encode(String src, char[] passwd, MessageDigest md) {
-        try {
-            md.update(src.getBytes("ISO-8859-1"));
-        } catch (java.io.UnsupportedEncodingException uee) {
-            assert false;
-        }
+        md.update(src.getBytes(ISO_8859_1.INSTANCE));
         if (passwd != null) {
             byte[] passwdBytes = new byte[passwd.length];
             for (int i=0; i<passwd.length; i++)
                 passwdBytes[i] = (byte)passwd[i];
             md.update(passwdBytes);
