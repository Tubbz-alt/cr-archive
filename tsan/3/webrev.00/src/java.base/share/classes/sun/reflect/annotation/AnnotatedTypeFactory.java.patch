diff a/src/java.base/share/classes/sun/reflect/annotation/AnnotatedTypeFactory.java b/src/java.base/share/classes/sun/reflect/annotation/AnnotatedTypeFactory.java
--- a/src/java.base/share/classes/sun/reflect/annotation/AnnotatedTypeFactory.java
+++ b/src/java.base/share/classes/sun/reflect/annotation/AnnotatedTypeFactory.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2013, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2013, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -391,33 +391,26 @@
 
         private TypeVariable<?> getTypeVariable() {
             return (TypeVariable)getType();
         }
 
-        // For toString, the declaration of a type variable should
-        // including information about its bounds, etc. However, the
+        // The declaration of a type variable should
+        // include information about its bounds, etc. However, the
         // use of a type variable should not. For that reason, it is
-        // acceptable for the toString implementation of
+        // acceptable for the toString and hashCode implementations of
         // AnnotatedTypeVariableImpl to use the inherited
-        // implementation from AnnotatedTypeBaseImpl.
+        // implementations from AnnotatedTypeBaseImpl.
 
         @Override
         public boolean equals(Object o) {
             if (o instanceof AnnotatedTypeVariable) {
                 AnnotatedTypeVariable that = (AnnotatedTypeVariable) o;
-                return equalsTypeAndAnnotations(that) &&
-                    Arrays.equals(getAnnotatedBounds(), that.getAnnotatedBounds());
+                return equalsTypeAndAnnotations(that);
             } else {
                 return false;
             }
         }
-
-        @Override
-        public int hashCode() {
-            return baseHashCode() ^
-                Objects.hash((Object[])getAnnotatedBounds());
-        }
     }
 
     private static final class AnnotatedParameterizedTypeImpl extends AnnotatedTypeBaseImpl
             implements AnnotatedParameterizedType {
         AnnotatedParameterizedTypeImpl(ParameterizedType type, LocationInfo location,
