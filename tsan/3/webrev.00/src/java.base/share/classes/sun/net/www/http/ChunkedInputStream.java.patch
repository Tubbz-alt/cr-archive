diff a/src/java.base/share/classes/sun/net/www/http/ChunkedInputStream.java b/src/java.base/share/classes/sun/net/www/http/ChunkedInputStream.java
--- a/src/java.base/share/classes/sun/net/www/http/ChunkedInputStream.java
+++ b/src/java.base/share/classes/sun/net/www/http/ChunkedInputStream.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1999, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -27,10 +27,11 @@
 import java.io.*;
 import java.util.*;
 
 import sun.net.*;
 import sun.net.www.*;
+import sun.nio.cs.US_ASCII;
 
 /**
  * A <code>ChunkedInputStream</code> provides a stream for reading a body of
  * a http message that can be sent as a series of chunks, each with its own
  * size indicator. Optionally the last chunk can be followed by trailers
@@ -305,11 +306,12 @@
                     }
 
                     /*
                      * Extract the chunk size from the header (ignoring extensions).
                      */
-                    String header = new String(rawData, rawPos, pos-rawPos+1, "US-ASCII");
+                    String header = new String(rawData, rawPos, pos-rawPos+1,
+                            US_ASCII.INSTANCE);
                     for (i=0; i < header.length(); i++) {
                         if (Character.digit(header.charAt(i), 16) == -1)
                             break;
                     }
                     try {
@@ -459,11 +461,12 @@
 
                     /*
                      * Extract any tailers and append them to the message
                      * headers.
                      */
-                    String trailer = new String(rawData, rawPos, pos-rawPos, "US-ASCII");
+                    String trailer = new String(rawData, rawPos, pos-rawPos,
+                            US_ASCII.INSTANCE);
                     i = trailer.indexOf(':');
                     if (i == -1) {
                         throw new IOException("Malformed tailer - format should be key:value");
                     }
                     String key = (trailer.substring(0, i)).trim();
