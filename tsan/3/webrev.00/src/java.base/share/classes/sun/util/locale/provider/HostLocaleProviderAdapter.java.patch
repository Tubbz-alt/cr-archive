diff a/src/java.base/share/classes/sun/util/locale/provider/HostLocaleProviderAdapter.java b/src/java.base/share/classes/sun/util/locale/provider/HostLocaleProviderAdapter.java
--- a/src/java.base/share/classes/sun/util/locale/provider/HostLocaleProviderAdapter.java
+++ b/src/java.base/share/classes/sun/util/locale/provider/HostLocaleProviderAdapter.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2012, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2012, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -25,10 +25,11 @@
 
 package sun.util.locale.provider;
 
 import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
+import java.text.DecimalFormat;
 import java.util.spi.LocaleServiceProvider;
 
 /**
  * LocaleProviderAdapter implementation for the host locale data.
  * Currently it is only implemented on Windows Vista or later.
@@ -58,6 +59,21 @@
                   InvocationTargetException ex) {
             LocaleServiceProviderPool.config(HostLocaleProviderAdapter.class, ex.toString());
         }
         return null;
     }
+
+    /**
+     * Utility to make the decimal format specific to integer, called
+     * by the platform dependent adapter implementations.
+     *
+     * @param df A DecimalFormat object
+     * @return The same DecimalFormat object in the argument, modified
+     *          to allow integer formatting/parsing only.
+     */
+    static DecimalFormat makeIntegerFormatter(DecimalFormat df) {
+        df.setMaximumFractionDigits(0);
+        df.setDecimalSeparatorAlwaysShown(false);
+        df.setParseIntegerOnly(true);
+        return df;
+    }
 }
