diff a/src/java.base/share/classes/sun/security/provider/SecureRandom.java b/src/java.base/share/classes/sun/security/provider/SecureRandom.java
--- a/src/java.base/share/classes/sun/security/provider/SecureRandom.java
+++ b/src/java.base/share/classes/sun/security/provider/SecureRandom.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1998, 2014, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1998, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -53,10 +53,11 @@
  */
 
 public final class SecureRandom extends SecureRandomSpi
 implements java.io.Serializable {
 
+    @java.io.Serial
     private static final long serialVersionUID = 3581829991155417889L;
 
     private static final int DIGEST_SIZE = 20;
     private transient MessageDigest digest;
     private byte[] state;
@@ -269,10 +270,11 @@
      * Note that the engineNextBytes() method invoked on the restored random
      * object will yield the exact same (random) bytes as the original.
      * If you do not want this behaviour, you should re-seed the restored
      * random object, using engineSetSeed().
      */
+    @java.io.Serial
     private void readObject(java.io.ObjectInputStream s)
         throws IOException, ClassNotFoundException {
 
         s.defaultReadObject ();
 
