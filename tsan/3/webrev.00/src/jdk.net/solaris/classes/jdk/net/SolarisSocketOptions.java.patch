diff a/src/jdk.net/solaris/classes/jdk/net/SolarisSocketOptions.java b/src/jdk.net/solaris/classes/jdk/net/SolarisSocketOptions.java
--- a/src/jdk.net/solaris/classes/jdk/net/SolarisSocketOptions.java
+++ b/src/jdk.net/solaris/classes/jdk/net/SolarisSocketOptions.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2016, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -28,10 +28,11 @@
 import java.net.SocketException;
 import java.security.AccessController;
 import java.security.PrivilegedAction;
 import jdk.net.ExtendedSocketOptions.PlatformSocketOptions;
 
+@SuppressWarnings("removal")
 class SolarisSocketOptions extends PlatformSocketOptions {
 
     public SolarisSocketOptions() { }
 
     @Override native int setFlowOption(int fd, int priority, long bandwidth)
@@ -43,14 +44,18 @@
     @Override native boolean flowSupported();
 
     private static native void init();
 
     static {
-        AccessController.doPrivileged(new PrivilegedAction<Void>() {
-            public Void run() {
-                System.loadLibrary("extnet");
-                return null;
-            }
-        });
+        if (System.getSecurityManager() == null) {
+            System.loadLibrary("extnet");
+        } else {
+            AccessController.doPrivileged(new PrivilegedAction<Void>() {
+                public Void run() {
+                    System.loadLibrary("extnet");
+                    return null;
+                }
+            });
+        }
         init();
     }
 }
