diff a/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Attribute.java b/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Attribute.java
--- a/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Attribute.java
+++ b/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Attribute.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -245,11 +245,12 @@
             int len = values.length();
             if (len > 0) {
                 buf.append('(');
                 boolean first = true;
                 for (Pair<MethodSymbol, Attribute> value : values) {
-                    if (!first) buf.append(", ");
+                    if (!first)
+                        buf.append(", ");
                     first = false;
 
                     Name name = value.fst.name;
                     if (len > 1 || name != name.table.names.value) {
                         buf.append(name);
@@ -366,11 +367,11 @@
             this.value = Assert.checkNonNull(value);
         }
         public void accept(Visitor v) { v.visitEnum(this); }
         @DefinedBy(Api.LANGUAGE_MODEL)
         public String toString() {
-            return value.enclClass() + "." + value;     // qualified name
+            return value.toString();
         }
         @DefinedBy(Api.LANGUAGE_MODEL)
         public VarSymbol getValue() {
             return value;
         }
