diff a/src/jdk.compiler/share/classes/com/sun/source/util/DocTreeScanner.java b/src/jdk.compiler/share/classes/com/sun/source/util/DocTreeScanner.java
--- a/src/jdk.compiler/share/classes/com/sun/source/util/DocTreeScanner.java
+++ b/src/jdk.compiler/share/classes/com/sun/source/util/DocTreeScanner.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2011, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2011, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -122,19 +122,19 @@
 /* ***************************************************************************
  * Visitor methods
  ****************************************************************************/
 
     /**
-     * {@inheritDoc} This implementation returns {@code null}.
+     * {@inheritDoc} This implementation scans the children in left to right order.
      *
      * @param node  {@inheritDoc}
      * @param p  {@inheritDoc}
      * @return the result of scanning
      */
     @Override
     public R visitAttribute(AttributeTree node, P p) {
-        return null;
+        return scan(node.getValue(), p);
     }
 
     /**
      * {@inheritDoc} This implementation scans the children in left to right order.
      *
@@ -309,19 +309,19 @@
         r = scanAndReduce(node.getLabel(), p, r);
         return r;
     }
 
     /**
-     * {@inheritDoc} This implementation returns {@code null}.
+     * {@inheritDoc} This implementation scans the children in left to right order.
      *
      * @param node  {@inheritDoc}
      * @param p  {@inheritDoc}
      * @return the result of scanning
      */
     @Override
     public R visitLiteral(LiteralTree node, P p) {
-        return null;
+        return scan(node.getBody(), p);
     }
 
     /**
      * {@inheritDoc} This implementation scans the children in left to right order.
      *
