diff a/src/jdk.compiler/share/classes/com/sun/tools/javac/parser/Tokens.java b/src/jdk.compiler/share/classes/com/sun/tools/javac/parser/Tokens.java
--- a/src/jdk.compiler/share/classes/com/sun/tools/javac/parser/Tokens.java
+++ b/src/jdk.compiler/share/classes/com/sun/tools/javac/parser/Tokens.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1999, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -83,11 +83,11 @@
 
         key = new TokenKind[maxKey+1];
         for (int i = 0; i <= maxKey; i++) key[i] = TokenKind.IDENTIFIER;
         for (TokenKind t : TokenKind.values()) {
             if (t.name != null)
-            key[tokenName[t.ordinal()].getIndex()] = t;
+                key[tokenName[t.ordinal()].getIndex()] = t;
         }
     }
 
     private void enterKeyword(String s, TokenKind token) {
         Name n = names.fromString(s);
@@ -313,11 +313,11 @@
         /** tags constants **/
         enum Tag {
             DEFAULT,
             NAMED,
             STRING,
-            NUMERIC
+            NUMERIC;
         }
 
         /** The token kind */
         public final TokenKind kind;
 
@@ -355,11 +355,11 @@
             };
         }
 
         protected void checkKind() {
             if (kind.tag != Tag.DEFAULT) {
-                throw new AssertionError("Bad token kind - expected " + Tag.STRING);
+                throw new AssertionError("Bad token kind - expected " + Tag.DEFAULT);
             }
         }
 
         public Name name() {
             throw new UnsupportedOperationException();
