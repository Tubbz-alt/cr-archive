diff a/src/jdk.compiler/share/classes/com/sun/tools/javac/util/RichDiagnosticFormatter.java b/src/jdk.compiler/share/classes/com/sun/tools/javac/util/RichDiagnosticFormatter.java
--- a/src/jdk.compiler/share/classes/com/sun/tools/javac/util/RichDiagnosticFormatter.java
+++ b/src/jdk.compiler/share/classes/com/sun/tools/javac/util/RichDiagnosticFormatter.java
@@ -49,12 +49,12 @@
 import static com.sun.tools.javac.util.LayoutCharacters.*;
 import static com.sun.tools.javac.util.RichDiagnosticFormatter.RichConfiguration.*;
 
 /**
  * A rich diagnostic formatter is a formatter that provides better integration
- * with javac's type system. A diagostic is first preprocessed in order to keep
- * track of each types/symbols in it; after these informations are collected,
+ * with javac's type system. A diagnostic is first preprocessed in order to keep
+ * track of each types/symbols in it; after this information is collected,
  * the diagnostic is rendered using a standard formatter, whose type/symbol printer
  * has been replaced by a more refined version provided by this rich formatter.
  * The rich formatter currently enables three different features: (i) simple class
  * names - that is class names are displayed used a non qualified name (thus
  * omitting package info) whenever possible - (ii) where clause list - a list of
@@ -248,11 +248,11 @@
             throw new AssertionError("Missing type variable in where clause: " + typevar);
         return found == 1;
     }
     //where
     /**
-     * This enum defines all posssible kinds of where clauses that can be
+     * This enum defines all possible kinds of where clauses that can be
      * attached by a rich diagnostic formatter to a given diagnostic
      */
     enum WhereClauseKind {
 
         /** where clause regarding a type variable */
