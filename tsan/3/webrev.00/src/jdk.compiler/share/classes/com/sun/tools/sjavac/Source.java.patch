diff a/src/jdk.compiler/share/classes/com/sun/tools/sjavac/Source.java b/src/jdk.compiler/share/classes/com/sun/tools/sjavac/Source.java
--- a/src/jdk.compiler/share/classes/com/sun/tools/sjavac/Source.java
+++ b/src/jdk.compiler/share/classes/com/sun/tools/sjavac/Source.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2012, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2012, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -179,11 +179,11 @@
             s.save(b);
         }
     }
 
     /**
-     * Recurse into the directory root and find all files matchine the excl/incl/exclfiles/inclfiles rules.
+     * Recurse into the directory root and find all files matching the excl/incl/exclfiles/inclfiles rules.
      * Detects the existence of module-info.java files and presumes that the directory it resides in
      * is the name of the current module.
      */
     static public void scanRoot(File root,
                                 Set<String> suffixes,
@@ -225,11 +225,11 @@
                         throw new IOException("You have already added the file "+file+" from "+existing.file().getPath());
                     }
                     existing = currentModule.lookupSource(file.toString());
                     if (existing != null) {
 
-                            // Oups, the source is already added, could be ok, could be not, lets check.
+                            // Oops, the source is already added, could be ok, could be not, let's check.
                             if (inLinksrc) {
                                 // So we are collecting sources for linking only.
                                 if (existing.isLinkedOnly()) {
                                     // Ouch, this one is also for linking only. Bad.
                                     throw new IOException("You have already added the link only file " + file + " from " + existing.file().getPath());
