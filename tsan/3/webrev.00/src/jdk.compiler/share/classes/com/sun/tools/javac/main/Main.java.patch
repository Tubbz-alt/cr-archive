diff a/src/jdk.compiler/share/classes/com/sun/tools/javac/main/Main.java b/src/jdk.compiler/share/classes/com/sun/tools/javac/main/Main.java
--- a/src/jdk.compiler/share/classes/com/sun/tools/javac/main/Main.java
+++ b/src/jdk.compiler/share/classes/com/sun/tools/javac/main/Main.java
@@ -282,16 +282,15 @@
         // init Dependencies
         if (options.isSet("debug.completionDeps")) {
             Dependencies.GraphDependencies.preRegister(context);
         }
 
+        BasicJavacTask t = (BasicJavacTask) BasicJavacTask.instance(context);
+
         // init plugins
         Set<List<String>> pluginOpts = args.getPluginOpts();
-        if (!pluginOpts.isEmpty() || context.get(PlatformDescription.class) != null) {
-            BasicJavacTask t = (BasicJavacTask) BasicJavacTask.instance(context);
-            t.initPlugins(pluginOpts);
-        }
+        t.initPlugins(pluginOpts);
 
         // init multi-release jar handling
         if (fileManager.isSupportedOption(Option.MULTIRELEASE.primaryName) == 1) {
             Target target = Target.instance(context);
             List<String> list = List.of(target.multiReleaseValue());
@@ -302,11 +301,10 @@
         JavaCompiler comp = JavaCompiler.instance(context);
 
         // init doclint
         List<String> docLintOpts = args.getDocLintOpts();
         if (!docLintOpts.isEmpty()) {
-            BasicJavacTask t = (BasicJavacTask) BasicJavacTask.instance(context);
             t.initDocLint(docLintOpts);
         }
 
         if (options.get(Option.XSTDOUT) != null) {
             // Stdout reassigned - ask compiler to close it when it is done
@@ -475,11 +473,11 @@
         if (url != null) {
             pw.println("  " + url);
         }
 
         try (InputStream in = getClass().getResourceAsStream('/' + className.replace('.', '/') + ".class")) {
-            final String algorithm = "MD5";
+            final String algorithm = "SHA-256";
             byte[] digest;
             MessageDigest md = MessageDigest.getInstance(algorithm);
             try (DigestInputStream din = new DigestInputStream(in, md)) {
                 byte[] buf = new byte[8192];
                 int n;
