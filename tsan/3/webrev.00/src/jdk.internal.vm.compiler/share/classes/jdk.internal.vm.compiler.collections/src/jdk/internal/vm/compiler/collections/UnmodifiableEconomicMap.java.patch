diff a/src/jdk.internal.vm.compiler/share/classes/jdk.internal.vm.compiler.collections/src/jdk/internal/vm/compiler/collections/UnmodifiableEconomicMap.java b/src/jdk.internal.vm.compiler/share/classes/jdk.internal.vm.compiler.collections/src/jdk/internal/vm/compiler/collections/UnmodifiableEconomicMap.java
--- a/src/jdk.internal.vm.compiler/share/classes/jdk.internal.vm.compiler.collections/src/jdk/internal/vm/compiler/collections/UnmodifiableEconomicMap.java
+++ b/src/jdk.internal.vm.compiler/share/classes/jdk.internal.vm.compiler.collections/src/jdk/internal/vm/compiler/collections/UnmodifiableEconomicMap.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2017, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2017, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -41,27 +41,27 @@
 package jdk.internal.vm.compiler.collections;
 
 /**
  * Unmodifiable memory efficient map data structure.
  *
- * @since 1.0
+ * @since 19.0
  */
 public interface UnmodifiableEconomicMap<K, V> {
 
     /**
      * Returns the value to which {@code key} is mapped, or {@code null} if this map contains no
      * mapping for {@code key}.
      *
-     * @since 1.0
+     * @since 19.0
      */
     V get(K key);
 
     /**
      * Returns the value to which {@code key} is mapped, or {@code defaultValue} if this map
      * contains no mapping for {@code key}.
      *
-     * @since 1.0
+     * @since 19.0
      */
     default V get(K key, V defaultValue) {
         V v = get(key);
         if (v == null) {
             return defaultValue;
@@ -70,44 +70,44 @@
     }
 
     /**
      * Returns {@code true} if this map contains a mapping for {@code key}.
      *
-     * @since 1.0
+     * @since 19.0
      */
     boolean containsKey(K key);
 
     /**
      * Returns the number of key-value mappings in this map.
      *
-     * @since 1.0
+     * @since 19.0
      */
     int size();
 
     /**
      * Returns {@code true} if this map contains no key-value mappings.
      *
-     * @since 1.0
+     * @since 19.0
      */
     boolean isEmpty();
 
     /**
      * Returns a {@link Iterable} view of the values contained in this map.
      *
-     * @since 1.0
+     * @since 19.0
      */
     Iterable<V> getValues();
 
     /**
      * Returns a {@link Iterable} view of the keys contained in this map.
      *
-     * @since 1.0
+     * @since 19.0
      */
     Iterable<K> getKeys();
 
     /**
      * Returns a {@link UnmodifiableMapCursor} view of the mappings contained in this map.
      *
-     * @since 1.0
+     * @since 19.0
      */
     UnmodifiableMapCursor<K, V> getEntries();
 }
