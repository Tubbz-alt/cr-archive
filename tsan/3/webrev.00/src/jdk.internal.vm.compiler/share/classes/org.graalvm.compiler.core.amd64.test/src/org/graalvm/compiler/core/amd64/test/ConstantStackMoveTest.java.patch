diff a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.core.amd64.test/src/org/graalvm/compiler/core/amd64/test/ConstantStackMoveTest.java b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.core.amd64.test/src/org/graalvm/compiler/core/amd64/test/ConstantStackMoveTest.java
--- a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.core.amd64.test/src/org/graalvm/compiler/core/amd64/test/ConstantStackMoveTest.java
+++ b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.core.amd64.test/src/org/graalvm/compiler/core/amd64/test/ConstantStackMoveTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2015, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2015, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -141,11 +141,11 @@
     public byte testByte() {
         return testCopyByte(stackCopyByte);
     }
 
     @Test
-    public void runByte() throws Throwable {
+    public void runByte() {
         runTest("testByte");
     }
 
     @LIRIntrinsic
     public static short testCopyShort(LoadConstantStackSpecShort spec) {
@@ -155,11 +155,11 @@
     public short testShort() {
         return testCopyShort(stackCopyShort);
     }
 
     @Test
-    public void runShort() throws Throwable {
+    public void runShort() {
         runTest("testShort");
     }
 
     @LIRIntrinsic
     public static int testCopyInt(LoadConstantStackSpecInteger spec) {
@@ -169,11 +169,11 @@
     public int testInt() {
         return testCopyInt(stackCopyInt);
     }
 
     @Test
-    public void runInt() throws Throwable {
+    public void runInt() {
         runTest("testInt");
     }
 
     @LIRIntrinsic
     public static long testCopyLong(LoadConstantStackSpecLong spec) {
@@ -183,11 +183,11 @@
     public long testLong() {
         return testCopyLong(stackCopyLong);
     }
 
     @Test
-    public void runLong() throws Throwable {
+    public void runLong() {
         runTest("testLong");
     }
 
     @LIRIntrinsic
     public static float testCopyFloat(LoadConstantStackSpecFloat spec) {
@@ -197,11 +197,11 @@
     public float testFloat() {
         return testCopyFloat(stackCopyFloat);
     }
 
     @Test
-    public void runFloat() throws Throwable {
+    public void runFloat() {
         runTest("testFloat");
     }
 
     @LIRIntrinsic
     public static double testCopyDouble(LoadConstantStackSpecDouble spec) {
@@ -211,10 +211,10 @@
     public double testDouble() {
         return testCopyDouble(stackCopyDouble);
     }
 
     @Test
-    public void runDouble() throws Throwable {
+    public void runDouble() {
         runTest("testDouble");
     }
 
 }
