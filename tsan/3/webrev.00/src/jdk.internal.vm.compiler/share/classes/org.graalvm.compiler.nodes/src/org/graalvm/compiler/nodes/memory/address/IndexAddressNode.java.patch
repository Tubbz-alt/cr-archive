diff a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/memory/address/IndexAddressNode.java b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/memory/address/IndexAddressNode.java
--- a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/memory/address/IndexAddressNode.java
+++ b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/memory/address/IndexAddressNode.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2018, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -41,16 +41,22 @@
     public static final NodeClass<IndexAddressNode> TYPE = NodeClass.create(IndexAddressNode.class);
 
     @Input ValueNode array;
     @Input ValueNode index;
 
+    private final JavaKind arrayKind;
     private final JavaKind elementKind;
 
     public IndexAddressNode(ValueNode array, ValueNode index, JavaKind elementKind) {
+        this(array, index, elementKind, elementKind);
+    }
+
+    public IndexAddressNode(ValueNode array, ValueNode index, JavaKind arrayKind, JavaKind elementKind) {
         super(TYPE);
         this.array = array;
         this.index = index;
+        this.arrayKind = arrayKind;
         this.elementKind = elementKind;
     }
 
     @Override
     public ValueNode getBase() {
@@ -69,10 +75,14 @@
     @Override
     public long getMaxConstantDisplacement() {
         return Long.MAX_VALUE;
     }
 
+    public JavaKind getArrayKind() {
+        return arrayKind;
+    }
+
     public JavaKind getElementKind() {
         return elementKind;
     }
 
     @Override
