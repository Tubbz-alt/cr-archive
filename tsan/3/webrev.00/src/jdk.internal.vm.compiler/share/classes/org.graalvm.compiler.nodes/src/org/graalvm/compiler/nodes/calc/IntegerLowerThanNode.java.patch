diff a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/calc/IntegerLowerThanNode.java b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/calc/IntegerLowerThanNode.java
--- a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/calc/IntegerLowerThanNode.java
+++ b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/calc/IntegerLowerThanNode.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2017, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2017, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -287,15 +287,21 @@
             if (right == null && rightCst == null) {
                 return null;
             }
             if ((xResidue == 0 && left != null) || (yResidue == 0 && right != null)) {
                 if (left == null) {
+                    // Fortify: Suppress Null Dereference false positive
+                    assert leftCst != null;
+
                     left = ConstantNode.forIntegerBits(bits, leftCst.asLong() - min);
                 } else if (xResidue != 0) {
                     left = AddNode.create(left, ConstantNode.forIntegerBits(bits, xResidue), view);
                 }
                 if (right == null) {
+                    // Fortify: Suppress Null Dereference false positive
+                    assert rightCst != null;
+
                     right = ConstantNode.forIntegerBits(bits, rightCst.asLong() - min);
                 } else if (yResidue != 0) {
                     right = AddNode.create(right, ConstantNode.forIntegerBits(bits, yResidue), view);
                 }
                 if (signed) {
