diff a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/GuardedValueNode.java b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/GuardedValueNode.java
--- a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/GuardedValueNode.java
+++ b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/GuardedValueNode.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2013, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2013, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -57,10 +57,17 @@
     public GuardedValueNode(ValueNode object, GuardingNode guard) {
         super(TYPE, object.stamp(NodeView.DEFAULT), guard);
         this.object = object;
     }
 
+    public static ValueNode create(ValueNode object, GuardingNode guard) {
+        if (guard == null) {
+            return object;
+        }
+        return new GuardedValueNode(object, guard);
+    }
+
     public ValueNode object() {
         return object;
     }
 
     @Override
@@ -83,11 +90,11 @@
         }
     }
 
     @Override
     public Node canonical(CanonicalizerTool tool) {
-        if (getGuard() == null) {
+        if (guard == null) {
             if (stamp(NodeView.DEFAULT).equals(object().stamp(NodeView.DEFAULT))) {
                 return object();
             } else {
                 return PiNode.create(object(), stamp(NodeView.DEFAULT));
             }
