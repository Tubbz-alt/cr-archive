diff a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.replacements.test/src/org/graalvm/compiler/replacements/test/ArrayStoreBytecodeExceptionTest.java b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.replacements.test/src/org/graalvm/compiler/replacements/test/ArrayStoreBytecodeExceptionTest.java
--- a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.replacements.test/src/org/graalvm/compiler/replacements/test/ArrayStoreBytecodeExceptionTest.java
+++ b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.replacements.test/src/org/graalvm/compiler/replacements/test/ArrayStoreBytecodeExceptionTest.java
@@ -31,43 +31,15 @@
 import org.junit.runner.RunWith;
 import org.junit.runners.Parameterized;
 import org.junit.runners.Parameterized.Parameter;
 import org.junit.runners.Parameterized.Parameters;
 
-import org.graalvm.compiler.nodes.ValueNode;
-import org.graalvm.compiler.nodes.extended.BytecodeExceptionNode.BytecodeExceptionKind;
-import org.graalvm.compiler.nodes.graphbuilderconf.GraphBuilderContext;
-import org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugin;
-import org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugins;
-
-import jdk.vm.ci.meta.ResolvedJavaMethod;
-
 @RunWith(Parameterized.class)
 public class ArrayStoreBytecodeExceptionTest extends BytecodeExceptionTest {
 
-    private static class Exceptions {
-
-        private static Object[] array = new Exceptions[1];
-
-        public static void throwArrayStore(Object obj) {
-            array[0] = obj;
-        }
-    }
-
-    @Override
-    protected void registerInvocationPlugins(InvocationPlugins invocationPlugins) {
-        invocationPlugins.register(new InvocationPlugin() {
-            @Override
-            public boolean apply(GraphBuilderContext b, ResolvedJavaMethod targetMethod, Receiver receiver, ValueNode obj) {
-                return throwBytecodeException(b, BytecodeExceptionKind.ARRAY_STORE, obj);
-            }
-        }, Exceptions.class, "throwArrayStore", Object.class);
-        super.registerInvocationPlugins(invocationPlugins);
-    }
-
-    public static void arrayStoreSnippet(Object obj) {
-        Exceptions.throwArrayStore(obj);
+    public static void arrayStoreSnippet(Object[] array, Object obj) {
+        array[0] = obj;
     }
 
     @Parameter(0) public Object object;
     @Parameter(1) public Class<?> cls;
 
@@ -82,8 +54,8 @@
         return ret;
     }
 
     @Test
     public void testArrayStoreException() {
-        test("arrayStoreSnippet", object);
+        test("arrayStoreSnippet", new ArrayStoreBytecodeExceptionTest[1], object);
     }
 }
