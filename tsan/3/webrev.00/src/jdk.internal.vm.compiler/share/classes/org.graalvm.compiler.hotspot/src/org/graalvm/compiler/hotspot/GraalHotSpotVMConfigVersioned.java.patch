diff a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/GraalHotSpotVMConfigVersioned.java b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/GraalHotSpotVMConfigVersioned.java
--- a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/GraalHotSpotVMConfigVersioned.java
+++ b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.compiler.hotspot/src/org/graalvm/compiler/hotspot/GraalHotSpotVMConfigVersioned.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2011, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -32,11 +32,11 @@
  * class accessed from outside this class, be sure to update the field appropriately in all source
  * files named {@code GraalHotSpotVMConfigVersioned.java}.
  *
  * Fields are grouped according to the most recent JBS issue showing why they are versioned.
  *
- * JDK Version: 12+
+ * JDK Version: 14+
  */
 final class GraalHotSpotVMConfigVersioned extends HotSpotVMConfigAccess {
 
     GraalHotSpotVMConfigVersioned(HotSpotVMConfigStore store) {
         super(store);
@@ -79,6 +79,17 @@
     long heapTopAddress = getFieldValue("CompilerToVM::Data::_heap_top_addr", Long.class, "HeapWord* volatile*");
 
     // JDK-8015774
     long codeCacheLowBound = getFieldValue("CodeCache::_low_bound", Long.class, "address");
     long codeCacheHighBound = getFieldValue("CodeCache::_high_bound", Long.class, "address");
+
+    // JDK-8229258
+    String markWordClassName = "markWord";
+    String markWordFieldType = "markWord";
+
+    // JDK-8186777
+    int classMirrorOffset = getFieldOffset("Klass::_java_mirror", Integer.class, "OopHandle");
+    boolean classMirrorIsHandle = true;
+
+    // JDK-8220049
+    boolean threadLocalHandshakes = true;
 }
