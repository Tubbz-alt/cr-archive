diff a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.graphio/src/org/graalvm/graphio/GraphOutput.java b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.graphio/src/org/graalvm/graphio/GraphOutput.java
--- a/src/jdk.internal.vm.compiler/share/classes/org.graalvm.graphio/src/org/graalvm/graphio/GraphOutput.java
+++ b/src/jdk.internal.vm.compiler/share/classes/org.graalvm.graphio/src/org/graalvm/graphio/GraphOutput.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2011, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2011, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -36,11 +36,11 @@
 /**
  * Instance of output to dump informations about a compiler compilations.
  *
  * @param <G> the type of graph this instance handles
  * @param <M> the type of methods this instance handles
- * @since 1.0 a {@link WritableByteChannel} is implemented
+ * @since 19.0 a {@link WritableByteChannel} is implemented
  */
 public final class GraphOutput<G, M> implements Closeable, WritableByteChannel {
     private final GraphProtocol<G, ?, ?, ?, ?, M, ?, ?, ?, ?> printer;
 
     private GraphOutput(GraphProtocol<G, ?, ?, ?, ?, M, ?, ?, ?, ?> p) {
@@ -110,11 +110,11 @@
 
     /**
      * Checks if the {@link GraphOutput} is open.
      *
      * @return true if the {@link GraphOutput} is open.
-     * @since 1.0
+     * @since 19.0
      */
     @Override
     public boolean isOpen() {
         return printer.isOpen();
     }
@@ -123,11 +123,11 @@
      * Writes raw bytes into {@link GraphOutput}.
      *
      * @param src the bytes to write
      * @return the number of bytes written, possibly zero
      * @throws IOException in case of IO error
-     * @since 1.0
+     * @since 19.0
      */
     @Override
     public int write(ByteBuffer src) throws IOException {
         return printer.write(src);
     }
@@ -176,11 +176,11 @@
          * {@link GraphOutput#print print}, {@link GraphOutput#beginGroup beginGroup} and
          * {@link GraphOutput#endGroup endGroup} call.
          *
          * @param embedded if {@code true} the builder creates an embedded {@link GraphOutput}
          * @return this builder
-         * @since 1.0
+         * @since 19.0
          */
         public Builder<G, N, M> embedded(boolean embedded) {
             this.embeddedGraphOutput = embedded;
             return this;
         }
