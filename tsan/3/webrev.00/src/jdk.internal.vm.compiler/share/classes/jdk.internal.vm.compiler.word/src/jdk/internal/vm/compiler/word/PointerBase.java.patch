diff a/src/jdk.internal.vm.compiler/share/classes/jdk.internal.vm.compiler.word/src/jdk/internal/vm/compiler/word/PointerBase.java b/src/jdk.internal.vm.compiler/share/classes/jdk.internal.vm.compiler.word/src/jdk/internal/vm/compiler/word/PointerBase.java
--- a/src/jdk.internal.vm.compiler/share/classes/jdk.internal.vm.compiler.word/src/jdk/internal/vm/compiler/word/PointerBase.java
+++ b/src/jdk.internal.vm.compiler/share/classes/jdk.internal.vm.compiler.word/src/jdk/internal/vm/compiler/word/PointerBase.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2013, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2013, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -42,23 +42,23 @@
 
 /**
  * Marker interface for all {@link WordBase word types} that have the semantic of a pointer (but not
  * necessarily all the memory access methods defined in {@link Pointer}).
  *
- * @since 1.0
+ * @since 19.0
  */
 public interface PointerBase extends ComparableWord {
 
     /**
      * Returns true if this pointer is the {@link WordFactory#nullPointer null pointer}.
      *
-     * @since 1.0
+     * @since 19.0
      */
     boolean isNull();
 
     /**
      * Returns true if this pointer is not the {@link WordFactory#nullPointer null pointer}.
      *
-     * @since 1.0
+     * @since 19.0
      */
     boolean isNonNull();
 }
