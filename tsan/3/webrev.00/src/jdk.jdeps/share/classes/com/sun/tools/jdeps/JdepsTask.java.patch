diff a/src/jdk.jdeps/share/classes/com/sun/tools/jdeps/JdepsTask.java b/src/jdk.jdeps/share/classes/com/sun/tools/jdeps/JdepsTask.java
--- a/src/jdk.jdeps/share/classes/com/sun/tools/jdeps/JdepsTask.java
+++ b/src/jdk.jdeps/share/classes/com/sun/tools/jdeps/JdepsTask.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2012, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2012, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -913,23 +913,28 @@
             if (options.hasFilter()) {
                 reportError("err.invalid.options", "--package, --regex, --require",
                             option);
                 return false;
             }
+            if (!options.rootModules.isEmpty()) {
+                reportError("err.invalid.options", "-m or --module",
+                            option);
+                return false;
+            }
             return true;
         }
 
         @Override
         boolean run(JdepsConfiguration config) throws IOException {
             // check if any JAR file contains unnamed package
             for (String arg : inputArgs) {
-                try (ClassFileReader reader = ClassFileReader.newInstance(Paths.get(arg))) {
+                try (ClassFileReader reader = ClassFileReader.newInstance(Paths.get(arg), config.getVersion())) {
                     Optional<String> classInUnnamedPackage =
                         reader.entries().stream()
-                             .filter(n -> n.endsWith(".class"))
-                             .filter(cn -> toPackageName(cn).isEmpty())
-                             .findFirst();
+                              .filter(n -> n.endsWith(".class"))
+                              .filter(cn -> toPackageName(cn).isEmpty())
+                              .findFirst();
 
                     if (classInUnnamedPackage.isPresent()) {
                         if (classInUnnamedPackage.get().equals("module-info.class")) {
                             reportError("err.genmoduleinfo.not.jarfile", arg);
                         } else {
@@ -940,14 +945,14 @@
                 }
             }
 
             ModuleInfoBuilder builder
                  = new ModuleInfoBuilder(config, inputArgs, dir, openModule);
-            boolean ok = builder.run();
-
-            if (!ok && !options.nowarning) {
+            boolean ok = builder.run(options.ignoreMissingDeps, log, options.nowarning);
+            if (!ok) {
                 reportError("err.missing.dependences");
+                log.println();
                 builder.visitMissingDeps(new SimpleDepVisitor());
             }
             return ok;
         }
 
@@ -979,11 +984,11 @@
                 String list = config.initialArchives().stream()
                                     .map(Archive::getPathName).collect(joining(" "));
                 throw new UncheckedBadArgs(new BadArgs("err.invalid.options",
                                                        list, "--check"));
             }
-            return new ModuleAnalyzer(config, log, modules).run();
+            return new ModuleAnalyzer(config, log, modules).run(options.ignoreMissingDeps);
         }
 
         /*
          * Returns true to analyze all modules
          */
@@ -1039,11 +1044,11 @@
                                                                        reduced,
                                                                        log,
                                                                        separator);
             boolean ok = analyzer.run(options.depth(), options.ignoreMissingDeps);
             if (!ok) {
-                reportError("err.cant.list.module.deps");
+                reportError("err.missing.dependences");
                 log.println();
                 analyzer.visitMissingDeps(new SimpleDepVisitor());
             }
             return ok;
         }
