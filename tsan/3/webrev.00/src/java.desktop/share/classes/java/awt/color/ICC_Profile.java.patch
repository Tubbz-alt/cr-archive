diff a/src/java.desktop/share/classes/java/awt/color/ICC_Profile.java b/src/java.desktop/share/classes/java/awt/color/ICC_Profile.java
--- a/src/java.desktop/share/classes/java/awt/color/ICC_Profile.java
+++ b/src/java.desktop/share/classes/java/awt/color/ICC_Profile.java
@@ -33,10 +33,11 @@
  **********************************************************************
  **********************************************************************/
 
 package java.awt.color;
 
+import java.io.BufferedInputStream;
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.FileOutputStream;
 import java.io.FilePermission;
 import java.io.IOException;
@@ -758,15 +759,10 @@
      *         Object#finalize()} for further information about migration
      *         options.
      */
     @Deprecated(since="9")
     protected void finalize () {
-        if (cmmProfile != null) {
-            CMSManager.getModule().freeProfile(cmmProfile);
-        } else if (profileActivator != null) {
-            ProfileDeferralMgr.unregisterDeferral(profileActivator);
-        }
     }
 
     /**
      * Constructs an {@code ICC_Profile} object corresponding to the data in a
      * byte array. Throws an {@code IllegalArgumentException} if the data does
@@ -1020,46 +1016,29 @@
         return getInstance(profileData);
     }
 
 
     static byte[] getProfileDataFromStream(InputStream s) throws IOException {
-    byte[] profileData;
-    int profileSize;
 
-        byte[] header = new byte[128];
-        int bytestoread = 128;
-        int bytesread = 0;
-        int n;
+        BufferedInputStream bis = new BufferedInputStream(s);
+        bis.mark(128);
 
-        while (bytestoread != 0) {
-            if ((n = s.read(header, bytesread, bytestoread)) < 0) {
-                return null;
-            }
-            bytesread += n;
-            bytestoread -= n;
-        }
+        byte[] header = bis.readNBytes(128);
         if (header[36] != 0x61 || header[37] != 0x63 ||
             header[38] != 0x73 || header[39] != 0x70) {
             return null;   /* not a valid profile */
         }
-        profileSize = ((header[0] & 0xff) << 24) |
-                      ((header[1] & 0xff) << 16) |
-                      ((header[2] & 0xff) <<  8) |
-                       (header[3] & 0xff);
-        profileData = new byte[profileSize];
-        System.arraycopy(header, 0, profileData, 0, 128);
-        bytestoread = profileSize - 128;
-        bytesread = 128;
-        while (bytestoread != 0) {
-            if ((n = s.read(profileData, bytesread, bytestoread)) < 0) {
-                return null;
-            }
-            bytesread += n;
-            bytestoread -= n;
+        int profileSize = ((header[0] & 0xff) << 24) |
+                          ((header[1] & 0xff) << 16) |
+                          ((header[2] & 0xff) << 8) |
+                          (header[3] & 0xff);
+        bis.reset();
+        try {
+            return bis.readNBytes(profileSize);
+        } catch (OutOfMemoryError e) {
+            throw new IOException("Color profile is too big");
         }
-
-        return profileData;
     }
 
     /**
      * Constructs an {@code ICC_Profile} for which the actual loading of the
      * profile data from a file and the initialization of the CMM should be
