diff a/src/java.desktop/share/classes/java/beans/ThreadGroupContext.java b/src/java.desktop/share/classes/java/beans/ThreadGroupContext.java
--- a/src/java.desktop/share/classes/java/beans/ThreadGroupContext.java
+++ b/src/java.desktop/share/classes/java/beans/ThreadGroupContext.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2011, 2013, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2011, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -86,30 +86,30 @@
     void setGuiAvailable(boolean isGuiAvailable) {
         this.isGuiAvailable = Boolean.valueOf(isGuiAvailable);
     }
 
 
-    BeanInfo getBeanInfo(Class<?> type) {
+    synchronized BeanInfo getBeanInfo(Class<?> type) {
         return (this.beanInfoCache != null)
                 ? this.beanInfoCache.get(type)
                 : null;
     }
 
-    BeanInfo putBeanInfo(Class<?> type, BeanInfo info) {
+    synchronized BeanInfo putBeanInfo(Class<?> type, BeanInfo info) {
         if (this.beanInfoCache == null) {
             this.beanInfoCache = new WeakHashMap<>();
         }
         return this.beanInfoCache.put(type, info);
     }
 
-    void removeBeanInfo(Class<?> type) {
+    synchronized void removeBeanInfo(Class<?> type) {
         if (this.beanInfoCache != null) {
             this.beanInfoCache.remove(type);
         }
     }
 
-    void clearBeanInfoCache() {
+    synchronized void clearBeanInfoCache() {
         if (this.beanInfoCache != null) {
             this.beanInfoCache.clear();
         }
     }
 
