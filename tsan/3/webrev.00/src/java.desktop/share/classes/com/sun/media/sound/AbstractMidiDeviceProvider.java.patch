diff a/src/java.desktop/share/classes/com/sun/media/sound/AbstractMidiDeviceProvider.java b/src/java.desktop/share/classes/com/sun/media/sound/AbstractMidiDeviceProvider.java
--- a/src/java.desktop/share/classes/com/sun/media/sound/AbstractMidiDeviceProvider.java
+++ b/src/java.desktop/share/classes/com/sun/media/sound/AbstractMidiDeviceProvider.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2002, 2015, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2002, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -41,15 +41,12 @@
 
     /**
      * Create objects representing all MIDI output devices on the system.
      */
     static {
-        if (Printer.trace) Printer.trace("AbstractMidiDeviceProvider: static");
         Platform.initialize();
         enabled = Platform.isMidiIOEnabled();
-        if (Printer.trace) Printer.trace("AbstractMidiDeviceProvider: enabled: " + enabled);
-
         // $$fb number of MIDI devices may change with time
         // also for memory's sake, do not initialize the arrays here
     }
 
     final synchronized void readDeviceInfos() {
@@ -66,14 +63,10 @@
         }
 
         int oldNumDevices = (infos==null)?-1:infos.length;
         int newNumDevices = getNumDevices();
         if (oldNumDevices != newNumDevices) {
-            if (Printer.trace) Printer.trace(getClass().toString()
-                                             +": readDeviceInfos: old numDevices: "+oldNumDevices
-                                             +"  newNumDevices: "+ newNumDevices);
-
             // initialize the arrays
             Info[] newInfos = new Info[newNumDevices];
             MidiDevice[] newDevices = new MidiDevice[newNumDevices];
 
             for (int i = 0; i < newNumDevices; i++) {
