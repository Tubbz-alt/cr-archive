diff a/src/java.desktop/share/classes/com/sun/media/sound/MidiInDevice.java b/src/java.desktop/share/classes/com/sun/media/sound/MidiInDevice.java
--- a/src/java.desktop/share/classes/com/sun/media/sound/MidiInDevice.java
+++ b/src/java.desktop/share/classes/com/sun/media/sound/MidiInDevice.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1999, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1999, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -39,19 +39,16 @@
 
     private volatile Thread midiInThread;
 
     MidiInDevice(AbstractMidiDeviceProvider.Info info) {
         super(info);
-        if(Printer.trace) Printer.trace("MidiInDevice CONSTRUCTOR");
     }
 
     // $$kk: 06.24.99: i have this both opening and starting the midi in device.
     // may want to separate these??
     @Override
     protected synchronized void implOpen() throws MidiUnavailableException {
-        if (Printer.trace) Printer.trace("> MidiInDevice: implOpen()");
-
         int index = ((MidiInDeviceProvider.MidiInDeviceInfo)getDeviceInfo()).getIndex();
         id = nOpen(index); // can throw MidiUnavailableException
 
         if (id == 0) {
             throw new MidiUnavailableException("Unable to open native device");
@@ -65,18 +62,16 @@
                                                     -1,    // priority
                                                     true); // doStart
         }
 
         nStart(id); // can throw MidiUnavailableException
-        if (Printer.trace) Printer.trace("< MidiInDevice: implOpen() completed");
     }
 
     // $$kk: 06.24.99: i have this both stopping and closing the midi in device.
     // may want to separate these??
     @Override
     protected synchronized void implClose() {
-        if (Printer.trace) Printer.trace("> MidiInDevice: implClose()");
         long oldId = id;
         id = 0;
 
         super.implClose();
 
@@ -88,11 +83,10 @@
             } catch (InterruptedException e) {
                 // IGNORE EXCEPTION
             }
         }
         nClose(oldId);
-        if (Printer.trace) Printer.trace("< MidiInDevice: implClose() completed");
     }
 
     @Override
     public long getMicrosecondPosition() {
         long timestamp = -1;
@@ -135,11 +129,10 @@
                 try {
                     Thread.sleep(1);
                 } catch (InterruptedException e) {}
             }
         }
-        if(Printer.verbose) Printer.verbose("MidiInDevice Thread exit");
         // let the thread exit
         midiInThread = null;
     }
 
     /**
