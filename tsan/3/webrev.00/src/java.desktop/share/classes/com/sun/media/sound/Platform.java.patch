diff a/src/java.desktop/share/classes/com/sun/media/sound/Platform.java b/src/java.desktop/share/classes/com/sun/media/sound/Platform.java
--- a/src/java.desktop/share/classes/com/sun/media/sound/Platform.java
+++ b/src/java.desktop/share/classes/com/sun/media/sound/Platform.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1999, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1999, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -47,12 +47,10 @@
 
     // intel is little-endian.  sparc is big-endian.
     private static boolean bigEndian;
 
     static {
-        if(Printer.trace)Printer.trace(">> Platform.java: static");
-
         loadLibraries();
     }
 
     /**
      * Private constructor.
@@ -62,11 +60,10 @@
 
     /**
      * Dummy method for forcing initialization.
      */
     static void initialize() {
-        if(Printer.trace)Printer.trace("Platform: initialize()");
     }
 
     /**
      * Determine whether the system is big-endian.
      */
@@ -76,12 +73,10 @@
 
     /**
      * Load the native library or libraries.
      */
     private static void loadLibraries() {
-        if(Printer.trace)Printer.trace(">>Platform.loadLibraries");
-
         // load the native library
         isNativeLibLoaded = true;
         try {
             AccessController.doPrivileged((PrivilegedAction<Void>) () -> {
                 System.loadLibrary(libName);
@@ -95,21 +90,18 @@
             bigEndian = nIsBigEndian();
         }
     }
 
     static boolean isMidiIOEnabled() {
-        if (Printer.debug) Printer.debug("Platform: Checking for MidiIO; library is loaded=" + isNativeLibLoaded);
         return isNativeLibLoaded;
     }
 
     static boolean isPortsEnabled() {
-        if (Printer.debug) Printer.debug("Platform: Checking for Ports; library is loaded=" + isNativeLibLoaded);
         return isNativeLibLoaded;
     }
 
     static boolean isDirectAudioEnabled() {
-        if (Printer.debug) Printer.debug("Platform: Checking for DirectAudio; library is loaded=" + isNativeLibLoaded);
         return isNativeLibLoaded;
     }
 
     // the following native method is implemented in Platform.c
     private static native boolean nIsBigEndian();
