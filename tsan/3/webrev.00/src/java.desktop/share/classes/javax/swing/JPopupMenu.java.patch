diff a/src/java.desktop/share/classes/javax/swing/JPopupMenu.java b/src/java.desktop/share/classes/javax/swing/JPopupMenu.java
--- a/src/java.desktop/share/classes/javax/swing/JPopupMenu.java
+++ b/src/java.desktop/share/classes/javax/swing/JPopupMenu.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1997, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1997, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -323,30 +323,28 @@
         if(popupPostionFixDisabled == true || GraphicsEnvironment.isHeadless()) {
             return popupLocation;
         }
 
         // Get screen bounds
-        Rectangle scrBounds;
         GraphicsConfiguration gc = getCurrentGraphicsConfiguration(popupLocation);
-        Toolkit toolkit = Toolkit.getDefaultToolkit();
-        if(gc != null) {
-            // If we have GraphicsConfiguration use it to get screen bounds
-            scrBounds = gc.getBounds();
-        } else {
+        if (gc == null) {
             // If we don't have GraphicsConfiguration use primary screen
-            scrBounds = new Rectangle(toolkit.getScreenSize());
+            gc = GraphicsEnvironment.getLocalGraphicsEnvironment().
+                            getDefaultScreenDevice().getDefaultConfiguration();
         }
+        Rectangle scrBounds = gc.getBounds();
 
         // Calculate the screen size that popup should fit
         Dimension popupSize = JPopupMenu.this.getPreferredSize();
         long popupRightX = (long)popupLocation.x + (long)popupSize.width;
         long popupBottomY = (long)popupLocation.y + (long)popupSize.height;
         int scrWidth = scrBounds.width;
         int scrHeight = scrBounds.height;
 
         if (!canPopupOverlapTaskBar()) {
             // Insets include the task bar. Take them into account.
+            Toolkit toolkit = Toolkit.getDefaultToolkit();
             Insets scrInsets = toolkit.getScreenInsets(gc);
             scrBounds.x += scrInsets.left;
             scrBounds.y += scrInsets.top;
             scrWidth -= scrInsets.left + scrInsets.right;
             scrHeight -= scrInsets.top + scrInsets.bottom;
