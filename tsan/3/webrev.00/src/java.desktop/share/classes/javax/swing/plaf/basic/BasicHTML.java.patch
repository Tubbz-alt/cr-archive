diff a/src/java.desktop/share/classes/javax/swing/plaf/basic/BasicHTML.java b/src/java.desktop/share/classes/javax/swing/plaf/basic/BasicHTML.java
--- a/src/java.desktop/share/classes/javax/swing/plaf/basic/BasicHTML.java
+++ b/src/java.desktop/share/classes/javax/swing/plaf/basic/BasicHTML.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1998, 2014, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1998, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -26,10 +26,11 @@
 
 import java.io.*;
 import java.awt.*;
 import java.net.URL;
 
+import javax.accessibility.AccessibleContext;
 import javax.swing.*;
 import javax.swing.text.*;
 import javax.swing.text.html.*;
 
 import sun.swing.SwingUtilities2;
@@ -221,10 +222,38 @@
             for (int i = 0; i < oldValue.getViewCount(); i++) {
                 oldValue.getView(i).setParent(null);
             }
         }
         c.putClientProperty(BasicHTML.propertyKey, value);
+        String currentAccessibleNameProperty =
+            (String) c.getClientProperty(AccessibleContext.ACCESSIBLE_NAME_PROPERTY);
+        String previousParsedText = null;
+        if (currentAccessibleNameProperty != null && oldValue != null) {
+            try {
+                previousParsedText =
+                    (oldValue.getDocument().getText(0, oldValue.getDocument().getLength())).strip();
+            } catch (BadLocationException e) {
+            }
+        }
+
+        // AccessibleContext.ACCESSIBLE_NAME_PROPERTY should be set from here only if,
+        // 1. If AccessibleContext.ACCESSIBLE_NAME_PROPERTY was NOT set before
+        //        i.e. currentAccessibleNameProperty is null. and,
+        // 2. If AccessibleContext.ACCESSIBLE_NAME_PROPERTY was previously set from this method
+        //        using the value.getDocument().getText().
+        if (currentAccessibleNameProperty == null ||
+                currentAccessibleNameProperty.equals(previousParsedText)) {
+            String parsedText = null;
+            if (value != null) {
+                try {
+                    parsedText =
+                        (value.getDocument().getText(0, value.getDocument().getLength())).strip();
+                } catch (BadLocationException e) {
+                }
+            }
+            c.putClientProperty(AccessibleContext.ACCESSIBLE_NAME_PROPERTY, parsedText);
+        }
     }
 
     /**
      * If this client property of a JComponent is set to Boolean.TRUE
      * the component's 'text' property is never treated as HTML.
