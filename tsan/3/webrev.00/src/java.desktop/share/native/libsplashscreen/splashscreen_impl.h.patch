diff a/src/java.desktop/share/native/libsplashscreen/splashscreen_impl.h b/src/java.desktop/share/native/libsplashscreen/splashscreen_impl.h
--- a/src/java.desktop/share/native/libsplashscreen/splashscreen_impl.h
+++ b/src/java.desktop/share/native/libsplashscreen/splashscreen_impl.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2005, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2005, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -28,33 +28,33 @@
 
 #include "splashscreen_config.h"
 #include "splashscreen_gfx.h"
 #include "jni.h"
 
-JNIEXPORT int JNICALL
+JNIEXPORT int
 SplashLoadMemory(void *pdata, int size); /* requires preloading the file */
 
-JNIEXPORT int JNICALL
+JNIEXPORT int
 SplashLoadFile(const char *filename);  // FIXME: range checking for SplashLoadMemory
 
-JNIEXPORT void JNICALL
+JNIEXPORT int
 SplashInit(void);
 
-JNIEXPORT void JNICALL
+JNIEXPORT void
 SplashClose(void);
 
-JNIEXPORT void JNICALL
+JNIEXPORT void
 SplashSetScaleFactor(float);
 
-JNIEXPORT jboolean JNICALL
+JNIEXPORT jboolean
 SplashGetScaledImageName(const char*, const char*,
                               float*, char*, const size_t scaledImageNameLength);
 
-JNIEXPORT void JNICALL
+JNIEXPORT void
 SplashSetFileJarName(const char* fileName, const char* jarName);
 
-JNIEXPORT int JNICALL
+JNIEXPORT int
 SplashGetScaledImgNameMaxPstfixLen(const char*);
 typedef struct SplashImage
 {
     rgbquad_t *bitmapBits;
     int delay;                  /* before next image display, in msec                                                       */
@@ -123,11 +123,11 @@
 /*************** Platform-specific ******************/
 
 /* To be implemented in the platform-specific native code. */
 
 
-void SplashInitPlatform(Splash * splash);
+int  SplashInitPlatform(Splash * splash);
 void SplashCreateThread(Splash * splash);
 void SplashCleanupPlatform(Splash * splash);
 void SplashDonePlatform(Splash * splash);
 
 unsigned SplashTime();
