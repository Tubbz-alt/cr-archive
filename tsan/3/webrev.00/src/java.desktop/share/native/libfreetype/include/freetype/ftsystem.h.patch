diff a/src/java.desktop/share/native/libfreetype/include/freetype/ftsystem.h b/src/java.desktop/share/native/libfreetype/include/freetype/ftsystem.h
--- a/src/java.desktop/share/native/libfreetype/include/freetype/ftsystem.h
+++ b/src/java.desktop/share/native/libfreetype/include/freetype/ftsystem.h
@@ -1,21 +1,21 @@
-/***************************************************************************/
-/*                                                                         */
-/*  ftsystem.h                                                             */
-/*                                                                         */
-/*    FreeType low-level system interface definition (specification).      */
-/*                                                                         */
-/*  Copyright 1996-2018 by                                                 */
-/*  David Turner, Robert Wilhelm, and Werner Lemberg.                      */
-/*                                                                         */
-/*  This file is part of the FreeType project, and may only be used,       */
-/*  modified, and distributed under the terms of the FreeType project      */
-/*  license, LICENSE.TXT.  By continuing to use, modify, or distribute     */
-/*  this file you indicate that you have read the license and              */
-/*  understand and accept it fully.                                        */
-/*                                                                         */
-/***************************************************************************/
+/****************************************************************************
+ *
+ * ftsystem.h
+ *
+ *   FreeType low-level system interface definition (specification).
+ *
+ * Copyright (C) 1996-2019 by
+ * David Turner, Robert Wilhelm, and Werner Lemberg.
+ *
+ * This file is part of the FreeType project, and may only be used,
+ * modified, and distributed under the terms of the FreeType project
+ * license, LICENSE.TXT.  By continuing to use, modify, or distribute
+ * this file you indicate that you have read the license and
+ * understand and accept it fully.
+ *
+ */
 
 
 #ifndef FTSYSTEM_H_
 #define FTSYSTEM_H_
 
@@ -24,38 +24,37 @@
 
 
 FT_BEGIN_HEADER
 
 
-  /*************************************************************************/
-  /*                                                                       */
-  /* <Section>                                                             */
-  /*   system_interface                                                    */
-  /*                                                                       */
-  /* <Title>                                                               */
-  /*   System Interface                                                    */
-  /*                                                                       */
-  /* <Abstract>                                                            */
-  /*   How FreeType manages memory and i/o.                                */
-  /*                                                                       */
-  /* <Description>                                                         */
-  /*   This section contains various definitions related to memory         */
-  /*   management and i/o access.  You need to understand this             */
-  /*   information if you want to use a custom memory manager or you own   */
-  /*   i/o streams.                                                        */
-  /*                                                                       */
-  /*************************************************************************/
+  /**************************************************************************
+   *
+   * @section:
+   *  system_interface
+   *
+   * @title:
+   *  System Interface
+   *
+   * @abstract:
+   *  How FreeType manages memory and i/o.
+   *
+   * @description:
+   *  This section contains various definitions related to memory management
+   *  and i/o access.  You need to understand this information if you want to
+   *  use a custom memory manager or you own i/o streams.
+   *
+   */
 
 
-  /*************************************************************************/
-  /*                                                                       */
-  /*                  M E M O R Y   M A N A G E M E N T                    */
-  /*                                                                       */
-  /*************************************************************************/
+  /**************************************************************************
+   *
+   *                 M E M O R Y   M A N A G E M E N T
+   *
+   */
 
 
-  /*************************************************************************
+  /**************************************************************************
    *
    * @type:
    *   FT_Memory
    *
    * @description:
@@ -64,17 +63,17 @@
    *
    */
   typedef struct FT_MemoryRec_*  FT_Memory;
 
 
-  /*************************************************************************
+  /**************************************************************************
    *
    * @functype:
    *   FT_Alloc_Func
    *
    * @description:
-   *   A function used to allocate `size' bytes from `memory'.
+   *   A function used to allocate `size` bytes from `memory`.
    *
    * @input:
    *   memory ::
    *     A handle to the source memory manager.
    *
@@ -88,11 +87,11 @@
   typedef void*
   (*FT_Alloc_Func)( FT_Memory  memory,
                     long       size );
 
 
-  /*************************************************************************
+  /**************************************************************************
    *
    * @functype:
    *   FT_Free_Func
    *
    * @description:
@@ -109,11 +108,11 @@
   typedef void
   (*FT_Free_Func)( FT_Memory  memory,
                    void*      block );
 
 
-  /*************************************************************************
+  /**************************************************************************
    *
    * @functype:
    *   FT_Realloc_Func
    *
    * @description:
@@ -144,11 +143,11 @@
                       long       cur_size,
                       long       new_size,
                       void*      block );
 
 
-  /*************************************************************************
+  /**************************************************************************
    *
    * @struct:
    *   FT_MemoryRec
    *
    * @description:
@@ -175,52 +174,52 @@
     FT_Free_Func     free;
     FT_Realloc_Func  realloc;
   };
 
 
-  /*************************************************************************/
-  /*                                                                       */
-  /*                       I / O   M A N A G E M E N T                     */
-  /*                                                                       */
-  /*************************************************************************/
+  /**************************************************************************
+   *
+   *                      I / O   M A N A G E M E N T
+   *
+   */
 
 
-  /*************************************************************************
+  /**************************************************************************
    *
    * @type:
    *   FT_Stream
    *
    * @description:
    *   A handle to an input stream.
    *
    * @also:
-   *   See @FT_StreamRec for the publicly accessible fields of a given
-   *   stream object.
+   *   See @FT_StreamRec for the publicly accessible fields of a given stream
+   *   object.
    *
    */
   typedef struct FT_StreamRec_*  FT_Stream;
 
 
-  /*************************************************************************
+  /**************************************************************************
    *
    * @struct:
    *   FT_StreamDesc
    *
    * @description:
    *   A union type used to store either a long or a pointer.  This is used
-   *   to store a file descriptor or a `FILE*' in an input stream.
+   *   to store a file descriptor or a `FILE*` in an input stream.
    *
    */
   typedef union  FT_StreamDesc_
   {
     long   value;
     void*  pointer;
 
   } FT_StreamDesc;
 
 
-  /*************************************************************************
+  /**************************************************************************
    *
    * @functype:
    *   FT_Stream_IoFunc
    *
    * @description:
@@ -241,51 +240,50 @@
    *
    * @return:
    *   The number of bytes effectively read by the stream.
    *
    * @note:
-   *   This function might be called to perform a seek or skip operation
-   *   with a `count' of~0.  A non-zero return value then indicates an
-   *   error.
+   *   This function might be called to perform a seek or skip operation with
+   *   a `count` of~0.  A non-zero return value then indicates an error.
    *
    */
   typedef unsigned long
   (*FT_Stream_IoFunc)( FT_Stream       stream,
                        unsigned long   offset,
                        unsigned char*  buffer,
                        unsigned long   count );
 
 
-  /*************************************************************************
+  /**************************************************************************
    *
    * @functype:
    *   FT_Stream_CloseFunc
    *
    * @description:
    *   A function used to close a given input stream.
    *
    * @input:
    *  stream ::
-   *     A handle to the target stream.
+   *    A handle to the target stream.
    *
    */
   typedef void
   (*FT_Stream_CloseFunc)( FT_Stream  stream );
 
 
-  /*************************************************************************
+  /**************************************************************************
    *
    * @struct:
    *   FT_StreamRec
    *
    * @description:
    *   A structure used to describe an input stream.
    *
    * @input:
    *   base ::
    *     For memory-based streams, this is the address of the first stream
-   *     byte in memory.  This field should always be set to NULL for
+   *     byte in memory.  This field should always be set to `NULL` for
    *     disk-based streams.
    *
    *   size ::
    *     The stream size in bytes.
    *
@@ -297,11 +295,11 @@
    *   pos ::
    *     The current position within the stream.
    *
    *   descriptor ::
    *     This field is a union that can hold an integer or a pointer.  It is
-   *     used by stream implementations to store file descriptors or `FILE*'
+   *     used by stream implementations to store file descriptors or `FILE*`
    *     pointers.
    *
    *   pathname ::
    *     This field is completely ignored by FreeType.  However, it is often
    *     useful during debugging to use it to store the stream's filename
@@ -312,17 +310,17 @@
    *
    *   close ::
    *     The stream's close function.
    *
    *   memory ::
-   *     The memory manager to use to preload frames.  This is set
-   *     internally by FreeType and shouldn't be touched by stream
-   *     implementations.
+   *     The memory manager to use to preload frames.  This is set internally
+   *     by FreeType and shouldn't be touched by stream implementations.
    *
    *   cursor ::
    *     This field is set and used internally by FreeType when parsing
-   *     frames.
+   *     frames.  In particular, the `FT_GET_XXX` macros use this instead of
+   *     the `pos` field.
    *
    *   limit ::
    *     This field is set and used internally by FreeType when parsing
    *     frames.
    *
