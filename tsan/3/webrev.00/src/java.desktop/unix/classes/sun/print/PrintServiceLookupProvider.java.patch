diff a/src/java.desktop/unix/classes/sun/print/PrintServiceLookupProvider.java b/src/java.desktop/unix/classes/sun/print/PrintServiceLookupProvider.java
--- a/src/java.desktop/unix/classes/sun/print/PrintServiceLookupProvider.java
+++ b/src/java.desktop/unix/classes/sun/print/PrintServiceLookupProvider.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2000, 2015, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -455,11 +455,11 @@
      * can save several seconds if you know all you want is a particular
      * printer, to ask for that printer rather than retrieving all printers.
      */
     private PrintService getServiceByName(PrinterName nameAttr) {
         String name = nameAttr.getValue();
-        if (name == null || name.equals("") || !checkPrinterName(name)) {
+        if (name == null || name.isEmpty() || !checkPrinterName(name)) {
             return null;
         }
         /* check if all printers are already available */
         if (printServices != null) {
             for (PrintService printService : printServices) {
@@ -821,11 +821,11 @@
         String [] names = execCmd(command);
         ArrayList<String> printerNames = new ArrayList<>();
         for (int i=0; i < names.length; i++) {
             if (!names[i].equals("_default") &&
                 !names[i].equals(defaultPrinter) &&
-                !names[i].equals("")) {
+                !names[i].isEmpty()) {
                 printerNames.add(names[i]);
             }
         }
         return printerNames.toArray(new String[printerNames.size()]);
     }
