diff a/src/java.desktop/windows/native/common/awt/systemscale/systemScale.cpp b/src/java.desktop/windows/native/common/awt/systemscale/systemScale.cpp
--- a/src/java.desktop/windows/native/common/awt/systemscale/systemScale.cpp
+++ b/src/java.desktop/windows/native/common/awt/systemscale/systemScale.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2016, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -21,12 +21,10 @@
  * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */
 #include "systemScale.h"
-#include <d2d1.h>
-#pragma comment(lib, "d2d1")
 #include <jdk_util.h>
 #ifndef MDT_EFFECTIVE_DPI
 #define MDT_EFFECTIVE_DPI 0
 #endif
 
@@ -71,16 +69,15 @@
         if (hResult == S_OK) {
             *dpiX = static_cast<float>(x);
             *dpiY = static_cast<float>(y);
         }
     } else {
-        ID2D1Factory* m_pDirect2dFactory;
-        HRESULT res = D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED,
-                                        &m_pDirect2dFactory);
-        if (res == S_OK) {
-            m_pDirect2dFactory->GetDesktopDpi(dpiX, dpiY);
-            m_pDirect2dFactory->Release();
+        HDC hdc = GetDC(NULL);
+        if (hdc) {
+            *dpiX = static_cast<float>(GetDeviceCaps(hdc, LOGPIXELSX));
+            *dpiY = static_cast<float>(GetDeviceCaps(hdc, LOGPIXELSY));
+            ReleaseDC(NULL, hdc);
         }
     }
     return;
 }
 
