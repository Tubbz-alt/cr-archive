diff a/src/java.desktop/macosx/classes/sun/java2d/opengl/CGLLayer.java b/src/java.desktop/macosx/classes/sun/java2d/opengl/CGLLayer.java
--- a/src/java.desktop/macosx/classes/sun/java2d/opengl/CGLLayer.java
+++ b/src/java.desktop/macosx/classes/sun/java2d/opengl/CGLLayer.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2011, 2015, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2011, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -23,22 +23,20 @@
  * questions.
  */
 
 package sun.java2d.opengl;
 
-import sun.lwawt.macosx.CFRetainedResource;
-import sun.lwawt.LWWindowPeer;
-
-import sun.java2d.SurfaceData;
-import sun.java2d.NullSurfaceData;
-
-import sun.awt.CGraphicsConfig;
-
-import java.awt.Rectangle;
 import java.awt.GraphicsConfiguration;
+import java.awt.Rectangle;
 import java.awt.Transparency;
 
+import sun.awt.CGraphicsConfig;
+import sun.java2d.NullSurfaceData;
+import sun.java2d.SurfaceData;
+import sun.lwawt.LWWindowPeer;
+import sun.lwawt.macosx.CFRetainedResource;
+
 public class CGLLayer extends CFRetainedResource {
 
     private native long nativeCreateLayer();
     private static native void nativeSetScale(long layerPtr, double scale);
     private static native void validate(long layerPtr, CGLSurfaceData cglsd);
@@ -116,10 +114,15 @@
 
     @Override
     public void dispose() {
         // break the connection between the layer and the buffer
         validate(null);
+        SurfaceData oldData = surfaceData;
+        surfaceData = NullSurfaceData.theInstance;;
+        if (oldData != null) {
+            oldData.flush();
+        }
         super.dispose();
     }
 
     private void setScale(final int _scale) {
         if (scale != _scale) {
