diff a/src/java.desktop/macosx/classes/sun/lwawt/LWTextAreaPeer.java b/src/java.desktop/macosx/classes/sun/lwawt/LWTextAreaPeer.java
--- a/src/java.desktop/macosx/classes/sun/lwawt/LWTextAreaPeer.java
+++ b/src/java.desktop/macosx/classes/sun/lwawt/LWTextAreaPeer.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2011, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2011, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -36,12 +36,15 @@
 
 import javax.swing.JScrollBar;
 import javax.swing.JScrollPane;
 import javax.swing.JTextArea;
 import javax.swing.ScrollPaneConstants;
+import javax.swing.TransferHandler;
 import javax.swing.text.Document;
 
+import sun.awt.AWTAccessor;
+
 /**
  * Lightweight implementation of {@link TextAreaPeer}. Delegates most of the
  * work to the {@link JTextArea} inside {@link JScrollPane}.
  */
 final class LWTextAreaPeer
@@ -235,8 +238,19 @@
 
             @Override
             public Point getLocationOnScreen() {
                 return LWTextAreaPeer.this.getLocationOnScreen();
             }
+
+            @Override
+            public void setTransferHandler(final TransferHandler newHandler) {
+                // override the default implementation to avoid loading
+                // SystemFlavorMap and associated classes
+                Object key = AWTAccessor.getClientPropertyKeyAccessor()
+                                        .getJComponent_TRANSFER_HANDLER();
+                Object oldHandler = getClientProperty(key);
+                putClientProperty(key, newHandler);
+                firePropertyChange("transferHandler", oldHandler, newHandler);
+            }
         }
     }
 }
