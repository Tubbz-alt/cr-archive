diff a/src/jdk.management.jfr/share/classes/jdk/management/jfr/RecordingInfo.java b/src/jdk.management.jfr/share/classes/jdk/management/jfr/RecordingInfo.java
--- a/src/jdk.management.jfr/share/classes/jdk/management/jfr/RecordingInfo.java
+++ b/src/jdk.management.jfr/share/classes/jdk/management/jfr/RecordingInfo.java
@@ -23,11 +23,10 @@
  * questions.
  */
 
 package jdk.management.jfr;
 
-import java.nio.file.Path;
 import java.time.Duration;
 import java.time.Instant;
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
@@ -35,10 +34,11 @@
 import javax.management.openmbean.CompositeData;
 import javax.management.openmbean.TabularData;
 
 import jdk.jfr.Recording;
 import jdk.jfr.RecordingState;
+import jdk.jfr.internal.management.ManagementSupport;
 
 /**
  * Management representation of a {@code Recording}.
  *
  * @see Recording
@@ -78,12 +78,11 @@
         maxSize = recording.getMaxSize();
         Instant s = recording.getStartTime();
         startTime = s == null ? 0L : s.toEpochMilli();
         Instant st = recording.getStopTime();
         stopTime = st == null ? 0L : st.toEpochMilli();
-        Path p = recording.getDestination();
-        destination = p == null ? null : p.toString();
+        destination = ManagementSupport.getDestinationOriginalText(recording);
         Duration duration = recording.getDuration();
         durationInSeconds = duration == null ? 0 : duration.getSeconds();
         settings = recording.getSettings();
     }
 
