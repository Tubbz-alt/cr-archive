diff a/src/jdk.management/windows/classes/com/sun/management/internal/OperatingSystemImpl.java b/src/jdk.management/windows/classes/com/sun/management/internal/OperatingSystemImpl.java
--- a/src/jdk.management/windows/classes/com/sun/management/internal/OperatingSystemImpl.java
+++ b/src/jdk.management/windows/classes/com/sun/management/internal/OperatingSystemImpl.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2015, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -68,37 +68,37 @@
     public long getProcessCpuTime() {
         return getProcessCpuTime0();
     }
 
     @Override
-    public long getFreePhysicalMemorySize() {
-        return getFreePhysicalMemorySize0();
+    public long getFreeMemorySize() {
+        return getFreeMemorySize0();
     }
 
     @Override
-    public long getTotalPhysicalMemorySize() {
-        return getTotalPhysicalMemorySize0();
+    public long getTotalMemorySize() {
+        return getTotalMemorySize0();
     }
 
     @Override
-    public double getSystemCpuLoad() {
-        return getSystemCpuLoad0();
+    public double getCpuLoad() {
+        return getCpuLoad0();
     }
 
     @Override
     public double getProcessCpuLoad() {
         return getProcessCpuLoad0();
     }
 
     /* native methods */
     private native long getCommittedVirtualMemorySize0();
-    private native long getFreePhysicalMemorySize0();
+    private native long getFreeMemorySize0();
     private native long getFreeSwapSpaceSize0();
     private native double getProcessCpuLoad0();
     private native long getProcessCpuTime0();
-    private native double getSystemCpuLoad0();
-    private native long getTotalPhysicalMemorySize0();
+    private native double getCpuLoad0();
+    private native long getTotalMemorySize0();
     private native long getTotalSwapSpaceSize0();
 
     static {
         initialize0();
     }
