diff a/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/util/Repository.java b/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/util/Repository.java
--- a/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/util/Repository.java
+++ b/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/util/Repository.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2017, 2020, Oracle and/or its affiliates. All rights reserved.
  */
 /*
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
  * this work for additional information regarding copyright ownership.
@@ -20,46 +20,44 @@
 package com.sun.org.apache.bcel.internal.util;
 
 import com.sun.org.apache.bcel.internal.classfile.JavaClass;
 
 /**
- * Abstract definition of a class repository. Instances may be used to load
- * classes from different sources and may be used in the
+ * Abstract definition of a class repository. Instances may be used
+ * to load classes from different sources and may be used in the
  * Repository.setRepository method.
  *
  * @see com.sun.org.apache.bcel.internal.Repository
- * @version $Id: Repository.java 1747278 2016-06-07 17:28:43Z britter $
+ * @LastModified: Jan 2020
  */
 public interface Repository {
 
     /**
-     * Store the provided class under "clazz.getClassName()"
+     * Stores the provided class under "clazz.getClassName()"
      */
     void storeClass(JavaClass clazz);
 
     /**
-     * Remove class from repository
+     * Removes class from repository
      */
     void removeClass(JavaClass clazz);
 
     /**
-     * Find the class with the name provided, if the class isn't there, return
-     * NULL.
+     * Finds the class with the name provided, if the class isn't there, return NULL.
      */
     JavaClass findClass(String className);
 
     /**
-     * Find the class with the name provided, if the class isn't there, make an
-     * attempt to load it.
+     * Finds the class with the name provided, if the class isn't there, make an attempt to load it.
      */
     JavaClass loadClass(String className) throws java.lang.ClassNotFoundException;
 
     /**
-     * Find the JavaClass instance for the given run-time class object
+     * Finds the JavaClass instance for the given run-time class object
      */
     JavaClass loadClass(Class<?> clazz) throws java.lang.ClassNotFoundException;
 
     /**
-     * Clear all entries from cache.
+     * Clears all entries from cache.
      */
     void clear();
 }
