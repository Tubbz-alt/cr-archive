diff a/src/java.xml/share/classes/com/sun/org/apache/xpath/internal/XPath.java b/src/java.xml/share/classes/com/sun/org/apache/xpath/internal/XPath.java
--- a/src/java.xml/share/classes/com/sun/org/apache/xpath/internal/XPath.java
+++ b/src/java.xml/share/classes/com/sun/org/apache/xpath/internal/XPath.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2017, 2019, Oracle and/or its affiliates. All rights reserved.
  */
 /*
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
  * this work for additional information regarding copyright ownership.
@@ -38,11 +38,11 @@
 
 /**
  * The XPath class wraps an expression object and provides general services
  * for execution of that expression.
  * @xsl.usage advanced
- * @LastModified: Oct 2017
+ * @LastModified: May 2019
  */
 public class XPath implements Serializable, ExpressionOwner
 {
     static final long serialVersionUID = 3976493477939110553L;
 
@@ -177,14 +177,16 @@
     if (SELECT == type)
       parser.initXPath(compiler, exprString, prefixResolver);
     else if (MATCH == type)
       parser.initMatchPattern(compiler, exprString, prefixResolver);
     else
-      throw new RuntimeException(XSLMessages.createXPATHMessage(XPATHErrorResources.ER_CANNOT_DEAL_XPATH_TYPE, new Object[]{Integer.toString(type)})); //"Can not deal with XPath type: " + type);
+      throw new RuntimeException(XSLMessages.createXPATHMessage(
+              XPATHErrorResources.ER_CANNOT_DEAL_XPATH_TYPE,
+              new Object[]{Integer.toString(type)}));
 
     // System.out.println("----------------");
-    Expression expr = compiler.compile(0);
+    Expression expr = compiler.compileExpression(0);
 
     // System.out.println("expr: "+expr);
     this.setExpression(expr);
 
     if((null != locator) && locator instanceof ExpressionNode)
@@ -232,11 +234,11 @@
             XPATHErrorResources.ER_CANNOT_DEAL_XPATH_TYPE,
             new Object[]{Integer.toString(type)}));
             //"Can not deal with XPath type: " + type);
 
     // System.out.println("----------------");
-    Expression expr = compiler.compile(0);
+    Expression expr = compiler.compileExpression(0);
 
     // System.out.println("expr: "+expr);
     this.setExpression(expr);
 
     if((null != locator) && locator instanceof ExpressionNode)
