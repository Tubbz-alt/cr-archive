diff a/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/classfile/BootstrapMethod.java b/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/classfile/BootstrapMethod.java
--- a/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/classfile/BootstrapMethod.java
+++ b/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/classfile/BootstrapMethod.java
@@ -72,11 +72,11 @@
         this(bootstrap_method_ref, new int[num_bootstrap_arguments]);
     }
 
     /**
      * @param bootstrap_method_ref int index into constant_pool of CONSTANT_MethodHandle
-     * @param bootstrap_arguments int[] indices into constant_pool of CONSTANT_<type>_info
+     * @param bootstrap_arguments int[] indices into constant_pool of CONSTANT_[type]_info
      */
     public BootstrapMethod(final int bootstrap_method_ref, final int[] bootstrap_arguments) {
         this.bootstrap_method_ref = bootstrap_method_ref;
         this.bootstrap_arguments = bootstrap_arguments;
     }
@@ -94,11 +94,11 @@
     public void setBootstrapMethodRef(final int bootstrap_method_ref) {
         this.bootstrap_method_ref = bootstrap_method_ref;
     }
 
     /**
-     * @return int[] of bootstrap_method indices into constant_pool of CONSTANT_<type>_info
+     * @return int[] of bootstrap_method indices into constant_pool of CONSTANT_[type]_info
      */
     public int[] getBootstrapArguments() {
         return bootstrap_arguments;
     }
 
@@ -108,11 +108,11 @@
     public int getNumBootstrapArguments() {
         return bootstrap_arguments.length;
     }
 
     /**
-     * @param bootstrap_arguments int[] indices into constant_pool of CONSTANT_<type>_info
+     * @param bootstrap_arguments int[] indices into constant_pool of CONSTANT_[type]_info
      */
     public void setBootstrapArguments(final int[] bootstrap_arguments) {
         this.bootstrap_arguments = bootstrap_arguments;
     }
 
@@ -131,16 +131,16 @@
     public final String toString( final ConstantPool constant_pool ) {
         final StringBuilder buf = new StringBuilder();
         String bootstrap_method_name;
         bootstrap_method_name = constant_pool.constantToString(bootstrap_method_ref,
                 Const.CONSTANT_MethodHandle);
-        buf.append(Utility.compactClassName(bootstrap_method_name));
+        buf.append(Utility.compactClassName(bootstrap_method_name, false));
         final int num_bootstrap_arguments = bootstrap_arguments.length;
         if (num_bootstrap_arguments > 0) {
-            buf.append("\n     Method Arguments:");
+            buf.append("\nMethod Arguments:");
             for (int i = 0; i < num_bootstrap_arguments; i++) {
-                buf.append("\n     ").append(i).append(": ");
+                buf.append("\n  ").append(i).append(": ");
                 buf.append(constant_pool.constantToString(constant_pool.getConstant(bootstrap_arguments[i])));
             }
         }
         return buf.toString();
     }
