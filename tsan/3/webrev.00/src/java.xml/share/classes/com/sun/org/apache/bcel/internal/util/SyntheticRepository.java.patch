diff a/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/util/SyntheticRepository.java b/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/util/SyntheticRepository.java
--- a/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/util/SyntheticRepository.java
+++ b/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/util/SyntheticRepository.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2017, 2020, Oracle and/or its affiliates. All rights reserved.
  */
 /*
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
  * this work for additional information regarding copyright ownership.
@@ -37,12 +37,11 @@
  * of different classpaths, and as such It is designed to be used as a singleton
  * per classpath.
  *
  * @see com.sun.org.apache.bcel.internal.Repository
  *
- * @version $Id: SyntheticRepository.java 1748124 2016-06-13 08:02:16Z ggregory
- * $
+ * @LastModified: Jan 2020
  */
 public class SyntheticRepository implements Repository {
 
     // CLASSNAME X JAVACLASS
     private final Map<String, SoftReference<JavaClass>> loadedClasses = new HashMap<>();
@@ -93,11 +92,11 @@
      */
     @Override
     public JavaClass loadClass(String className) throws ClassNotFoundException {
         if ((className == null) || className.isEmpty()) {
             throw new IllegalArgumentException("Invalid class name " + className);
-        }
+    }
         className = className.replace('/', '.'); // Just in case, canonical form
         final JavaClass clazz = findClass(className);
         if (clazz != null) {
             return clazz;
         }
@@ -124,11 +123,11 @@
     public JavaClass loadClass(final Class<?> clazz) throws ClassNotFoundException {
         final String className = clazz.getName();
         final JavaClass repositoryClass = findClass(className);
         if (repositoryClass != null) {
             return repositoryClass;
-        }
+    }
         String name = className;
         final int i = name.lastIndexOf('.');
         if (i > 0) {
             name = name.substring(i + 1);
         }
