diff a/src/java.xml/share/classes/com/sun/org/apache/xerces/internal/dom/PSVIDOMImplementationImpl.java b/src/java.xml/share/classes/com/sun/org/apache/xerces/internal/dom/PSVIDOMImplementationImpl.java
--- a/src/java.xml/share/classes/com/sun/org/apache/xerces/internal/dom/PSVIDOMImplementationImpl.java
+++ b/src/java.xml/share/classes/com/sun/org/apache/xerces/internal/dom/PSVIDOMImplementationImpl.java
@@ -19,15 +19,12 @@
  * limitations under the License.
  */
 
 package com.sun.org.apache.xerces.internal.dom;
 
-import org.w3c.dom.DOMException;
 import org.w3c.dom.DOMImplementation;
-import org.w3c.dom.Document;
 import org.w3c.dom.DocumentType;
-import org.w3c.dom.Element;
 
 /**
  * The DOMImplementation class is description of a particular
  * implementation of the Document Object Model. As such its data is
  * static, shared by all instances of this implementation.
@@ -38,20 +35,20 @@
  *
  * @xerces.internal
  *
  * @since  PR-DOM-Level-1-19980818.
  */
-public class PSVIDOMImplementationImpl extends CoreDOMImplementationImpl {
+public class PSVIDOMImplementationImpl extends DOMImplementationImpl {
 
     //
     // Data
     //
 
     // static
 
     /** Dom implementation singleton. */
-    static PSVIDOMImplementationImpl singleton = new PSVIDOMImplementationImpl();
+    static final PSVIDOMImplementationImpl singleton = new PSVIDOMImplementationImpl();
 
     //
     // Public methods
     //
 
@@ -82,44 +79,14 @@
     public boolean hasFeature(String feature, String version) {
         return super.hasFeature(feature, version) ||
                feature.equalsIgnoreCase("psvi");
     } // hasFeature(String,String):boolean
 
-    /**
-     * Introduced in DOM Level 2. <p>
-     *
-     * Creates an XML Document object of the specified type with its document
-     * element.
-     *
-     * @param namespaceURI     The namespace URI of the document
-     *                         element to create, or null.
-     * @param qualifiedName    The qualified name of the document
-     *                         element to create.
-     * @param doctype          The type of document to be created or null.<p>
-     *
-     *                         When doctype is not null, its
-     *                         Node.ownerDocument attribute is set to
-     *                         the document being created.
-     * @return Document        A new Document object.
-     * @throws DOMException    WRONG_DOCUMENT_ERR: Raised if doctype has
-     *                         already been used with a different document.
-     * @since WD-DOM-Level-2-19990923
-     */
-    public Document           createDocument(String namespaceURI,
-                                             String qualifiedName,
-                                             DocumentType doctype)
-                                             throws DOMException
-    {
-        if (doctype != null && doctype.getOwnerDocument() != null) {
-            throw new DOMException(DOMException.WRONG_DOCUMENT_ERR,
-                                   DOMMessageFormatter.formatMessage(
-                                   DOMMessageFormatter.XML_DOMAIN,
-                                                       "WRONG_DOCUMENT_ERR", null));
-        }
-        DocumentImpl doc = new PSVIDocumentImpl(doctype);
-        Element e = doc.createElementNS( namespaceURI, qualifiedName);
-        doc.appendChild(e);
-        return doc;
-    }
+    //
+    // Protected methods
+    //
 
+    protected CoreDocumentImpl createDocument(DocumentType doctype) {
+        return new PSVIDocumentImpl(doctype);
+    }
 
-} // class DOMImplementationImpl
+} // class PSVIDOMImplementationImpl
