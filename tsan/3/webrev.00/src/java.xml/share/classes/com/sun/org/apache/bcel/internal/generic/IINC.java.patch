diff a/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/IINC.java b/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/IINC.java
--- a/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/IINC.java
+++ b/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/IINC.java
@@ -27,32 +27,31 @@
 import com.sun.org.apache.bcel.internal.util.ByteSequence;
 
 /**
  * IINC - Increment local variable by constant
  *
- * @version $Id: IINC.java 1747278 2016-06-07 17:28:43Z britter $
  */
 public class IINC extends LocalVariableInstruction {
 
     private boolean wide;
     private int c;
 
 
     /**
-     * Empty constructor needed for the Class.newInstance() statement in
-     * Instruction.readInstruction(). Not to be used otherwise.
+     * Empty constructor needed for Instruction.readInstruction.
+     * Not to be used otherwise.
      */
     IINC() {
     }
 
 
     /**
      * @param n index of local variable
      * @param c increment factor
      */
     public IINC(final int n, final int c) {
-        super(); // Default behaviour of LocalVariableInstruction causes error
+        super(); // Default behavior of LocalVariableInstruction causes error
         super.setOpcode(com.sun.org.apache.bcel.internal.Const.IINC);
         super.setLength((short) 3);
         setIndex(n); // May set wide as side effect
         setIncrement(c);
     }
@@ -77,11 +76,16 @@
         }
     }
 
 
     private void setWide() {
-        wide = (super.getIndex() > com.sun.org.apache.bcel.internal.Const.MAX_BYTE) || (Math.abs(c) > Byte.MAX_VALUE);
+        wide = super.getIndex() > com.sun.org.apache.bcel.internal.Const.MAX_BYTE;
+        if (c > 0) {
+            wide = wide || (c > Byte.MAX_VALUE);
+        } else {
+            wide = wide || (c < Byte.MIN_VALUE);
+        }
         if (wide) {
             super.setLength(6); // wide byte included
         } else {
             super.setLength(3);
         }
