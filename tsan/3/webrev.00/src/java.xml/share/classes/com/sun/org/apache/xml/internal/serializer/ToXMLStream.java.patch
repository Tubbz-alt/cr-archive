diff a/src/java.xml/share/classes/com/sun/org/apache/xml/internal/serializer/ToXMLStream.java b/src/java.xml/share/classes/com/sun/org/apache/xml/internal/serializer/ToXMLStream.java
--- a/src/java.xml/share/classes/com/sun/org/apache/xml/internal/serializer/ToXMLStream.java
+++ b/src/java.xml/share/classes/com/sun/org/apache/xml/internal/serializer/ToXMLStream.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2014, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2014, 2019, Oracle and/or its affiliates. All rights reserved.
  */
 /*
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
  * this work for additional information regarding copyright ownership.
@@ -38,10 +38,11 @@
  * This class is used explicitly in code generated by XSLTC,
  * so it is "public", but it should
  * be viewed as internal or package private, this is not an API.
  *
  * @xsl.usage internal
+ * @LastModified: Aug 2019
  */
 public final class ToXMLStream extends ToStream
 {
 
     /**
@@ -61,16 +62,24 @@
     /**
      * Default constructor.
      */
     public ToXMLStream()
     {
+        this(null);
+    }
+
+    /**
+     * Default constructor.
+     */
+    public ToXMLStream(ErrorListener l)
+    {
+        super(l);
         m_charInfo = m_xmlcharInfo;
 
         initCDATA();
         // initialize namespaces
         m_prefixMap = new NamespaceMappings();
-
     }
 
     /**
      * Copy properties from another SerializerToXML.
      *
@@ -198,11 +207,11 @@
      * @throws org.xml.sax.SAXException
      */
     public void endDocument() throws org.xml.sax.SAXException
     {
         if (m_doIndent) {
-            flushCharactersBuffer();
+            flushCharactersBuffer(false);
         }
         flushPending();
         if (m_doIndent && !m_isprevtext)
         {
             try
@@ -265,11 +274,11 @@
         if (isInEntityRef())
             return;
 
         if (m_doIndent) {
             m_childNodeNum++;
-            flushCharactersBuffer();
+            flushCharactersBuffer(false);
         }
         flushPending();
 
         if (target.equals(Result.PI_DISABLE_OUTPUT_ESCAPING))
         {
