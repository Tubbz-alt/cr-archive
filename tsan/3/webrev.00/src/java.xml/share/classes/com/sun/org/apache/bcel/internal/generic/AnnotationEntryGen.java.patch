diff a/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/AnnotationEntryGen.java b/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/AnnotationEntryGen.java
--- a/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/AnnotationEntryGen.java
+++ b/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/AnnotationEntryGen.java
@@ -1,8 +1,7 @@
 /*
- * reserved comment block
- * DO NOT REMOVE OR ALTER!
+ * Copyright (c) 2017, 2020, Oracle and/or its affiliates. All rights reserved.
  */
 /*
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
  * this work for additional information regarding copyright ownership.
@@ -39,10 +38,11 @@
 import com.sun.org.apache.bcel.internal.classfile.RuntimeVisibleAnnotations;
 import com.sun.org.apache.bcel.internal.classfile.RuntimeVisibleParameterAnnotations;
 
 /**
  * @since 6.0
+ * @LastModified: Jan 2020
  */
 public class AnnotationEntryGen {
     private int typeIndex;
 
     private List<ElementValuePairGen> evs;
@@ -261,12 +261,12 @@
                             new DataInputStream(new ByteArrayInputStream(riaData)), cp.getConstantPool()));
             }
 
             return newAttributes.toArray(new Attribute[newAttributes.size()]);
         } catch (final IOException e) {
-            System.err.println("IOException whilst processing annotations. " +
-                    e.getMessage());
+            System.err.println("IOException whilst processing annotations");
+            e.printStackTrace();
         }
         return null;
     }
 
 
