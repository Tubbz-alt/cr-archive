diff a/src/java.xml/share/classes/com/sun/org/apache/xml/internal/serializer/ToUnknownStream.java b/src/java.xml/share/classes/com/sun/org/apache/xml/internal/serializer/ToUnknownStream.java
--- a/src/java.xml/share/classes/com/sun/org/apache/xml/internal/serializer/ToUnknownStream.java
+++ b/src/java.xml/share/classes/com/sun/org/apache/xml/internal/serializer/ToUnknownStream.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2007, 2019, Oracle and/or its affiliates. All rights reserved.
  */
 /*
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
  * this work for additional information regarding copyright ownership.
@@ -24,10 +24,11 @@
 import java.io.OutputStream;
 import java.io.Writer;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Properties;
+import javax.xml.transform.ErrorListener;
 import javax.xml.transform.SourceLocator;
 import javax.xml.transform.Transformer;
 import org.w3c.dom.Node;
 import org.xml.sax.Attributes;
 import org.xml.sax.ContentHandler;
@@ -46,11 +47,11 @@
  *
  * The user of this class doesn't know if the output is ultimatley XML or HTML.
  *
  * This class is not a public API, it is public because it is used within Xalan.
  * @xsl.usage internal
- * @LastModified: Oct 2017
+ * @LastModified: Aug 2019
  */
 public final class ToUnknownStream extends SerializerBase
 {
     /**
      * The wrapped handler, initially XML but possibly switched to HTML
@@ -114,11 +115,15 @@
      * Default constructor.
      * Initially this object wraps an XML Stream object, so _handler is never null.
      * That may change later to an HTML Stream object.
      */
     public ToUnknownStream() {
-        m_handler = new ToXMLStream();
+        this(null);
+    }
+
+    public ToUnknownStream(ErrorListener l) {
+        m_handler = new ToXMLStream(l);
     }
 
     /**
      * @see Serializer#asContentHandler()
      * @return the wrapped XML or HTML handler
