diff a/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/classfile/Unknown.java b/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/classfile/Unknown.java
--- a/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/classfile/Unknown.java
+++ b/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/classfile/Unknown.java
@@ -36,11 +36,10 @@
  * Applications that need to read in application-specific attributes should create an
  * {@link UnknownAttributeReader} implementation and attach it via
  * {@link Attribute#addAttributeReader(String, UnknownAttributeReader)}.
 
  *
- * @version $Id: Unknown.java 1749603 2016-06-21 20:50:19Z ggregory $
  * @see Attribute
  * @see UnknownAttributeReader
  */
 public final class Unknown extends Attribute {
 
@@ -122,48 +121,48 @@
      *
      * @param file Output file stream
      * @throws IOException
      */
     @Override
-    public final void dump( final DataOutputStream file ) throws IOException {
+    public void dump( final DataOutputStream file ) throws IOException {
         super.dump(file);
         if (super.getLength() > 0) {
             file.write(bytes, 0, super.getLength());
         }
     }
 
 
     /**
      * @return data bytes.
      */
-    public final byte[] getBytes() {
+    public byte[] getBytes() {
         return bytes;
     }
 
 
     /**
      * @return name of attribute.
      */
     @Override
-    public final String getName() {
+    public String getName() {
         return name;
     }
 
 
     /**
      * @param bytes the bytes to set
      */
-    public final void setBytes( final byte[] bytes ) {
+    public void setBytes( final byte[] bytes ) {
         this.bytes = bytes;
     }
 
 
     /**
      * @return String representation.
      */
     @Override
-    public final String toString() {
+    public String toString() {
         if (super.getLength() == 0 || bytes == null) {
             return "(Unknown attribute " + name + ")";
         }
         String hex;
         if (super.getLength() > 10) {
