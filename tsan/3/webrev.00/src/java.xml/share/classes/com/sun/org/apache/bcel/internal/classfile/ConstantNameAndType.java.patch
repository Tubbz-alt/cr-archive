diff a/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/classfile/ConstantNameAndType.java b/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/classfile/ConstantNameAndType.java
--- a/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/classfile/ConstantNameAndType.java
+++ b/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/classfile/ConstantNameAndType.java
@@ -30,11 +30,10 @@
 /**
  * This class is derived from the abstract {@link Constant}
  * and represents a reference to the name and signature
  * of a field or method.
  *
- * @version $Id: ConstantNameAndType.java 1747278 2016-06-07 17:28:43Z britter $
  * @see     Constant
  */
 public final class ConstantNameAndType extends Constant {
 
     private int name_index; // Name of field/method
@@ -89,67 +88,67 @@
      *
      * @param file Output file stream
      * @throws IOException
      */
     @Override
-    public final void dump( final DataOutputStream file ) throws IOException {
+    public void dump( final DataOutputStream file ) throws IOException {
         file.writeByte(super.getTag());
         file.writeShort(name_index);
         file.writeShort(signature_index);
     }
 
 
     /**
      * @return Name index in constant pool of field/method name.
      */
-    public final int getNameIndex() {
+    public int getNameIndex() {
         return name_index;
     }
 
 
     /** @return name
      */
-    public final String getName( final ConstantPool cp ) {
+    public String getName( final ConstantPool cp ) {
         return cp.constantToString(getNameIndex(), Const.CONSTANT_Utf8);
     }
 
 
     /**
      * @return Index in constant pool of field/method signature.
      */
-    public final int getSignatureIndex() {
+    public int getSignatureIndex() {
         return signature_index;
     }
 
 
     /** @return signature
      */
-    public final String getSignature( final ConstantPool cp ) {
+    public String getSignature( final ConstantPool cp ) {
         return cp.constantToString(getSignatureIndex(), Const.CONSTANT_Utf8);
     }
 
 
     /**
      * @param name_index the name index of this constant
      */
-    public final void setNameIndex( final int name_index ) {
+    public void setNameIndex( final int name_index ) {
         this.name_index = name_index;
     }
 
 
     /**
      * @param signature_index the signature index in the constant pool of this type
      */
-    public final void setSignatureIndex( final int signature_index ) {
+    public void setSignatureIndex( final int signature_index ) {
         this.signature_index = signature_index;
     }
 
 
     /**
      * @return String representation
      */
     @Override
-    public final String toString() {
+    public String toString() {
         return super.toString() + "(name_index = " + name_index + ", signature_index = "
                 + signature_index + ")";
     }
 }
