diff a/src/java.xml/share/classes/javax/xml/catalog/CatalogResolver.java b/src/java.xml/share/classes/javax/xml/catalog/CatalogResolver.java
--- a/src/java.xml/share/classes/javax/xml/catalog/CatalogResolver.java
+++ b/src/java.xml/share/classes/javax/xml/catalog/CatalogResolver.java
@@ -52,11 +52,11 @@
  * <p>
  * The search is started in the current catalog. If a match is found,
  * no further attempt will be made. Only if there is no match in the current
  * catalog, will alternate catalogs including delegate and next catalogs be considered.
  *
- * <h3>Search Order</h3>
+ * <h2>Search Order</h2>
  * The resolver will first search the system-type of entries with the specified
  * {@code systemId}. The system entries include {@code system},
  * {@code rewriteSystem} and {@code systemSuffix} entries.
  * <p>
  * If no match is found, {@code public} entries may be searched in accordance with
@@ -73,11 +73,11 @@
  * If no match is found with the {@code systemId} and {@code public} identifier,
  * the resolver will continue searching {@code uri} entries
  * with the specified {@code systemId} or {@code href}. The {@code uri} entries
  * include {@code uri}, {@code rewriteURI}, and {@code uriSuffix} entries.
  *
- * <h3>Error Handling</h3>
+ * <h2>Error Handling</h2>
  * The interfaces that the CatalogResolver extend specified checked exceptions, including:
  * <ul>
  * <li>
  * {@link org.xml.sax.SAXException} and {@link java.io.IOException} by
  * {@link org.xml.sax.EntityResolver#resolveEntity(java.lang.String, java.lang.String)}
