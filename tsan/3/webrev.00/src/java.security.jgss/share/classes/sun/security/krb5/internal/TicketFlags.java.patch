diff a/src/java.security.jgss/share/classes/sun/security/krb5/internal/TicketFlags.java b/src/java.security.jgss/share/classes/sun/security/krb5/internal/TicketFlags.java
--- a/src/java.security.jgss/share/classes/sun/security/krb5/internal/TicketFlags.java
+++ b/src/java.security.jgss/share/classes/sun/security/krb5/internal/TicketFlags.java
@@ -49,11 +49,12 @@
  *                   postdated(6),
  *                   invalid(7),
  *                   renewable(8),
  *                   initial(9),
  *                   pre-authent(10),
- *                   hw-authent(11)
+ *                   hw-authent(11),
+ *                   enc-pa-rep(15)
  *                  }
  */
 public class TicketFlags extends KerberosFlags {
     public TicketFlags() {
         super(Krb5.TKT_OPTS_MAX + 1);
@@ -64,10 +65,11 @@
         if (flags.length > Krb5.TKT_OPTS_MAX + 1) {
             throw new Asn1Exception(Krb5.BITSTRING_BAD_LENGTH);
         }
     }
 
+    // Warning: called by NativeCreds.c and nativeccache.c
     public TicketFlags(int size, byte[] data) throws Asn1Exception {
         super(size, data);
         if ((size > data.length * BITS_PER_UNIT) || (size > Krb5.TKT_OPTS_MAX + 1))
             throw new Asn1Exception(Krb5.BITSTRING_BAD_LENGTH);
     }
@@ -176,10 +178,13 @@
                     sb.append("PRE-AUTHENT;");
                     break;
                 case 11:
                     sb.append("HW-AUTHENT;");
                     break;
+                case 15:
+                    sb.append("ENC-PA-REP;");
+                    break;
                 }
             }
         }
         String result = sb.toString();
         if (result.length() > 0) {
