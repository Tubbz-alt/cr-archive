diff a/src/jdk.httpserver/share/classes/com/sun/net/httpserver/HttpExchange.java b/src/jdk.httpserver/share/classes/com/sun/net/httpserver/HttpExchange.java
--- a/src/jdk.httpserver/share/classes/com/sun/net/httpserver/HttpExchange.java
+++ b/src/jdk.httpserver/share/classes/com/sun/net/httpserver/HttpExchange.java
@@ -41,11 +41,11 @@
  * The typical life-cycle of a HttpExchange is shown in the sequence
  * below.
  * <ol><li>{@link #getRequestMethod()} to determine the command
  * <li>{@link #getRequestHeaders()} to examine the request headers (if needed)
  * <li>{@link #getRequestBody()} returns a {@link java.io.InputStream} for reading the request body.
- *     After reading the request body, the stream is close.
+ *     After reading the request body, the stream should be closed.
  * <li>{@link #getResponseHeaders()} to set any response headers, except content-length
  * <li>{@link #sendResponseHeaders(int,long)} to send the response headers. Must be called before
  * next step.
  * <li>{@link #getResponseBody()} to get a {@link java.io.OutputStream} to send the response body.
  *      When the response body has been written, the stream must be closed to terminate the exchange.
@@ -62,11 +62,11 @@
  * The effect of failing to terminate an exchange is undefined, but will typically
  * result in resources failing to be freed/reused.
  * @since 1.6
  */
 
-public abstract class HttpExchange {
+public abstract class HttpExchange implements AutoCloseable {
 
     protected HttpExchange () {
     }
 
     /**
