diff a/make/jdk/src/classes/build/tools/cldrconverter/ResourceBundleGenerator.java b/make/jdk/src/classes/build/tools/cldrconverter/ResourceBundleGenerator.java
--- a/make/jdk/src/classes/build/tools/cldrconverter/ResourceBundleGenerator.java
+++ b/make/jdk/src/classes/build/tools/cldrconverter/ResourceBundleGenerator.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2012, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2012, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -156,11 +156,11 @@
                             newMap = new HashMap<>();
                             fmt = new Formatter();
                         }
 
                         if (Objects.isNull(metaVal)) {
-                            metaVal = META_VALUE_PREFIX + key.replaceAll("\\.", "_");
+                            metaVal = META_VALUE_PREFIX + key.replaceAll("[\\.-]", "_");
 
                             if (val instanceof String[]) {
                                 fmt.format("        final String[] %s = new String[] {\n", metaVal);
                                 for (String s : (String[])val) {
                                     fmt.format("               \"%s\",\n", CLDRConverter.saveConvert(s, useJava));
@@ -307,11 +307,11 @@
                 }
             }
             // for languageAliasMap
             if (CLDRConverter.isBaseModule) {
                 CLDRConverter.handlerSupplMeta.getLanguageAliasData().forEach((key, value) -> {
-                    out.printf("                languageAliasMap.put(\"%s\", \"%s\");\n", key, value);
+                    out.printf("        languageAliasMap.put(\"%s\", \"%s\");\n", key, value);
                 });
             }
 
             out.printf("    }\n\n");
 
