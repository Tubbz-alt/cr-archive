diff a/make/jdk/src/classes/build/tools/charsetmapping/SBCS.java b/make/jdk/src/classes/build/tools/charsetmapping/SBCS.java
--- a/make/jdk/src/classes/build/tools/charsetmapping/SBCS.java
+++ b/make/jdk/src/classes/build/tools/charsetmapping/SBCS.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2008, 2015, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2008, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -44,10 +44,11 @@
         String clzName = cs.clzName;
         String csName  = cs.csName;
         String hisName = cs.hisName;
         String pkgName = cs.pkgName;
         boolean isASCII = cs.isASCII;
+        boolean isLatin1Decodable = true;
 
         StringBuilder b2cSB = new StringBuilder();
         StringBuilder b2cNRSB = new StringBuilder();
         StringBuilder c2bNRSB = new StringBuilder();
 
@@ -67,10 +68,13 @@
             sb[e.bs] = (char)e.cp;
             if (c2bIndex[e.cp>>8] == UNMAPPABLE_DECODING) {
                 c2bOff += 0x100;
                 c2bIndex[e.cp>>8] = 1;
             }
+            if (e.cp > 0xFF) {
+                isLatin1Decodable = false;
+            }
         }
 
         Formatter fm = new Formatter(b2cSB);
         fm.format("%n");
 
@@ -176,10 +180,13 @@
                     line = "        return (cs instanceof " + clzName + ");";
             }
             if (line.indexOf("$ASCIICOMPATIBLE$") != -1) {
                 line = line.replace("$ASCIICOMPATIBLE$", isASCII ? "true" : "false");
             }
+            if (line.indexOf("$LATIN1DECODABLE$") != -1) {
+                line = line.replace("$LATIN1DECODABLE$", isLatin1Decodable ? "true" : "false");
+            }
             if (line.indexOf("$B2CTABLE$") != -1) {
                 line = line.replace("$B2CTABLE$", b2c);
             }
             if (line.indexOf("$C2BLENGTH$") != -1) {
                 line = line.replace("$C2BLENGTH$", "0x" + Integer.toString(c2bOff, 16));
