diff a/make/data/characterdata/CharacterData00.java.template b/make/data/characterdata/CharacterData00.java.template
--- a/make/data/characterdata/CharacterData00.java.template
+++ b/make/data/characterdata/CharacterData00.java.template
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -113,17 +113,18 @@
         int props = getProperties(ch);
         return ((props & $$nonzeroJavaPart) != 0);
     }
 
     boolean isUnicodeIdentifierStart(int ch) {
-        int props = getProperties(ch);
-        return ((props & $$maskIdentifierInfo) == $$valueUnicodeStart);
+        return (getPropertiesEx(ch) & $$maskIDStart) != 0 ||
+               ch == 0x2E2F;
     }
 
     boolean isUnicodeIdentifierPart(int ch) {
-        int props = getProperties(ch);
-        return ((props & $$maskUnicodePart) != 0);
+        return (getPropertiesEx(ch) & $$maskIDContinue) != 0 ||
+               isIdentifierIgnorable(ch) ||
+               ch == 0x2E2F;
     }
 
     boolean isIdentifierIgnorable(int ch) {
         int props = getProperties(ch);
         return ((props & $$maskIdentifierInfo) == $$valueIgnorable);
@@ -363,10 +364,12 @@
             case 0xA7AE: mapChar = 0x026A; break;
             case 0xA7B0: mapChar = 0x029E; break;
             case 0xA7B1: mapChar = 0x0287; break;
             case 0xA7B2: mapChar = 0x029D; break;
             case 0xA7B3: mapChar = 0xAB53; break;
+            case 0xA7C5: mapChar = 0x0282; break;
+            case 0xA7C6: mapChar = 0x1D8E; break;
               // default mapChar is already set, so no
               // need to redo it here.
               // default       : mapChar = ch;
             }
           }
@@ -398,10 +401,11 @@
             case 0x026A: mapChar = 0xA7AE; break;
             case 0x026B: mapChar = 0x2C62; break;
             case 0x026C: mapChar = 0xA7AD; break;
             case 0x0271: mapChar = 0x2C6E; break;
             case 0x027D: mapChar = 0x2C64; break;
+            case 0x0282: mapChar = 0xA7C5; break;
             case 0x0287: mapChar = 0xA7B1; break;
             case 0x029D: mapChar = 0xA7B2; break;
             case 0x029E: mapChar = 0xA7B0; break;
             case 0x10D0: mapChar = 0x1C90; break;
             case 0x10D1: mapChar = 0x1C91; break;
@@ -458,10 +462,11 @@
             case 0x1C86: mapChar = 0x042A; break;
             case 0x1C87: mapChar = 0x0462; break;
             case 0x1C88: mapChar = 0xA64A; break;
             case 0x1D79: mapChar = 0xA77D; break;
             case 0x1D7D: mapChar = 0x2C63; break;
+            case 0x1D8E: mapChar = 0xA7C6; break;
             case 0x1F80: mapChar = 0x1F88; break;
             case 0x1F81: mapChar = 0x1F89; break;
             case 0x1F82: mapChar = 0x1F8A; break;
             case 0x1F83: mapChar = 0x1F8B; break;
             case 0x1F84: mapChar = 0x1F8C; break;
@@ -852,10 +857,11 @@
                     case 0x026A: mapChar = 0xA7AE; break;
                     case 0x026B: mapChar = 0x2C62; break;
                     case 0x026C: mapChar = 0xA7AD; break;
                     case 0x0271: mapChar = 0x2C6E; break;
                     case 0x027D: mapChar = 0x2C64; break;
+                    case 0x0282: mapChar = 0xA7C5; break;
                     case 0x0287: mapChar = 0xA7B1; break;
                     case 0x029D: mapChar = 0xA7B2; break;
                     case 0x029E: mapChar = 0xA7B0; break;
                     case 0x10D0: mapChar = 0x1C90; break;
                     case 0x10D1: mapChar = 0x1C91; break;
@@ -912,10 +918,11 @@
                     case 0x1C86: mapChar = 0x042A; break;
                     case 0x1C87: mapChar = 0x0462; break;
                     case 0x1C88: mapChar = 0xA64A; break;
                     case 0x1D79: mapChar = 0xA77D; break;
                     case 0x1D7D: mapChar = 0x2C63; break;
+                    case 0x1D8E: mapChar = 0xA7C6; break;
                     case 0x1FBE: mapChar = 0x0399; break;
                     case 0x2C65: mapChar = 0x023A; break;
                     case 0x2C66: mapChar = 0x023E; break;
                     case 0x2D00: mapChar = 0x10A0; break;
                     case 0x2D01: mapChar = 0x10A1; break;
