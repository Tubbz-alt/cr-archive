diff a/make/test/BuildMicrobenchmark.gmk b/make/test/BuildMicrobenchmark.gmk
--- a/make/test/BuildMicrobenchmark.gmk
+++ b/make/test/BuildMicrobenchmark.gmk
@@ -45,10 +45,13 @@
 
 MICROBENCHMARK_OUTPUT := $(SUPPORT_OUTPUTDIR)/test/micro
 MICROBENCHMARK_CLASSES := $(MICROBENCHMARK_OUTPUT)/classes
 MICROBENCHMARK_JAR_BIN := $(MICROBENCHMARK_OUTPUT)/jar
 
+MICROBENCHMARK_TOOLS_CLASSES := $(MICROBENCHMARK_OUTPUT)/tools-classes
+MICROBENCHMARK_INDIFY_DONE := $(MICROBENCHMARK_CLASSES)/_indify.marker
+
 JMH_UNPACKED_DIR := $(MICROBENCHMARK_OUTPUT)/jmh_jars
 JMH_UNPACKED_JARS_DONE := $(JMH_UNPACKED_DIR)/_unpacked.marker
 
 # External dependencies
 JMH_COMPILE_JARS := $(JMH_CORE_JAR) $(JMH_GENERATOR_JAR)
@@ -66,10 +69,18 @@
 # Need double \n to get new lines and no trailing spaces
 MICROBENCHMARK_MANIFEST := Build: $(FULL_VERSION)\n\
 \nJMH-Version: $(JMH_VERSION)\n\
 \nName: OpenJDK Microbenchmark Suite
 
+#### Compile Indify tool
+
+$(eval $(call SetupJavaCompilation, BUILD_INDIFY, \
+    SETUP := GENERATE_OLDBYTECODE, \
+    SRC := $(TOPDIR)/test/jdk/java/lang/invoke, \
+    INCLUDE_FILES := indify/Indify.java, \
+    BIN := $(MICROBENCHMARK_TOOLS_CLASSES), \
+))
 
 #### Compile Targets
 
 # Building microbenchmark requires the jdk.unsupported and java.management modules,
 # and to have sjavac disabled.
@@ -90,10 +101,18 @@
     BIN := $(MICROBENCHMARK_CLASSES), \
 ))
 
 $(BUILD_JDK_MICROBENCHMARK): $(JMH_COMPILE_JARS)
 
+# Run Indify
+$(MICROBENCHMARK_INDIFY_DONE): $(BUILD_INDIFY) $(BUILD_JDK_MICROBENCHMARK)
+	$(call LogWarn, Running Indify on microbenchmark classes)
+	$(JAVA_SMALL) -cp $(MICROBENCHMARK_TOOLS_CLASSES) \
+	    indify.Indify --overwrite $(MICROBENCHMARK_CLASSES) \
+	    $(LOG_DEBUG) 2>&1
+	$(TOUCH) $@
+
 # Unpacking dependencies for inclusion in the benchmark JARs
 $(JMH_UNPACKED_JARS_DONE): $(JMH_RUNTIME_JARS)
 	$(RM) -r $(JMH_UNPACKED_DIR)
 	$(MKDIR) -p $(JMH_UNPACKED_DIR)
 	$(foreach jar, $(JMH_RUNTIME_JARS), \
@@ -102,11 +121,12 @@
 	$(RM) $(JMH_UNPACKED_DIR)/*.xml
 	$(TOUCH) $@
 
 # Create benchmarks JAR file with benchmarks for both the old and new JDK
 $(eval $(call SetupJarArchive, BUILD_JDK_JAR, \
-    DEPENDENCIES := $(BUILD_JDK_MICROBENCHMARK) $(JMH_UNPACKED_JARS_DONE), \
+    DEPENDENCIES := $(BUILD_JDK_MICROBENCHMARK) $(JMH_UNPACKED_JARS_DONE) \
+        $(MICROBENCHMARK_INDIFY_DONE), \
     SRCS := $(MICROBENCHMARK_CLASSES) $(JMH_UNPACKED_DIR), \
     BIN := $(MICROBENCHMARK_JAR_BIN), \
     SUFFIXES := .*, \
     EXCLUDE_FILES:= _the.BUILD_JDK_MICROBENCHMARK_batch \
         _the.BUILD_JDK_MICROBENCHMARK.vardeps _unpacked.marker, \
