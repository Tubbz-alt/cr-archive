diff a/src/org/openjdk/asmtools/jasm/ClassData.java b/src/org/openjdk/asmtools/jasm/ClassData.java
--- a/src/org/openjdk/asmtools/jasm/ClassData.java
+++ b/src/org/openjdk/asmtools/jasm/ClassData.java
@@ -53,12 +53,12 @@
     NestMembersAttr nestMembersAttr;
 
     // JEP 359 - Record attribute since class file 58.65535
     private RecordData recordData;
 
-    // JEP 360 - PermittedSubtypes attribute since class file 59.65535
-    private PermittedTypesAttr permittedTypesAttr;
+    // JEP 360 - PermittedSubclasses attribute since class file 59.65535
+    private PermittedSubclassesAttr permittedSubclassesAttr;
 
     ModuleAttr moduleAttribute = null;
     Environment env;
     protected ConstantPool pool;
 
@@ -309,13 +309,13 @@
     public void addNestMembers(List<ConstantPool.ConstCell> classes) {
         env.traceln("addNestMembers");
         nestMembersAttr = new NestMembersAttr(this, classes);
     }
 
-    public void addPermittedSubtypes(List<ConstantPool.ConstCell> classes) {
-        env.traceln("addPermittedSubtypes");
-        permittedTypesAttr = new PermittedTypesAttr(this, classes);
+    public void addPermittedSubclasses(List<ConstantPool.ConstCell> classes) {
+        env.traceln("addPermittedSubclasses");
+        permittedSubclassesAttr = new PermittedSubclassesAttr(this, classes);
     }
 
 
     public void endClass() {
         sourceFileNameAttr = new CPXAttr(this,
@@ -457,12 +457,12 @@
             if(nestHostAttributeExists())
                 attrs.add(nestHostAttr);
             if(nestMembersAttributesExist())
                 attrs.add(nestMembersAttr);
             // since class version 59.65535 (JEP 360)
-            if ( permittedSubtypesAttributesExist() )
-                attrs.add(permittedTypesAttr);
+            if ( permittedSubclassesAttributesExist() )
+                attrs.add(permittedSubclassesAttr);
         }
         return attrs;
     }
 
     static char fileSeparator; //=System.getProperty("file.separator");
@@ -513,11 +513,11 @@
         return nestHostAttr != null;
     }
 
     public boolean nestMembersAttributesExist() { return nestMembersAttr != null;  }
 
-    public boolean permittedSubtypesAttributesExist() { return permittedTypesAttr != null;  }
+    public boolean permittedSubclassesAttributesExist() { return permittedSubclassesAttr != null;  }
 
     public boolean recordAttributeExists() { return recordData != null;  }
 
     /**
      * This is a wrapper for DataOutputStream, used for debugging purposes. it allows
