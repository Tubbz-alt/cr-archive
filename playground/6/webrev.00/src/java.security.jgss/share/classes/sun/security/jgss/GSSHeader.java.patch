diff a/src/java.security.jgss/share/classes/sun/security/jgss/GSSHeader.java b/src/java.security.jgss/share/classes/sun/security/jgss/GSSHeader.java
--- a/src/java.security.jgss/share/classes/sun/security/jgss/GSSHeader.java
+++ b/src/java.security.jgss/share/classes/sun/security/jgss/GSSHeader.java
@@ -67,12 +67,11 @@
      * prefix for a particular mechanism token.
      * @param mechOid the Oid of the mechanism which generated the token
      * @param mechTokenLength the length of the subsequent portion that
      * the mechanism will be adding.
      */
-    public GSSHeader(ObjectIdentifier mechOid, int mechTokenLength)
-        throws IOException {
+    public GSSHeader(ObjectIdentifier mechOid, int mechTokenLength) {
 
         this.mechOid = mechOid;
         DerOutputStream temp = new DerOutputStream();
         temp.putOID(mechOid);
         mechOidBytes = temp.toByteArray();
@@ -153,16 +152,13 @@
      */
     public static int getMaxMechTokenSize(ObjectIdentifier mechOid,
                                           int maxTotalSize) {
 
         int mechOidBytesSize = 0;
-        try {
-            DerOutputStream temp = new DerOutputStream();
-            temp.putOID(mechOid);
-            mechOidBytesSize = temp.toByteArray().length;
-        } catch (IOException e) {
-        }
+        DerOutputStream temp = new DerOutputStream();
+        temp.putOID(mechOid);
+        mechOidBytesSize = temp.toByteArray().length;
 
         // Subtract bytes needed for 0x60 tag and mechOidBytes
         maxTotalSize -= (1 + mechOidBytesSize);
 
         // Subtract maximum len bytes
