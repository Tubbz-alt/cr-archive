diff a/src/java.security.jgss/share/classes/sun/security/jgss/spnego/NegTokenTarg.java b/src/java.security.jgss/share/classes/sun/security/jgss/spnego/NegTokenTarg.java
--- a/src/java.security.jgss/share/classes/sun/security/jgss/spnego/NegTokenTarg.java
+++ b/src/java.security.jgss/share/classes/sun/security/jgss/spnego/NegTokenTarg.java
@@ -73,59 +73,53 @@
         super(NEG_TOKEN_TARG_ID);
         parseToken(in);
     }
 
     final byte[] encode() throws GSSException {
-        try {
-            // create negTargToken
-            DerOutputStream targToken = new DerOutputStream();
-
-            // write the negotiated result with CONTEXT 00
-            DerOutputStream result = new DerOutputStream();
-            result.putEnumerated(negResult);
+        // create negTargToken
+        DerOutputStream targToken = new DerOutputStream();
+
+        // write the negotiated result with CONTEXT 00
+        DerOutputStream result = new DerOutputStream();
+        result.putEnumerated(negResult);
+        targToken.write(DerValue.createTag(DerValue.TAG_CONTEXT,
+                true, (byte) 0x00), result);
+
+        // supportedMech with CONTEXT 01
+        if (supportedMech != null) {
+            DerOutputStream mech = new DerOutputStream();
+            byte[] mechType = supportedMech.getDER();
+            mech.write(mechType);
             targToken.write(DerValue.createTag(DerValue.TAG_CONTEXT,
-                                true, (byte) 0x00), result);
-
-            // supportedMech with CONTEXT 01
-            if (supportedMech != null) {
-                DerOutputStream mech = new DerOutputStream();
-                byte[] mechType = supportedMech.getDER();
-                mech.write(mechType);
-                targToken.write(DerValue.createTag(DerValue.TAG_CONTEXT,
-                                                true, (byte) 0x01), mech);
-            }
+                    true, (byte) 0x01), mech);
+        }
 
-            // response Token with CONTEXT 02
-            if (responseToken != null) {
-                DerOutputStream rspToken = new DerOutputStream();
-                rspToken.putOctetString(responseToken);
-                targToken.write(DerValue.createTag(DerValue.TAG_CONTEXT,
-                                        true, (byte) 0x02), rspToken);
-            }
+        // response Token with CONTEXT 02
+        if (responseToken != null) {
+            DerOutputStream rspToken = new DerOutputStream();
+            rspToken.putOctetString(responseToken);
+            targToken.write(DerValue.createTag(DerValue.TAG_CONTEXT,
+                    true, (byte) 0x02), rspToken);
+        }
 
-            // mechListMIC with CONTEXT 03
-            if (mechListMIC != null) {
-                if (DEBUG) {
-                    System.out.println("SpNegoToken NegTokenTarg: " +
-                                                "sending MechListMIC");
-                }
-                DerOutputStream mic = new DerOutputStream();
-                mic.putOctetString(mechListMIC);
-                targToken.write(DerValue.createTag(DerValue.TAG_CONTEXT,
-                                        true, (byte) 0x03), mic);
+        // mechListMIC with CONTEXT 03
+        if (mechListMIC != null) {
+            if (DEBUG) {
+                System.out.println("SpNegoToken NegTokenTarg: " +
+                        "sending MechListMIC");
             }
+            DerOutputStream mic = new DerOutputStream();
+            mic.putOctetString(mechListMIC);
+            targToken.write(DerValue.createTag(DerValue.TAG_CONTEXT,
+                    true, (byte) 0x03), mic);
+        }
 
-            // insert in a SEQUENCE
-            DerOutputStream out = new DerOutputStream();
-            out.write(DerValue.tag_Sequence, targToken);
-
-            return out.toByteArray();
+        // insert in a SEQUENCE
+        DerOutputStream out = new DerOutputStream();
+        out.write(DerValue.tag_Sequence, targToken);
 
-        } catch (IOException e) {
-            throw new GSSException(GSSException.DEFECTIVE_TOKEN, -1,
-                "Invalid SPNEGO NegTokenTarg token : " + e.getMessage());
-        }
+        return out.toByteArray();
     }
 
     private void parseToken(byte[] in) throws GSSException {
         try {
             DerValue der = new DerValue(in);
