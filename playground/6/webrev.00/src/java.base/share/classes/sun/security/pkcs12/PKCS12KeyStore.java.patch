diff a/src/java.base/share/classes/sun/security/pkcs12/PKCS12KeyStore.java b/src/java.base/share/classes/sun/security/pkcs12/PKCS12KeyStore.java
--- a/src/java.base/share/classes/sun/security/pkcs12/PKCS12KeyStore.java
+++ b/src/java.base/share/classes/sun/security/pkcs12/PKCS12KeyStore.java
@@ -639,11 +639,11 @@
                 // Encode secret key in a PKCS#8
                 DerOutputStream pkcs8 = new DerOutputStream();
                 DerOutputStream secretKeyInfo = new DerOutputStream();
                 secretKeyInfo.putInteger(0);
                 AlgorithmId algId = AlgorithmId.get(key.getAlgorithm());
-                algId.encode(secretKeyInfo);
+                algId.derEncode(secretKeyInfo);
                 secretKeyInfo.putOctetString(key.getEncoded());
                 pkcs8.write(DerValue.tag_Sequence, secretKeyInfo);
 
                 // Encrypt the secret key (using same PBE as for private keys)
                 keyEntry.protectedSecretKey =
@@ -1888,11 +1888,11 @@
 
             AlgorithmId algId = new AlgorithmId(
                     mapPBEAlgorithmToOID(certProtectionAlgorithm),
                     cipher.getParameters());
                     // cipher.getParameters() now has IV
-            algId.encode(bytes);
+            algId.derEncode(bytes);
             byte[] encodedAlgId = bytes.toByteArray();
 
             if (debug != null) {
                 debug.println("  (Cipher algorithm: " + cipher.getAlgorithm() +
                         ")");
