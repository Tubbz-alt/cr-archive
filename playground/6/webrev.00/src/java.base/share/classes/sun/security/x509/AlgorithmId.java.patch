diff a/src/java.base/share/classes/sun/security/x509/AlgorithmId.java b/src/java.base/share/classes/sun/security/x509/AlgorithmId.java
--- a/src/java.base/share/classes/sun/security/x509/AlgorithmId.java
+++ b/src/java.base/share/classes/sun/security/x509/AlgorithmId.java
@@ -142,35 +142,34 @@
 
         // Decode (parse) the parameters
         algParams.init(params.toByteArray());
     }
 
-    /**
-     * Marshal a DER-encoded "AlgorithmID" sequence on the DER stream.
-     */
-    public final void encode(DerOutputStream out) throws IOException {
-        derEncode(out);
-    }
-
     /**
      * DER encode this object onto an output stream.
      * Implements the <code>DerEncoder</code> interface.
      *
      * @param out
      * the output stream on which to write the DER encoding.
      *
      * @exception IOException on encoding error.
      */
-    public void derEncode (OutputStream out) throws IOException {
+    @Override
+    public void derEncode (DerOutputStream out) {
         DerOutputStream bytes = new DerOutputStream();
         DerOutputStream tmp = new DerOutputStream();
 
         bytes.putOID(algid);
         // Setup params from algParams since no DER encoding is given
         if (constructedFromDer == false) {
             if (algParams != null) {
-                params = new DerValue(algParams.getEncoded());
+                // algParams should always have been initialized?
+                try {
+                    params = new DerValue(algParams.getEncoded());
+                } catch (IOException e) {
+                    throw new AssertionError(e);
+                }
             } else {
                 params = null;
             }
         }
         if (params == null) {
