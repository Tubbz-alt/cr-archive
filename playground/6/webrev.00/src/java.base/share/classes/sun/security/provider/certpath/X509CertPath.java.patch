diff a/src/java.base/share/classes/sun/security/provider/certpath/X509CertPath.java b/src/java.base/share/classes/sun/security/provider/certpath/X509CertPath.java
--- a/src/java.base/share/classes/sun/security/provider/certpath/X509CertPath.java
+++ b/src/java.base/share/classes/sun/security/provider/certpath/X509CertPath.java
@@ -287,35 +287,29 @@
      * @exception CertificateEncodingException if an exception occurs
      */
     private byte[] encodePKIPATH() throws CertificateEncodingException {
 
         ListIterator<X509Certificate> li = certs.listIterator(certs.size());
-        try {
-            DerOutputStream bytes = new DerOutputStream();
-            // encode certs in reverse order (trust anchor to target)
-            // according to PkiPath format
-            while (li.hasPrevious()) {
-                X509Certificate cert = li.previous();
-                // check for duplicate cert
-                if (certs.lastIndexOf(cert) != certs.indexOf(cert)) {
-                    throw new CertificateEncodingException
-                        ("Duplicate Certificate");
-                }
-                // get encoded certificates
-                byte[] encoded = cert.getEncoded();
-                bytes.write(encoded);
+        DerOutputStream bytes = new DerOutputStream();
+        // encode certs in reverse order (trust anchor to target)
+        // according to PkiPath format
+        while (li.hasPrevious()) {
+            X509Certificate cert = li.previous();
+            // check for duplicate cert
+            if (certs.lastIndexOf(cert) != certs.indexOf(cert)) {
+                throw new CertificateEncodingException
+                    ("Duplicate Certificate");
             }
-
-            // Wrap the data in a SEQUENCE
-            DerOutputStream derout = new DerOutputStream();
-            derout.write(DerValue.tag_SequenceOf, bytes);
-            return derout.toByteArray();
-
-        } catch (IOException ioe) {
-           throw new CertificateEncodingException("IOException encoding " +
-                   "PkiPath data: " + ioe, ioe);
+            // get encoded certificates
+            byte[] encoded = cert.getEncoded();
+            bytes.write(encoded);
         }
+
+        // Wrap the data in a SEQUENCE
+        DerOutputStream derout = new DerOutputStream();
+        derout.write(DerValue.tag_SequenceOf, bytes);
+        return derout.toByteArray();
     }
 
     /**
      * Encode the CertPath using PKCS#7 format.
      *
