diff a/src/java.base/share/classes/sun/security/x509/AuthorityKeyIdentifierExtension.java b/src/java.base/share/classes/sun/security/x509/AuthorityKeyIdentifierExtension.java
--- a/src/java.base/share/classes/sun/security/x509/AuthorityKeyIdentifierExtension.java
+++ b/src/java.base/share/classes/sun/security/x509/AuthorityKeyIdentifierExtension.java
@@ -78,11 +78,11 @@
     private KeyIdentifier       id = null;
     private GeneralNames        names = null;
     private SerialNumber        serialNum = null;
 
     // Encode only the extension value
-    private void encodeThis() throws IOException {
+    private void encodeThis() {
         if (id == null && names == null && serialNum == null) {
             this.extensionValue = null;
             return;
         }
         DerOutputStream seq = new DerOutputStream();
@@ -91,19 +91,15 @@
             DerOutputStream tmp1 = new DerOutputStream();
             id.encode(tmp1);
             tmp.writeImplicit(DerValue.createTag(DerValue.TAG_CONTEXT,
                               false, TAG_ID), tmp1);
         }
-        try {
-            if (names != null) {
-                DerOutputStream tmp1 = new DerOutputStream();
-                names.encode(tmp1);
-                tmp.writeImplicit(DerValue.createTag(DerValue.TAG_CONTEXT,
-                                  true, TAG_NAMES), tmp1);
-            }
-        } catch (Exception e) {
-            throw new IOException(e.toString());
+        if (names != null) {
+            DerOutputStream tmp1 = new DerOutputStream();
+            names.encode(tmp1);
+            tmp.writeImplicit(DerValue.createTag(DerValue.TAG_CONTEXT,
+                              true, TAG_NAMES), tmp1);
         }
         if (serialNum != null) {
             DerOutputStream tmp1 = new DerOutputStream();
             serialNum.encode(tmp1);
             tmp.writeImplicit(DerValue.createTag(DerValue.TAG_CONTEXT,
@@ -216,19 +212,18 @@
      * Write the extension to the OutputStream.
      *
      * @param out the OutputStream to write the extension to.
      * @exception IOException on error.
      */
-    public void encode(OutputStream out) throws IOException {
-        DerOutputStream tmp = new DerOutputStream();
+    @Override
+    public void encode(DerOutputStream out) {
         if (this.extensionValue == null) {
             extensionId = PKIXExtensions.AuthorityKey_Id;
             critical = false;
             encodeThis();
         }
-        super.encode(tmp);
-        out.write(tmp.toByteArray());
+        super.encode(out);
     }
 
     /**
      * Set the attribute value.
      */
@@ -312,11 +307,11 @@
     }
 
     /**
      * Return the encoded key identifier, or null if not specified.
      */
-    public byte[] getEncodedKeyIdentifier() throws IOException {
+    public byte[] getEncodedKeyIdentifier() {
         if (id != null) {
             DerOutputStream derOut = new DerOutputStream();
             id.encode(derOut);
             return derOut.toByteArray();
         }
