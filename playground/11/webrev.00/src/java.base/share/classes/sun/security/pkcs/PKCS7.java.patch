diff a/src/java.base/share/classes/sun/security/pkcs/PKCS7.java b/src/java.base/share/classes/sun/security/pkcs/PKCS7.java
--- a/src/java.base/share/classes/sun/security/pkcs/PKCS7.java
+++ b/src/java.base/share/classes/sun/security/pkcs/PKCS7.java
@@ -264,10 +264,18 @@
                     bais.close();
             }
         }
     }
 
+
+    //    SignedData ::= SEQUENCE {
+    //        version CMSVersion,
+    //        digestAlgorithms DigestAlgorithmIdentifiers,
+    //        encapContentInfo EncapsulatedContentInfo,
+    //        certificates [0] IMPLICIT CertificateSet OPTIONAL,
+    //        crls [1] IMPLICIT RevocationInfoChoices OPTIONAL,
+    //        signerInfos SignerInfos }
     private void parseSignedData(DerValue val)
         throws ParsingException, IOException {
 
         DerInputStream dis = val.toDerInputStream();
 
@@ -303,11 +311,11 @@
 
         /*
          * check if certificates (implicit tag) are provided
          * (certificates are OPTIONAL)
          */
-        if ((byte)(dis.peekByte()) == (byte)0xA0) {
+        if (dis.seeOptionalContextSpecific(0)) {
             DerValue[] certVals = dis.getSet(2, true);
 
             len = certVals.length;
             certificates = new X509Certificate[len];
             int count = 0;
@@ -348,11 +356,11 @@
                 certificates = Arrays.copyOf(certificates, count);
             }
         }
 
         // check if crls (implicit tag) are provided (crls are OPTIONAL)
-        if ((byte)(dis.peekByte()) == (byte)0xA1) {
+        if (dis.seeOptionalContextSpecific(1)) {
             DerValue[] crlVals = dis.getSet(1, true);
 
             len = crlVals.length;
             crls = new X509CRL[len];
 
