diff a/src/java.base/share/classes/sun/security/pkcs/SignerInfo.java b/src/java.base/share/classes/sun/security/pkcs/SignerInfo.java
--- a/src/java.base/share/classes/sun/security/pkcs/SignerInfo.java
+++ b/src/java.base/share/classes/sun/security/pkcs/SignerInfo.java
@@ -127,10 +127,19 @@
     }
 
     /**
      * Parses a PKCS#7 signer info.
      *
+     * SignerInfo ::= SEQUENCE {
+     *         version CMSVersion,
+     *         sid SignerIdentifier,
+     *         digestAlgorithm DigestAlgorithmIdentifier,
+     *         signedAttrs [0] IMPLICIT SignedAttributes OPTIONAL,
+     *         signatureAlgorithm SignatureAlgorithmIdentifier,
+     *         signature SignatureValue,
+     *         unsignedAttrs [1] IMPLICIT UnsignedAttributes OPTIONAL }
+     *
      * <p>This constructor is used only for backwards compatibility with
      * PKCS#7 blocks that were generated using JDK1.1.x.
      *
      * @param derin the ASN.1 encoding of the signer info.
      * @param oldStyle flag indicating whether or not the given signer info
@@ -160,11 +169,11 @@
             // encoded as an empty Set (Set of length zero)
             derin.getSet(0);
         } else {
             // check if set of auth attributes (implicit tag) is provided
             // (auth attributes are OPTIONAL)
-            if ((byte)(derin.peekByte()) == (byte)0xA0) {
+            if (derin.seeOptionalContextSpecific(0)) {
                 authenticatedAttributes = new PKCS9Attributes(derin);
             }
         }
 
         // digestEncryptionAlgorithmId - little RSA naming scheme -
@@ -182,12 +191,11 @@
             // encoded as an empty Set (Set of length zero)
             derin.getSet(0);
         } else {
             // check if set of unauth attributes (implicit tag) is provided
             // (unauth attributes are OPTIONAL)
-            if (derin.available() != 0
-                && (byte)(derin.peekByte()) == (byte)0xA1) {
+            if (derin.seeOptionalContextSpecific(1)) {
                 unauthenticatedAttributes =
                     new PKCS9Attributes(derin, true);// ignore unsupported attrs
             }
         }
 
