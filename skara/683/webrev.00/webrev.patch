diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/ContributorCommand.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/ContributorCommand.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/ContributorCommand.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/ContributorCommand.java
@@ -63,20 +63,25 @@
             if (contributor == null) {
                 return Optional.empty();
             }
         } else {
             try {
-                return Optional.of(EmailAddress.parse(user));
+                var email = EmailAddress.parse(user);
+                if (email.fullName().isPresent()) {
+                    return Optional.of(email);
+                } else {
+                    return Optional.empty();
+                }
             } catch (RuntimeException e) {
                 return Optional.empty();
             }
         }
 
         if (contributor.fullName().isPresent()) {
             return Optional.of(EmailAddress.from(contributor.fullName().get(), contributor.username() + "@openjdk.org"));
         } else {
-            return Optional.of(EmailAddress.from(contributor.username() + "@openjdk.org"));
+            return Optional.empty();
         }
     }
 
     @Override
     public void handle(PullRequestBot bot, PullRequest pr, CensusInstance censusInstance, Path scratchPath, CommandInvocation command, List<Comment> allComments, PrintWriter reply) {
diff a/bots/pr/src/test/java/org/openjdk/skara/bots/pr/ContributorTests.java b/bots/pr/src/test/java/org/openjdk/skara/bots/pr/ContributorTests.java
--- a/bots/pr/src/test/java/org/openjdk/skara/bots/pr/ContributorTests.java
+++ b/bots/pr/src/test/java/org/openjdk/skara/bots/pr/ContributorTests.java
@@ -225,10 +225,15 @@
 
             // Unknown openjdk user
             pr.addComment("/contributor add someone");
             TestBotRunner.runPeriodicItems(prBot);
             assertLastCommentContains(pr, "Could not parse `someone` as a valid contributor");
+
+            // No full name
+            pr.addComment("/contributor add some@one");
+            TestBotRunner.runPeriodicItems(prBot);
+            assertLastCommentContains(pr, "Could not parse `some@one` as a valid contributor");
         }
     }
 
     @Test
     void platformUser(TestInfo testInfo) throws IOException {
