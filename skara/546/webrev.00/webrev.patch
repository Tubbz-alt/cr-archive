diff a/bots/tester/src/test/java/org/openjdk/skara/bots/tester/InMemoryHostedRepository.java b/bots/tester/src/test/java/org/openjdk/skara/bots/tester/InMemoryHostedRepository.java
--- a/bots/tester/src/test/java/org/openjdk/skara/bots/tester/InMemoryHostedRepository.java
+++ b/bots/tester/src/test/java/org/openjdk/skara/bots/tester/InMemoryHostedRepository.java
@@ -89,10 +89,15 @@
     @Override
     public URI webUrl() {
         return webUrl;
     }
 
+    @Override
+    public URI nonTransformedWebUrl() {
+        return webUrl();
+    }
+
     @Override
     public URI webUrl(Hash hash) {
         return null;
     }
 
diff a/forge/src/main/java/org/openjdk/skara/forge/HostedRepository.java b/forge/src/main/java/org/openjdk/skara/forge/HostedRepository.java
--- a/forge/src/main/java/org/openjdk/skara/forge/HostedRepository.java
+++ b/forge/src/main/java/org/openjdk/skara/forge/HostedRepository.java
@@ -54,10 +54,11 @@
     Optional<PullRequest> parsePullRequestUrl(String url);
     String name();
     Optional<HostedRepository> parent();
     URI url();
     URI webUrl();
+    URI nonTransformedWebUrl();
     URI webUrl(Hash hash);
     VCS repositoryType();
     String fileContents(String filename, String ref);
     String namespace();
     Optional<WebHook> parseWebHook(JSONValue body);
diff a/forge/src/main/java/org/openjdk/skara/forge/github/GitHubHost.java b/forge/src/main/java/org/openjdk/skara/forge/github/GitHubHost.java
--- a/forge/src/main/java/org/openjdk/skara/forge/github/GitHubHost.java
+++ b/forge/src/main/java/org/openjdk/skara/forge/github/GitHubHost.java
@@ -135,15 +135,19 @@
     public URI getURI() {
         return uri;
     }
 
     URI getWebURI(String endpoint) {
+        return getWebURI(endpoint, true);
+    }
+
+    URI getWebURI(String endpoint, boolean transform) {
         var baseWebUri = URIBuilder.base(uri)
                                    .setPath(endpoint)
                                    .build();
 
-        if (webUriPattern == null) {
+        if (webUriPattern == null || !transform) {
             return baseWebUri;
         }
 
         var matcher = webUriPattern.matcher(baseWebUri.toString());
         if (!matcher.matches()) {
diff a/forge/src/main/java/org/openjdk/skara/forge/github/GitHubRepository.java b/forge/src/main/java/org/openjdk/skara/forge/github/GitHubRepository.java
--- a/forge/src/main/java/org/openjdk/skara/forge/github/GitHubRepository.java
+++ b/forge/src/main/java/org/openjdk/skara/forge/github/GitHubRepository.java
@@ -186,10 +186,16 @@
     public URI webUrl() {
         var endpoint = "/" + repository;
         return gitHubHost.getWebURI(endpoint);
     }
 
+    @Override
+    public URI nonTransformedWebUrl() {
+        var endpoint = "/" + repository;
+        return gitHubHost.getWebURI(endpoint, false);
+    }
+
     @Override
     public URI webUrl(Hash hash) {
         var endpoint = "/" + repository + "/commit/" + hash.abbreviate();
         return gitHubHost.getWebURI(endpoint);
     }
diff a/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabRepository.java b/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabRepository.java
--- a/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabRepository.java
+++ b/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabRepository.java
@@ -157,10 +157,15 @@
         return URIBuilder.base(gitLabHost.getUri())
                          .setPath("/" + projectName)
                          .build();
     }
 
+    @Override
+    public URI nonTransformedWebUrl() {
+        return webUrl();
+    }
+
     @Override
     public URI webUrl(Hash hash) {
         return URIBuilder.base(gitLabHost.getUri())
                          .setPath("/" + projectName + "/commit/" + hash.abbreviate())
                          .build();
diff a/forge/src/test/java/org/openjdk/skara/forge/github/GitHubHostTests.java b/forge/src/test/java/org/openjdk/skara/forge/github/GitHubHostTests.java
--- a/forge/src/test/java/org/openjdk/skara/forge/github/GitHubHostTests.java
+++ b/forge/src/test/java/org/openjdk/skara/forge/github/GitHubHostTests.java
@@ -39,6 +39,16 @@
             var host = new GitHubHost(URIBuilder.base("http://www.example.com").build(),
                                       Pattern.compile("^(http://www.example.com)/test/(.*)$"), "$1/another/$2");
             assertEquals(new URI("http://www.example.com/another/hello"), host.getWebURI("/test/hello"));
         }
     }
+
+    @Test
+    void nonTransformedWebUrl() throws IOException, URISyntaxException {
+        try (var tempFolder = new TemporaryDirectory()) {
+            var host = new GitHubHost(URIBuilder.base("http://www.example.com").build(),
+                                      Pattern.compile("^(http://www.example.com)/test/(.*)$"), "$1/another/$2");
+            assertEquals(new URI("http://www.example.com/another/hello"), host.getWebURI("/test/hello"));
+            assertEquals(new URI("http://www.example.com/test/hello"), host.getWebURI("/test/hello", false));
+        }
+    }
 }
diff a/test/src/main/java/org/openjdk/skara/test/TestHostedRepository.java b/test/src/main/java/org/openjdk/skara/test/TestHostedRepository.java
--- a/test/src/main/java/org/openjdk/skara/test/TestHostedRepository.java
+++ b/test/src/main/java/org/openjdk/skara/test/TestHostedRepository.java
@@ -124,10 +124,15 @@
     @Override
     public URI webUrl() {
         return url();
     }
 
+    @Override
+    public URI nonTransformedWebUrl() {
+        return url();
+    }
+
     @Override
     public URI webUrl(Hash hash) {
         try {
             return new URI(url().toString() + "/" + hash.hex());
         } catch (URISyntaxException e) {
