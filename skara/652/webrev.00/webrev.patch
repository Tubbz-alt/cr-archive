diff a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/TestUtils.java b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/TestUtils.java
--- /dev/null
+++ b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/TestUtils.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * This code is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 only, as
+ * published by the Free Software Foundation.
+ *
+ * This code is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ * version 2 for more details (a copy is included in the LICENSE file that
+ * accompanied this code).
+ *
+ * You should have received a copy of the GNU General Public License version
+ * 2 along with this work; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
+ * or visit www.oracle.com if you need additional information or have any
+ * questions.
+ */
+package org.openjdk.skara.bots.notify;
+
+import org.openjdk.skara.forge.HostedRepository;
+import org.openjdk.skara.storage.StorageBuilder;
+
+public class TestUtils {
+    public static StorageBuilder<UpdatedTag> createTagStorage(HostedRepository repository) {
+        return new StorageBuilder<UpdatedTag>("tags.txt")
+                .remoteRepository(repository, "history", "Duke", "duke@openjdk.java.net", "Updated tags");
+    }
+
+    public static StorageBuilder<UpdatedBranch> createBranchStorage(HostedRepository repository) {
+        return new StorageBuilder<UpdatedBranch>("branches.txt")
+                .remoteRepository(repository, "history", "Duke", "duke@openjdk.java.net", "Updated branches");
+    }
+
+    public static StorageBuilder<PullRequestState> createPullRequestStateStorage(HostedRepository repository) {
+        return new StorageBuilder<PullRequestState>("prissues.txt")
+                .remoteRepository(repository, "history", "Duke", "duke@openjdk.java.net", "Updated prissues");
+    }
+}
diff a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
--- a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
+++ b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
@@ -33,27 +33,13 @@
 import java.io.IOException;
 import java.util.List;
 import java.util.regex.Pattern;
 
 import static org.junit.jupiter.api.Assertions.*;
+import static org.openjdk.skara.bots.notify.TestUtils.*;
 
 public class UpdaterTests {
-    public static StorageBuilder<UpdatedTag> createTagStorage(HostedRepository repository) {
-        return new StorageBuilder<UpdatedTag>("tags.txt")
-                .remoteRepository(repository, "history", "Duke", "duke@openjdk.java.net", "Updated tags");
-    }
-
-    public static StorageBuilder<UpdatedBranch> createBranchStorage(HostedRepository repository) {
-        return new StorageBuilder<UpdatedBranch>("branches.txt")
-                .remoteRepository(repository, "history", "Duke", "duke@openjdk.java.net", "Updated branches");
-    }
-
-    public static StorageBuilder<PullRequestState> createPullRequestStateStorage(HostedRepository repository) {
-        return new StorageBuilder<PullRequestState>("prissues.txt")
-                .remoteRepository(repository, "history", "Duke", "duke@openjdk.java.net", "Updated prissues");
-    }
-
     private static class TestRepositoryListener implements Notifier, RepositoryListener {
         private final String name;
         private final boolean idempotent;
         private int updateCount = 0;
         private boolean shouldFail = false;
diff a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/issue/IssueNotifierTests.java b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/issue/IssueNotifierTests.java
--- a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/issue/IssueNotifierTests.java
+++ b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/issue/IssueNotifierTests.java
@@ -31,11 +31,11 @@
 import java.net.URI;
 import java.util.*;
 import java.util.regex.Pattern;
 
 import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.openjdk.skara.bots.notify.UpdaterTests.*;
+import static org.openjdk.skara.bots.notify.TestUtils.*;
 
 public class IssueNotifierTests {
     @Test
     void testIssueIdempotence(TestInfo testInfo) throws IOException {
         try (var credentials = new HostCredentials(testInfo);
diff a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/json/JsonNotifierTests.java b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/json/JsonNotifierTests.java
--- a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/json/JsonNotifierTests.java
+++ b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/json/JsonNotifierTests.java
@@ -33,11 +33,11 @@
 import java.util.List;
 import java.util.regex.Pattern;
 import java.util.stream.Collectors;
 
 import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.openjdk.skara.bots.notify.UpdaterTests.*;
+import static org.openjdk.skara.bots.notify.TestUtils.*;
 
 public class JsonNotifierTests {
     private List<Path> findJsonFiles(Path folder, String partialName) throws IOException {
         return Files.walk(folder)
                     .filter(path -> path.toString().endsWith(".json"))
@@ -102,11 +102,11 @@
             credentials.commitLock(localRepo);
             var masterHash = localRepo.resolve("master").orElseThrow();
             localRepo.tag(masterHash, "jdk-12+1", "Added tag 1", "Duke", "duke@openjdk.java.net");
             localRepo.pushAll(repo.url());
 
-            var tagStorage = UpdaterTests.createTagStorage(repo);
+            var tagStorage = createTagStorage(repo);
             var branchStorage = createBranchStorage(repo);
             var prStateStorage = createPullRequestStateStorage(repo);
             var jsonFolder = tempFolder.path().resolve("json");
             Files.createDirectory(jsonFolder);
             var storageFolder =tempFolder.path().resolve("storage");
diff a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/mailinglist/MailingListNotifierTests.java b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/mailinglist/MailingListNotifierTests.java
--- a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/mailinglist/MailingListNotifierTests.java
+++ b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/mailinglist/MailingListNotifierTests.java
@@ -32,11 +32,11 @@
 import java.time.Duration;
 import java.util.*;
 import java.util.regex.Pattern;
 
 import static org.junit.jupiter.api.Assertions.*;
-import static org.openjdk.skara.bots.notify.UpdaterTests.*;
+import static org.openjdk.skara.bots.notify.TestUtils.*;
 
 public class MailingListNotifierTests {
     @Test
     void testMailingList(TestInfo testInfo) throws IOException {
         try (var listServer = new TestMailmanServer();
