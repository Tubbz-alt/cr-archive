diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/IssueCommand.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/IssueCommand.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/IssueCommand.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/IssueCommand.java
@@ -64,10 +64,11 @@
         reply.print("The project prefix (`JDK-` in the above examples) is optional. ");
         reply.println("Separate multiple issue IDs using either spaces or commas.");
     }
 
     private static final Pattern shortIssuePattern = Pattern.compile("((?:[A-Za-z]+-)?[0-9]+)(?:,| |$)");
+    private final static Pattern subCommandPattern = Pattern.compile("^(add|remove|delete|(?:[A-Za-z]+-)?[0-9]+:?)[ ,]?.*$");
 
     private List<Issue> parseIssueList(String allowedPrefix, String issueList) throws InvalidIssue {
         List<Issue> ret;
         // Is this a single fully described issue?
         var singleIssue = Issue.fromString(issueList);
@@ -90,12 +91,10 @@
         return ret.stream()
                   .map(issue -> issue.id().contains("-") ? new Issue(issue.id().split("-", 2)[1], issue.description()) : issue)
                   .collect(Collectors.toList());
     }
 
-    private final static Pattern subCommandPattern = Pattern.compile("^(add|remove|delete|(?:[A-Za-z]+-)?[0-9]+:?)[ ,]+.*$");
-
     IssueCommand(String name) {
         this.name = name;
     }
 
     IssueCommand() {
