diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java
@@ -299,11 +299,11 @@
     }
 
     private String getAdditionalErrorsList(List<String> additionalErrors) {
         return additionalErrors.stream()
                                .sorted()
-                               .map(err -> " * " + err)
+                               .map(err -> "&nbsp;⚠️ " + err)
                                .collect(Collectors.joining("\n"));
     }
 
     private Optional<String> getReviewersList(List<Review> reviews) {
         var reviewers = reviews.stream()
@@ -349,11 +349,15 @@
         progressBody.append("---------\n");
         progressBody.append("### Progress\n");
         progressBody.append(getChecksList(visitor));
 
         if (!additionalErrors.isEmpty()) {
-            progressBody.append("\n\n### Problems\n");
+            progressBody.append("\n\n### Error");
+            if (additionalErrors.size() > 1) {
+                progressBody.append("s");
+            }
+            progressBody.append("\n");
             progressBody.append(getAdditionalErrorsList(additionalErrors));
         }
 
         var issue = Issue.fromString(pr.title());
         var issueProject = workItem.bot.issueProject();
diff a/bots/pr/src/test/java/org/openjdk/skara/bots/pr/CheckTests.java b/bots/pr/src/test/java/org/openjdk/skara/bots/pr/CheckTests.java
--- a/bots/pr/src/test/java/org/openjdk/skara/bots/pr/CheckTests.java
+++ b/bots/pr/src/test/java/org/openjdk/skara/bots/pr/CheckTests.java
@@ -699,11 +699,11 @@
             assertEquals(CheckStatus.FAILURE, check.status());
             assertTrue(check.summary().orElseThrow().contains("The pull request body must not be empty."));
 
             // Additional errors should be displayed in the body
             var updatedPr = author.pullRequest(pr.id());
-            assertTrue(updatedPr.body().contains("## Problems"));
+            assertTrue(updatedPr.body().contains("## Error"));
             assertTrue(updatedPr.body().contains("The pull request body must not be empty."));
 
             // The PR should not yet be ready for review
             assertFalse(pr.labels().contains("rfr"));
             assertFalse(pr.labels().contains("ready"));
@@ -716,11 +716,11 @@
             assertTrue(pr.labels().contains("rfr"));
             assertFalse(pr.labels().contains("ready"));
 
             // The additional errors should be gone
             updatedPr = author.pullRequest(pr.id());
-            assertFalse(updatedPr.body().contains("## Problems"));
+            assertFalse(updatedPr.body().contains("## Error"));
             assertFalse(updatedPr.body().contains("The pull request body must not be empty."));
         }
     }
 
     @Test
