diff a/issuetracker/src/main/java/org/openjdk/skara/issuetracker/jira/JiraVault.java b/issuetracker/src/main/java/org/openjdk/skara/issuetracker/jira/JiraVault.java
--- a/issuetracker/src/main/java/org/openjdk/skara/issuetracker/jira/JiraVault.java
+++ b/issuetracker/src/main/java/org/openjdk/skara/issuetracker/jira/JiraVault.java
@@ -23,23 +23,37 @@
 package org.openjdk.skara.issuetracker.jira;
 
 import org.openjdk.skara.network.RestRequest;
 
 import java.net.URI;
+import java.nio.charset.StandardCharsets;
+import java.security.*;
 import java.time.*;
-import java.util.Arrays;
+import java.util.*;
 import java.util.logging.Logger;
 
 class JiraVault {
     private final RestRequest request;
+    private final String authId;
     private final Logger log = Logger.getLogger("org.openjdk.skara.issuetracker.jira");
 
     private String cookie;
     private Instant expires;
 
+    private String checksum(String body) {
+        try {
+            var digest = MessageDigest.getInstance("SHA-256");
+            digest.update(body.getBytes(StandardCharsets.UTF_8));
+            return Base64.getUrlEncoder().encodeToString(digest.digest());
+        } catch (NoSuchAlgorithmException e) {
+            throw new RuntimeException("Cannot find SHA-256");
+        }
+    }
+
     JiraVault(URI vaultUri, String vaultToken) {
-        request = new RestRequest(vaultUri, () -> Arrays.asList(
+        authId = checksum(vaultToken);
+        request = new RestRequest(vaultUri, authId, () -> Arrays.asList(
                 "X-Vault-Token", vaultToken
         ));
     }
 
     String getCookie() {
@@ -49,6 +63,10 @@
             expires = Instant.now().plus(Duration.ofSeconds(result.get("lease_duration").asInt()).dividedBy(2));
             log.info("Renewed Jira token (" + cookie + ") - expires " + expires);
         }
         return cookie;
     }
+
+    String authId() {
+        return authId;
+    }
 }
