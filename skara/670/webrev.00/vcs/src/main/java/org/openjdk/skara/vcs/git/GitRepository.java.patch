diff a/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java b/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
@@ -1397,15 +1397,23 @@
         var format = "%(refname:short)%0a%(*objectname)%0a%(taggername) %(taggeremail)%0a%(taggerdate:iso-strict)%0a%(contents)";
         try (var p = capture("git", "for-each-ref", "--format", format, ref)) {
             var lines = await(p).stdout();
             if (lines.size() >= 4) {
                 var name = lines.get(0);
-                var target = new Hash(lines.get(1));
-                var author = Author.fromString(lines.get(2));
+                var targetLine = lines.get(1);
+                var authorLine = lines.get(2);
+                var dateLine = lines.get(3);
 
+                if (targetLine.isEmpty() && authorLine.equals(" ") && dateLine.isEmpty()) {
+                    // Must be a lightweight tag, no metadata present
+                    return Optional.empty();
+                }
+
+                var target = new Hash(targetLine);
+                var author = Author.fromString(authorLine);
                 var formatter = DateTimeFormatter.ISO_OFFSET_DATE_TIME;
-                var date = ZonedDateTime.parse(lines.get(3), formatter);
+                var date = ZonedDateTime.parse(dateLine, formatter);
                 var message = String.join("\n", lines.subList(4, lines.size()));
 
                 return Optional.of(new Tag.Annotated(name, target, author, date, message));
             }
             return Optional.empty();
