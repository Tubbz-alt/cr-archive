diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java
@@ -158,11 +158,19 @@
         }
 
         return ret;
     }
 
-    private String quoteSelectedParents(List<ArchiveItem> parentsToQuote) {
+    // Parents to quote are provided with the newest item first. If the item already has quoted
+    // a parent, use that as the quote and return an empty string.
+    private String quoteSelectedParents(List<ArchiveItem> parentsToQuote, ArchiveItem first) {
+        if (parentsToQuote.isEmpty()) {
+            return "";
+        }
+        if (ArchiveItem.containsQuote(first.body(), parentsToQuote.get(0).body())) {
+            return "";
+        }
         Collections.reverse(parentsToQuote);
         var ret = "";
         for (var parent : parentsToQuote) {
             if (!ret.isBlank()) {
                 ret = quoteBody(ret) + "\n>\n" + quoteBody(parent.body());
@@ -231,11 +239,11 @@
             for (var item : itemList) {
                 if (body.length() > 0) {
                     body.append("\n\n");
                 }
                 var newQuotes = parentsToQuote(item, 2, quotedParents);
-                var quote = quoteSelectedParents(newQuotes);
+                var quote = quoteSelectedParents(newQuotes, item);
                 if (!quote.isBlank()) {
                     body.append(quote);
                     body.append("\n\n");
                 }
                 quotedParents.addAll(newQuotes);
