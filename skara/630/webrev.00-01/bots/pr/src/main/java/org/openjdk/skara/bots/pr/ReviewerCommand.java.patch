diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/ReviewerCommand.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/ReviewerCommand.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/ReviewerCommand.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/ReviewerCommand.java
@@ -21,18 +21,17 @@
  * questions.
  */
 package org.openjdk.skara.bots.pr;
 
 import org.openjdk.skara.census.Contributor;
-import org.openjdk.skara.forge.PullRequest;
+import org.openjdk.skara.forge.*;
 import org.openjdk.skara.issuetracker.Comment;
 
 import java.io.PrintWriter;
 import java.nio.file.Path;
 import java.util.*;
 import java.util.regex.Pattern;
-import java.util.stream.Collectors;
 
 public class ReviewerCommand implements CommandHandler {
     private static final Pattern commandPattern = Pattern.compile("^(add|remove)\\s+(.+)$");
 
     private void showHelp(PullRequest pr, PrintWriter reply) {
@@ -89,16 +88,11 @@
             showHelp(pr, reply);;
             return;
         }
 
         var namespace = censusInstance.namespace();
-        var authenticatedReviewers = pr.reviews().stream()
-                                       .map(review -> namespace.get(review.reviewer().id()))
-                                       .map(Contributor::username)
-                                       .filter(Objects::nonNull)
-                                       .collect(Collectors.toSet());
-
+        var authenticatedReviewers = PullRequestUtils.reviewerNames(pr.reviews(), namespace);
         switch (matcher.group(1)) {
             case "add": {
                 if (!authenticatedReviewers.contains(reviewer.get().username())) {
                     reply.println(Reviewers.addReviewerMarker(reviewer.get()));
                     reply.println("Reviewer `" + reviewer.get().username() + "` successfully added.");
