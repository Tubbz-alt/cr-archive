diff a/args/src/main/java/org/openjdk/skara/args/Argument.java b/args/src/main/java/org/openjdk/skara/args/Argument.java
--- a/args/src/main/java/org/openjdk/skara/args/Argument.java
+++ b/args/src/main/java/org/openjdk/skara/args/Argument.java
@@ -63,11 +63,11 @@
     public boolean  asBoolean() {
         return via(Boolean::parseBoolean);
     }
 
     public String asString() {
-        return via(Function.identity());
+        return value == null ? null : via(Function.identity());
     }
 
     public Argument or(int value) {
         return isPresent() ? this : new Argument(Integer.toString(value));
     }
diff a/args/src/main/java/org/openjdk/skara/args/ArgumentParser.java b/args/src/main/java/org/openjdk/skara/args/ArgumentParser.java
--- a/args/src/main/java/org/openjdk/skara/args/ArgumentParser.java
+++ b/args/src/main/java/org/openjdk/skara/args/ArgumentParser.java
@@ -159,11 +159,11 @@
 
             if (arg.startsWith("--")) {
                 if (arg.contains("=")) {
                     var parts = arg.split("=");
                     var name = parts[0].substring(2); // remove leading '--'
-                    var value = parts[1];
+                    var value = parts.length == 2 ? parts[1] : null;
                     var flag = lookupFullname(name);
                     values.add(new FlagValue(flag, value));
                     seen.add(flag);
                 } else {
                     var name = arg.substring(2);
diff a/cli/src/main/java/org/openjdk/skara/cli/pr/GitPrSet.java b/cli/src/main/java/org/openjdk/skara/cli/pr/GitPrSet.java
--- a/cli/src/main/java/org/openjdk/skara/cli/pr/GitPrSet.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/pr/GitPrSet.java
@@ -113,11 +113,13 @@
         var host = getForge(uri, repo, arguments);
         var id = pullRequestIdArgument(repo, arguments);
         var pr = getPullRequest(uri, repo, host, id);
 
         var assigneesOption = getOption("assignees", "set", arguments);
-        if (assigneesOption != null) {
+        if (assigneesOption == null) {
+            pr.setAssignees(List.of());
+        } else {
             var usernames = Arrays.asList(assigneesOption.split(","));
             var assignees = usernames.stream()
                 .map(u -> host.user(u))
                 .filter(Optional::isPresent)
                 .map(Optional::get)
