diff a/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabHost.java b/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabHost.java
--- a/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabHost.java
+++ b/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabHost.java
@@ -119,15 +119,19 @@
         } catch (Throwable t) {
             return Optional.empty();
         }
     }
 
-    private HostUser parseUserDetails(JSONObject details) {
-        var id = details.get("id").asInt();
-        var username = details.get("username").asString();
-        var name = details.get("name").asString();
-        var email = details.get("email").asString();
+    HostUser parseAuthorField(JSONValue json) {
+        return parseAuthorObject(json.get("author").asObject());
+    }
+
+    HostUser parseAuthorObject(JSONObject o) {
+        var id = o.get("id").asInt();
+        var username = o.get("username").asString();
+        var name = o.get("name").asString();
+        var email = o.get("email").asString();
         return new HostUser(id, username, name, email);
     }
 
     @Override
     public Optional<HostUser> user(String username) {
@@ -143,17 +147,17 @@
         var users = details.asArray();
         if (users.size() != 1) {
             return Optional.empty();
         }
 
-        return Optional.of(parseUserDetails(users.get(0).asObject()));
+        return Optional.of(parseAuthorObject(users.get(0).asObject()));
     }
 
     @Override
     public HostUser currentUser() {
         var details = request.get("user").execute().asObject();
-        return parseUserDetails(details);
+        return parseAuthorObject(details);
     }
 
     @Override
     public boolean supportsReviewBody() {
         // GitLab CE does not support this
