diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/NotifyBot.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/NotifyBot.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/NotifyBot.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/NotifyBot.java
@@ -41,42 +41,38 @@
     private final StorageBuilder<UpdatedBranch> branchStorageBuilder;
     private final StorageBuilder<PullRequestState> prStateStorageBuilder;
     private final List<RepositoryListener> repoListeners = new ArrayList<>();
     private final List<PullRequestListener> prListeners = new ArrayList<>();
     private final PullRequestUpdateCache updateCache;
-    private final Set<String> readyLabels;
     private final Map<String, Pattern> readyComments;
     private final String integratorId;
 
     private ZonedDateTime lastFullUpdate;
 
     NotifyBot(HostedRepository repository, Path storagePath, Pattern branches, StorageBuilder<UpdatedTag> tagStorageBuilder,
               StorageBuilder<UpdatedBranch> branchStorageBuilder, StorageBuilder<PullRequestState> prStateStorageBuilder,
-              Set<String> readyLabels, Map<String, Pattern> readyComments, String integratorId) {
+              Map<String, Pattern> readyComments, String integratorId) {
         this.repository = repository;
         this.storagePath = storagePath;
         this.branches = branches;
         this.tagStorageBuilder = tagStorageBuilder;
         this.branchStorageBuilder = branchStorageBuilder;
         this.prStateStorageBuilder = prStateStorageBuilder;
         this.updateCache = new PullRequestUpdateCache();
-        this.readyLabels = readyLabels;
         this.readyComments = readyComments;
         this.integratorId = integratorId;
     }
 
     public static NotifyBotBuilder newBuilder() {
         return new NotifyBotBuilder();
     }
 
-    private boolean isReady(PullRequest pr) {
+    private boolean isOfInterest(PullRequest pr) {
         var labels = new HashSet<>(pr.labels());
-        for (var readyLabel : readyLabels) {
-            if (!labels.contains(readyLabel)) {
-                log.fine("PR is not yet ready - missing label '" + readyLabel + "'");
-                return false;
-            }
+        if (!(labels.contains("rfr") || labels.contains("integrated"))) {
+            log.fine("PR is not yet ready - needs either 'rfr' or 'integrated' label");
+            return false;
         }
 
         var comments = pr.comments();
         for (var readyComment : readyComments.entrySet()) {
             var commentFound = false;
@@ -129,11 +125,11 @@
         }
 
         // Pull request events
         for (var pr : prs) {
             if (updateCache.needsUpdate(pr)) {
-                if (!isReady(pr)) {
+                if (!isOfInterest(pr)) {
                     continue;
                 }
                 ret.add(new PullRequestWorkItem(pr,
                                                 prStateStorageBuilder,
                                                 prListeners,
