diff a/webrev/src/main/java/org/openjdk/skara/webrev/Webrev.java b/webrev/src/main/java/org/openjdk/skara/webrev/Webrev.java
--- a/webrev/src/main/java/org/openjdk/skara/webrev/Webrev.java
+++ b/webrev/src/main/java/org/openjdk/skara/webrev/Webrev.java
@@ -27,10 +27,12 @@
 import java.io.*;
 import java.net.URISyntaxException;
 import java.nio.channels.FileChannel;
 import java.nio.file.*;
 import java.util.*;
+import java.util.logging.Logger;
+import java.util.stream.Collectors;
 import java.util.function.Function;
 
 import static java.nio.file.StandardOpenOption.*;
 
 public class Webrev {
@@ -40,10 +42,12 @@
     private static final String ICON = "nanoduke.ico";
     private static final String CSS = "style.css";
 
     private static final String INDEX = "index.html";
 
+    private static final Logger log = Logger.getLogger("org.openjdk.skara.webrev");
+
     public static final Set<String> STATIC_FILES =
         Set.of(ANCNAV_HTML, ANCNAV_JS, ICON, CSS, INDEX);
 
     public static class RequiredBuilder {
         private final ReadOnlyRepository repository;
@@ -196,10 +200,15 @@
                 }
                 navigations.addLast(new Navigation(prev, next));
             }
 
             var headHash = head == null ? repository.head() : head;
+            var filesDesc = files.isEmpty() ? "" :
+                            " for files " +
+                            files.stream().map(Path::toString).collect(Collectors.joining(", "));
+            log.fine("Generating webrev from " + tailEnd + " to " + headHash + filesDesc);
+
             var fileViews = new ArrayList<FileView>();
             var formatter = new MetadataFormatter(issueLinker);
             for (var patch : patches) {
                 var status = patch.status();
                 var path = status.isDeleted() ?
