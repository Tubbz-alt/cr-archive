diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/LabelerWorkItem.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/LabelerWorkItem.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/LabelerWorkItem.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/LabelerWorkItem.java
@@ -40,24 +40,12 @@
     public String toString() {
         return "LabelerWorkItem@" + pr.repository().name() + "#" + pr.id();
     }
 
     private Set<String> getLabels(Repository localRepo) throws IOException {
-        var labels = new HashSet<String>();
         var files = PullRequestUtils.changedFiles(pr, localRepo);
-        for (var file : files) {
-            for (var label : bot.labelPatterns().entrySet()) {
-                for (var pattern : label.getValue()) {
-                    var matcher = pattern.matcher(file.toString());
-                    if (matcher.find()) {
-                        labels.add(label.getKey());
-                        break;
-                    }
-                }
-            }
-        }
-        return labels;
+        return bot.labelConfiguration().fromChanges(files);
     }
 
     @Override
     public void run(Path scratchPath) {
         if (bot.currentLabels().containsKey(pr.headHash())) {
@@ -68,11 +56,11 @@
             var seedPath = bot.seedStorage().orElse(scratchPath.resolve("seeds"));
             var hostedRepositoryPool = new HostedRepositoryPool(seedPath);
             var localRepo = PullRequestUtils.materialize(hostedRepositoryPool, pr, path);
             var newLabels = getLabels(localRepo);
             var currentLabels = pr.labels().stream()
-                                  .filter(key -> bot.labelPatterns().containsKey(key))
+                                  .filter(key -> bot.labelConfiguration().allowed().contains(key))
                                   .collect(Collectors.toSet());
 
             // Add all labels not already set
             newLabels.stream()
                      .filter(label -> !currentLabels.contains(label))
