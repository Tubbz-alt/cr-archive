diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/RepositoryWorkItem.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/RepositoryWorkItem.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/RepositoryWorkItem.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/RepositoryWorkItem.java
@@ -82,16 +82,16 @@
         } catch (IOException e) {
             throw new UncheckedIOException(e);
         }
         var branch = new Branch(ref.name());
         var parent = new Branch(bestParent.getKey().name());
-        listener.handleNewBranch(repository, localRepo, bestParentCommits, parent, branch);
+        listener.onNewBranch(repository, localRepo, bestParentCommits, parent, branch);
     }
 
     private void handleUpdatedRef(Repository localRepo, Reference ref, List<Commit> commits, RepositoryListener listener) throws NonRetriableException {
         var branch = new Branch(ref.name());
-        listener.handleCommits(repository, localRepo, commits, branch);
+        listener.onNewCommits(repository, localRepo, commits, branch);
     }
 
     private List<Throwable> handleRef(Repository localRepo, UpdateHistory history, Reference ref, Collection<Reference> allRefs) throws IOException {
         var errors = new ArrayList<Throwable>();
         var branch = new Branch(ref.name());
@@ -206,11 +206,11 @@
             Collections.reverse(commits);
             var annotation = localRepo.annotate(tag.tag());
 
             history.addTags(List.of(tag.tag()), listener.name());
             try {
-                listener.handleOpenJDKTagCommits(repository, localRepo, commits, tag, annotation.orElse(null));
+                listener.onNewOpenJDKTagCommits(repository, localRepo, commits, tag, annotation.orElse(null));
             } catch (NonRetriableException e) {
                 errors.add(e.cause());
             } catch (RuntimeException e) {
                 errors.add(e);
                 history.retryTagUpdate(tag.tag(), listener.name());
@@ -228,11 +228,11 @@
 
             var annotation = localRepo.annotate(tag);
 
             history.addTags(List.of(tag), listener.name());
             try {
-                listener.handleTagCommit(repository, localRepo, commit.get(), tag, annotation.orElse(null));
+                listener.onNewTagCommit(repository, localRepo, commit.get(), tag, annotation.orElse(null));
             } catch (NonRetriableException e) {
                 errors.add(e.cause());
             } catch (RuntimeException e) {
                 errors.add(e);
                 history.retryTagUpdate(tag, listener.name());
