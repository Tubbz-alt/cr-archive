diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/mailinglist/MailingListNotifier.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/mailinglist/MailingListNotifier.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/mailinglist/MailingListNotifier.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/mailinglist/MailingListNotifier.java
@@ -217,24 +217,24 @@
     public void attachTo(Emitter e) {
         e.registerRepositoryListener(this);
     }
 
     @Override
-    public void handleCommits(HostedRepository repository, Repository localRepository, List<Commit> commits, Branch branch) throws NonRetriableException {
+    public void onNewCommits(HostedRepository repository, Repository localRepository, List<Commit> commits, Branch branch) throws NonRetriableException {
         if (mode == Mode.PR) {
             commits = filterPrCommits(repository, localRepository, commits, branch);
         }
         sendCombinedCommits(repository, commits, branch);
     }
 
     @Override
-    public void handleOpenJDKTagCommits(HostedRepository repository, Repository localRepository, List<Commit> commits, OpenJDKTag tag, Tag.Annotated annotation) throws NonRetriableException {
+    public void onNewOpenJDKTagCommits(HostedRepository repository, Repository localRepository, List<Commit> commits, OpenJDKTag tag, Tag.Annotated annotation) throws NonRetriableException {
         if (!reportNewTags) {
             return;
         }
         if (!reportNewBuilds) {
-            handleTagCommit(repository, localRepository, commits.get(commits.size() - 1), tag.tag(), annotation);
+            onNewTagCommit(repository, localRepository, commits.get(commits.size() - 1), tag.tag(), annotation);
             return;
         }
         var writer = new StringWriter();
         var printer = new PrintWriter(writer);
 
@@ -273,11 +273,11 @@
             throw new NonRetriableException(e);
         }
     }
 
     @Override
-    public void handleTagCommit(HostedRepository repository, Repository localRepository, Commit commit, Tag tag, Tag.Annotated annotation) throws NonRetriableException {
+    public void onNewTagCommit(HostedRepository repository, Repository localRepository, Commit commit, Tag tag, Tag.Annotated annotation) throws NonRetriableException {
         if (!reportNewTags) {
             return;
         }
         var writer = new StringWriter();
         var printer = new PrintWriter(writer);
@@ -325,11 +325,11 @@
 
         return subject.toString();
     }
 
     @Override
-    public void handleNewBranch(HostedRepository repository, Repository localRepository, List<Commit> commits, Branch parent, Branch branch) throws NonRetriableException {
+    public void onNewBranch(HostedRepository repository, Repository localRepository, List<Commit> commits, Branch parent, Branch branch) throws NonRetriableException {
         if (!reportNewBranches) {
             return;
         }
         var writer = new StringWriter();
         var printer = new PrintWriter(writer);
