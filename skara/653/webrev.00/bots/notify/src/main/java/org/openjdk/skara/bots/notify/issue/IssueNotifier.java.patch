diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/issue/IssueNotifier.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/issue/IssueNotifier.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/issue/IssueNotifier.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/issue/IssueNotifier.java
@@ -71,11 +71,11 @@
     public void attachTo(Emitter e) {
         e.registerPullRequestListener(this);
     }
 
     @Override
-    public void handleIntegratedPullRequest(PullRequest pr, Hash hash)  {
+    public void onIntegratedPullRequest(PullRequest pr, Hash hash)  {
         var repository = pr.repository();
         var commit = repository.commitMetadata(hash).orElseThrow(() ->
                 new IllegalStateException("Integrated commit " + hash +
                                           " not present in repository " + repository.webUrl())
         );
@@ -113,11 +113,11 @@
             }
         }
     }
 
     @Override
-    public void handleNewIssue(PullRequest pr, org.openjdk.skara.vcs.openjdk.Issue issue) {
+    public void onNewIssue(PullRequest pr, org.openjdk.skara.vcs.openjdk.Issue issue) {
         var realIssue = issueProject.issue(issue.shortId());
         if (realIssue.isEmpty()) {
             log.warning("Pull request " + pr + " added unknown issue: " + issue.id());
             return;
         }
@@ -133,11 +133,11 @@
             realIssue.get().addLink(linkBuilder.build());
         }
     }
 
     @Override
-    public void handleRemovedIssue(PullRequest pr, org.openjdk.skara.vcs.openjdk.Issue issue) {
+    public void onRemovedIssue(PullRequest pr, org.openjdk.skara.vcs.openjdk.Issue issue) {
         var realIssue = issueProject.issue(issue.shortId());
         if (realIssue.isEmpty()) {
             log.warning("Pull request " + pr + " removed unknown issue: " + issue.id());
             return;
         }
