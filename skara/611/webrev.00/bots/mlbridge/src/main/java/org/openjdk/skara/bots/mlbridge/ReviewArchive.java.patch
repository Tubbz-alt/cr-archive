diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java
@@ -68,16 +68,13 @@
                               .map(m -> m.group(1))
                               .map(Hash::new)
                               .findAny();
     }
 
-    private boolean hasLegacyIntegrationNotice(Hash hash) {
-        var legacyIntegrationPattern = Pattern.compile("Changeset\\\\?: " + hash.abbreviate());
-        return ignoredComments.stream()
-                              .map(Comment::body)
-                              .map(legacyIntegrationPattern::matcher)
-                              .anyMatch(Matcher::find);
+    private boolean hasLegacyIntegrationNotice(Repository localRepo, Commit commit) {
+        // Commits before this date are assumed to have been serviced by the old PR notifier
+        return commit.date().isBefore(ZonedDateTime.of(2020, 4, 28, 14, 0, 0, 0, ZoneId.of("UTC")));
     }
 
     private List<ArchiveItem> generateArchiveItems(List<Email> sentEmails, Repository localRepo, URI issueTracker, String issuePrefix, HostUserToEmailAuthor hostUserToEmailAuthor, HostUserToUserName hostUserToUserName, HostUserToRole hostUserToRole, WebrevStorage.WebrevGenerator webrevGenerator, WebrevNotification webrevNotification, String subjectPrefix) throws IOException {
         var generated = new ArrayList<ArchiveItem>();
         Hash lastBase = null;
@@ -151,12 +148,12 @@
         if (pr.state() != Issue.State.OPEN) {
             var parent = generated.get(0);
             if (pr.labels().contains("integrated")) {
                 var hash = findIntegratedHash();
                 if (hash.isPresent()) {
-                    if (!hasLegacyIntegrationNotice(hash.get())) {
-                        var commit = localRepo.lookup(hash.get());
+                    var commit = localRepo.lookup(hash.get());
+                    if (!hasLegacyIntegrationNotice(localRepo, commit.orElseThrow())) {
                         var reply = ArchiveItem.integratedNotice(pr, localRepo, commit.orElseThrow(), hostUserToEmailAuthor, parent, subjectPrefix, threadPrefix);
                         generated.add(reply);
                     }
                 } else {
                     throw new RuntimeException("PR " + pr.webUrl() + " has integrated label but no integration comment");
