diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java
@@ -155,11 +155,11 @@
     private void updateCheckBuilder(CheckBuilder checkBuilder, PullRequestCheckIssueVisitor visitor, List<String> additionalErrors) {
         if (visitor.isReadyForReview() && additionalErrors.isEmpty()) {
             checkBuilder.complete(true);
         } else {
             checkBuilder.title("Required");
-            var summary = Stream.concat(visitor.getMessages().stream(), additionalErrors.stream())
+            var summary = Stream.concat(visitor.messages().stream(), additionalErrors.stream())
                                 .sorted()
                                 .map(m -> "- " + m)
                                 .collect(Collectors.joining("\n"));
             checkBuilder.summary(summary);
             for (var annotation : visitor.getAnnotations()) {
@@ -272,17 +272,20 @@
         var progressBody = new StringBuilder();
         progressBody.append("---------\n");
         progressBody.append("### Progress\n");
         progressBody.append(getChecksList(visitor));
 
-        if (!additionalErrors.isEmpty()) {
+        var allAdditionalErrors = Stream.concat(visitor.hiddenMessages().stream(), additionalErrors.stream())
+                                        .sorted()
+                                        .collect(Collectors.toList());
+        if (!allAdditionalErrors.isEmpty()) {
             progressBody.append("\n\n### Error");
-            if (additionalErrors.size() > 1) {
+            if (allAdditionalErrors.size() > 1) {
                 progressBody.append("s");
             }
             progressBody.append("\n");
-            progressBody.append(getAdditionalErrorsList(additionalErrors));
+            progressBody.append(getAdditionalErrorsList(allAdditionalErrors));
         }
 
         var issue = Issue.fromString(pr.title());
         var issueProject = workItem.bot.issueProject();
         if (issueProject != null && issue.isPresent()) {
@@ -630,11 +633,11 @@
                 updateReviewedMessages(comments, allReviews);
             }
 
             var commit = localRepo.lookup(localHash).orElseThrow();
             var commitMessage = String.join("\n", commit.message());
-            var readyForIntegration = visitor.getMessages().isEmpty() && additionalErrors.isEmpty();
+            var readyForIntegration = visitor.messages().isEmpty() && additionalErrors.isEmpty();
             updateMergeReadyComment(readyForIntegration, commitMessage, comments, activeReviews, rebasePossible);
             if (readyForIntegration && rebasePossible) {
                 newLabels.add("ready");
             } else {
                 newLabels.remove("ready");
