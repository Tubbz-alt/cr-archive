diff a/jcheck/src/main/java/org/openjdk/skara/jcheck/MessageCheck.java b/jcheck/src/main/java/org/openjdk/skara/jcheck/MessageCheck.java
--- a/jcheck/src/main/java/org/openjdk/skara/jcheck/MessageCheck.java
+++ b/jcheck/src/main/java/org/openjdk/skara/jcheck/MessageCheck.java
@@ -23,10 +23,11 @@
 package org.openjdk.skara.jcheck;
 
 import org.openjdk.skara.vcs.Commit;
 import org.openjdk.skara.vcs.openjdk.CommitMessage;
 
+import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.logging.Logger;
 
 public class MessageCheck extends CommitCheck {
     private final Logger log = Logger.getLogger("org.openjdk.skara.jcheck.message");
@@ -36,21 +37,35 @@
         this.utils = utils;
     }
 
     @Override
     Iterator<Issue> check(Commit commit, CommitMessage message, JCheckConfiguration conf) {
+        var issues = new ArrayList<Issue>();
         if (commit.isMerge() || utils.addsHgTag(commit)) {
-            return iterator();
+            return issues.iterator();
         }
 
+        var metadata = CommitIssue.metadata(commit, message, conf, this);
         if (commit.message().isEmpty() || !message.additional().isEmpty()) {
-            var metadata = CommitIssue.metadata(commit, message, conf, this);
             log.finer("issue: additional lines found in commit message for " + commit.hash().hex());
-            return iterator(new MessageIssue(metadata));
+            issues.add(new MessageIssue(metadata));
         }
 
-        return iterator();
+        for (var i = 0; i < commit.message().size(); i++) {
+            var line = commit.message().get(i);
+            if (line.contains("\t")) {
+                issues.add(MessageWhitespaceIssue.tab(i+1, metadata));
+            }
+            if (line.contains("\r")) {
+                issues.add(MessageWhitespaceIssue.cr(i+1, metadata));
+            }
+            if (line.endsWith(" ")) {
+                issues.add(MessageWhitespaceIssue.trailing(i+1, metadata));
+            }
+        }
+
+        return issues.iterator();
     }
 
     @Override
     public String name() {
         return "message";
