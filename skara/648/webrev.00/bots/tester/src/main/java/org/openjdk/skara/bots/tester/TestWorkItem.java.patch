diff a/bots/tester/src/main/java/org/openjdk/skara/bots/tester/TestWorkItem.java b/bots/tester/src/main/java/org/openjdk/skara/bots/tester/TestWorkItem.java
--- a/bots/tester/src/main/java/org/openjdk/skara/bots/tester/TestWorkItem.java
+++ b/bots/tester/src/main/java/org/openjdk/skara/bots/tester/TestWorkItem.java
@@ -20,20 +20,19 @@
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */
 package org.openjdk.skara.bots.tester;
 
-import org.openjdk.skara.bot.*;
+import org.openjdk.skara.bot.WorkItem;
 import org.openjdk.skara.ci.*;
 import org.openjdk.skara.forge.*;
 import org.openjdk.skara.vcs.*;
 
 import java.io.*;
 import java.net.*;
 import java.nio.charset.StandardCharsets;
 import java.nio.file.*;
-import java.time.ZonedDateTime;
 import java.util.*;
 import java.util.logging.Logger;
 import java.util.stream.*;
 
 public class TestWorkItem implements WorkItem {
@@ -246,16 +245,16 @@
         }
         return sb.toString();
     }
 
     @Override
-    public void run(Path scratchPath) {
+    public Collection<WorkItem> run(Path scratchPath) {
         var state = State.from(pr, approversGroupId);
         var stage = state.stage();
         if (stage == Stage.NA || stage == Stage.ERROR || stage == Stage.PENDING || stage == Stage.FINISHED) {
             // nothing to do
-            return;
+            return List.of();
         }
 
         if (stage == Stage.STARTED) {
             if (state.started() != null) {
                 var lines = state.started().body().split("\n");
@@ -372,11 +371,11 @@
                     var lines = List.of(
                        "<!-- TEST ERROR -->",
                        "@" + state.requested().author().userName() + " the test " + wording + String.join(",", nonExistingJobs) + " does not exist"
                     );
                     pr.addComment(String.join("\n", lines));
-                    return;
+                    return List.of();
                 }
 
                 jobs = trimmedJobs;
             }
             var jobId = jobId(state);
@@ -432,10 +431,11 @@
             );
             pr.addComment(String.join("\n", lines));
         } else {
             throw new RuntimeException("Unexpected state " + state);
         }
+        return List.of();
     }
 
     @Override
     public String toString() {
         return "TestWorkItem@" + pr.repository().name() + "#" + pr.id();
