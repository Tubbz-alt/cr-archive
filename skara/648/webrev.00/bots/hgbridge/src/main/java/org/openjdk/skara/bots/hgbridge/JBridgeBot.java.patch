diff a/bots/hgbridge/src/main/java/org/openjdk/skara/bots/hgbridge/JBridgeBot.java b/bots/hgbridge/src/main/java/org/openjdk/skara/bots/hgbridge/JBridgeBot.java
--- a/bots/hgbridge/src/main/java/org/openjdk/skara/bots/hgbridge/JBridgeBot.java
+++ b/bots/hgbridge/src/main/java/org/openjdk/skara/bots/hgbridge/JBridgeBot.java
@@ -27,11 +27,11 @@
 
 import java.io.*;
 import java.net.URLEncoder;
 import java.nio.charset.StandardCharsets;
 import java.nio.file.*;
-import java.util.List;
+import java.util.*;
 import java.util.logging.Logger;
 
 public class JBridgeBot implements Bot, WorkItem {
     private final ExporterConfig exporterConfig;
     private final Path storage;
@@ -90,11 +90,11 @@
         var hash = marksRepo.commit("Updated marks", exporterConfig.marksAuthorName(), exporterConfig.marksAuthorEmail());
         marksRepo.push(hash, exporterConfig.marksRepo().url(), exporterConfig.marksRef());
     }
 
     @Override
-    public void run(Path scratchPath) {
+    public Collection<WorkItem> run(Path scratchPath) {
         log.fine("Running export for " + exporterConfig.source().toString());
 
         try {
             var converter = exporterConfig.resolve(scratchPath.resolve("converter"));
             var marksFile = scratchPath.resolve("marks.txt");
@@ -140,7 +140,8 @@
                 throw new UncheckedIOException(lastException);
             }
         } catch (IOException e) {
             throw new UncheckedIOException(e);
         }
+        return List.of();
     }
 }
