diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CommandWorkItem.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CommandWorkItem.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CommandWorkItem.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CommandWorkItem.java
@@ -20,11 +20,12 @@
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */
 package org.openjdk.skara.bots.pr;
 
-import org.openjdk.skara.forge.*;
+import org.openjdk.skara.bot.WorkItem;
+import org.openjdk.skara.forge.PullRequest;
 import org.openjdk.skara.issuetracker.Comment;
 
 import java.io.*;
 import java.nio.file.Path;
 import java.util.*;
@@ -128,33 +129,36 @@
 
         pr.addComment(writer.toString());
     }
 
     @Override
-    public void run(Path scratchPath) {
+    public Collection<WorkItem> run(Path scratchPath) {
         log.info("Looking for merge commands");
 
         if (pr.labels().contains("integrated")) {
             log.info("Skip checking for commands in integrated PR");
-            return;
+            return List.of();
         }
 
         var comments = pr.comments();
         var unprocessedCommands = findCommandComments(comments);
         if (unprocessedCommands.isEmpty()) {
             log.fine("No new merge commands found, stopping further processing");
-            return;
+            return List.of();
         }
 
         if (HelpCommand.external == null) {
             HelpCommand.external = bot.externalCommands();
         }
 
         var census = CensusInstance.create(bot.censusRepo(), bot.censusRef(), scratchPath.resolve("census"), pr);
         for (var entry : unprocessedCommands) {
             processCommand(pr, census, scratchPath.resolve("pr").resolve("command"), entry.getKey(), entry.getValue(), comments);
         }
+
+        // Run another check to reflect potential changes from commands
+        return List.of(new CheckWorkItem(bot, pr, errorHandler));
     }
 
     @Override
     public String toString() {
         return "CommandWorkItem@" + pr.repository().name() + "#" + pr.id();
