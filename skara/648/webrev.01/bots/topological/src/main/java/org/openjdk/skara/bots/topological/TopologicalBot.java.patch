diff a/bots/topological/src/main/java/org/openjdk/skara/bots/topological/TopologicalBot.java b/bots/topological/src/main/java/org/openjdk/skara/bots/topological/TopologicalBot.java
--- a/bots/topological/src/main/java/org/openjdk/skara/bots/topological/TopologicalBot.java
+++ b/bots/topological/src/main/java/org/openjdk/skara/bots/topological/TopologicalBot.java
@@ -30,12 +30,11 @@
 import java.io.UncheckedIOException;
 import java.nio.charset.StandardCharsets;
 import java.nio.file.Path;
 import java.nio.file.Files;
 import java.net.URLEncoder;
-import java.util.ArrayList;
-import java.util.List;
+import java.util.*;
 import java.util.logging.Logger;
 import java.util.stream.Collectors;
 import java.util.stream.Stream;
 
 /**
@@ -63,11 +62,11 @@
         var otherBot = (TopologicalBot) other;
         return !hostedRepo.name().equals(otherBot.hostedRepo.name());
     }
 
     @Override
-    public void run(Path scratchPath) {
+    public Collection<WorkItem> run(Path scratchPath) {
         log.info("Starting topobot run");
         try {
             var sanitizedUrl = URLEncoder.encode(hostedRepo.webUrl().toString(), StandardCharsets.UTF_8);
             var dir = storage.resolve(sanitizedUrl);
             Repository repo;
@@ -119,10 +118,11 @@
             }
         } catch (IOException e) {
             throw new UncheckedIOException(e);
         }
         log.info("Ending topobot run");
+        return List.of();
     }
 
     private static Stream<Branch> dependencies(Repository repo, Hash hash, Path depsFile) throws IOException {
         return repo.lines(depsFile, hash).map(l -> {
             var lines = l.stream().filter(s -> !s.isEmpty()).collect(Collectors.toList());
