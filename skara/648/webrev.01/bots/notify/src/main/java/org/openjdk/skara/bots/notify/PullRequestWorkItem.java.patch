diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/PullRequestWorkItem.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/PullRequestWorkItem.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/PullRequestWorkItem.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/PullRequestWorkItem.java
@@ -22,19 +22,18 @@
  */
 package org.openjdk.skara.bots.notify;
 
 import org.openjdk.skara.bot.WorkItem;
 import org.openjdk.skara.forge.PullRequest;
-import org.openjdk.skara.host.HostUser;
 import org.openjdk.skara.json.*;
 import org.openjdk.skara.storage.StorageBuilder;
 import org.openjdk.skara.vcs.Hash;
 import org.openjdk.skara.vcs.openjdk.Issue;
 
 import java.nio.file.Path;
 import java.util.*;
-import java.util.function.*;
+import java.util.function.Consumer;
 import java.util.regex.Pattern;
 import java.util.stream.*;
 
 public class PullRequestWorkItem implements WorkItem {
     private final PullRequest pr;
@@ -172,11 +171,11 @@
     private void notifyIntegratedPr(PullRequest pr, Hash hash) {
         pullRequestUpdateConsumers.forEach(c -> c.handleIntegratedPullRequest(pr, hash));
     }
 
     @Override
-    public void run(Path scratchPath) {
+    public Collection<WorkItem> run(Path scratchPath) {
         var historyPath = scratchPath.resolve("notify").resolve("history");
         var storage = prStateStorageBuilder
                 .serializer(this::serializePrState)
                 .deserializer(this::deserializePrState)
                 .materialize(historyPath);
@@ -185,11 +184,11 @@
         var commit = resultingCommitHashFor(pr);
         var state = new PullRequestState(pr, issues, commit);
         var stored = storage.current();
         if (stored.contains(state)) {
             // Already up to date
-            return;
+            return List.of();
         }
 
         // Search for an existing
         var storedState = stored.stream()
                 .filter(ss -> ss.prId().equals(state.prId()))
@@ -214,10 +213,11 @@
                 notifyIntegratedPr(pr, state.commitId().get());
             }
         }
 
         storage.put(state);
+        return List.of();
     }
 
     @Override
     public String toString() {
         return "Notify.PR@" + pr.repository().name() + "#" + pr.id();
