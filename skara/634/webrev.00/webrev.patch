diff a/issuetracker/src/main/java/org/openjdk/skara/issuetracker/Link.java b/issuetracker/src/main/java/org/openjdk/skara/issuetracker/Link.java
--- a/issuetracker/src/main/java/org/openjdk/skara/issuetracker/Link.java
+++ b/issuetracker/src/main/java/org/openjdk/skara/issuetracker/Link.java
@@ -106,12 +106,12 @@
         if (o == null || getClass() != o.getClass()) {
             return false;
         }
         Link link = (Link) o;
         return resolved == link.resolved &&
-                uri.equals(link.uri) &&
-                title.equals(link.title) &&
+                Objects.equals(uri, link.uri) &&
+                Objects.equals(title, link.title) &&
                 Objects.equals(relationship, link.relationship) &&
                 Objects.equals(linked, link.linked) &&
                 Objects.equals(summary, link.summary) &&
                 Objects.equals(iconUrl, link.iconUrl) &&
                 Objects.equals(iconTitle, link.iconTitle) &&
diff a/issuetracker/src/test/java/org/openjdk/skara/issuetracker/IssueTrackerTests.java b/issuetracker/src/test/java/org/openjdk/skara/issuetracker/IssueTrackerTests.java
--- a/issuetracker/src/test/java/org/openjdk/skara/issuetracker/IssueTrackerTests.java
+++ b/issuetracker/src/test/java/org/openjdk/skara/issuetracker/IssueTrackerTests.java
@@ -106,6 +106,34 @@
             issue.removeLink(link);
             links = issue.links();
             assertEquals(0, links.size());
         }
     }
+
+    @Test
+    void addIssueLink(TestInfo info) throws IOException {
+        try (var credentials = new HostCredentials(info)) {
+            var project = credentials.getIssueProject();
+
+            var userName = project.issueTracker().currentUser().userName();
+            var user = project.issueTracker().user(userName);
+            assertEquals(userName, user.get().userName());
+
+            var issue1 = credentials.createIssue(project, "Test issue");
+            issue1.setBody("This is now the body");
+
+            var issue2 = credentials.createIssue(project, "Test issue 2");
+            var link = Link.create(issue1, "duplicated by").build();
+            issue2.addLink(link);
+
+            var links = issue2.links();
+            assertEquals(1, links.size());
+            assertEquals(link, links.get(0));
+
+            assertEquals(1, issue1.links().size());
+            var linkFromIssue1 = issue1.links().get(0);
+            issue1.removeLink(linkFromIssue1);
+            links = issue2.links();
+            assertEquals(0, links.size());
+        }
+    }
 }
