diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CSRCommand.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CSRCommand.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CSRCommand.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CSRCommand.java
@@ -32,11 +32,11 @@
 
 public class CSRCommand implements CommandHandler {
     private static final String CSR_LABEL = "csr";
 
     private static void showHelp(PrintWriter writer) {
-        writer.println("usage: `/csr [needed|unneeded]`, requires that the issue the pull request links to an approved [CSR](https://wiki.openjdk.java.net/display/csr/Main) request.");
+        writer.println("usage: `/csr [needed|unneeded]`, requires that the issue the pull request refers to links to an approved [CSR](https://wiki.openjdk.java.net/display/csr/Main) request.");
     }
 
     private static void csrReply(PrintWriter writer) {
         writer.println("has indicated that a " +
                       "[compatibility and specification](https://wiki.openjdk.java.net/display/csr/Main) (CSR) request " +
diff a/bots/pr/src/test/java/org/openjdk/skara/bots/pr/CSRTests.java b/bots/pr/src/test/java/org/openjdk/skara/bots/pr/CSRTests.java
--- a/bots/pr/src/test/java/org/openjdk/skara/bots/pr/CSRTests.java
+++ b/bots/pr/src/test/java/org/openjdk/skara/bots/pr/CSRTests.java
@@ -247,11 +247,11 @@
             var prAsReviewer = reviewer.pullRequest(pr.id());
             prAsReviewer.addComment("/csr foobar");
             TestBotRunner.runPeriodicItems(prBot);
 
             // Show help
-            assertLastCommentContains(pr, "usage: `/csr [needed|unneeded]`, requires that the issue the pull request links " +
+            assertLastCommentContains(pr, "usage: `/csr [needed|unneeded]`, requires that the issue the pull request refers to links " +
                                           "to an approved [CSR](https://wiki.openjdk.java.net/display/csr/Main) request.");
             assertFalse(pr.labels().contains("csr"));
         }
     }
 
