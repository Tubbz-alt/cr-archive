diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CSRCommand.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CSRCommand.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CSRCommand.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CSRCommand.java
@@ -32,11 +32,11 @@
 
 public class CSRCommand implements CommandHandler {
     private static final String CSR_LABEL = "csr";
 
     private static void showHelp(PrintWriter writer) {
-        writer.println("usage: `/csr [unneeded]`, requires that the issue the pull request links to an approved [CSR](https://wiki.openjdk.java.net/display/csr/Main) request.");
+        writer.println("usage: `/csr [needed|unneeded]`, requires that the issue the pull request links to an approved [CSR](https://wiki.openjdk.java.net/display/csr/Main) request.");
     }
 
     private static void csrReply(PrintWriter writer) {
         writer.println("has indicated that a " +
                       "[compatibility and specification](https://wiki.openjdk.java.net/display/csr/Main) (CSR) request " +
@@ -62,18 +62,19 @@
             return;
         }
 
         var labels = pr.labels();
 
-        if (command.args().trim().toLowerCase().equals("unneeded")) {
+        var cmd = command.args().trim().toLowerCase();
+        if (cmd.equals("unneeded") || cmd.equals("uneeded")) {
             if (labels.contains(CSR_LABEL)) {
                 pr.removeLabel(CSR_LABEL);
             }
             reply.println("determined that a [CSR](https://wiki.openjdk.java.net/display/csr/Main) request " +
                           "is no longer needed for this pull request.");
             return;
-        } else if (!command.args().isEmpty()) {
+        } else if (!cmd.isEmpty() && !cmd.equals("needed")) {
             showHelp(reply);
             return;
         }
 
         if (labels.contains(CSR_LABEL)) {
