diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java
@@ -584,11 +584,11 @@
             message.append("`/integrate ");
             message.append(pr.targetHash());
             message.append("`.\n");
         }
 
-        if (!ProjectPermissions.mayCommit(censusInstance, pr.author())) {
+        if (!censusInstance.isCommitter(pr.author())) {
             message.append("\n");
             var contributor = censusInstance.namespace().get(pr.author().id());
             if (contributor == null) {
                 message.append("As you are not a known OpenJDK [Author](https://openjdk.java.net/bylaws#author), ");
             } else {
@@ -596,11 +596,11 @@
             }
 
             message.append("an existing [Committer](https://openjdk.java.net/bylaws#committer) must agree to ");
             message.append("[sponsor](https://openjdk.java.net/sponsor/) your change. ");
             var candidates = reviews.stream()
-                                    .filter(review -> ProjectPermissions.mayCommit(censusInstance, review.reviewer()))
+                                    .filter(review -> censusInstance.isCommitter(review.reviewer()))
                                     .map(review -> "@" + review.reviewer().userName())
                                     .collect(Collectors.joining(", "));
             if (candidates.length() > 0) {
                 message.append("Possible candidates are the reviewers of this PR (");
                 message.append(candidates);
