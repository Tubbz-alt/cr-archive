diff a/bots/mirror/src/main/java/org/openjdk/skara/bots/mirror/MirrorBotFactory.java b/bots/mirror/src/main/java/org/openjdk/skara/bots/mirror/MirrorBotFactory.java
--- a/bots/mirror/src/main/java/org/openjdk/skara/bots/mirror/MirrorBotFactory.java
+++ b/bots/mirror/src/main/java/org/openjdk/skara/bots/mirror/MirrorBotFactory.java
@@ -21,14 +21,16 @@
  * questions.
  */
 package org.openjdk.skara.bots.mirror;
 
 import org.openjdk.skara.bot.*;
+import org.openjdk.skara.vcs.Branch;
 
 import java.io.*;
 import java.nio.file.Files;
 import java.util.*;
+import java.util.stream.Collectors;
 import java.util.logging.Logger;
 
 public class MirrorBotFactory implements BotFactory {
     private final Logger log = Logger.getLogger("org.openjdk.skara.bots");;
 
@@ -53,11 +55,18 @@
             var fromRepo = configuration.repository(fromName);
 
             var toName = repo.get("to").asString();
             var toRepo = configuration.repository(toName);
 
+            var branchNames = repo.contains("branches")?
+                repo.get("branches").asString().split(",") : new String[0];
+            var branches = Arrays.stream(branchNames)
+                                 .map(Branch::new)
+                                 .collect(Collectors.toList());
+
+
             log.info("Setting up mirroring from " + fromRepo.name() + "to " + toRepo.name());
-            bots.add(new MirrorBot(storage, fromRepo, toRepo));
+            bots.add(new MirrorBot(storage, fromRepo, toRepo, branches));
         }
         return bots;
     }
 }
