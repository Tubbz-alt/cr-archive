diff a/jcheck/src/main/java/org/openjdk/skara/jcheck/JCheck.java b/jcheck/src/main/java/org/openjdk/skara/jcheck/JCheck.java
--- a/jcheck/src/main/java/org/openjdk/skara/jcheck/JCheck.java
+++ b/jcheck/src/main/java/org/openjdk/skara/jcheck/JCheck.java
@@ -45,12 +45,10 @@
     private final List<RepositoryCheck> repositoryChecks;
     private final List<String> additionalConfiguration;
     private final JCheckConfiguration overridingConfiguration;
     private final Logger log = Logger.getLogger("org.openjdk.skara.jcheck");
 
-    private JCheckConfiguration cachedConfiguration = null;
-
     JCheck(ReadOnlyRepository repository,
            Census census,
            CommitMessageParser parser,
            String revisionRange,
            Pattern allowedBranches,
@@ -102,26 +100,11 @@
 
     private Optional<JCheckConfiguration> getConfigurationFor(Commit c) {
         if (overridingConfiguration != null) {
             return Optional.of(overridingConfiguration);
         }
-        var confPath = Paths.get(".jcheck/conf");
-        var changesConfiguration = c.parentDiffs()
-                                    .stream()
-                                    .map(Diff::patches)
-                                    .flatMap(List::stream)
-                                    .anyMatch(p -> p.source().path().isPresent() && p.source().path().get().equals(confPath) ||
-                                                   p.target().path().isPresent() && p.target().path().get().equals(confPath));
-
-
-        if (changesConfiguration || cachedConfiguration == null) {
-            var confAtCommit = parseConfiguration(repository, c.hash(), additionalConfiguration);
-            confAtCommit.ifPresent(jCheckConfiguration -> cachedConfiguration = jCheckConfiguration);
-            return confAtCommit;
-        } else {
-            return Optional.of(cachedConfiguration);
-        }
+        return parseConfiguration(repository, c.hash(), additionalConfiguration);
     }
 
     private Iterator<Issue> checkCommit(Commit commit) {
         log.fine("Checking: " + commit.hash().hex());
         var configuration = getConfigurationFor(commit);
