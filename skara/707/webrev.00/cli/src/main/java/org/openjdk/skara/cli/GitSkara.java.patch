diff a/cli/src/main/java/org/openjdk/skara/cli/GitSkara.java b/cli/src/main/java/org/openjdk/skara/cli/GitSkara.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitSkara.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitSkara.java
@@ -22,10 +22,11 @@
  */
 package org.openjdk.skara.cli;
 
 import org.openjdk.skara.args.Main;
 import org.openjdk.skara.vcs.Repository;
+import org.openjdk.skara.vcs.git.GitVersion;
 import org.openjdk.skara.vcs.openjdk.CommitMessageParsers;
 import org.openjdk.skara.version.Version;
 
 import java.io.IOException;
 import java.nio.file.Path;
@@ -169,10 +170,23 @@
         } else {
             System.out.println("No updates found");
         }
     }
 
+    private static void checkGitVersion() {
+        try {
+            GitVersion version = GitVersion.get();
+            if (!version.isKnownSupported()) {
+                System.err.println("WARNING: Your git version is: " + version + "," +
+                        " which is not a known supported version." +
+                        " Please consider upgrading to a more recent version.");
+            }
+        } catch (IOException e) {
+            System.err.println("Could not check git version: " + e.getMessage());
+        }
+    }
+
     public static void main(String[] args) throws Exception {
         commands.put("jcheck", GitJCheck::main);
         commands.put("webrev", GitWebrev::main);
         commands.put("defpath", GitDefpath::main);
         commands.put("verify-import", GitVerifyImport::main);
@@ -189,10 +203,12 @@
 
         commands.put("update", GitSkara::update);
         commands.put("help", GitSkara::usage);
         commands.put("version", GitSkara::version);
 
+        checkGitVersion();
+
         var isEmpty = args.length == 0;
         var command = isEmpty ? "help" : args[0];
         var commandArgs = isEmpty ? new String[0] : Arrays.copyOfRange(args, 1, args.length);
         if (commands.containsKey(command)) {
             commands.get(command).main(commandArgs);
