diff a/cli/src/main/java/org/openjdk/skara/cli/JCheckCLIVisitor.java b/cli/src/main/java/org/openjdk/skara/cli/JCheckCLIVisitor.java
--- a/cli/src/main/java/org/openjdk/skara/cli/JCheckCLIVisitor.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/JCheckCLIVisitor.java
@@ -30,18 +30,20 @@
 import java.util.Set;
 import java.util.stream.Collectors;
 
 class JCheckCLIVisitor implements IssueVisitor {
     private final Set<String> ignore;
+    private final boolean isMercurial;
     private boolean hasDisplayedErrors;
 
     public JCheckCLIVisitor() {
-        this(Set.of());
+        this(Set.of(), false);
     }
 
-    public JCheckCLIVisitor(Set<String> ignore) {
+    public JCheckCLIVisitor(Set<String> ignore, boolean isMercurial) {
         this.ignore = ignore;
+        this.isMercurial = isMercurial;
         this.hasDisplayedErrors = false;
     }
 
     private String println(Issue i, String message) {
         var prefix = "[" + i.check().name() + "] " + i.severity() + ": ";
@@ -240,11 +242,11 @@
             hasDisplayedErrors = true;
         }
     }
 
     public void visit(AuthorEmailIssue i) {
-        if (!ignore.contains(i.check().name())) {
+        if (!ignore.contains(i.check().name()) && !isMercurial) {
             println(i, "missing author email");
             hasDisplayedErrors = true;
         }
     }
 
@@ -254,11 +256,11 @@
             hasDisplayedErrors = true;
         }
     }
 
     public void visit(CommitterEmailIssue i) {
-        if (!ignore.contains(i.check().name())) {
+        if (!ignore.contains(i.check().name()) && !isMercurial) {
             var domain = i.expectedDomain();
             println(i, "missing committer email from domain " + domain);
             hasDisplayedErrors = true;
         }
     }
