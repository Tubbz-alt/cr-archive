diff a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/mailinglist/MailingListNotifierTests.java b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/mailinglist/MailingListNotifierTests.java
--- a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/mailinglist/MailingListNotifierTests.java
+++ b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/mailinglist/MailingListNotifierTests.java
@@ -56,29 +56,29 @@
             var branchStorage = createBranchStorage(repo);
             var prStateStorage = createPullRequestStateStorage(repo);
             var storageFolder = tempFolder.path().resolve("storage");
 
             var sender = EmailAddress.from("duke", "duke@duke.duke");
+            var notifyBot = NotifyBot.newBuilder()
+                                     .repository(repo)
+                                     .storagePath(storageFolder)
+                                     .branches(Pattern.compile("master"))
+                                     .tagStorageBuilder(tagStorage)
+                                     .branchStorageBuilder(branchStorage)
+                                     .prStateStorageBuilder(prStateStorage)
+                                     .build();
             var updater = MailingListNotifier.newBuilder()
                                              .list(mailmanList)
                                              .recipient(listAddress)
                                              .sender(sender)
                                              .reportNewTags(false)
                                              .reportNewBranches(false)
                                              .reportNewBuilds(false)
                                              .headers(Map.of("extra1", "value1", "extra2", "value2"))
                                              .allowedAuthorDomains(Pattern.compile("none"))
                                              .build();
-            var notifyBot = NotifyBot.newBuilder()
-                                     .repository(repo)
-                                     .storagePath(storageFolder)
-                                     .branches(Pattern.compile("master"))
-                                     .tagStorageBuilder(tagStorage)
-                                     .branchStorageBuilder(branchStorage)
-                                     .prStateStorageBuilder(prStateStorage)
-                                     .updaters(List.of(updater))
-                                     .build();
+            updater.attachTo(notifyBot);
 
             // No mail should be sent on the first run as there is no history
             TestBotRunner.runPeriodicItems(notifyBot);
             assertThrows(RuntimeException.class, () -> listServer.processIncoming(Duration.ofMillis(1)));
 
@@ -128,27 +128,27 @@
             var branchStorage = createBranchStorage(repo);
             var prStateStorage = createPullRequestStateStorage(repo);
             var storageFolder = tempFolder.path().resolve("storage");
 
             var sender = EmailAddress.from("duke", "duke@duke.duke");
-            var updater = MailingListNotifier.newBuilder()
-                                             .list(mailmanList)
-                                             .recipient(listAddress)
-                                             .sender(sender)
-                                             .reportNewTags(false)
-                                             .reportNewBranches(false)
-                                             .reportNewBuilds(false)
-                                             .build();
             var notifyBot = NotifyBot.newBuilder()
                                      .repository(repo)
                                      .storagePath(storageFolder)
                                      .branches(Pattern.compile("master"))
                                      .tagStorageBuilder(tagStorage)
                                      .branchStorageBuilder(branchStorage)
                                      .prStateStorageBuilder(prStateStorage)
-                                     .updaters(List.of(updater))
                                      .build();
+            var updater = MailingListNotifier.newBuilder()
+                                             .list(mailmanList)
+                                             .recipient(listAddress)
+                                             .sender(sender)
+                                             .reportNewTags(false)
+                                             .reportNewBranches(false)
+                                             .reportNewBuilds(false)
+                                             .build();
+            updater.attachTo(notifyBot);
 
             // No mail should be sent on the first run as there is no history
             TestBotRunner.runPeriodicItems(notifyBot);
             assertThrows(RuntimeException.class, () -> listServer.processIncoming(Duration.ofMillis(1)));
 
@@ -200,27 +200,27 @@
             var branchStorage = createBranchStorage(repo);
             var prStateStorage = createPullRequestStateStorage(repo);
             var storageFolder = tempFolder.path().resolve("storage");
 
             var sender = EmailAddress.from("duke", "duke@duke.duke");
-            var updater = MailingListNotifier.newBuilder()
-                                             .list(mailmanList)
-                                             .recipient(listAddress)
-                                             .sender(sender)
-                                             .reportNewTags(false)
-                                             .reportNewBranches(false)
-                                             .reportNewBuilds(false)
-                                             .build();
             var notifyBot = NotifyBot.newBuilder()
                                      .repository(repo)
                                      .storagePath(storageFolder)
                                      .branches(Pattern.compile("master"))
                                      .tagStorageBuilder(tagStorage)
                                      .branchStorageBuilder(branchStorage)
                                      .prStateStorageBuilder(prStateStorage)
-                                     .updaters(List.of(updater))
                                      .build();
+            var updater = MailingListNotifier.newBuilder()
+                                             .list(mailmanList)
+                                             .recipient(listAddress)
+                                             .sender(sender)
+                                             .reportNewTags(false)
+                                             .reportNewBranches(false)
+                                             .reportNewBuilds(false)
+                                             .build();
+            updater.attachTo(notifyBot);
 
             // No mail should be sent on the first run as there is no history
             TestBotRunner.runPeriodicItems(notifyBot);
             assertThrows(RuntimeException.class, () -> listServer.processIncoming(Duration.ofMillis(1)));
 
@@ -265,29 +265,29 @@
             var prStateStorage = createPullRequestStateStorage(repo);
             var storageFolder = tempFolder.path().resolve("storage");
 
             var sender = EmailAddress.from("duke", "duke@duke.duke");
             var author = EmailAddress.from("author", "author@duke.duke");
+            var notifyBot = NotifyBot.newBuilder()
+                                     .repository(repo)
+                                     .storagePath(storageFolder)
+                                     .branches(Pattern.compile("master|another"))
+                                     .tagStorageBuilder(tagStorage)
+                                     .branchStorageBuilder(branchStorage)
+                                     .prStateStorageBuilder(prStateStorage)
+                                     .build();
             var updater = MailingListNotifier.newBuilder()
                                              .list(mailmanList)
                                              .recipient(listAddress)
                                              .sender(sender)
                                              .author(author)
                                              .includeBranch(true)
                                              .reportNewTags(false)
                                              .reportNewBranches(false)
                                              .reportNewBuilds(false)
                                              .build();
-            var notifyBot = NotifyBot.newBuilder()
-                                     .repository(repo)
-                                     .storagePath(storageFolder)
-                                     .branches(Pattern.compile("master|another"))
-                                     .tagStorageBuilder(tagStorage)
-                                     .branchStorageBuilder(branchStorage)
-                                     .prStateStorageBuilder(prStateStorage)
-                                     .updaters(List.of(updater))
-                                     .build();
+            updater.attachTo(notifyBot);
 
             // No mail should be sent on the first run as there is no history
             TestBotRunner.runPeriodicItems(notifyBot);
             assertThrows(RuntimeException.class, () -> listServer.processIncoming(Duration.ofMillis(1)));
 
@@ -363,10 +363,18 @@
             var prStateStorage = createPullRequestStateStorage(repo);
             var storageFolder = tempFolder.path().resolve("storage");
 
             var sender = EmailAddress.from("duke", "duke@duke.duke");
             var author = EmailAddress.from("author", "author@duke.duke");
+            var notifyBot = NotifyBot.newBuilder()
+                                     .repository(repo)
+                                     .storagePath(storageFolder)
+                                     .branches(Pattern.compile("master|other"))
+                                     .tagStorageBuilder(tagStorage)
+                                     .branchStorageBuilder(branchStorage)
+                                     .prStateStorageBuilder(prStateStorage)
+                                     .build();
             var updater = MailingListNotifier.newBuilder()
                                              .list(mailmanList)
                                              .recipient(listAddress)
                                              .sender(sender)
                                              .author(author)
@@ -374,19 +382,11 @@
                                              .reportNewBranches(false)
                                              .reportNewBuilds(false)
                                              .includeBranch(true)
                                              .mode(MailingListNotifier.Mode.PR)
                                              .build();
-            var notifyBot = NotifyBot.newBuilder()
-                                     .repository(repo)
-                                     .storagePath(storageFolder)
-                                     .branches(Pattern.compile("master|other"))
-                                     .tagStorageBuilder(tagStorage)
-                                     .branchStorageBuilder(branchStorage)
-                                     .prStateStorageBuilder(prStateStorage)
-                                     .updaters(List.of(updater))
-                                     .build();
+            updater.attachTo(notifyBot);
 
             // Populate our known branches
             localRepo.push(masterHash, repo.url(), "master", true);
             localRepo.push(masterHash, repo.url(), "other", true);
 
@@ -448,28 +448,28 @@
             var branchStorage = createBranchStorage(repo);
             var prStateStorage = createPullRequestStateStorage(repo);
             var storageFolder = tempFolder.path().resolve("storage");
 
             var sender = EmailAddress.from("duke", "duke@duke.duke");
+            var notifyBot = NotifyBot.newBuilder()
+                                     .repository(repo)
+                                     .storagePath(storageFolder)
+                                     .branches(Pattern.compile("master"))
+                                     .tagStorageBuilder(tagStorage)
+                                     .branchStorageBuilder(branchStorage)
+                                     .prStateStorageBuilder(prStateStorage)
+                                     .build();
             var updater = MailingListNotifier.newBuilder()
                                              .list(mailmanList)
                                              .recipient(listAddress)
                                              .sender(sender)
                                              .reportNewTags(false)
                                              .reportNewBranches(false)
                                              .reportNewBuilds(false)
                                              .mode(MailingListNotifier.Mode.PR)
                                              .build();
-            var notifyBot = NotifyBot.newBuilder()
-                                     .repository(repo)
-                                     .storagePath(storageFolder)
-                                     .branches(Pattern.compile("master"))
-                                     .tagStorageBuilder(tagStorage)
-                                     .branchStorageBuilder(branchStorage)
-                                     .prStateStorageBuilder(prStateStorage)
-                                     .updaters(List.of(updater))
-                                     .build();
+            updater.attachTo(notifyBot);
 
             // No mail should be sent on the first run as there is no history
             TestBotRunner.runPeriodicItems(notifyBot);
             assertThrows(RuntimeException.class, () -> listServer.processIncoming(Duration.ofMillis(1)));
 
@@ -540,29 +540,29 @@
             var branchStorage = createBranchStorage(repo);
             var prStateStorage = createPullRequestStateStorage(repo);
             var storageFolder = tempFolder.path().resolve("storage");
 
             var sender = EmailAddress.from("duke", "duke@duke.duke");
+            var notifyBot = NotifyBot.newBuilder()
+                                     .repository(repo)
+                                     .storagePath(storageFolder)
+                                     .branches(Pattern.compile("master|other"))
+                                     .tagStorageBuilder(tagStorage)
+                                     .branchStorageBuilder(branchStorage)
+                                     .prStateStorageBuilder(prStateStorage)
+                                     .build();
             var updater = MailingListNotifier.newBuilder()
                                              .list(mailmanList)
                                              .recipient(listAddress)
                                              .sender(sender)
                                              .author(null)
                                              .reportNewTags(false)
                                              .reportNewBranches(false)
                                              .reportNewBuilds(false)
                                              .mode(MailingListNotifier.Mode.PR)
                                              .build();
-            var notifyBot = NotifyBot.newBuilder()
-                                     .repository(repo)
-                                     .storagePath(storageFolder)
-                                     .branches(Pattern.compile("master|other"))
-                                     .tagStorageBuilder(tagStorage)
-                                     .branchStorageBuilder(branchStorage)
-                                     .prStateStorageBuilder(prStateStorage)
-                                     .updaters(List.of(updater))
-                                     .build();
+            updater.attachTo(notifyBot);
 
             // No mail should be sent on the first run as there is no history
             TestBotRunner.runPeriodicItems(notifyBot);
             assertThrows(RuntimeException.class, () -> listServer.processIncoming(Duration.ofMillis(1)));
 
@@ -635,34 +635,36 @@
             var branchStorage = createBranchStorage(repo);
             var prStateStorage = createPullRequestStateStorage(repo);
             var storageFolder = tempFolder.path().resolve("storage");
 
             var sender = EmailAddress.from("duke", "duke@duke.duke");
+            var notifyBot = NotifyBot.newBuilder()
+                                     .repository(repo)
+                                     .storagePath(storageFolder)
+                                     .branches(Pattern.compile("master"))
+                                     .tagStorageBuilder(tagStorage)
+                                     .branchStorageBuilder(branchStorage)
+                                     .prStateStorageBuilder(prStateStorage)
+                                     .build();
             var updater = MailingListNotifier.newBuilder()
                                              .list(mailmanList)
                                              .recipient(listAddress)
                                              .sender(sender)
                                              .reportNewBranches(false)
                                              .headers(Map.of("extra1", "value1", "extra2", "value2"))
                                              .build();
+            updater.attachTo(notifyBot);
+
             var noTagsUpdater = MailingListNotifier.newBuilder()
                                                    .list(mailmanList)
                                                    .recipient(listAddress)
                                                    .sender(sender)
                                                    .reportNewTags(false)
                                                    .reportNewBranches(false)
                                                    .reportNewBuilds(false)
                                                    .build();
-            var notifyBot = NotifyBot.newBuilder()
-                                     .repository(repo)
-                                     .storagePath(storageFolder)
-                                     .branches(Pattern.compile("master"))
-                                     .tagStorageBuilder(tagStorage)
-                                     .branchStorageBuilder(branchStorage)
-                                     .prStateStorageBuilder(prStateStorage)
-                                     .updaters(List.of(updater, noTagsUpdater))
-                                     .build();
+            noTagsUpdater.attachTo(notifyBot);
 
             // No mail should be sent on the first run as there is no history
             TestBotRunner.runPeriodicItems(notifyBot);
             assertThrows(RuntimeException.class, () -> listServer.processIncoming(Duration.ofMillis(1)));
 
@@ -752,35 +754,36 @@
             var branchStorage = createBranchStorage(repo);
             var prStateStorage = createPullRequestStateStorage(repo);
             var storageFolder = tempFolder.path().resolve("storage");
 
             var sender = EmailAddress.from("duke", "duke@duke.duke");
+            var notifyBot = NotifyBot.newBuilder()
+                                     .repository(repo)
+                                     .storagePath(storageFolder)
+                                     .branches(Pattern.compile("master"))
+                                     .tagStorageBuilder(tagStorage)
+                                     .branchStorageBuilder(branchStorage)
+                                     .prStateStorageBuilder(prStateStorage)
+                                     .build();
             var updater = MailingListNotifier.newBuilder()
                                              .list(mailmanList)
                                              .recipient(listAddress)
                                              .sender(sender)
                                              .reportNewBranches(false)
                                              .reportNewBuilds(false)
                                              .headers(Map.of("extra1", "value1", "extra2", "value2"))
                                              .build();
+            updater.attachTo(notifyBot);
             var noTagsUpdater = MailingListNotifier.newBuilder()
                                                    .list(mailmanList)
                                                    .recipient(listAddress)
                                                    .sender(sender)
                                                    .reportNewTags(false)
                                                    .reportNewBranches(false)
                                                    .reportNewBuilds(false)
                                                    .build();
-            var notifyBot = NotifyBot.newBuilder()
-                                     .repository(repo)
-                                     .storagePath(storageFolder)
-                                     .branches(Pattern.compile("master"))
-                                     .tagStorageBuilder(tagStorage)
-                                     .branchStorageBuilder(branchStorage)
-                                     .prStateStorageBuilder(prStateStorage)
-                                     .updaters(List.of(updater, noTagsUpdater))
-                                     .build();
+            noTagsUpdater.attachTo(notifyBot);
 
             // No mail should be sent on the first run as there is no history
             TestBotRunner.runPeriodicItems(notifyBot);
             assertThrows(RuntimeException.class, () -> listServer.processIncoming(Duration.ofMillis(1)));
 
@@ -845,27 +848,27 @@
             var branchStorage = createBranchStorage(repo);
             var prStateStorage = createPullRequestStateStorage(repo);
             var storageFolder = tempFolder.path().resolve("storage");
 
             var sender = EmailAddress.from("duke", "duke@duke.duke");
-            var updater = MailingListNotifier.newBuilder()
-                                             .list(mailmanList)
-                                             .recipient(listAddress)
-                                             .sender(sender)
-                                             .reportNewTags(false)
-                                             .reportNewBuilds(false)
-                                             .headers(Map.of("extra1", "value1", "extra2", "value2"))
-                                             .build();
             var notifyBot = NotifyBot.newBuilder()
                                      .repository(repo)
                                      .storagePath(storageFolder)
                                      .branches(Pattern.compile("master|newbranch."))
                                      .tagStorageBuilder(tagStorage)
                                      .branchStorageBuilder(branchStorage)
                                      .prStateStorageBuilder(prStateStorage)
-                                     .updaters(List.of(updater))
                                      .build();
+            var updater = MailingListNotifier.newBuilder()
+                                             .list(mailmanList)
+                                             .recipient(listAddress)
+                                             .sender(sender)
+                                             .reportNewTags(false)
+                                             .reportNewBuilds(false)
+                                             .headers(Map.of("extra1", "value1", "extra2", "value2"))
+                                             .build();
+            updater.attachTo(notifyBot);
 
             // No mail should be sent on the first run as there is no history
             TestBotRunner.runPeriodicItems(notifyBot);
             assertThrows(RuntimeException.class, () -> listServer.processIncoming(Duration.ofMillis(1)));
 
@@ -925,29 +928,29 @@
             var branchStorage = createBranchStorage(repo);
             var prStateStorage = createPullRequestStateStorage(repo);
             var storageFolder = tempFolder.path().resolve("storage");
 
             var sender = EmailAddress.from("duke", "duke@duke.duke");
+            var notifyBot = NotifyBot.newBuilder()
+                                     .repository(repo)
+                                     .storagePath(storageFolder)
+                                     .branches(Pattern.compile("master"))
+                                     .tagStorageBuilder(tagStorage)
+                                     .branchStorageBuilder(branchStorage)
+                                     .prStateStorageBuilder(prStateStorage)
+                                     .build();
             var updater = MailingListNotifier.newBuilder()
                                              .list(mailmanList)
                                              .recipient(listAddress)
                                              .sender(sender)
                                              .reportNewTags(false)
                                              .reportNewBranches(false)
                                              .reportNewBuilds(false)
                                              .headers(Map.of("extra1", "value1", "extra2", "value2"))
                                              .allowedAuthorDomains(Pattern.compile("none"))
                                              .build();
-            var notifyBot = NotifyBot.newBuilder()
-                                     .repository(repo)
-                                     .storagePath(storageFolder)
-                                     .branches(Pattern.compile("master"))
-                                     .tagStorageBuilder(tagStorage)
-                                     .branchStorageBuilder(branchStorage)
-                                     .prStateStorageBuilder(prStateStorage)
-                                     .updaters(List.of(updater))
-                                     .build();
+            updater.attachTo(notifyBot);
 
             // No mail should be sent on the first run as there is no history
             TestBotRunner.runPeriodicItems(notifyBot);
             assertThrows(RuntimeException.class, () -> listServer.processIncoming(Duration.ofMillis(1)));
 
