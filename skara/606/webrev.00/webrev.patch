diff a/bots/merge/src/main/java/org/openjdk/skara/bots/merge/MergeBotFactory.java b/bots/merge/src/main/java/org/openjdk/skara/bots/merge/MergeBotFactory.java
--- a/bots/merge/src/main/java/org/openjdk/skara/bots/merge/MergeBotFactory.java
+++ b/bots/merge/src/main/java/org/openjdk/skara/bots/merge/MergeBotFactory.java
@@ -21,10 +21,11 @@
  * questions.
  */
 package org.openjdk.skara.bots.merge;
 
 import org.openjdk.skara.bot.*;
+import org.openjdk.skara.json.JSON;
 import org.openjdk.skara.vcs.Branch;
 
 import java.io.*;
 import java.nio.file.Files;
 import java.time.DayOfWeek;
@@ -179,16 +180,16 @@
                     } else {
                         throw new IllegalStateException("Unexpected interval: " + interval);
                     }
                 }
 
-                var name = spec.get("name").asString();
-                var dependencies = spec.get("dependencies")
+                var name = spec.getOrDefault("name", JSON.of()).asString();
+                var dependencies = spec.getOrDefault("dependencies", JSON.array())
                                        .stream()
                                        .map(e -> e.asString())
                                        .collect(Collectors.toList());
-                var prerequisites = spec.get("prerequisites")
+                var prerequisites = spec.getOrDefault("prerequisites", JSON.array())
                                         .stream()
                                         .map(e -> e.asString())
                                         .map(configuration::repository)
                                         .collect(Collectors.toList());
 
diff a/json/src/main/java/org/openjdk/skara/json/JSONObject.java b/json/src/main/java/org/openjdk/skara/json/JSONObject.java
--- a/json/src/main/java/org/openjdk/skara/json/JSONObject.java
+++ b/json/src/main/java/org/openjdk/skara/json/JSONObject.java
@@ -111,10 +111,14 @@
 
     public JSONValue get(String k) {
         return value.get(k);
     }
 
+    public JSONValue getOrDefault(String k, JSONValue fallback) {
+        return value.getOrDefault(k, fallback);
+    }
+
     public List<Field> fields() {
         return value.entrySet()
                     .stream()
                     .map(e -> new Field(e.getKey(), e.getValue()))
                     .collect(Collectors.toList());
diff a/json/src/main/java/org/openjdk/skara/json/JSONValue.java b/json/src/main/java/org/openjdk/skara/json/JSONValue.java
--- a/json/src/main/java/org/openjdk/skara/json/JSONValue.java
+++ b/json/src/main/java/org/openjdk/skara/json/JSONValue.java
@@ -96,10 +96,14 @@
 
     default JSONValue get(String field) {
         return asObject().get(field);
     }
 
+    default JSONValue getOrDefault(String field, JSONValue fallback) {
+        return asObject().getOrDefault(field, fallback);
+    }
+
     default JSONValue get(int i) {
         return asArray().get(i);
     }
 
     default Stream<JSONValue> stream() {
