diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java
@@ -87,11 +87,11 @@
             if (first.hasHeader("PR-Thread-Prefix")) {
                 threadPrefix = first.headerValue("PR-Thread-Prefix");
             }
         } else {
             if (pr.state() != Issue.State.OPEN) {
-                threadPrefix = "FYI";
+                threadPrefix = "Integrated";
             }
         }
 
         // Check existing generated mails to find which hashes have been previously reported
         for (var email : sentEmails) {
@@ -150,22 +150,22 @@
             if (pr.labels().contains("integrated")) {
                 var hash = findIntegratedHash();
                 if (hash.isPresent()) {
                     var commit = localRepo.lookup(hash.get());
                     if (!hasLegacyIntegrationNotice(localRepo, commit.orElseThrow())) {
-                        var reply = ArchiveItem.integratedNotice(pr, localRepo, commit.orElseThrow(), hostUserToEmailAuthor, parent, subjectPrefix, threadPrefix);
+                        var reply = ArchiveItem.integratedNotice(pr, localRepo, commit.orElseThrow(), hostUserToEmailAuthor, parent, subjectPrefix);
                         generated.add(reply);
                     }
                 } else {
                     throw new RuntimeException("PR " + pr.webUrl() + " has integrated label but no integration comment");
                 }
             } else if (localRepo.isAncestor(pr.headHash(), pr.targetHash())) {
                 var commit = localRepo.lookup(pr.headHash());
-                var reply = ArchiveItem.integratedNotice(pr, localRepo, commit.orElseThrow(), hostUserToEmailAuthor, parent, subjectPrefix, threadPrefix);
+                var reply = ArchiveItem.integratedNotice(pr, localRepo, commit.orElseThrow(), hostUserToEmailAuthor, parent, subjectPrefix);
                 generated.add(reply);
             } else if (threadPrefix.equals("RFR")) {
-                var reply = ArchiveItem.closedNotice(pr, hostUserToEmailAuthor, parent, subjectPrefix, threadPrefix);
+                var reply = ArchiveItem.closedNotice(pr, hostUserToEmailAuthor, parent, subjectPrefix);
                 generated.add(reply);
             }
         }
 
         return generated;
