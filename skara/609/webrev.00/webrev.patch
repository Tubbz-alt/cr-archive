diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java
@@ -69,11 +69,11 @@
                               .map(Hash::new)
                               .findAny();
     }
 
     private boolean hasLegacyIntegrationNotice(Hash hash) {
-        var legacyIntegrationPattern = Pattern.compile("Changeset: " + hash.abbreviate());
+        var legacyIntegrationPattern = Pattern.compile("Changeset\\\\?: " + hash.abbreviate());
         return ignoredComments.stream()
                               .map(Comment::body)
                               .map(legacyIntegrationPattern::matcher)
                               .anyMatch(Matcher::find);
     }
diff a/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java b/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java
--- a/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java
+++ b/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java
@@ -400,12 +400,12 @@
             ignoredPr.addComment("Pushed as commit " + editHash + ".");
             ignoredPr.setState(Issue.State.CLOSED);
 
             // Add legacy integration notice
             ignoredPr.addComment(
-                    "Changeset: " + editHash.abbreviate() + "\n" +
-                    "Author:    J. Duke <duke@openjdk.org>\n");
+                    "Changeset\\: " + editHash.abbreviate() + "\n" +
+                    "Author\\:    J. Duke \\<duke at openjdk\\.org\\>\n");
 
             // Run another archive pass
             TestBotRunner.runPeriodicItems(mlBot);
 
             // The archive should not contain another entry
