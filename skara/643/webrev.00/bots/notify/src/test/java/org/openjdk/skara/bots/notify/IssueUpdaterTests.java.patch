diff a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/IssueUpdaterTests.java b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/IssueUpdaterTests.java
--- a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/IssueUpdaterTests.java
+++ b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/IssueUpdaterTests.java
@@ -63,11 +63,12 @@
                                      .storagePath(storageFolder)
                                      .branches(Pattern.compile("master"))
                                      .tagStorageBuilder(tagStorage)
                                      .branchStorageBuilder(branchStorage)
                                      .prStateStorageBuilder(prStateStorage)
-                                     .updaters(List.of(updater))
+                                     .prUpdaters(List.of(updater))
+                                     .integratorId(repo.forge().currentUser().id())
                                      .build();
 
             // Initialize history
             TestBotRunner.runPeriodicItems(notifyBot);
 
@@ -78,10 +79,11 @@
             var issue = issueProject.createIssue("This is an issue", List.of("Indeed"), Map.of("issuetype", JSON.of("Enhancement")));
             var editHash = CheckableRepository.appendAndCommit(localRepo, "Another line", issue.id() + ": Fix that issue");
             localRepo.push(editHash, repo.url(), "master");
             var pr = credentials.createPullRequest(repo, "master", "master", issue.id() + ": Fix that issue");
             pr.setBody("\n\n### Issue\n * [" + issue.id() + "](http://www.test.test/): The issue");
+            pr.addLabel("integrated");
             pr.addComment("Pushed as commit " + editHash.hex() + ".");
             TestBotRunner.runPeriodicItems(notifyBot);
 
             // The changeset should be reflected in a link
             var links = issue.links();
@@ -292,12 +294,12 @@
                                      .storagePath(storageFolder)
                                      .branches(Pattern.compile(".*"))
                                      .tagStorageBuilder(tagStorage)
                                      .branchStorageBuilder(branchStorage)
                                      .prStateStorageBuilder(prStateStorage)
-                                     .updaters(List.of(updater))
                                      .prUpdaters(List.of(updater))
+                                     .integratorId(repo.forge().currentUser().id())
                                      .build();
 
             // Initialize history
             localRepo.push(localRepo.resolve("master").orElseThrow(), repo.url(), "other");
             TestBotRunner.runPeriodicItems(notifyBot);
@@ -316,10 +318,11 @@
             assertEquals(pr.webUrl(), links.get(0).uri().orElseThrow());
             assertEquals(reviewIcon, links.get(0).iconUrl().orElseThrow());
 
             // Simulate integration
             pr.addComment("Pushed as commit " + editHash.hex() + ".");
+            pr.addLabel("integrated");
             localRepo.push(editHash, repo.url(), "other");
             TestBotRunner.runPeriodicItems(notifyBot);
 
             // The changeset should be reflected in another link
             var updatedIssue = issueProject.issue(issue.id()).orElseThrow();
