diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/PullRequestWorkItem.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/PullRequestWorkItem.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/PullRequestWorkItem.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/PullRequestWorkItem.java
@@ -167,10 +167,14 @@
 
     private void notifyNewPr(PullRequest pr) {
         pullRequestUpdateConsumers.forEach(c -> c.handleNewPullRequest(pr));
     }
 
+    private void notifyIntegratedPr(PullRequest pr, Hash hash) {
+        pullRequestUpdateConsumers.forEach(c -> c.handleIntegratedPullRequest(pr, hash));
+    }
+
     @Override
     public void run(Path scratchPath) {
         var historyPath = scratchPath.resolve("notify").resolve("history");
         var storage = prStateStorageBuilder
                 .serializer(this::serializePrState)
@@ -196,13 +200,21 @@
                         .filter(issue -> !issues.contains(issue))
                         .forEach(this::notifyListenersRemoved);
             issues.stream()
                   .filter(issue -> !storedIssues.contains(issue))
                   .forEach(this::notifyListenersAdded);
+
+            var storedCommit = storedState.get().commitId();
+            if (!storedCommit.isPresent() && state.commitId().isPresent()) {
+                notifyIntegratedPr(pr, state.commitId().get());
+            }
         } else {
             notifyNewPr(pr);
             issues.forEach(this::notifyListenersAdded);
+            if (state.commitId().isPresent()) {
+                notifyIntegratedPr(pr, state.commitId().get());
+            }
         }
 
         storage.put(state);
     }
 
