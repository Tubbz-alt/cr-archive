diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotBuilder.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotBuilder.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotBuilder.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotBuilder.java
@@ -36,11 +36,11 @@
     private HostedRepository repo;
     private HostedRepository archive;
     private String archiveRef = "master";
     private HostedRepository censusRepo;
     private String censusRef = "master";
-    private EmailAddress list;
+    private List<MailingListConfiguration> lists;
     private Set<String> ignoredUsers = Set.of();
     private Set<Pattern> ignoredComments = Set.of();
     private URI listArchive;
     private String smtpServer;
     private HostedRepository webrevStorageRepository;
@@ -88,12 +88,12 @@
     public MailingListBridgeBotBuilder censusRef(String censusRef) {
         this.censusRef = censusRef;
         return this;
     }
 
-    public MailingListBridgeBotBuilder list(EmailAddress list) {
-        this.list = list;
+    public MailingListBridgeBotBuilder lists(List<MailingListConfiguration> lists) {
+        this.lists = lists;
         return this;
     }
 
     public MailingListBridgeBotBuilder ignoredUsers(Set<String> ignoredUsers) {
         this.ignoredUsers = ignoredUsers;
@@ -179,11 +179,11 @@
         this.seedStorage = seedStorage;
         return this;
     }
 
     public MailingListBridgeBot build() {
-        return new MailingListBridgeBot(from, repo, archive, archiveRef, censusRepo, censusRef, list,
+        return new MailingListBridgeBot(from, repo, archive, archiveRef, censusRepo, censusRef, lists,
                                         ignoredUsers, ignoredComments, listArchive, smtpServer,
                                         webrevStorageRepository, webrevStorageRef, webrevStorageBase, webrevStorageBaseUri,
                                         readyLabels, readyComments, issueTracker, headers, sendInterval, cooldown,
                                         repoInSubject, branchInSubject, seedStorage);
     }
