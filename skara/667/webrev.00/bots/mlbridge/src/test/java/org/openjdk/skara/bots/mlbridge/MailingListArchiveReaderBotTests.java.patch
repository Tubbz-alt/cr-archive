diff a/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListArchiveReaderBotTests.java b/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListArchiveReaderBotTests.java
--- a/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListArchiveReaderBotTests.java
+++ b/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListArchiveReaderBotTests.java
@@ -36,24 +36,24 @@
 import java.util.*;
 
 import static org.junit.jupiter.api.Assertions.*;
 
 class MailingListArchiveReaderBotTests {
-    private void addReply(Conversation conversation, MailingList mailingList, PullRequest pr, String reply) {
+    private void addReply(Conversation conversation, EmailAddress recipient, MailingList mailingList, PullRequest pr, String reply) {
         var first = conversation.first();
         var references = first.id().toString();
         var email = Email.create(EmailAddress.from("Commenter", "c@test.test"), "Re: RFR: " + pr.title(), reply)
-                         .recipient(first.author())
+                         .recipient(recipient)
                          .id(EmailAddress.from(UUID.randomUUID() + "@id.id"))
                          .header("In-Reply-To", first.id().toString())
                          .header("References", references)
                          .build();
         mailingList.post(email);
     }
 
-    private void addReply(Conversation conversation, MailingList mailingList, PullRequest pr) {
-        addReply(conversation, mailingList, pr, "Looks good");
+    private void addReply(Conversation conversation, EmailAddress recipient, MailingList mailingList, PullRequest pr) {
+        addReply(conversation, recipient, mailingList, pr, "Looks good");
     }
 
     @Test
     void simpleArchive(TestInfo testInfo) throws IOException {
         try (var credentials = new HostCredentials(testInfo);
@@ -70,11 +70,11 @@
             var mlBot = MailingListBridgeBot.newBuilder()
                                             .from(from)
                                             .repo(author)
                                             .archive(archive)
                                             .censusRepo(censusBuilder.build())
-                                            .list(listAddress)
+                                            .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
                                             .webrevStorageRepository(archive)
                                             .webrevStorageRef("webrev")
@@ -111,11 +111,11 @@
             TestBotRunner.runPeriodicItems(readerBot);
 
             // Post a reply directly to the list
             var conversations = mailmanList.conversations(Duration.ofDays(1));
             assertEquals(1, conversations.size());
-            addReply(conversations.get(0), mailmanList, pr);
+            addReply(conversations.get(0), listAddress, mailmanList, pr);
             listServer.processIncoming();
 
             // Another archive reader pass - has to be done twice
             TestBotRunner.runPeriodicItems(readerBot);
             TestBotRunner.runPeriodicItems(readerBot);
@@ -145,11 +145,11 @@
             var mlBot = MailingListBridgeBot.newBuilder()
                                             .from(from)
                                             .repo(author)
                                             .archive(archive)
                                             .censusRepo(censusBuilder.build())
-                                            .list(listAddress)
+                                            .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
                                             .webrevStorageRepository(archive)
                                             .webrevStorageRef("webrev")
@@ -183,11 +183,11 @@
             listServer.processIncoming();
 
             // Post a reply directly to the list
             var conversations = mailmanList.conversations(Duration.ofDays(1));
             assertEquals(1, conversations.size());
-            addReply(conversations.get(0), mailmanList, pr);
+            addReply(conversations.get(0), listAddress, mailmanList, pr);
             listServer.processIncoming();
 
             // Another archive reader pass - has to be done twice
             TestBotRunner.runPeriodicItems(readerBot);
             TestBotRunner.runPeriodicItems(readerBot);
@@ -222,11 +222,11 @@
             var mlBot = MailingListBridgeBot.newBuilder()
                                             .from(from)
                                             .repo(author)
                                             .archive(archive)
                                             .censusRepo(censusBuilder.build())
-                                            .list(listAddress)
+                                            .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
                                             .webrevStorageRepository(archive)
                                             .webrevStorageRef("webrev")
@@ -265,11 +265,11 @@
             // Post a large reply directly to the list
             var conversations = mailmanList.conversations(Duration.ofDays(1));
             assertEquals(1, conversations.size());
 
             var replyBody = "This line is about 30 bytes long\n".repeat(1000 * 10);
-            addReply(conversations.get(0), mailmanList, pr, replyBody);
+            addReply(conversations.get(0), listAddress, mailmanList, pr, replyBody);
             listServer.processIncoming();
 
             // Another archive reader pass - has to be done twice
             TestBotRunner.runPeriodicItems(readerBot);
             TestBotRunner.runPeriodicItems(readerBot);
