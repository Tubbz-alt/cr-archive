diff a/email/src/test/java/org/openjdk/skara/email/SMTPTests.java b/email/src/test/java/org/openjdk/skara/email/SMTPTests.java
--- a/email/src/test/java/org/openjdk/skara/email/SMTPTests.java
+++ b/email/src/test/java/org/openjdk/skara/email/SMTPTests.java
@@ -20,17 +20,17 @@
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */
 package org.openjdk.skara.email;
 
-import org.openjdk.skara.test.SMTPServer;
-
 import org.junit.jupiter.api.Test;
 import org.junit.jupiter.api.condition.*;
+import org.openjdk.skara.test.SMTPServer;
 
 import java.io.IOException;
 import java.time.Duration;
+import java.util.List;
 
 import static org.junit.jupiter.api.Assertions.*;
 
 class SMTPTests {
     @Test
@@ -38,11 +38,11 @@
         try (var server = new SMTPServer()) {
             var sender = EmailAddress.from("Test", "test@test.email");
             var recipient = EmailAddress.from("Dest", "dest@dest.email");
             var sentMail = Email.create(sender, "Subject", "Body").recipient(recipient).build();
 
-            SMTP.send(server.address(), recipient, sentMail);
+            SMTP.send(server.address(), sentMail);
             var email = server.receive(Duration.ofSeconds(10));
             assertEquals(sentMail, email);
         }
     }
 
@@ -56,11 +56,11 @@
                                 .sender(sender)
                                 .recipient(recipient)
                                 .header("Something", "Other")
                                 .build();
 
-            SMTP.send(server.address(), recipient, sentMail);
+            SMTP.send(server.address(), sentMail);
             var email = server.receive(Duration.ofSeconds(10));
             assertEquals(sentMail, email);
         }
     }
 
@@ -73,11 +73,11 @@
             var sentMail = Email.create(sender, "Sübject", "Bödÿ")
                                 .recipient(recipient)
                                 .header("Something", "Öthè®")
                                 .build();
 
-            SMTP.send(server.address(), recipient, sentMail);
+            SMTP.send(server.address(), sentMail);
             var email = server.receive(Duration.ofSeconds(10));
             assertEquals(sentMail, email);
         }
     }
 
@@ -86,22 +86,38 @@
         try (var server = new SMTPServer()) {
             var sender = EmailAddress.from("Test", "test@test.email");
             var recipient = EmailAddress.from("Dest", "dest@dest.email");
             var sentMail = Email.create(sender, "Subject", "Body").recipient(recipient).build();
 
-            assertThrows(RuntimeException.class, () -> SMTP.send(server.address(), recipient, sentMail, Duration.ZERO));
+            assertThrows(RuntimeException.class, () -> SMTP.send(server.address(), sentMail, Duration.ZERO));
         }
     }
 
     @Test
     void withDot() throws IOException {
         try (var server = new SMTPServer()) {
             var sender = EmailAddress.from("Test", "test@test.email");
             var recipient = EmailAddress.from("Dest", "dest@dest.email");
             var sentMail = Email.create(sender, "Subject", "Body\n.\nMore text").recipient(recipient).build();
 
-            SMTP.send(server.address(), recipient, sentMail);
+            SMTP.send(server.address(), sentMail);
+            var email = server.receive(Duration.ofSeconds(10));
+            assertEquals(sentMail, email);
+        }
+    }
+
+    @Test
+    void multipleRecipients() throws IOException {
+        try (var server = new SMTPServer()) {
+            var sender = EmailAddress.from("Test", "test@test.email");
+            var recipient1 = EmailAddress.from("Dest1", "dest1@dest.email");
+            var recipient2 = EmailAddress.from("Dest2", "dest2@dest.email");
+            var sentMail = Email.create(sender, "Subject", "Body")
+                                .recipients(List.of(recipient1, recipient2))
+                                .build();
+
+            SMTP.send(server.address(), sentMail);
             var email = server.receive(Duration.ofSeconds(10));
             assertEquals(sentMail, email);
         }
     }
 }
