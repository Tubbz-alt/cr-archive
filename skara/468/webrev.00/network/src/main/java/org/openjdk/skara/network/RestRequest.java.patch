diff a/network/src/main/java/org/openjdk/skara/network/RestRequest.java b/network/src/main/java/org/openjdk/skara/network/RestRequest.java
--- a/network/src/main/java/org/openjdk/skara/network/RestRequest.java
+++ b/network/src/main/java/org/openjdk/skara/network/RestRequest.java
@@ -47,11 +47,11 @@
         List<String> getAuthHeaders();
     }
 
     @FunctionalInterface
     public interface ErrorTransform {
-        JSONValue onError(HttpResponse<String> response);
+        Optional<JSONValue> onError(HttpResponse<String> response);
     }
 
     public class QueryBuilder {
         private class Param {
             String key;
@@ -259,17 +259,19 @@
         return JSON.parse(response.body());
     }
 
     private Optional<JSONValue> transformBadResponse(HttpResponse<String> response, QueryBuilder queryBuilder) {
         if (response.statusCode() >= 400) {
-            if (queryBuilder.onError == null) {
-                log.warning(queryBuilder.toString());
-                log.warning(response.body());
-                throw new RuntimeException("Request returned bad status: " + response.statusCode());
-            } else {
-                return Optional.of(queryBuilder.onError.onError(response));
+            if (queryBuilder.onError != null) {
+                var transformed = queryBuilder.onError.onError(response);
+                if (transformed.isPresent()) {
+                    return transformed;
+                }
             }
+            log.warning(queryBuilder.toString());
+            log.warning(response.body());
+            throw new RuntimeException("Request returned bad status: " + response.statusCode());
         } else {
             return Optional.empty();
         }
     }
 
