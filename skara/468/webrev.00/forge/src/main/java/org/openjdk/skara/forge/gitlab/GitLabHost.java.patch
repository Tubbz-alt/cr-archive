diff a/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabHost.java b/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabHost.java
--- a/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabHost.java
+++ b/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabHost.java
@@ -87,18 +87,16 @@
 
     JSONObject getProjectInfo(String name) {
         var encodedName = URLEncoder.encode(name, StandardCharsets.US_ASCII);
 
         var project = request.get("projects/" + encodedName)
-                                     .onError(r -> r.statusCode() == 404 ? JSON.object().put("retry", true) : null)
-                                     .execute();
+                             .onError(r -> r.statusCode() == 404 ? Optional.of(JSON.object().put("retry", true)) : Optional.empty())
+                             .execute();
         if (project.contains("retry")) {
             // Depending on web server configuration, GitLab may need double escaping of project names
             encodedName = URLEncoder.encode(encodedName, StandardCharsets.US_ASCII);
-            project = request.get("projects/" + encodedName)
-                                     .onError(r -> r.statusCode() == 404 ? JSON.object().put("retry", true) : null)
-                                     .execute();
+            project = request.get("projects/" + encodedName).execute();
         }
         return project.asObject();
     }
 
     @Override
@@ -120,11 +118,11 @@
 
     @Override
     public Optional<HostUser> user(String username) {
         var details = request.get("users")
                              .param("username", username)
-                             .onError(r -> JSON.of())
+                             .onError(r -> Optional.of(JSON.of()))
                              .execute();
 
         if (details.isNull()) {
             return Optional.empty();
         }
@@ -173,10 +171,10 @@
             gid = Long.parseLong(groupId);
         } catch (NumberFormatException e) {
             throw new IllegalArgumentException("Group id is not a number: " + groupId);
         }
         var details = request.get("groups/" + gid + "/members/" + user.id())
-                             .onError(r -> JSON.of())
+                             .onError(r -> Optional.of(JSON.of()))
                              .execute();
         return !details.isNull();
     }
 }
