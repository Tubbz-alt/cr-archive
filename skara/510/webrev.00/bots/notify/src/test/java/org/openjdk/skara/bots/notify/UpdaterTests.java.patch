diff a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
--- a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
+++ b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
@@ -53,17 +53,17 @@
                     .filter(path -> path.toString().endsWith(".json"))
                     .filter(path -> path.toString().contains(partialName))
                     .collect(Collectors.toList());
     }
 
-    private StorageBuilder<Tag> createTagStorage(HostedRepository repository) {
-        return new StorageBuilder<Tag>("tags.txt")
+    private StorageBuilder<UpdatedTag> createTagStorage(HostedRepository repository) {
+        return new StorageBuilder<UpdatedTag>("tags.txt")
                 .remoteRepository(repository, "history", "Duke", "duke@openjdk.java.net", "Updated tags");
     }
 
-    private StorageBuilder<ResolvedBranch> createBranchStorage(HostedRepository repository) {
-        return new StorageBuilder<ResolvedBranch>("branches.txt")
+    private StorageBuilder<UpdatedBranch> createBranchStorage(HostedRepository repository) {
+        return new StorageBuilder<UpdatedBranch>("branches.txt")
                 .remoteRepository(repository, "history", "Duke", "duke@openjdk.java.net", "Updated branches");
     }
 
     private StorageBuilder<PullRequestIssues> createPullRequestIssuesStorage(HostedRepository repository) {
         return new StorageBuilder<PullRequestIssues>("prissues.txt")
@@ -1925,14 +1925,18 @@
             this.idempotent = idempotent;
         }
 
         @Override
         public void handleCommits(HostedRepository repository, Repository localRepository, List<Commit> commits,
-                                  Branch branch) {
+                                  Branch branch) throws NonRetriableException {
             updateCount++;
             if (shouldFail) {
-                throw new RuntimeException("induced failure");
+                if (idempotent) {
+                    throw new RuntimeException("induced failure");
+                } else {
+                    throw new NonRetriableException(new RuntimeException("unretriable failure"));
+                }
             }
         }
 
         @Override
         public void handleOpenJDKTagCommits(HostedRepository repository, Repository localRepository,
@@ -1950,15 +1954,10 @@
         public void handleNewBranch(HostedRepository repository, Repository localRepository, List<Commit> commits,
          Branch parent, Branch branch) {
             throw new RuntimeException("unexpected");
         }
 
-        @Override
-        public boolean isIdempotent() {
-            return idempotent;
-        }
-
         @Override
         public String name() {
             return name;
         }
     }
