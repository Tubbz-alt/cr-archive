diff a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/RepositoryWorkItem.java b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/RepositoryWorkItem.java
--- a/bots/notify/src/main/java/org/openjdk/skara/bots/notify/RepositoryWorkItem.java
+++ b/bots/notify/src/main/java/org/openjdk/skara/bots/notify/RepositoryWorkItem.java
@@ -90,12 +90,12 @@
     private void handleUpdatedRef(Repository localRepo, Reference ref, List<Commit> commits, RepositoryUpdateConsumer updater) throws NonRetriableException {
         var branch = new Branch(ref.name());
         updater.handleCommits(repository, localRepo, commits, branch);
     }
 
-    private List<RuntimeException> handleRef(Repository localRepo, UpdateHistory history, Reference ref, Collection<Reference> allRefs) throws IOException {
-        var errors = new ArrayList<RuntimeException>();
+    private List<Throwable> handleRef(Repository localRepo, UpdateHistory history, Reference ref, Collection<Reference> allRefs) throws IOException {
+        var errors = new ArrayList<Throwable>();
         var branch = new Branch(ref.name());
         for (var updater : updaters) {
             var lastHash = history.branchHash(branch, updater.name());
             if (lastHash.isEmpty()) {
                 log.warning("No previous history found for branch '" + branch + "' and updater '" + updater.name() + " - resetting mark");
@@ -149,12 +149,12 @@
             }
             return Optional.of(tag);
         }
     }
 
-    private List<RuntimeException> handleTags(Repository localRepo, UpdateHistory history, RepositoryUpdateConsumer updater) throws IOException {
-        var errors = new ArrayList<RuntimeException>();
+    private List<Throwable> handleTags(Repository localRepo, UpdateHistory history, RepositoryUpdateConsumer updater) throws IOException {
+        var errors = new ArrayList<Throwable>();
         var tags = localRepo.tags();
         var newTags = tags.stream()
                           .filter(tag -> !history.hasTag(tag, updater.name()))
                           .collect(Collectors.toList());
 
@@ -266,11 +266,11 @@
                                      .filter(ref -> branches.matcher(ref.name()).matches())
                                      .collect(Collectors.toList());
             localRepo.fetchAll();
 
             var history = UpdateHistory.create(tagStorageBuilder, historyPath.resolve("tags"), branchStorageBuilder, historyPath.resolve("branches"));
-            var errors = new ArrayList<RuntimeException>();
+            var errors = new ArrayList<Throwable>();
 
             for (var updater : updaters) {
                 errors.addAll(handleTags(localRepo, history, updater));
             }
 
