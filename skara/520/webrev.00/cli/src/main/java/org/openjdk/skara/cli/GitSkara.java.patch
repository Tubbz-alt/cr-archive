diff a/cli/src/main/java/org/openjdk/skara/cli/GitSkara.java b/cli/src/main/java/org/openjdk/skara/cli/GitSkara.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitSkara.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitSkara.java
@@ -22,34 +22,44 @@
  */
 package org.openjdk.skara.cli;
 
 import org.openjdk.skara.args.Main;
 import org.openjdk.skara.vcs.Repository;
+import org.openjdk.skara.version.Version;
 
 import java.io.IOException;
 import java.nio.file.Path;
 import java.nio.charset.StandardCharsets;
-import java.util.Arrays;
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Map;
-import java.util.TreeMap;
+import java.util.*;
 
 public class GitSkara {
 
     private static final Map<String, Main> commands = new TreeMap<>();
 
     private static void usage(String[] args) {
         var names = new ArrayList<String>();
         names.addAll(commands.keySet());
+        var skaraCommands = Set.of("help", "version", "update");
 
-        System.out.println("usage: git-skara <" + String.join("|", names) + ">");
+        System.out.println("usage: git skara <" + String.join("|", names) + ">");
         System.out.println("");
-        System.out.println("Additional available git commands");
+        System.out.println("Additional available git commands:");
         for (var name : names) {
-            System.out.println("- git-" + name);
+            if (!skaraCommands.contains(name)) {
+                System.out.println("- git " + name);
+            }
         }
+        System.out.println("");
+        System.out.println("For more information, please see the Skara wiki:");
+        System.out.println("");
+        System.out.println("    https://wiki.openjdk.java.net/display/skara");
+        System.out.println("");
+        System.exit(0);
+    }
+
+    private static void version(String[] args) {
+        System.out.println("git skara version: " + Version.fromManifest().orElse("unknown"));
         System.exit(0);
     }
 
     private static List<String> config(String key) throws IOException, InterruptedException {
         var pb = new ProcessBuilder("git", "config", key);
@@ -116,12 +126,14 @@
         commands.put("token", GitToken::main);
         commands.put("info", GitInfo::main);
         commands.put("translate", GitTranslate::main);
         commands.put("sync", GitSync::main);
         commands.put("publish", GitPublish::main);
+
         commands.put("update", GitSkara::update);
         commands.put("help", GitSkara::usage);
+        commands.put("version", GitSkara::version);
 
         var isEmpty = args.length == 0;
         var command = isEmpty ? "help" : args[0];
         var commandArgs = isEmpty ? new String[0] : Arrays.copyOfRange(args, 1, args.length);
         if (commands.containsKey(command)) {
