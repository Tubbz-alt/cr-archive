diff a/forge/src/main/java/org/openjdk/skara/forge/HostedBranch.java b/forge/src/main/java/org/openjdk/skara/forge/HostedBranch.java
--- a/forge/src/main/java/org/openjdk/skara/forge/HostedBranch.java
+++ b/forge/src/main/java/org/openjdk/skara/forge/HostedBranch.java
@@ -22,9 +22,44 @@
  */
 package org.openjdk.skara.forge;
 
 import org.openjdk.skara.vcs.Hash;
 
-public interface HostedBranch {
-    String name();
-    Hash hash();
+import java.util.Objects;
+
+public class HostedBranch {
+    private final String name;
+    private final Hash hash;
+
+    public HostedBranch(String name, Hash hash) {
+        this.name = name;
+        this.hash = hash;
+    }
+
+    public String name() {
+        return name;
+    }
+
+    public Hash hash() {
+        return hash;
+    }
+
+    @Override
+    public String toString() {
+        return name + "@" + hash.hex();
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(name, hash);
+    }
+
+    @Override
+    public boolean equals(Object other) {
+        if (!(other instanceof HostedBranch)) {
+            return false;
+        }
+
+        var o = (HostedBranch) other;
+        return Objects.equals(name, o.name) && Objects.equals(hash, o.hash);
+    }
 }
diff a/forge/src/main/java/org/openjdk/skara/forge/github/GitHubBranch.java b/forge/src/main/java/org/openjdk/skara/forge/github/GitHubBranch.java
--- a/forge/src/main/java/org/openjdk/skara/forge/github/GitHubBranch.java
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
- *
- * This code is free software; you can redistribute it and/or modify it
- * under the terms of the GNU General Public License version 2 only, as
- * published by the Free Software Foundation.
- *
- * This code is distributed in the hope that it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
- * version 2 for more details (a copy is included in the LICENSE file that
- * accompanied this code).
- *
- * You should have received a copy of the GNU General Public License version
- * 2 along with this work; if not, write to the Free Software Foundation,
- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
- *
- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
- * or visit www.oracle.com if you need additional information or have any
- * questions.
- */
-package org.openjdk.skara.forge.github;
-
-import org.openjdk.skara.forge.*;
-import org.openjdk.skara.vcs.Hash;
-
-import java.util.Objects;
-
-class GitHubBranch implements HostedBranch {
-    private final String name;
-    private final Hash hash;
-
-    GitHubBranch(String name, Hash hash) {
-        this.name = name;
-        this.hash = hash;
-    }
-
-    @Override
-    public String name() {
-        return name;
-    }
-
-    @Override
-    public Hash hash() {
-        return hash;
-    }
-
-    @Override
-    public String toString() {
-        return name + "@" + hash.hex();
-    }
-
-    @Override
-    public int hashCode() {
-        return Objects.hash(name, hash);
-    }
-
-    @Override
-    public boolean equals(Object other) {
-        if (!(other instanceof GitHubBranch)) {
-            return false;
-        }
-
-        var o = (GitHubBranch) other;
-        return Objects.equals(name, o.name) && Objects.equals(hash, o.hash);
-    }
-}
diff a/forge/src/main/java/org/openjdk/skara/forge/github/GitHubRepository.java b/forge/src/main/java/org/openjdk/skara/forge/github/GitHubRepository.java
--- a/forge/src/main/java/org/openjdk/skara/forge/github/GitHubRepository.java
+++ b/forge/src/main/java/org/openjdk/skara/forge/github/GitHubRepository.java
@@ -245,10 +245,10 @@
 
     @Override
     public List<HostedBranch> branches() {
         var branches = request.get("branches").execute();
         return branches.stream()
-                       .map(b -> new GitHubBranch(b.get("name").asString(),
+                       .map(b -> new HostedBranch(b.get("name").asString(),
                                                   new Hash(b.get("commit").get("sha").asString())))
                        .collect(Collectors.toList());
     }
 }
diff a/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabBranch.java b/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabBranch.java
--- a/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabBranch.java
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
- *
- * This code is free software; you can redistribute it and/or modify it
- * under the terms of the GNU General Public License version 2 only, as
- * published by the Free Software Foundation.
- *
- * This code is distributed in the hope that it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
- * version 2 for more details (a copy is included in the LICENSE file that
- * accompanied this code).
- *
- * You should have received a copy of the GNU General Public License version
- * 2 along with this work; if not, write to the Free Software Foundation,
- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
- *
- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
- * or visit www.oracle.com if you need additional information or have any
- * questions.
- */
-package org.openjdk.skara.forge.gitlab;
-
-import org.openjdk.skara.forge.*;
-import org.openjdk.skara.vcs.Hash;
-
-import java.util.Objects;
-
-class GitLabBranch implements HostedBranch {
-    private final String name;
-    private final Hash hash;
-
-    GitLabBranch(String name, Hash hash) {
-        this.name = name;
-        this.hash = hash;
-    }
-
-    @Override
-    public String name() {
-        return name;
-    }
-
-    @Override
-    public Hash hash() {
-        return hash;
-    }
-
-    @Override
-    public String toString() {
-        return name + "@" + hash.hex();
-    }
-
-    @Override
-    public int hashCode() {
-        return Objects.hash(name, hash);
-    }
-
-    @Override
-    public boolean equals(Object other) {
-        if (!(other instanceof GitLabBranch)) {
-            return false;
-        }
-
-        var o = (GitLabBranch) other;
-        return Objects.equals(name, o.name) && Objects.equals(hash, o.hash);
-    }
-}
diff a/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabRepository.java b/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabRepository.java
--- a/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabRepository.java
+++ b/forge/src/main/java/org/openjdk/skara/forge/gitlab/GitLabRepository.java
@@ -267,10 +267,10 @@
 
     @Override
     public List<HostedBranch> branches() {
         var branches = request.get("branches").execute();
         return branches.stream()
-                       .map(b -> new GitLabBranch(b.get("name").asString(),
+                       .map(b -> new HostedBranch(b.get("name").asString(),
                                                   new Hash(b.get("commit").get("id").asString())))
                        .collect(Collectors.toList());
     }
 }
diff a/test/src/main/java/org/openjdk/skara/test/TestHostedBranch.java b/test/src/main/java/org/openjdk/skara/test/TestHostedBranch.java
--- a/test/src/main/java/org/openjdk/skara/test/TestHostedBranch.java
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
- *
- * This code is free software; you can redistribute it and/or modify it
- * under the terms of the GNU General Public License version 2 only, as
- * published by the Free Software Foundation.
- *
- * This code is distributed in the hope that it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
- * version 2 for more details (a copy is included in the LICENSE file that
- * accompanied this code).
- *
- * You should have received a copy of the GNU General Public License version
- * 2 along with this work; if not, write to the Free Software Foundation,
- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
- *
- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
- * or visit www.oracle.com if you need additional information or have any
- * questions.
- */
-package org.openjdk.skara.test;
-
-import org.openjdk.skara.forge.*;
-import org.openjdk.skara.vcs.Hash;
-
-import java.util.Objects;
-
-class TestHostedBranch implements HostedBranch {
-    private final String name;
-    private final Hash hash;
-
-    TestHostedBranch(String name, Hash hash) {
-        this.name = name;
-        this.hash = hash;
-    }
-
-    @Override
-    public String name() {
-        return name;
-    }
-
-    @Override
-    public Hash hash() {
-        return hash;
-    }
-
-    @Override
-    public String toString() {
-        return name + "@" + hash.hex();
-    }
-
-    @Override
-    public int hashCode() {
-        return Objects.hash(name, hash);
-    }
-
-    @Override
-    public boolean equals(Object other) {
-        if (!(other instanceof TestHostedBranch)) {
-            return false;
-        }
-
-        var o = (TestHostedBranch) other;
-        return Objects.equals(name, o.name) && Objects.equals(hash, o.hash);
-    }
-}
diff a/test/src/main/java/org/openjdk/skara/test/TestHostedRepository.java b/test/src/main/java/org/openjdk/skara/test/TestHostedRepository.java
--- a/test/src/main/java/org/openjdk/skara/test/TestHostedRepository.java
+++ b/test/src/main/java/org/openjdk/skara/test/TestHostedRepository.java
@@ -188,11 +188,11 @@
     @Override
     public List<HostedBranch> branches() {
         try {
             var result = new ArrayList<HostedBranch>();
             for (var b : localRepository.branches()) {
-                result.add(new TestHostedBranch(b.name(), localRepository.resolve(b).orElseThrow()));
+                result.add(new HostedBranch(b.name(), localRepository.resolve(b).orElseThrow()));
             }
             return result;
         } catch (IOException e) {
             throw new RuntimeException(e);
         }
