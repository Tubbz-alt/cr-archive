diff a/forge/src/main/java/org/openjdk/skara/forge/github/GitHubHost.java b/forge/src/main/java/org/openjdk/skara/forge/github/GitHubHost.java
--- a/forge/src/main/java/org/openjdk/skara/forge/github/GitHubHost.java
+++ b/forge/src/main/java/org/openjdk/skara/forge/github/GitHubHost.java
@@ -28,10 +28,11 @@
 import org.openjdk.skara.network.*;
 
 import java.io.IOException;
 import java.net.*;
 import java.nio.charset.StandardCharsets;
+import java.time.*;
 import java.util.*;
 import java.util.logging.Logger;
 import java.util.regex.Pattern;
 
 public class GitHubHost implements Forge {
@@ -40,19 +41,22 @@
     private final String webUriReplacement;
     private final GitHubApplication application;
     private final Credential pat;
     private final RestRequest request;
     private final RestRequest graphQL;
+    private final Duration searchInterval;
     private HostUser currentUser;
+    private volatile Instant lastSearch = Instant.now();
     private final Logger log = Logger.getLogger("org.openjdk.skara.forge.github");
 
     public GitHubHost(URI uri, GitHubApplication application, Pattern webUriPattern, String webUriReplacement) {
         this.uri = uri;
         this.webUriPattern = webUriPattern;
         this.webUriReplacement = webUriReplacement;
         this.application = application;
         this.pat = null;
+        searchInterval = Duration.ofSeconds(3);
 
         var baseApi = URIBuilder.base(uri)
                 .appendSubDomain("api")
                 .setPath("/")
                 .build();
@@ -86,10 +90,11 @@
         this.uri = uri;
         this.webUriPattern = webUriPattern;
         this.webUriReplacement = webUriReplacement;
         this.pat = pat;
         this.application = null;
+        searchInterval = Duration.ofSeconds(3);
 
         var baseApi = URIBuilder.base(uri)
                                 .appendSubDomain("api")
                                 .setPath("/")
                                 .build();
@@ -114,10 +119,11 @@
         this.uri = uri;
         this.webUriPattern = webUriPattern;
         this.webUriReplacement = webUriReplacement;
         this.pat = null;
         this.application = null;
+        searchInterval = Duration.ofSeconds(10);
 
         var baseApi = URIBuilder.base(uri)
                                 .appendSubDomain("api")
                                 .setPath("/")
                                 .build();
@@ -197,10 +203,24 @@
                              .execute();
         return project.asObject();
     }
 
     JSONObject runSearch(String query) {
+        // Searches on GitHub uses a special rate limit, so make sure to wait between consecutive searches
+        while (true) {
+            synchronized (this) {
+                if (lastSearch.isBefore(Instant.now().minus(searchInterval))) {
+                    lastSearch = Instant.now();
+                    break;
+                }
+            }
+            log.fine("Searching too fast - waiting");
+            try {
+                Thread.sleep(Duration.ofMillis(500).toMillis());
+            } catch (InterruptedException ignored) {
+            }
+        }
         var result = request.get("search/issues")
                             .param("q", query)
                             .execute();
         return result.asObject();
     }
