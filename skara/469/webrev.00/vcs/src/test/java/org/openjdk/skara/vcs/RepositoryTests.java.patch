diff a/vcs/src/test/java/org/openjdk/skara/vcs/RepositoryTests.java b/vcs/src/test/java/org/openjdk/skara/vcs/RepositoryTests.java
--- a/vcs/src/test/java/org/openjdk/skara/vcs/RepositoryTests.java
+++ b/vcs/src/test/java/org/openjdk/skara/vcs/RepositoryTests.java
@@ -274,23 +274,22 @@
             assertEquals(List.of("Add README"), commit.message());
 
             assertEquals(1, commit.numParents());
             assertEquals(1, commit.parents().size());
 
-            var nullHash = "0".repeat(40);
             var parent = commit.parents().get(0);
-            assertEquals(nullHash, parent.hex());
+            assertEquals(Hash.zero(), parent);
 
             assertTrue(commit.isInitialCommit());
             assertFalse(commit.isMerge());
             assertEquals(hash, commit.hash());
 
             var diffs = commit.parentDiffs();
             assertEquals(1, diffs.size());
 
             var diff = diffs.get(0);
-            assertEquals(nullHash, diff.from().hex());
+            assertEquals(Hash.zero(), diff.from());
             assertEquals(hash, diff.to());
 
             assertEquals(0, diff.removed());
             assertEquals(0, diff.modified());
             assertEquals(1, diff.added());
@@ -2172,9 +2171,9 @@
             assertEquals(2, status.size());
             var statusEntry = status.get(0);
             assertTrue(statusEntry.status().isUnmerged());
             assertEquals(Path.of("README"), statusEntry.source().path().get());
             assertEquals(Optional.empty(), statusEntry.source().type());
-            assertEquals("0".repeat(40), statusEntry.source().hash().hex());
+            assertEquals(Hash.zero(), statusEntry.source().hash());
         }
     }
 }
