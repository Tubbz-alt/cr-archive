diff a/jcheck/src/test/java/org/openjdk/skara/jcheck/ExecutableCheckTests.java b/jcheck/src/test/java/org/openjdk/skara/jcheck/ExecutableCheckTests.java
--- a/jcheck/src/test/java/org/openjdk/skara/jcheck/ExecutableCheckTests.java
+++ b/jcheck/src/test/java/org/openjdk/skara/jcheck/ExecutableCheckTests.java
@@ -35,25 +35,24 @@
 import java.util.ArrayList;
 import java.time.ZonedDateTime;
 import java.io.IOException;
 
 class ExecutableCheckTests {
-    private static final Hash NULL_HASH = new Hash("0".repeat(40));
     private static final JCheckConfiguration conf = JCheckConfiguration.parse(List.of(
         "[general]",
         "project = test",
         "[checks]",
         "error = executable"
     ));
 
     private static List<Diff> parentDiffs(String filename, String mode) {
         var hunk = new Hunk(new Range(1, 0), List.of(),
                             new Range(1, 1), List.of("An additional line"));
-        var patch = new TextualPatch(Path.of(filename), FileType.fromOctal("100644"), NULL_HASH,
-                                     Path.of(filename), FileType.fromOctal(mode), NULL_HASH,
+        var patch = new TextualPatch(Path.of(filename), FileType.fromOctal("100644"), Hash.zero(),
+                                     Path.of(filename), FileType.fromOctal(mode), Hash.zero(),
                                      Status.from('M'), List.of(hunk));
-        var diff = new Diff(NULL_HASH, NULL_HASH, List.of(patch));
+        var diff = new Diff(Hash.zero(), Hash.zero(), List.of(patch));
         return List.of(diff);
     }
 
 
     private static Commit commit(List<Diff> parentDiffs) {
