diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ArchiveReaderWorkItem.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ArchiveReaderWorkItem.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ArchiveReaderWorkItem.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ArchiveReaderWorkItem.java
@@ -55,11 +55,11 @@
     }
 
     @Override
     public void run(Path scratchPath) {
         // Give the bot a chance to act on all found messages
-        var conversations = list.conversations(Duration.ofDays(60));
+        var conversations = list.conversations(Duration.ofDays(365));
         for (var conversation : conversations) {
             bot.inspect(conversation);
         }
     }
 }
diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListArchiveReaderBot.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListArchiveReaderBot.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListArchiveReaderBot.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListArchiveReaderBot.java
@@ -25,10 +25,11 @@
 import org.openjdk.skara.bot.*;
 import org.openjdk.skara.email.*;
 import org.openjdk.skara.forge.*;
 import org.openjdk.skara.mailinglist.*;
 
+import java.time.*;
 import java.util.*;
 import java.util.concurrent.*;
 import java.util.logging.Logger;
 import java.util.regex.Pattern;
 import java.util.stream.Collectors;
@@ -90,12 +91,14 @@
             // Matching pull request found!
             parsedConversations.put(conversation.first().id(), pr.get());
             parsedEmailIds.remove(first.id());
         }
 
-        // Are there any new messages?
+        // Are there any new messages? We avoid looking further back than 14 days. If the bridge has been down
+        // for more than 14 days, this may have to be temporarily increased.
         var newMessages = conversation.allMessages().stream()
+                                      .filter(email -> email.date().isAfter(ZonedDateTime.now().minus(Duration.ofDays(14))))
                                       .filter(email -> !parsedEmailIds.contains(email.id()))
                                       .collect(Collectors.toList());
         if (newMessages.isEmpty()) {
             return;
         }
