diff a/buildSrc/images/src/main/java/org/openjdk/skara/gradle/images/LinkTask.java b/buildSrc/images/src/main/java/org/openjdk/skara/gradle/images/LinkTask.java
--- a/buildSrc/images/src/main/java/org/openjdk/skara/gradle/images/LinkTask.java
+++ b/buildSrc/images/src/main/java/org/openjdk/skara/gradle/images/LinkTask.java
@@ -41,10 +41,11 @@
 
 public class LinkTask extends DefaultTask {
     private final Property<String> os;
     private final Property<String> cpu;
     private final Property<String> url;
+    private final Property<String> jlink;
     private final Property<Path> toDir;
     private final MapProperty<String, String> launchers;
     private final ListProperty<String> modules;
     private final SetProperty<RegularFile> modulePath;
     private final SetProperty<FileSystemLocation> runtimeModules;
@@ -52,10 +53,11 @@
     @Inject
     public LinkTask(ObjectFactory factory) {
         os = factory.property(String.class);
         cpu = factory.property(String.class);
         url = factory.property(String.class);
+        jlink = factory.property(String.class);
         toDir = factory.property(Path.class);
         launchers = factory.mapProperty(String.class, String.class);
         modules = factory.listProperty(String.class);
         modulePath = factory.setProperty(RegularFile.class);
         runtimeModules = factory.setProperty(FileSystemLocation.class);
@@ -79,10 +81,15 @@
     @Input
     Property<String> getUrl() {
         return url;
     }
 
+    @Input
+    Property<String> getJLink() {
+        return jlink;
+    }
+
     @Input
     MapProperty<String, String> getLaunchers() {
         return launchers;
     }
 
@@ -161,13 +168,12 @@
         }
 
         Collections.sort(modulePath);
         Collections.sort(allModules);
 
-        var jlink = Path.of(System.getProperty("java.home"), "bin", "jlink").toAbsolutePath().toString();
         project.exec((spec) -> {
-            spec.setCommandLine(jlink, "--module-path", String.join(File.pathSeparator, modulePath),
+            spec.setCommandLine(jlink.get(), "--module-path", String.join(File.pathSeparator, modulePath),
                                        "--add-modules", String.join(",", allModules),
                                        "--no-man-pages",
                                        "--no-header-files",
                                        "--compress", "2",
                                        "--vm", "server",
