diff a/webrev/src/test/java/org/openjdk/skara/webrev/WebrevTests.java b/webrev/src/test/java/org/openjdk/skara/webrev/WebrevTests.java
--- a/webrev/src/test/java/org/openjdk/skara/webrev/WebrevTests.java
+++ b/webrev/src/test/java/org/openjdk/skara/webrev/WebrevTests.java
@@ -34,11 +34,11 @@
 
 import static org.junit.jupiter.api.Assertions.assertTrue;
 
 class WebrevTests {
     void assertContains(Path file, String text) throws IOException {
-        var contents = Files.readString(file);
+        var contents = Files.readString(file).replaceAll("\\R", "\n");
         assertTrue(contents.contains(text));
     }
 
     @ParameterizedTest
     @EnumSource(VCS.class)
@@ -53,10 +53,11 @@
             Files.writeString(file, "1\n2\n3\n4\n", StandardCharsets.UTF_8);
             repo.add(file);
             var hash2 = repo.commit("Commit 2", "a", "a@a.a");
 
             new Webrev.Builder(repo, webrevFolder.path()).generate(hash1, hash2);
+            assertContains(webrevFolder.path().resolve("x.txt"), "1\n2\n3\n4\n");
             assertContains(webrevFolder.path().resolve("index.html"), "<td>1 lines changed; 1 ins; 0 del; 0 mod; 3 unchg</td>");
         }
     }
 
     @ParameterizedTest
@@ -171,6 +172,27 @@
             var hash2 = repo.commit("Modified binary file", "a", "a@a.a");
 
             new Webrev.Builder(repo, tmp.path().resolve("webrev")).generate(hash1, hash2);
         }
     }
+
+    @ParameterizedTest
+    @EnumSource(VCS.class)
+    void reservedName(VCS vcs) throws IOException {
+        try (var repoFolder = new TemporaryDirectory();
+             var webrevFolder = new TemporaryDirectory()) {
+            var repo = Repository.init(repoFolder.path(), vcs);
+            var file = repoFolder.path().resolve("index.html");
+            Files.writeString(file, "1\n2\n3\n", StandardCharsets.UTF_8);
+            repo.add(file);
+            var hash1 = repo.commit("Commit", "a", "a@a.a");
+            Files.writeString(file, "1\n2\n3\n4\n", StandardCharsets.UTF_8);
+            repo.add(file);
+            var hash2 = repo.commit("Commit 2", "a", "a@a.a");
+
+            new Webrev.Builder(repo, webrevFolder.path()).generate(hash1, hash2);
+            assertContains(webrevFolder.path().resolve("_index.html"), "1\n2\n3\n4\n");
+            assertContains(webrevFolder.path().resolve("index.html"), "<td>1 lines changed; 1 ins; 0 del; 0 mod; 3 unchg</td>");
+        }
+    }
+
 }
