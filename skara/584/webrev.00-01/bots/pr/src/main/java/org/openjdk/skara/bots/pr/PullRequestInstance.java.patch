diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/PullRequestInstance.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/PullRequestInstance.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/PullRequestInstance.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/PullRequestInstance.java
@@ -137,11 +137,11 @@
         var commitMessage = commitMessage(activeReviews, namespace);
         return localRepo.commit(commitMessage, author.name(), author.email(), committer.name(), committer.email());
     }
 
     private Hash commitMerge(List<Review> activeReviews, Namespace namespace, String censusDomain, String sponsorId) throws IOException, CommitFailure {
-        // Find the single merge commit with an incoming parent outside of the merge target
+        // Find the first merge commit with an incoming parent outside of the merge target
         // The very last commit is not eligible (as the merge needs a parent)
         var commits = localRepo.commitMetadata(baseHash, headHash);
         int mergeCommitIndex = commits.size();
         for (int i = 0; i < commits.size() - 1; ++i) {
             if (commits.get(i).isMerge()) {
@@ -150,15 +150,12 @@
                     if (!localRepo.isAncestor(baseHash, commits.get(i).parents().get(j))) {
                         isSourceMerge = true;
                     }
                 }
                 if (isSourceMerge) {
-                    if (mergeCommitIndex != commits.size()) {
-                        // TODO: We could allow this
-                        throw new CommitFailure("A merge PR is only allowed to contain a single merge commit with incoming changes. Please amend!");
-                    }
                     mergeCommitIndex = i;
+                    break;
                 } else {
                     // TODO: We can solve this with retroactive rerere
                     throw new CommitFailure("A merge PR is only allowed to contain a single merge commit. You will need to amend your commits.");
                 }
             }
