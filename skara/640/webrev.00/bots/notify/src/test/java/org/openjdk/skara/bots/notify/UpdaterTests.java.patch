diff a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
--- a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
+++ b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/UpdaterTests.java
@@ -45,12 +45,12 @@
     public static StorageBuilder<UpdatedBranch> createBranchStorage(HostedRepository repository) {
         return new StorageBuilder<UpdatedBranch>("branches.txt")
                 .remoteRepository(repository, "history", "Duke", "duke@openjdk.java.net", "Updated branches");
     }
 
-    public static StorageBuilder<PullRequestIssues> createPullRequestIssuesStorage(HostedRepository repository) {
-        return new StorageBuilder<PullRequestIssues>("prissues.txt")
+    public static StorageBuilder<PullRequestState> createPullRequestStateStorage(HostedRepository repository) {
+        return new StorageBuilder<PullRequestState>("prissues.txt")
                 .remoteRepository(repository, "history", "Duke", "duke@openjdk.java.net", "Updated prissues");
     }
 
     private static class TestRepositoryUpdateConsumer implements RepositoryUpdateConsumer {
         private final String name;
@@ -110,22 +110,22 @@
             credentials.commitLock(localRepo);
             localRepo.pushAll(repo.url());
 
             var tagStorage = createTagStorage(repo);
             var branchStorage = createBranchStorage(repo);
-            var prIssuesStorage = createPullRequestIssuesStorage(repo);
+            var prStateStorage = createPullRequestStateStorage(repo);
             var storageFolder = tempFolder.path().resolve("storage");
 
             var idempotent = new TestRepositoryUpdateConsumer("i", true);
             var nonIdempotent = new TestRepositoryUpdateConsumer("ni", false);
             var notifyBot = NotifyBot.newBuilder()
                                      .repository(repo)
                                      .storagePath(storageFolder)
                                      .branches(Pattern.compile("master"))
                                      .tagStorageBuilder(tagStorage)
                                      .branchStorageBuilder(branchStorage)
-                                     .prIssuesStorageBuilder(prIssuesStorage)
+                                     .prStateStorageBuilder(prStateStorage)
                                      .updaters(List.of(idempotent, nonIdempotent))
                                      .build();
 
             // Initialize history
             TestBotRunner.runPeriodicItems(notifyBot);
