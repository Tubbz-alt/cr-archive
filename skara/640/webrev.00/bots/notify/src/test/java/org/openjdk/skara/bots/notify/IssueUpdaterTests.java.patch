diff a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/IssueUpdaterTests.java b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/IssueUpdaterTests.java
--- a/bots/notify/src/test/java/org/openjdk/skara/bots/notify/IssueUpdaterTests.java
+++ b/bots/notify/src/test/java/org/openjdk/skara/bots/notify/IssueUpdaterTests.java
@@ -46,11 +46,11 @@
             credentials.commitLock(localRepo);
             localRepo.pushAll(repo.url());
 
             var tagStorage = createTagStorage(repo);
             var branchStorage = createBranchStorage(repo);
-            var prIssuesStorage = createPullRequestIssuesStorage(repo);
+            var prStateStorage = createPullRequestStateStorage(repo);
             var storageFolder = tempFolder.path().resolve("storage");
 
             var issueProject = credentials.getIssueProject();
             var commitIcon = URI.create("http://www.example.com/commit.png");
             var updater = IssueUpdater.newBuilder()
@@ -62,11 +62,11 @@
                                      .repository(repo)
                                      .storagePath(storageFolder)
                                      .branches(Pattern.compile("master"))
                                      .tagStorageBuilder(tagStorage)
                                      .branchStorageBuilder(branchStorage)
-                                     .prIssuesStorageBuilder(prIssuesStorage)
+                                     .prStateStorageBuilder(prStateStorage)
                                      .updaters(List.of(updater))
                                      .build();
 
             // Initialize history
             TestBotRunner.runPeriodicItems(notifyBot);
@@ -114,11 +114,11 @@
             credentials.commitLock(localRepo);
             localRepo.pushAll(repo.url());
 
             var tagStorage = createTagStorage(repo);
             var branchStorage = createBranchStorage(repo);
-            var prIssuesStorage = createPullRequestIssuesStorage(repo);
+            var prStateStorage = createPullRequestStateStorage(repo);
             var storageFolder = tempFolder.path().resolve("storage");
 
             var issueProject = credentials.getIssueProject();
             var reviewIcon = URI.create("http://www.example.com/review.png");
             var updater = IssueUpdater.newBuilder()
@@ -130,11 +130,11 @@
                                      .repository(repo)
                                      .storagePath(storageFolder)
                                      .branches(Pattern.compile("master"))
                                      .tagStorageBuilder(tagStorage)
                                      .branchStorageBuilder(branchStorage)
-                                     .prIssuesStorageBuilder(prIssuesStorage)
+                                     .prStateStorageBuilder(prStateStorage)
                                      .prUpdaters(List.of(updater))
                                      .readyLabels(Set.of("rfr"))
                                      .readyComments(Map.of(reviewer.forge().currentUser().userName(), Pattern.compile("This is now ready")))
                                      .build();
 
@@ -215,11 +215,11 @@
             credentials.commitLock(localRepo);
             localRepo.pushAll(repo.url());
 
             var tagStorage = createTagStorage(repo);
             var branchStorage = createBranchStorage(repo);
-            var prIssuesStorage = createPullRequestIssuesStorage(repo);
+            var prStateStorage = createPullRequestStateStorage(repo);
             var storageFolder = tempFolder.path().resolve("storage");
 
             var issueProject = credentials.getIssueProject();
             var reviewIcon = URI.create("http://www.example.com/review.png");
             var updater = IssueUpdater.newBuilder()
@@ -232,11 +232,11 @@
                                      .repository(repo)
                                      .storagePath(storageFolder)
                                      .branches(Pattern.compile("master"))
                                      .tagStorageBuilder(tagStorage)
                                      .branchStorageBuilder(branchStorage)
-                                     .prIssuesStorageBuilder(prIssuesStorage)
+                                     .prStateStorageBuilder(prStateStorage)
                                      .prUpdaters(List.of(updater)).readyLabels(Set.of("rfr"))
                                      .readyComments(Map.of(reviewer.forge().currentUser().userName(), Pattern.compile("This is now ready")))
                                      .build();
             // Initialize history
             TestBotRunner.runPeriodicItems(notifyBot);
@@ -274,11 +274,11 @@
             credentials.commitLock(localRepo);
             localRepo.pushAll(repo.url());
 
             var tagStorage = createTagStorage(repo);
             var branchStorage = createBranchStorage(repo);
-            var prIssuesStorage = createPullRequestIssuesStorage(repo);
+            var prStateStorage = createPullRequestStateStorage(repo);
             var storageFolder = tempFolder.path().resolve("storage");
 
             var issueProject = credentials.getIssueProject();
             var reviewIcon = URI.create("http://www.example.com/review.png");
             var updater = IssueUpdater.newBuilder()
@@ -291,11 +291,11 @@
                                      .repository(repo)
                                      .storagePath(storageFolder)
                                      .branches(Pattern.compile(".*"))
                                      .tagStorageBuilder(tagStorage)
                                      .branchStorageBuilder(branchStorage)
-                                     .prIssuesStorageBuilder(prIssuesStorage)
+                                     .prStateStorageBuilder(prStateStorage)
                                      .updaters(List.of(updater))
                                      .prUpdaters(List.of(updater))
                                      .build();
 
             // Initialize history
