diff a/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java b/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java
--- a/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java
+++ b/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java
@@ -411,11 +411,11 @@
             listServer.processIncoming();
             listServer.processIncoming();
 
             // Make several file specific comments
             var first = pr.addReviewComment(masterHash, editHash, reviewFile.toString(), 2, "Review comment");
-            pr.addReviewComment(masterHash, editHash, reviewFile.toString(), 2, "Another review comment");
+            var second = pr.addReviewComment(masterHash, editHash, reviewFile.toString(), 2, "Another review comment");
             pr.addReviewComment(masterHash, editHash, reviewFile.toString(), 2, "Further review comment");
             pr.addReviewComment(masterHash, editHash, reviewFile.toString(), 2, "Final review comment");
             TestBotRunner.runPeriodicItems(mlBot);
             listServer.processIncoming();
 
@@ -441,12 +441,13 @@
             assertEquals(2, reviewReply.body().split("> This is now ready").length, reviewReply.body());
             assertEquals("RFR: This is a pull request", reviewReply.subject());
             assertTrue(reviewReply.body().contains("Review comment\n\n"), reviewReply.body());
             assertTrue(reviewReply.body().contains("Another review comment"), reviewReply.body());
 
-            // Now reply to the first (collapsed) comment
+            // Now reply to the first and second (collapsed) comment
             pr.addReviewCommentReply(first, "I agree");
+            pr.addReviewCommentReply(second, "Not with this one though");
             TestBotRunner.runPeriodicItems(mlBot);
             listServer.processIncoming();
 
             // The archive should contain a new entry
             Repository.materialize(archiveFolder.path(), archive.url(), "master");
@@ -643,11 +644,11 @@
             TestBotRunner.runPeriodicItems(mlBot);
             listServer.processIncoming();
 
             // Sanity check the archive
             Repository.materialize(archiveFolder.path(), archive.url(), "master");
-            assertEquals(3, archiveContainsCount(archiveFolder.path(), "^On.*wrote:"));
+            assertEquals(2, archiveContainsCount(archiveFolder.path(), "^On.*wrote:"));
         }
     }
 
     @Test
     void reviewContext(TestInfo testInfo) throws IOException {
