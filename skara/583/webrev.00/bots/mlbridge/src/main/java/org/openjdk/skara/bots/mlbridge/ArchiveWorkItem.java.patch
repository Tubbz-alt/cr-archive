diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ArchiveWorkItem.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ArchiveWorkItem.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ArchiveWorkItem.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ArchiveWorkItem.java
@@ -78,11 +78,11 @@
         for (int counter = 0; counter < 3; ++counter) {
             try {
                 var localHead = localRepo.head();
                 localRepo.add(localRepo.root().resolve("."));
                 var hash = localRepo.commit(message, bot.emailAddress().fullName().orElseThrow(), bot.emailAddress().address());
-                var remoteHead = localRepo.fetch(bot.archiveRepo().url(), bot.archiveRef());
+                var remoteHead = localRepo.fetch(bot.archiveRepo().url(), bot.archiveRef(), false);
                 if (!localHead.equals(remoteHead)) {
                     log.info("Remote head has changed - attempting a rebase");
                     localRepo.rebase(remoteHead, bot.emailAddress().fullName().orElseThrow(), bot.emailAddress().address());
                     hash = localRepo.head();
                 }
@@ -293,11 +293,11 @@
             var seedPath = bot.seedStorage().orElse(scratchPath.resolve("seeds"));
             var hostedRepositoryPool = new HostedRepositoryPool(seedPath);
             var repository = pr.repository();
             var localRepoPath = scratchPath.resolve("mlbridge-mergebase");
             var localRepo = hostedRepositoryPool.checkout(pr, localRepoPath.resolve(repository.name()));
-            localRepo.fetch(repository.url(), "+" + pr.targetRef() + ":mlbridge_prinstance");
+            localRepo.fetch(repository.url(), "+" + pr.targetRef() + ":mlbridge_prinstance", false);
 
             var targetHash = pr.targetHash();
             var headHash = pr.headHash();
             var baseHash = localRepo.mergeBase(targetHash, headHash);
 
