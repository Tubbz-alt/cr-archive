diff a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java
--- a/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java
+++ b/bots/pr/src/main/java/org/openjdk/skara/bots/pr/CheckRun.java
@@ -38,10 +38,11 @@
 
 class CheckRun {
     private final CheckWorkItem workItem;
     private final PullRequest pr;
     private final PullRequestInstance prInstance;
+    private final CheckablePullRequest checkablePullRequest;
     private final List<Comment> comments;
     private final List<Review> allReviews;
     private final List<Review> activeReviews;
     private final Set<String> labels;
     private final CensusInstance censusInstance;
@@ -58,10 +59,11 @@
                      List<Review> allReviews, List<Review> activeReviews, Set<String> labels,
                      CensusInstance censusInstance, boolean ignoreStaleReviews) {
         this.workItem = workItem;
         this.pr = pr;
         this.prInstance = prInstance;
+        this.checkablePullRequest = new CheckablePullRequest(prInstance, ignoreStaleReviews);
         this.comments = comments;
         this.allReviews = allReviews;
         this.activeReviews = activeReviews;
         this.labels = new HashSet<>(labels);
         this.newLabels = new HashSet<>(labels);
@@ -422,11 +424,11 @@
 
         message.append("- If you would like to add a summary, use the `/summary` command.\n");
         message.append("- To credit additional contributors, use the `/contributor` command.\n");
         message.append("- To add additional solved issues, use the `/solves` command.\n");
 
-        var divergingCommits = prInstance.divergingCommits();
+        var divergingCommits = checkablePullRequest.divergingCommits();
         if (divergingCommits.size() > 0) {
             message.append("\n");
             message.append("Since the source branch of this PR was last updated there ");
             if (divergingCommits.size() == 1) {
                 message.append("has been 1 commit ");
@@ -585,30 +587,30 @@
             pr.createCheck(checkBuilder.build());
 
             var ignored = new PrintWriter(new StringWriter());
             var rebasePossible = true;
             var commitHash = pr.headHash();
-            var mergedHash = prInstance.mergeTarget(ignored);
+            var mergedHash = checkablePullRequest.mergeTarget(ignored);
             if (mergedHash.isPresent()) {
                 commitHash = mergedHash.get();
             } else {
                 rebasePossible = false;
             }
 
             List<String> additionalErrors = List.of();
             Hash localHash;
             try {
-                localHash = prInstance.commit(commitHash, censusInstance.namespace(), censusDomain, null);
+                localHash = checkablePullRequest.commit(commitHash, censusInstance.namespace(), censusDomain, null);
             } catch (CommitFailure e) {
                 additionalErrors = List.of(e.getMessage());
                 localHash = prInstance.baseHash();
             }
-            PullRequestCheckIssueVisitor visitor = prInstance.createVisitor(localHash, censusInstance);
+            PullRequestCheckIssueVisitor visitor = checkablePullRequest.createVisitor(localHash, censusInstance);
             if (!localHash.equals(prInstance.baseHash())) {
                 // Determine current status
                 var additionalConfiguration = AdditionalConfiguration.get(prInstance.localRepo(), localHash, pr.repository().forge().currentUser(), comments);
-                prInstance.executeChecks(localHash, censusInstance, visitor, additionalConfiguration);
+                checkablePullRequest.executeChecks(localHash, censusInstance, visitor, additionalConfiguration);
                 additionalErrors = botSpecificChecks(localHash);
             } else {
                 if (additionalErrors.isEmpty()) {
                     additionalErrors = List.of("This PR contains no changes");
                 }
