diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/ReviewArchive.java
@@ -182,10 +182,13 @@
     }
 
     private String parentAuthorPath(ArchiveItem item) {
         var ret = new StringBuilder();
         ret.append(item.author().id());
+        ret.append(":");
+        ret.append(item.subject());
+        ret.append(":");
         while (item.parent().isPresent()) {
             item = item.parent().get();
             ret.append(".");
             ret.append(item.author().id());
         }
diff a/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java b/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java
--- a/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java
+++ b/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java
@@ -321,10 +321,13 @@
 
             // There should be an RFR thread
             Repository.materialize(archiveFolder.path(), archive.url(), "master");
             assertTrue(archiveContains(archiveFolder.path(), "Subject: RFR: 1234: This is a pull request"));
 
+            // Add a comment quickly before integration - it should not be combined with the integration message
+            pr.addComment("I will now integrate this PR");
+
             // Now it has been integrated
             var ignoredPr = ignored.pullRequest(pr.id());
             ignoredPr.setBody("This has been integrated");
             ignoredPr.addLabel("integrated");
             ignoredPr.addComment("Pushed as commit " + editHash + ".");
@@ -333,10 +336,11 @@
             // Run another archive pass
             TestBotRunner.runPeriodicItems(mlBot);
 
             // The archive should now contain another entry
             Repository.materialize(archiveFolder.path(), archive.url(), "master");
+            assertTrue(archiveContains(archiveFolder.path(), "Subject: Re: RFR: 1234: This is a pull request"));
             assertTrue(archiveContains(archiveFolder.path(), "Subject: Integrated: 1234: This is a pull request"));
             assertFalse(archiveContains(archiveFolder.path(), "\\[Closed\\]"));
         }
     }
 
