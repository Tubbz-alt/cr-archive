diff a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gst-plugins-good/gst/spectrum/gstspectrum.h b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gst-plugins-good/gst/spectrum/gstspectrum.h
--- a/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gst-plugins-good/gst/spectrum/gstspectrum.h
+++ b/modules/javafx.media/src/main/native/gstreamer/gstreamer-lite/gst-plugins-good/gst/spectrum/gstspectrum.h
@@ -38,10 +38,19 @@
 typedef struct _GstSpectrumChannel GstSpectrumChannel;
 
 typedef void (*GstSpectrumInputData)(const guint8 * in, gfloat * out,
     guint len, guint channels, gfloat max_value, guint op, guint nfft);
 
+#if defined (GSTREAMER_LITE) && defined (OSX)
+// Used to overwrite post_message callback to get spectrum messages in OSXPlatform.
+// We cannot use GST_ELEMENT_GET_CLASS(spectrum)->post_message, since it will
+// change callback for all instances of spectrum elements and it will conflict
+// with GStreamer platform.
+typedef gboolean (*PostMessageCallbackProc)(GstElement * element,
+                                            GstMessage * message);
+#endif // GSTREAMER_LITE and OSX
+
 struct _GstSpectrumChannel
 {
   gfloat *input;
   gfloat *input_tmp;
   GstFFTF32Complex *freqdata;
@@ -84,10 +93,11 @@
 
 #if defined (GSTREAMER_LITE) && defined (OSX)
   guint bps_user; // User provided values to avoid more complex spectrum initialization
   guint bpf_user;
   void *user_data;
+  PostMessageCallbackProc post_message_callback;
 #endif // GSTREAMER_LITE and OSX
 };
 
 struct _GstSpectrumClass
 {
