diff a/modules/javafx.controls/src/test/java/test/javafx/scene/control/skin/ButtonSkinTest.java b/modules/javafx.controls/src/test/java/test/javafx/scene/control/skin/ButtonSkinTest.java
--- a/modules/javafx.controls/src/test/java/test/javafx/scene/control/skin/ButtonSkinTest.java
+++ b/modules/javafx.controls/src/test/java/test/javafx/scene/control/skin/ButtonSkinTest.java
@@ -45,10 +45,11 @@
 import javafx.scene.Node;
 import javafx.scene.control.skin.ButtonSkin;
 import javafx.scene.shape.Rectangle;
 
 import org.junit.Before;
+import org.junit.After;
 import org.junit.Test;
 
 import java.lang.ref.WeakReference;
 
 /**
@@ -62,11 +63,21 @@
         skin = new ButtonSkinMock(button);
         // Set some padding so that any places where padding was being
         // computed but wasn't expected will be caught.
         button.setPadding(new Insets(10, 10, 10, 10));
         button.setSkin(skin);
+        Thread.currentThread().setUncaughtExceptionHandler((thread, throwable) -> {
+            if (throwable instanceof RuntimeException) {
+                throw (RuntimeException)throwable;
+            } else {
+                Thread.currentThread().getThreadGroup().uncaughtException(thread, throwable);
+            }
+        });
+    }
 
+    @After public void cleanup() {
+        Thread.currentThread().setUncaughtExceptionHandler(null);
     }
 
     @Test public void maxWidthTracksPreferred() {
         button.setPrefWidth(500);
         assertEquals(500, button.maxWidth(-1), 0);
@@ -228,10 +239,23 @@
         attemptGC(skinRef);
         assertNull("Button should be GCed.", buttonRef.get());
         assertNull("ButtonSkin should be GCed.", skinRef.get());
     }
 
+    @Test
+    public void testNPEOnSwitchSkinAndRemoveButton() {
+        Button button = new Button();
+        Group root = new Group(button);
+        Scene scene = new Scene(root);
+        Stage stage = new Stage();
+        stage.setScene(scene);
+        stage.show();
+
+        button.setSkin(new ButtonSkin1(button));
+        root.getChildren().remove(button);
+    }
+
     private void attemptGC(WeakReference<ButtonSkin> weakRef) {
         for (int i = 0; i < 10; i++) {
             System.gc();
             System.runFinalization();
 
