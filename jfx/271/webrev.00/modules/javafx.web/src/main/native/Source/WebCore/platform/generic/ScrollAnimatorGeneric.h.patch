diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/generic/ScrollAnimatorGeneric.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/generic/ScrollAnimatorGeneric.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/generic/ScrollAnimatorGeneric.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/generic/ScrollAnimatorGeneric.h
@@ -34,10 +34,11 @@
 #include "Timer.h"
 
 namespace WebCore {
 
 class ScrollAnimation;
+class ScrollAnimationKinetic;
 
 class ScrollAnimatorGeneric final : public ScrollAnimator {
 public:
     explicit ScrollAnimatorGeneric(ScrollableArea&);
     virtual ~ScrollAnimatorGeneric();
@@ -69,19 +70,16 @@
     void overlayScrollbarAnimationTimerFired();
     void showOverlayScrollbars();
     void hideOverlayScrollbars();
     void updateOverlayScrollbarsOpacity();
 
-    FloatPoint computeVelocity();
-
 #if ENABLE(SMOOTH_SCROLLING)
     void ensureSmoothScrollingAnimation();
 
     std::unique_ptr<ScrollAnimation> m_smoothAnimation;
 #endif
-    std::unique_ptr<ScrollAnimation> m_kineticAnimation;
-    Vector<PlatformWheelEvent> m_scrollHistory;
+    std::unique_ptr<ScrollAnimationKinetic> m_kineticAnimation;
     Scrollbar* m_horizontalOverlayScrollbar { nullptr };
     Scrollbar* m_verticalOverlayScrollbar { nullptr };
     bool m_overlayScrollbarsLocked { false };
     Timer m_overlayScrollbarAnimationTimer;
     double m_overlayScrollbarAnimationSource { 0 };
