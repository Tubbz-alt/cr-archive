diff a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGTransform.h b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGTransform.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGTransform.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGTransform.h
@@ -142,10 +142,24 @@
         m_value.setSkewY(angle);
         commitChange();
         return { };
     }
 
+    void attach(SVGPropertyOwner* owner, SVGPropertyAccess access) override
+    {
+        Base::attach(owner, access);
+        // Reattach the SVGMatrix to the SVGTransformValue with the new SVGPropertyAccess.
+        m_value.matrix()->reattach(this, access);
+    }
+
+    void detach() override
+    {
+        Base::detach();
+        // Reattach the SVGMatrix to the SVGTransformValue with the SVGPropertyAccess::ReadWrite.
+        m_value.matrix()->reattach(this, access());
+    }
+
 private:
     using Base = SVGValueProperty<SVGTransformValue>;
 
     SVGTransform(SVGTransformValue::SVGTransformType type, const AffineTransform& transform = { }, float angle = 0, const FloatPoint& rotationCenter = { })
         : Base(SVGTransformValue(type, SVGMatrix::create(this, SVGPropertyAccess::ReadWrite, transform), angle, rotationCenter))
