diff a/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/ScriptController.cpp b/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/ScriptController.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/ScriptController.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/ScriptController.cpp
@@ -809,20 +809,31 @@
     Ref<Frame> protector(m_frame);
     RefPtr<Document> ownerDocument(m_frame.document());
 
     const int javascriptSchemeLength = sizeof("javascript:") - 1;
 
+    JSDOMGlobalObject* globalObject = jsWindowProxy(mainThreadNormalWorld()).window();
+    VM& vm = globalObject->vm();
+    auto throwScope = DECLARE_THROW_SCOPE(vm);
+
     String decodedURL = decodeURLEscapeSequences(url.string());
     auto result = executeScriptIgnoringException(decodedURL.substring(javascriptSchemeLength));
+    RELEASE_ASSERT(&vm == &jsWindowProxy(mainThreadNormalWorld()).window()->vm());
 
     // If executing script caused this frame to be removed from the page, we
     // don't want to try to replace its document!
     if (!m_frame.page())
         return true;
 
+    if (!result)
+        return true;
+
     String scriptResult;
-    if (!result || !result.getString(jsWindowProxy(mainThreadNormalWorld()).window(), scriptResult))
+    bool isString = result.getString(globalObject, scriptResult);
+    RETURN_IF_EXCEPTION(throwScope, true);
+
+    if (!isString)
         return true;
 
     // FIXME: We should always replace the document, but doing so
     //        synchronously can cause crashes:
     //        http://bugs.webkit.org/show_bug.cgi?id=16782
