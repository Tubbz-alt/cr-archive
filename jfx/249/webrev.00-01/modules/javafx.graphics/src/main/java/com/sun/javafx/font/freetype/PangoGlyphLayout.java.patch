diff a/modules/javafx.graphics/src/main/java/com/sun/javafx/font/freetype/PangoGlyphLayout.java b/modules/javafx.graphics/src/main/java/com/sun/javafx/font/freetype/PangoGlyphLayout.java
--- a/modules/javafx.graphics/src/main/java/com/sun/javafx/font/freetype/PangoGlyphLayout.java
+++ b/modules/javafx.graphics/src/main/java/com/sun/javafx/font/freetype/PangoGlyphLayout.java
@@ -84,13 +84,10 @@
         return true;
     }
 
     private Map<TextRun, Long> runUtf8 = new HashMap<>();
     public void layout(TextRun run, PGFont font, FontStrike strike, char[] text) {
-        for (char c: text) {
-            if (c == 0) c = '\f';
-        }
         /* Create the pango font and attribute list */
         FontResource fr = font.getFontResource();
         boolean composite = fr instanceof CompositeFontResource;
         if (composite) {
             fr = ((CompositeFontResource)fr).getSlotResource(0);
@@ -141,14 +138,13 @@
                 return;
             }
         }
 
         /* Itemize */
-        long start = OSPango.g_utf8_offset_to_pointer(str, run.getStart());
         long utflen = OSPango.g_utf8_strlen(str,-1);
         long end = OSPango.g_utf8_offset_to_pointer(str, utflen);
-        long runs = OSPango.pango_itemize(context, str, (int)(start - str), (int)(end - start), attrList, 0);
+        long runs = OSPango.pango_itemize(context, str, 0, (int)(end - str), attrList, 0);
 
         if (runs != 0) {
             /* Shape all PangoItem into PangoGlyphString */
             int runsCount = OSPango.g_list_length(runs);
             PangoGlyphString[] pangoGlyphs = new PangoGlyphString[runsCount];
