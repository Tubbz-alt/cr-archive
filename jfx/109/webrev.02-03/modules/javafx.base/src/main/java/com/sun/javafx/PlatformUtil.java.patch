diff a/modules/javafx.base/src/main/java/com/sun/javafx/PlatformUtil.java b/modules/javafx.base/src/main/java/com/sun/javafx/PlatformUtil.java
--- a/modules/javafx.base/src/main/java/com/sun/javafx/PlatformUtil.java
+++ b/modules/javafx.base/src/main/java/com/sun/javafx/PlatformUtil.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2011, 2014, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2011, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -69,10 +69,11 @@
     private static final boolean WINDOWS_7_OR_LATER = WINDOWS && versionNumberGreaterThanOrEqualTo(6.1f);
     private static final boolean MAC = os.startsWith("Mac");
     private static final boolean LINUX = os.startsWith("Linux") && !ANDROID;
     private static final boolean SOLARIS = os.startsWith("SunOS");
     private static final boolean IOS = os.startsWith("iOS");
+    private static final boolean STATIC_BUILD = "Substrate VM".equals(System.getProperty("java.vm.name"));
 
     /**
      * Utility method used to determine whether the version number as
      * reported by system properties is greater than or equal to a given
      * value.
@@ -175,10 +176,17 @@
      */
     public static boolean isIOS(){
         return IOS;
     }
 
+    /**
+     * Returns true if the current runtime is a statically linked image
+     */
+    public static boolean isStaticBuild(){
+        return STATIC_BUILD;
+    }
+
     private static void loadPropertiesFromFile(final File file) {
         Properties p = new Properties();
         try {
             InputStream in = new FileInputStream(file);
             p.load(in);
