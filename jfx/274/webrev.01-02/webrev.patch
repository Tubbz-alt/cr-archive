diff a/modules/javafx.graphics/src/main/java/javafx/scene/layout/HBox.java b/modules/javafx.graphics/src/main/java/javafx/scene/layout/HBox.java
--- a/modules/javafx.graphics/src/main/java/javafx/scene/layout/HBox.java
+++ b/modules/javafx.graphics/src/main/java/javafx/scene/layout/HBox.java
@@ -46,12 +46,10 @@
 import javafx.css.converter.SizeConverter;
 import javafx.css.Styleable;
 import javafx.geometry.HPos;
 import javafx.util.Callback;
 
-
-
 /**
  * HBox lays out its children in a single horizontal row.
  * If the hbox has a border and/or padding set, then the contents will be laid
  * out within those insets.
  * <p>
@@ -226,39 +224,39 @@
     /********************************************************************
      *  END static methods
      ********************************************************************/
 
     /**
-     * Creates an HBox layout with spacing = 0.
+     * Creates an {@code HBox} layout with {@code spacing = 0}.
      */
     public HBox() {
         super();
     }
 
     /**
-     * Creates an HBox layout with the specified spacing between children.
+     * Creates an {@code HBox} layout with the specified spacing between children.
      * @param spacing the amount of horizontal space between each child
      */
     public HBox(double spacing) {
         this();
         setSpacing(spacing);
     }
 
     /**
-     * Creates an HBox layout with spacing = 0.
-     * @param children The initial set of children for this pane.
+     * Creates an {@code HBox} layout with{@code spacing = 0}.
+     * @param children the initial set of children for this pane
      * @since JavaFX 8.0
      */
     public HBox(Node... children) {
         super();
         getChildren().addAll(children);
     }
 
     /**
-     * Creates an HBox layout with the specified spacing between children.
+     * Creates an {@code HBox} layout with the specified spacing between children.
      * @param spacing the amount of horizontal space between each child
-     * @param children The initial set of children for this pane.
+     * @param children The initial set of children for this pane
      * @since JavaFX 8.0
      */
     public HBox(double spacing, Node... children) {
         this();
         setSpacing(spacing);
diff a/modules/javafx.graphics/src/main/java/javafx/scene/layout/VBox.java b/modules/javafx.graphics/src/main/java/javafx/scene/layout/VBox.java
--- a/modules/javafx.graphics/src/main/java/javafx/scene/layout/VBox.java
+++ b/modules/javafx.graphics/src/main/java/javafx/scene/layout/VBox.java
@@ -152,11 +152,11 @@
      ********************************************************************/
     private static final String MARGIN_CONSTRAINT = "vbox-margin";
     private static final String VGROW_CONSTRAINT = "vbox-vgrow";
 
     /**
-     * Sets the vertical grow priority for the child when contained by an vbox.
+     * Sets the vertical grow priority for the child when contained by a vbox.
      * If set, the vbox will use the priority value to allocate additional space if the
      * vbox is resized larger than its preferred height.
      * If multiple vbox children have the same vertical grow priority, then the
      * extra space will be split evenly between them.
      * If no vertical grow priority is set on a child, the vbox will never
@@ -229,21 +229,21 @@
         this();
         setSpacing(spacing);
     }
 
     /**
-     * Creates n {@code VBox} layout with {@code spacing = 0}.
+     * Creates a {@code VBox} layout with {@code spacing = 0}.
      * @param children the initial set of children for this pane
      * @since JavaFX 8.0
      */
     public VBox(Node... children) {
         super();
         getChildren().addAll(children);
     }
 
     /**
-     * Creates an {@code VBox} layout with the specified spacing between children.
+     * Creates a {@code VBox} layout with the specified spacing between children.
      * @param spacing the amount of vertical space between each child
      * @param children the initial set of children for this pane
      * @since JavaFX 8.0
      */
     public VBox(double spacing, Node... children) {
