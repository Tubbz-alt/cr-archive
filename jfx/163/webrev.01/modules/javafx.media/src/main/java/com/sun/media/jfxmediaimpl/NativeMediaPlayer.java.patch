diff a/modules/javafx.media/src/main/java/com/sun/media/jfxmediaimpl/NativeMediaPlayer.java b/modules/javafx.media/src/main/java/com/sun/media/jfxmediaimpl/NativeMediaPlayer.java
--- a/modules/javafx.media/src/main/java/com/sun/media/jfxmediaimpl/NativeMediaPlayer.java
+++ b/modules/javafx.media/src/main/java/com/sun/media/jfxmediaimpl/NativeMediaPlayer.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2010, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2010, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -717,10 +717,18 @@
 
         private void HandleAudioSpectrumEvents(AudioSpectrumEvent evt) {
             for (ListIterator<WeakReference<AudioSpectrumListener>> it = audioSpectrumListeners.listIterator(); it.hasNext();) {
                 AudioSpectrumListener listener = it.next().get();
                 if (listener != null) {
+                    // OSXPlatfrom will set queryTimestamp to true, so we can request
+                    // time here from EventQueueThread, since requesting time from
+                    // audio processing thread might hang. See JDK-8240694.
+                    if (evt.queryTimestamp()) {
+                        double timestamp = playerGetPresentationTime();
+                        evt.setTimestamp(timestamp);
+                    }
+
                     listener.onAudioSpectrumEvent(evt);
                 } else {
                     it.remove();
                 }
             }
@@ -1549,12 +1557,12 @@
 
     protected void sendBufferProgressEvent(double clipDuration, long bufferStart, long bufferStop, long bufferPosition) {
         sendPlayerEvent(new BufferProgressEvent(clipDuration, bufferStart, bufferStop, bufferPosition));
     }
 
-    protected void sendAudioSpectrumEvent(double timestamp, double duration) {
-        sendPlayerEvent(new AudioSpectrumEvent(getAudioSpectrum(), timestamp, duration));
+    protected void sendAudioSpectrumEvent(double timestamp, double duration, boolean queryTimestamp) {
+        sendPlayerEvent(new AudioSpectrumEvent(getAudioSpectrum(), timestamp, duration, queryTimestamp));
     }
 
     @Override
     public void markerStateChanged(boolean hasMarkers) {
         if (hasMarkers) {
