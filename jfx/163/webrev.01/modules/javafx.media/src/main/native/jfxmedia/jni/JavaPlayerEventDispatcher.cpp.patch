diff a/modules/javafx.media/src/main/native/jfxmedia/jni/JavaPlayerEventDispatcher.cpp b/modules/javafx.media/src/main/native/jfxmedia/jni/JavaPlayerEventDispatcher.cpp
--- a/modules/javafx.media/src/main/native/jfxmedia/jni/JavaPlayerEventDispatcher.cpp
+++ b/modules/javafx.media/src/main/native/jfxmedia/jni/JavaPlayerEventDispatcher.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2010, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2010, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -153,11 +153,11 @@
             hasException = javaEnv.reportException();
         }
 
         if (!hasException)
         {
-            m_SendAudioSpectrumEventMethod  = env->GetMethodID(klass, "sendAudioSpectrumEvent", "(DD)V");
+            m_SendAudioSpectrumEventMethod  = env->GetMethodID(klass, "sendAudioSpectrumEvent", "(DDZ)V");
             hasException = javaEnv.reportException();
         }
 
         env->DeleteLocalRef(klass);
 
@@ -539,19 +539,21 @@
     }
 
     return bSucceeded;
 }
 
-bool CJavaPlayerEventDispatcher::SendAudioSpectrumEvent(double time, double duration)
+bool CJavaPlayerEventDispatcher::SendAudioSpectrumEvent(double time, double duration,
+                                                        bool queryTimestamp)
 {
     bool bSucceeded = false;
     CJavaEnvironment jenv(m_PlayerVM);
     JNIEnv *pEnv = jenv.getEnvironment();
     if (pEnv) {
         jobject localPlayer = pEnv->NewLocalRef(m_PlayerInstance);
         if (localPlayer) {
-            pEnv->CallVoidMethod(localPlayer, m_SendAudioSpectrumEventMethod, time, duration);
+            pEnv->CallVoidMethod(localPlayer, m_SendAudioSpectrumEventMethod, time,
+                                              duration, queryTimestamp);
             pEnv->DeleteLocalRef(localPlayer);
 
             bSucceeded = !jenv.reportException();
         }
     }
