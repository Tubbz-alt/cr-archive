diff a/modules/javafx.media/src/main/java/com/sun/media/jfxmediaimpl/NativeMediaPlayer.java b/modules/javafx.media/src/main/java/com/sun/media/jfxmediaimpl/NativeMediaPlayer.java
--- a/modules/javafx.media/src/main/java/com/sun/media/jfxmediaimpl/NativeMediaPlayer.java
+++ b/modules/javafx.media/src/main/java/com/sun/media/jfxmediaimpl/NativeMediaPlayer.java
@@ -717,10 +717,13 @@
 
         private void HandleAudioSpectrumEvents(AudioSpectrumEvent evt) {
             for (ListIterator<WeakReference<AudioSpectrumListener>> it = audioSpectrumListeners.listIterator(); it.hasNext();) {
                 AudioSpectrumListener listener = it.next().get();
                 if (listener != null) {
+                    // OSXPlatfrom will set queryTimestamp to true, so we can request
+                    // time here from EventQueueThread, since requesting time from
+                    // audio processing thread might hang. See JDK-8240694.
                     if (evt.queryTimestamp()) {
                         double timestamp = playerGetPresentationTime();
                         evt.setTimestamp(timestamp);
                     }
 
diff a/modules/javafx.media/src/main/native/jfxmedia/platform/osx/avf/AVFAudioSpectrumUnit.cpp b/modules/javafx.media/src/main/native/jfxmedia/platform/osx/avf/AVFAudioSpectrumUnit.cpp
--- a/modules/javafx.media/src/main/native/jfxmedia/platform/osx/avf/AVFAudioSpectrumUnit.cpp
+++ b/modules/javafx.media/src/main/native/jfxmedia/platform/osx/avf/AVFAudioSpectrumUnit.cpp
@@ -189,11 +189,13 @@
     mBands->UpdateBands(size, magnitudes, magnitudes);
 
     // Call our listener to dispatch the spectrum event
     if (mSpectrumCallbackProc) {
         double duration = (double) mSamplesPerInterval / (double) 44100;
-        // Timestamp is ignored and it will be queried from event loop
+        // We do not provide timestamp here. It will be queried from EventQueueThread
+        // due to reading current time from AVPlayer might hang when called
+        // from audio processing thread. This function is called from this thread.
         mSpectrumCallbackProc(mSpectrumCallbackContext, duration, -1.0);
     }
 
     unlockBands();
 }
diff a/modules/javafx.media/src/main/native/jfxmedia/platform/osx/avf/AVFMediaPlayer.mm b/modules/javafx.media/src/main/native/jfxmedia/platform/osx/avf/AVFMediaPlayer.mm
--- a/modules/javafx.media/src/main/native/jfxmedia/platform/osx/avf/AVFMediaPlayer.mm
+++ b/modules/javafx.media/src/main/native/jfxmedia/platform/osx/avf/AVFMediaPlayer.mm
@@ -651,11 +651,11 @@
     eventHandler->SendNewFrameEvent(frame);
 }
 
 - (void) sendSpectrumEventDuration:(double)duration timestamp:(double)timestamp {
     if (eventHandler) {
-        // Always true for queryTimestamp do to JDK-8240694
+        // Always true for queryTimestamp to avoid hang. See JDK-8240694.
         eventHandler->SendAudioSpectrumEvent(timestamp, duration, true);
     }
 }
 
 @end
