diff a/modules/javafx.swing/src/main/java/javafx/embed/swing/JFXPanel.java b/modules/javafx.swing/src/main/java/javafx/embed/swing/JFXPanel.java
--- a/modules/javafx.swing/src/main/java/javafx/embed/swing/JFXPanel.java
+++ b/modules/javafx.swing/src/main/java/javafx/embed/swing/JFXPanel.java
@@ -447,12 +447,14 @@
             if (isFocusable() && !hasFocus()) {
                 requestFocus();
                 // The extra simulated mouse pressed event is removed by making the JavaFX scene focused.
                 // It is safe, because in JavaFX only the method "setFocused(true)" is called,
                 // which doesn't have any side-effects when called multiple times.
-                int focusCause = AbstractEvents.FOCUSEVENT_ACTIVATED;
-                stagePeer.setFocused(true, focusCause);
+                if(stagePeer != null) {
+                    int focusCause = AbstractEvents.FOCUSEVENT_ACTIVATED;
+                    stagePeer.setFocused(true, focusCause);
+                }
             }
         }
 
         sendMouseEventToFX(e);
         super.processMouseEvent(e);
diff a/tests/system/src/test/java/test/javafx/embed/swing/JFXPanelTest.java b/tests/system/src/test/java/test/javafx/embed/swing/JFXPanelTest.java
--- a/tests/system/src/test/java/test/javafx/embed/swing/JFXPanelTest.java
+++ b/tests/system/src/test/java/test/javafx/embed/swing/JFXPanelTest.java
@@ -135,7 +135,25 @@
 
         Thread.sleep(500); // there should be no pressed event after the initial one. Let's wait for 0.5s and check again.
 
         Assert.assertEquals(1, pressedEventCounter[0]);
     }
+
+    @Test
+    public void testClickOnEmptyJFXPanel() throws Exception {
+        CountDownLatch firstPressedEventLatch = new CountDownLatch(1);
+
+        SwingUtilities.invokeLater(() -> {
+            TestFXPanel fxPnl = new TestFXPanel();
+
+            MouseEvent e = new MouseEvent(fxPnl, MouseEvent.MOUSE_PRESSED, 0, MouseEvent.BUTTON1_DOWN_MASK,
+                    5, 5, 1, false, MouseEvent.BUTTON1);
+
+            fxPnl.processMouseEventPublic(e);
+
+            firstPressedEventLatch.countDown();
+        });
+
+        Assert.assertTrue(firstPressedEventLatch.await(5000, TimeUnit.MILLISECONDS));
+    }
 }
 
