diff a/modules/javafx.graphics/src/main/native-iio/libjpeg/jidctint.c b/modules/javafx.graphics/src/main/native-iio/libjpeg/jidctint.c
--- a/modules/javafx.graphics/src/main/native-iio/libjpeg/jidctint.c
+++ b/modules/javafx.graphics/src/main/native-iio/libjpeg/jidctint.c
@@ -1,10 +1,10 @@
 /*
  * jidctint.c
  *
  * Copyright (C) 1991-1998, Thomas G. Lane.
- * Modification developed 2002-2016 by Guido Vollbeding.
+ * Modification developed 2002-2018 by Guido Vollbeding.
  * This file is part of the Independent JPEG Group's software.
  * For conditions of distribution and use, see the accompanying README file.
  *
  * This file contains a slow-but-accurate integer implementation of the
  * inverse DCT (Discrete Cosine Transform).  In the IJG code, this routine
@@ -1472,11 +1472,11 @@
 }
 
 
 /*
  * Perform dequantization and inverse DCT on one block of coefficients,
- * producing a 11x11 output block.
+ * producing an 11x11 output block.
  *
  * Optimized algorithm with 24 multiplications in the 1-D kernel.
  * cK represents sqrt(2) * cos(K*pi/22).
  */
 
@@ -3673,11 +3673,11 @@
 }
 
 
 /*
  * Perform dequantization and inverse DCT on one block of coefficients,
- * producing a 8x4 output block.
+ * producing an 8x4 output block.
  *
  * 4-point IDCT in pass 1 (columns), 8-point in pass 2 (rows).
  */
 
 GLOBAL(void)
@@ -3833,11 +3833,11 @@
 }
 
 
 /*
  * Perform dequantization and inverse DCT on one block of coefficients,
- * producing a reduced-size 6x3 output block.
+ * producing a 6x3 output block.
  *
  * 3-point IDCT in pass 1 (columns), 6-point in pass 2 (rows).
  */
 
 GLOBAL(void)
@@ -4080,11 +4080,11 @@
 }
 
 
 /*
  * Perform dequantization and inverse DCT on one block of coefficients,
- * producing a 8x16 output block.
+ * producing an 8x16 output block.
  *
  * 16-point IDCT in pass 1 (columns), 8-point in pass 2 (rows).
  */
 
 GLOBAL(void)
@@ -5002,11 +5002,11 @@
 }
 
 
 /*
  * Perform dequantization and inverse DCT on one block of coefficients,
- * producing a reduced-size 3x6 output block.
+ * producing a 3x6 output block.
  *
  * 6-point IDCT in pass 1 (columns), 3-point in pass 2 (rows).
  */
 
 GLOBAL(void)
