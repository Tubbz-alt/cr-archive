diff a/modules/javafx.graphics/src/main/native-iio/libjpeg/jcmarker.c b/modules/javafx.graphics/src/main/native-iio/libjpeg/jcmarker.c
--- a/modules/javafx.graphics/src/main/native-iio/libjpeg/jcmarker.c
+++ b/modules/javafx.graphics/src/main/native-iio/libjpeg/jcmarker.c
@@ -1,10 +1,10 @@
 /*
  * jcmarker.c
  *
  * Copyright (C) 1991-1998, Thomas G. Lane.
- * Modified 2003-2013 by Guido Vollbeding.
+ * Modified 2003-2019 by Guido Vollbeding.
  * This file is part of the Independent JPEG Group's software.
  * For conditions of distribution and use, see the accompanying README file.
  *
  * This file contains routines to write JPEG datastream markers.
  */
@@ -469,11 +469,10 @@
   case JCS_YCCK:
     emit_byte(cinfo, 2);    /* Color transform = 2 */
     break;
   default:
     emit_byte(cinfo, 0);    /* Color transform = 0 */
-    break;
   }
 }
 
 
 /*
@@ -700,13 +699,12 @@
 jinit_marker_writer (j_compress_ptr cinfo)
 {
   my_marker_ptr marker;
 
   /* Create the subobject */
-  marker = (my_marker_ptr)
-    (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
-                SIZEOF(my_marker_writer));
+  marker = (my_marker_ptr) (*cinfo->mem->alloc_small)
+    ((j_common_ptr) cinfo, JPOOL_IMAGE, SIZEOF(my_marker_writer));
   cinfo->marker = &marker->pub;
   /* Initialize method pointers */
   marker->pub.write_file_header = write_file_header;
   marker->pub.write_frame_header = write_frame_header;
   marker->pub.write_scan_header = write_scan_header;
