diff a/modules/javafx.graphics/src/main/native-iio/libjpeg/jpeglib.h b/modules/javafx.graphics/src/main/native-iio/libjpeg/jpeglib.h
--- a/modules/javafx.graphics/src/main/native-iio/libjpeg/jpeglib.h
+++ b/modules/javafx.graphics/src/main/native-iio/libjpeg/jpeglib.h
@@ -1,10 +1,10 @@
 /*
  * jpeglib.h
  *
  * Copyright (C) 1991-1998, Thomas G. Lane.
- * Modified 2002-2017 by Guido Vollbeding.
+ * Modified 2002-2019 by Guido Vollbeding.
  * This file is part of the Independent JPEG Group's software.
  * For conditions of distribution and use, see the accompanying README file.
  *
  * This file defines the application interface for the JPEG library.
  * Most applications using the library need only include this file,
@@ -37,11 +37,11 @@
  * Might be useful for tests like "#if JPEG_LIB_VERSION >= 90".
  */
 
 #define JPEG_LIB_VERSION        90    /* Compatibility version 9.0 */
 #define JPEG_LIB_VERSION_MAJOR  9
-#define JPEG_LIB_VERSION_MINOR  3
+#define JPEG_LIB_VERSION_MINOR  4
 
 
 /* Various constants determining the sizes of things.
  * All of these are specified by the JPEG standard,
  * so don't change them if you want to be compatible.
@@ -907,10 +907,11 @@
 #define jpeg_quality_scaling    jQualityScaling
 #define jpeg_simple_progression    jSimProgress
 #define jpeg_suppress_tables    jSuppressTables
 #define jpeg_alloc_quant_table    jAlcQTable
 #define jpeg_alloc_huff_table    jAlcHTable
+#define jpeg_std_huff_table    jStdHTable
 #define jpeg_start_compress    jStrtCompress
 #define jpeg_write_scanlines    jWrtScanlines
 #define jpeg_finish_compress    jFinCompress
 #define jpeg_calc_jpeg_dimensions    jCjpegDimensions
 #define jpeg_write_raw_data    jWrtRawData
@@ -975,14 +976,14 @@
 EXTERN(void) jpeg_stdio_src JPP((j_decompress_ptr cinfo, FILE * infile));
 
 /* Data source and destination managers: memory buffers. */
 EXTERN(void) jpeg_mem_dest JPP((j_compress_ptr cinfo,
                    unsigned char ** outbuffer,
-                   unsigned long * outsize));
+                   size_t * outsize));
 EXTERN(void) jpeg_mem_src JPP((j_decompress_ptr cinfo,
                   const unsigned char * inbuffer,
-                  unsigned long insize));
+                  size_t insize));
 
 /* Default parameter setup for compression */
 EXTERN(void) jpeg_set_defaults JPP((j_compress_ptr cinfo));
 /* Compression parameter setup aids */
 EXTERN(void) jpeg_set_colorspace JPP((j_compress_ptr cinfo,
@@ -1003,10 +1004,12 @@
 EXTERN(void) jpeg_simple_progression JPP((j_compress_ptr cinfo));
 EXTERN(void) jpeg_suppress_tables JPP((j_compress_ptr cinfo,
                        boolean suppress));
 EXTERN(JQUANT_TBL *) jpeg_alloc_quant_table JPP((j_common_ptr cinfo));
 EXTERN(JHUFF_TBL *) jpeg_alloc_huff_table JPP((j_common_ptr cinfo));
+EXTERN(JHUFF_TBL *) jpeg_std_huff_table JPP((j_common_ptr cinfo,
+                         boolean isDC, int tblno));
 
 /* Main entry points for compression */
 EXTERN(void) jpeg_start_compress JPP((j_compress_ptr cinfo,
                       boolean write_all_tables));
 EXTERN(JDIMENSION) jpeg_write_scanlines JPP((j_compress_ptr cinfo,
