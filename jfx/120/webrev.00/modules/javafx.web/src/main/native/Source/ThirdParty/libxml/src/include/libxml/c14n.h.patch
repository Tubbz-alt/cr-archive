diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/include/libxml/c14n.h b/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/include/libxml/c14n.h
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/include/libxml/c14n.h
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/include/libxml/c14n.h
@@ -26,21 +26,21 @@
 #include <libxml/xmlversion.h>
 #include <libxml/tree.h>
 #include <libxml/xpath.h>
 
 /*
- * XML Canonicazation
+ * XML Canonicalization
  * http://www.w3.org/TR/xml-c14n
  *
- * Exclusive XML Canonicazation
+ * Exclusive XML Canonicalization
  * http://www.w3.org/TR/xml-exc-c14n
  *
  * Canonical form of an XML document could be created if and only if
  *  a) default attributes (if any) are added to all nodes
  *  b) all character and parsed entity references are resolved
- * In order to achive this in libxml2 the document MUST be loaded with
- * following global setings:
+ * In order to achieve this in libxml2 the document MUST be loaded with
+ * following global settings:
  *
  *    xmlLoadExtDtdDefaultValue = XML_DETECT_IDS | XML_COMPLETE_ATTRS;
  *    xmlSubstituteEntitiesDefault(1);
  *
  * or corresponding parser context setting:
@@ -57,11 +57,11 @@
  *
  * Predefined values for C14N modes
  *
  */
 typedef enum {
-    XML_C14N_1_0            = 0,    /* Origianal C14N 1.0 spec */
+    XML_C14N_1_0            = 0,    /* Original C14N 1.0 spec */
     XML_C14N_EXCLUSIVE_1_0  = 1,    /* Exclusive C14N 1.0 spec */
     XML_C14N_1_1            = 2     /* C14N 1.1 spec */
 } xmlC14NMode;
 
 XMLPUBFUN int XMLCALL
@@ -94,11 +94,11 @@
  * This is the core C14N function
  */
 /**
  * xmlC14NIsVisibleCallback:
  * @user_data: user data
- * @node: the curent node
+ * @node: the current node
  * @parent: the parent node
  *
  * Signature for a C14N callback on visible nodes
  *
  * Returns 1 if the node should be included
