diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/parserInternals.c b/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/parserInternals.c
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/parserInternals.c
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/parserInternals.c
@@ -701,11 +701,11 @@
     return((int) *ctxt->input->cur);
 encoding_error:
     /*
      * An encoding problem may arise from a truncated input buffer
      * splitting a character in the middle. In that case do not raise
-     * an error but return 0 to endicate an end of stream problem
+     * an error but return 0 to indicate an end of stream problem
      */
     if (ctxt->input->end - ctxt->input->cur < 4) {
     *len = 0;
     return(0);
     }
@@ -814,11 +814,11 @@
 encoding_error:
 
     /*
      * An encoding problem may arise from a truncated input buffer
      * splitting a character in the middle. In that case do not raise
-     * an error but return 0 to endicate an end of stream problem
+     * an error but return 0 to indicate an end of stream problem
      */
     if ((ctxt == NULL) || (ctxt->input == NULL) ||
         (ctxt->input->end - ctxt->input->cur < 4)) {
     *len = 0;
     return(0);
@@ -1091,11 +1091,11 @@
         default:
             break;
     }
     }
     /*
-     * TODO: We could recover from errors in external entites if we
+     * TODO: We could recover from errors in external entities if we
      * didn't stop the parser. But most callers of this function don't
      * check the return value.
      */
     if (handler == NULL) {
         xmlStopParser(ctxt);
@@ -1136,11 +1136,11 @@
     if (input == NULL)
         return (-1);
     if (input->buf != NULL) {
         if (input->buf->encoder != NULL) {
             /*
-             * Check in case the auto encoding detetection triggered
+             * Check in case the auto encoding detection triggered
              * in already.
              */
             if (input->buf->encoder == handler)
                 return (0);
 
