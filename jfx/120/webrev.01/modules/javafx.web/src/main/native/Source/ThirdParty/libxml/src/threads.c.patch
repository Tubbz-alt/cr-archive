diff a/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/threads.c b/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/threads.c
--- a/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/threads.c
+++ b/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/threads.c
@@ -80,11 +80,11 @@
 
 #endif /* HAVE_PTHREAD_H */
 
 /*
  * TODO: this module still uses malloc/free and not xmlMalloc/xmlFree
- *       to avoid some crazyness since xmlMalloc/xmlFree may actually
+ *       to avoid some craziness since xmlMalloc/xmlFree may actually
  *       be hosted on allocated blocks needing them for the allocation ...
  */
 
 /*
  * xmlMutex are a simple mutual exception locks
@@ -237,11 +237,11 @@
     WaitForSingleObject(tok->mutex, INFINITE);
 #elif defined HAVE_BEOS_THREADS
     if (acquire_sem(tok->sem) != B_NO_ERROR) {
 #ifdef DEBUG_THREADS
         xmlGenericError(xmlGenericErrorContext,
-                        "xmlMutexLock():BeOS:Couldn't aquire semaphore\n");
+                        "xmlMutexLock():BeOS:Couldn't acquire semaphore\n");
 #endif
     }
     tok->tid = find_thread(NULL);
 #endif
 
