diff a/modules/javafx.swt/src/main/java/javafx/embed/swt/FXCanvas.java b/modules/javafx.swt/src/main/java/javafx/embed/swt/FXCanvas.java
--- a/modules/javafx.swt/src/main/java/javafx/embed/swt/FXCanvas.java
+++ b/modules/javafx.swt/src/main/java/javafx/embed/swt/FXCanvas.java
@@ -632,12 +632,12 @@
             if (lastPixelsBuf == null) return;
             width = lastWidth;
             height = lastHeight;
             buffer = lastPixelsBuf;
         }
-        width = (int)Math.round(width * scaleFactor);
-        height = (int)Math.round(height * scaleFactor);
+        width = (int)Math.ceil(width * scaleFactor);
+        height = (int)Math.ceil(height * scaleFactor);
 
         // Consider optimizing this
         ImageData imageData = null;
         if ("win32".equals(SWT.getPlatform())) {
             PaletteData palette = new PaletteData(0xFF00, 0xFF0000, 0xFF000000);
@@ -1051,12 +1051,12 @@
     private void resizePixelBuffer(double newScaleFactor) {
         lastPixelsBuf = null;
         if ((pWidth <= 0) || (pHeight <= 0)) {
             pixelsBuf = null;
         } else {
-            pixelsBuf = IntBuffer.allocate((int)Math.round(pWidth * newScaleFactor) *
-                                           (int)Math.round(pHeight * newScaleFactor));
+            pixelsBuf = IntBuffer.allocate((int)Math.ceil(pWidth * newScaleFactor) *
+                                           (int)Math.ceil(pHeight * newScaleFactor));
             // The bg color may show through on resize. See RT-34380.
             RGB rgb = getBackground().getRGB();
             Arrays.fill(pixelsBuf.array(), rgb.red << 16 | rgb.green << 8 | rgb.blue);
         }
     }
