diff a/modules/javafx.web/src/ios/java/javafx/scene/web/WebView.java b/modules/javafx.web/src/ios/java/javafx/scene/web/WebView.java
--- a/modules/javafx.web/src/ios/java/javafx/scene/web/WebView.java
+++ b/modules/javafx.web/src/ios/java/javafx/scene/web/WebView.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2011, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2011, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -39,12 +39,13 @@
 import com.sun.javafx.geom.transform.Affine3D;
 import com.sun.javafx.geom.transform.BaseTransform;
 import com.sun.javafx.scene.DirtyBits;
 import com.sun.javafx.scene.NodeHelper;
 import com.sun.javafx.scene.input.PickResultChooser;
-import com.sun.java.scene.web.WebViewHelper;
 import com.sun.javafx.scene.SceneHelper;
+import com.sun.java.scene.web.WebViewHelper;
+
 import com.sun.javafx.sg.prism.NGNode;
 import com.sun.javafx.tk.TKPulseListener;
 import com.sun.javafx.tk.Toolkit;
 import java.util.ArrayList;
 import java.util.Collections;
@@ -333,11 +334,11 @@
 
             }
 
         });
 
-        impl_treeVisibleProperty().addListener(new ChangeListener<Boolean>() {
+        NodeHelper.treeVisibleProperty(this).addListener(new ChangeListener<Boolean>() {
 
             @Override
             public void changed(ObservableValue<? extends Boolean> observable, Boolean oldValue, Boolean newValue) {
                 _setVisible(handle, newValue);
             }
@@ -1018,11 +1019,11 @@
         // the list of render queues from growing infinitely.
         // Also, if and when the WebView becomes invisible, the currently
         // pending render queues, if any, become obsolete and should be
         // discarded.
 
-        boolean reallyVisible = impl_isTreeVisible()
+        boolean reallyVisible = NodeHelper.isTreeVisible(this)
                 && getScene() != null
                 && getScene().getWindow() != null
                 && getScene().getWindow().isShowing();
 
         if (reallyVisible) {
