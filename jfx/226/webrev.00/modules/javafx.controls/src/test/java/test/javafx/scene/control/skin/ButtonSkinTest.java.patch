diff a/modules/javafx.controls/src/test/java/test/javafx/scene/control/skin/ButtonSkinTest.java b/modules/javafx.controls/src/test/java/test/javafx/scene/control/skin/ButtonSkinTest.java
--- a/modules/javafx.controls/src/test/java/test/javafx/scene/control/skin/ButtonSkinTest.java
+++ b/modules/javafx.controls/src/test/java/test/javafx/scene/control/skin/ButtonSkinTest.java
@@ -41,10 +41,12 @@
 import javafx.scene.input.KeyCodeCombination;
 import javafx.scene.input.Mnemonic;
 import javafx.collections.ObservableList;
 import javafx.scene.input.KeyCombination;
 
+import com.sun.javafx.scene.control.behavior.BehaviorBase;
+import com.sun.javafx.scene.control.behavior.ButtonBehavior;
 import com.sun.javafx.scene.control.behavior.TextBinding.MnemonicKeyCombination;
 import javafx.scene.Node;
 import javafx.scene.control.skin.ButtonSkin;
 import javafx.scene.shape.Rectangle;
 
@@ -292,11 +294,21 @@
 
         attemptGC(defSkinRef);
         assertNull("ButtonSkin must be GCed", defSkinRef.get());
     }
 
-    private void attemptGC(WeakReference<ButtonSkin> weakRef) {
+    @Test
+    public void testButtonBehaviorMemoryLeak() {
+        Button control = new Button();
+        WeakReference<BehaviorBase<?>> weakRef = new WeakReference<>(new ButtonBehavior<>(control));
+        assertNotNull(weakRef.get());
+        weakRef.get().dispose();
+        attemptGC(weakRef);
+        assertNull("behavior must be gc'ed", weakRef.get());
+    }
+
+    private void attemptGC(WeakReference<?> weakRef) {
         for (int i = 0; i < 10; i++) {
             System.gc();
             System.runFinalization();
 
             if (weakRef.get() == null) {
