diff a/modules/javafx.controls/src/main/java/com/sun/javafx/scene/control/behavior/TextFieldBehavior.java b/modules/javafx.controls/src/main/java/com/sun/javafx/scene/control/behavior/TextFieldBehavior.java
--- a/modules/javafx.controls/src/main/java/com/sun/javafx/scene/control/behavior/TextFieldBehavior.java
+++ b/modules/javafx.controls/src/main/java/com/sun/javafx/scene/control/behavior/TextFieldBehavior.java
@@ -118,45 +118,14 @@
 
     private void handleFocusChange() {
         TextField textField = getNode();
 
         if (textField.isFocused()) {
-            if (PlatformUtil.isIOS()) {
-                // special handling of focus on iOS is required to allow to
-                // control native keyboard, because nat. keyboard is poped-up only when native
-                // text component gets focus. When we have JFX keyboard we can remove this code
-                TextInputTypes type = TextInputTypes.TEXT_FIELD;
-                if (textField.getClass().equals(javafx.scene.control.PasswordField.class)) {
-                    type = TextInputTypes.PASSWORD_FIELD;
-                } else if (textField.getParent().getClass().equals(javafx.scene.control.ComboBox.class)) {
-                    type = TextInputTypes.EDITABLE_COMBO;
-                }
-                final Bounds bounds = textField.getBoundsInParent();
-                double w = bounds.getWidth();
-                double h = bounds.getHeight();
-                Affine3D trans = calculateNodeToSceneTransform(textField);
-//                Insets insets = skin.getInsets();
-//                w -= insets.getLeft() + insets.getRight();
-//                h -= insets.getTop() + insets.getBottom();
-                String text = textField.getText();
-
-                // we need to display native text input component on the place where JFX component is drawn
-                // all parameters needed to do that are passed to native impl. here
-                WindowHelper.getPeer(textField.getScene().getWindow()).requestInput(
-                        text, type.ordinal(), w, h,
-                        trans.getMxx(), trans.getMxy(), trans.getMxz(), trans.getMxt(),// + insets.getLeft(),
-                        trans.getMyx(), trans.getMyy(), trans.getMyz(), trans.getMyt(),// + insets.getTop(),
-                        trans.getMzx(), trans.getMzy(), trans.getMzz(), trans.getMzt());
-            }
             if (!focusGainedByMouseClick) {
                 setCaretAnimating(true);
             }
         } else {
-            if (PlatformUtil.isIOS() && textField.getScene() != null) {
-                // releasing the focus => we need to hide the native component and also native keyboard
-                WindowHelper.getPeer(textField.getScene().getWindow()).releaseInput();
-            }
             focusGainedByMouseClick = false;
             setCaretAnimating(false);
         }
     }
 
