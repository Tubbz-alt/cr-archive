diff a/modules/javafx.controls/src/main/java/javafx/scene/control/skin/MenuBarSkin.java b/modules/javafx.controls/src/main/java/javafx/scene/control/skin/MenuBarSkin.java
--- a/modules/javafx.controls/src/main/java/javafx/scene/control/skin/MenuBarSkin.java
+++ b/modules/javafx.controls/src/main/java/javafx/scene/control/skin/MenuBarSkin.java
@@ -470,18 +470,14 @@
             openMenu.show();
         }
     }
 
     private void setFocusedMenuIndex(int index) {
-        this.focusedMenuIndex = index;
-        focusedMenu = null;
+        focusedMenuIndex = (index >= -1 && index < getSkinnable().getMenus().size())? index : -1;
+        focusedMenu = (focusedMenuIndex != -1)? getSkinnable().getMenus().get(index) : null;
 
-        if (index != -1 && !(getSkinnable().getMenus().isEmpty())) {
-            focusedMenu = getSkinnable().getMenus().get(index);
-        }
-
-        if (focusedMenu != null && focusedMenuIndex != -1) {
+        if (focusedMenuIndex != -1) {
             openMenuButton = (MenuBarButton)container.getChildren().get(focusedMenuIndex);
             openMenuButton.setHover();
         }
     }
 
@@ -762,10 +758,14 @@
 
     int getFocusedMenuIndex() {
         return focusedMenuIndex;
     }
 
+    void setFocusedIndex(int index) {
+        this.setFocusedMenuIndex(0);
+    }
+
     private boolean menusContainCustomMenuItem() {
         for (Menu menu : getSkinnable().getMenus()) {
             if (menuContainsCustomMenuItem(menu)) {
                 System.err.println("Warning: MenuBar ignored property useSystemMenuBar because menus contain CustomMenuItem");
                 return true;
