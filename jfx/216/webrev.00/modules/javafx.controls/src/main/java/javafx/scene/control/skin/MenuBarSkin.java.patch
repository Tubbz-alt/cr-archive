diff a/modules/javafx.controls/src/main/java/javafx/scene/control/skin/MenuBarSkin.java b/modules/javafx.controls/src/main/java/javafx/scene/control/skin/MenuBarSkin.java
--- a/modules/javafx.controls/src/main/java/javafx/scene/control/skin/MenuBarSkin.java
+++ b/modules/javafx.controls/src/main/java/javafx/scene/control/skin/MenuBarSkin.java
@@ -302,14 +302,16 @@
         menuBarFocusedPropertyListener = (ov, t, t1) -> {
             if (t1) {
                 // RT-23147 when MenuBar's focusTraversable is true the first
                 // menu will visually indicate focus
                 unSelectMenus();
-                menuModeStart(0);
-                openMenuButton = ((MenuBarButton)container.getChildren().get(0));
-                setFocusedMenuIndex(0);
-                openMenuButton.setHover();
+                if (!container.getChildren().isEmpty()) {
+                    menuModeStart(0);
+                    openMenuButton = ((MenuBarButton)container.getChildren().get(0));
+                    setFocusedMenuIndex(0);
+                    openMenuButton.setHover();
+                }
             } else {
                 unSelectMenus();
              }
          };
         weakSceneKeyEventHandler = new WeakEventHandler<KeyEvent>(keyEventHandler);
@@ -473,11 +475,15 @@
         }
     }
 
     private void setFocusedMenuIndex(int index) {
         this.focusedMenuIndex = index;
-        focusedMenu = index == -1 ? null : getSkinnable().getMenus().get(index);
+        focusedMenu = null;
+
+        if (index != -1 && !(getSkinnable().getMenus().isEmpty())) {
+            focusedMenu = getSkinnable().getMenus().get(index);
+        }
 
         if (focusedMenu != null && focusedMenuIndex != -1) {
             openMenuButton = (MenuBarButton)container.getChildren().get(focusedMenuIndex);
             openMenuButton.setHover();
         }
