diff a/modules/javafx.controls/src/main/java/javafx/scene/control/skin/MenuBarSkin.java b/modules/javafx.controls/src/main/java/javafx/scene/control/skin/MenuBarSkin.java
--- a/modules/javafx.controls/src/main/java/javafx/scene/control/skin/MenuBarSkin.java
+++ b/modules/javafx.controls/src/main/java/javafx/scene/control/skin/MenuBarSkin.java
@@ -469,13 +469,16 @@
 
             openMenu.show();
         }
     }
 
-    private void setFocusedMenuIndex(int index) {
-        focusedMenuIndex = (index >= -1 && index < getSkinnable().getMenus().size())? index : -1;
-        focusedMenu = (focusedMenuIndex != -1)? getSkinnable().getMenus().get(index) : null;
+    /**
+     * This method is package scoped as it is used in this class as well as for testing
+     */
+    void setFocusedMenuIndex(int index) {
+        focusedMenuIndex = (index >= -1 && index < getSkinnable().getMenus().size()) ? index : -1;
+        focusedMenu = (focusedMenuIndex != -1) ? getSkinnable().getMenus().get(index) : null;
 
         if (focusedMenuIndex != -1) {
             openMenuButton = (MenuBarButton)container.getChildren().get(focusedMenuIndex);
             openMenuButton.setHover();
         }
@@ -758,14 +761,10 @@
 
     int getFocusedMenuIndex() {
         return focusedMenuIndex;
     }
 
-    void setFocusedIndex(int index) {
-        this.setFocusedMenuIndex(0);
-    }
-
     private boolean menusContainCustomMenuItem() {
         for (Menu menu : getSkinnable().getMenus()) {
             if (menuContainsCustomMenuItem(menu)) {
                 System.err.println("Warning: MenuBar ignored property useSystemMenuBar because menus contain CustomMenuItem");
                 return true;
