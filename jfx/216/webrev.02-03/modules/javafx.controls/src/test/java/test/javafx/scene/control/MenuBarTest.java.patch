diff a/modules/javafx.controls/src/test/java/test/javafx/scene/control/MenuBarTest.java b/modules/javafx.controls/src/test/java/test/javafx/scene/control/MenuBarTest.java
--- a/modules/javafx.controls/src/test/java/test/javafx/scene/control/MenuBarTest.java
+++ b/modules/javafx.controls/src/test/java/test/javafx/scene/control/MenuBarTest.java
@@ -128,11 +128,11 @@
         MenuBarSkin skin = (MenuBarSkin)menuBar.getSkin();
         assertTrue(skin != null);
 
         menuBar.getScene().getWindow().requestFocus();
 
-        int focusedIndex = MenuBarSkinShim.getFocusedIndex(skin);
+        int focusedIndex = MenuBarSkinShim.getFocusedMenuIndex(skin);
         assertEquals(-1, focusedIndex);
     }
 
     @Test public void testSimulateTraverseIntoEmptyMenubar() {
         menuBar.setFocusTraversable(true);
@@ -143,12 +143,12 @@
 
         MenuBarSkin skin = (MenuBarSkin)menuBar.getSkin();
         assertTrue(skin != null);
 
         // simulate notification from traversalListener
-        MenuBarSkinShim.setFocusedIndex(skin, 0);
-        int focusedIndex = MenuBarSkinShim.getFocusedIndex(skin);
+        MenuBarSkinShim.setFocusedMenuIndex(skin, 0);
+        int focusedIndex = MenuBarSkinShim.getFocusedMenuIndex(skin);
         assertEquals(-1, focusedIndex);
     }
 
     @Test public void getMenusHasSizeZero() {
         assertEquals(0, menuBar.getMenus().size());
@@ -323,11 +323,11 @@
         assertTrue(!menu.isShowing());
         keyboard.doKeyPress(KeyCode.LEFT);
         tk.firePulse();
 
         // check if focusedMenuIndex is reset to -1 so navigation happens.
-        int focusedIndex = MenuBarSkinShim.getFocusedIndex(skin);
+        int focusedIndex = MenuBarSkinShim.getFocusedMenuIndex(skin);
         assertEquals(-1, focusedIndex);
     }
 
     @Test public void testMenuOnShownEventFiringWithKeyNavigation() {
         final MouseEventGenerator generator = new MouseEventGenerator();
@@ -708,9 +708,9 @@
         SceneHelper.processMouseEvent(scene,
             MouseEventGenerator.generateMouseEvent(MouseEvent.MOUSE_RELEASED, xval+20, yval+20));
         assertFalse(menu1.isShowing());
 
         // check if focusedMenuIndex is 0 (menu1 is still in selected state).
-        int focusedIndex = MenuBarSkinShim.getFocusedIndex(skin);
+        int focusedIndex = MenuBarSkinShim.getFocusedMenuIndex(skin);
         assertEquals(0, focusedIndex);
     }
 }
