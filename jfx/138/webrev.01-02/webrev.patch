diff a/modules/javafx.controls/src/main/java/javafx/scene/control/TextInputControl.java b/modules/javafx.controls/src/main/java/javafx/scene/control/TextInputControl.java
--- a/modules/javafx.controls/src/main/java/javafx/scene/control/TextInputControl.java
+++ b/modules/javafx.controls/src/main/java/javafx/scene/control/TextInputControl.java
@@ -1241,18 +1241,20 @@
         int adjustmentAmount = 0;
         if (end != start) {
             getContent().delete(start, end, value.isEmpty());
             length -= (end - start);
         }
+        doSelectRange(anchor, caretPosition);
         if (value != null) {
-            doSelectRange(0, 0); // clear selection before replacing to avoid JDK-8176270
             getContent().insert(start, value, true);
             adjustmentAmount = value.length() - (getLength() - length);
-            anchor -= adjustmentAmount;
-            caretPosition -= adjustmentAmount;
+            if (adjustmentAmount != 0) {
+                anchor -= adjustmentAmount;
+                caretPosition -= adjustmentAmount;
+                doSelectRange(anchor, caretPosition);
+            }
         }
-        doSelectRange(anchor, caretPosition);
         return adjustmentAmount;
     }
 
     private <T> void updateText(TextFormatter<T> formatter) {
         T value = formatter.getValue();
diff a/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextAreaTest.java b/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextAreaTest.java
--- a/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextAreaTest.java
+++ b/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextAreaTest.java
@@ -502,14 +502,17 @@
         dummyTxtArea.deleteText(0,6);
         assertEquals(dummyTxtArea.getParagraphs().get(0).toString(), "another");
     }
 
     @Test public void replaceSelectionAtEndWithListener() {
-        StringBuilder log = new StringBuilder();
+        StringBuilder selectedTextLog = new StringBuilder();
+        StringBuilder selectionLog = new StringBuilder();
         txtArea.setText("x xxx");
         txtArea.selectRange(2, 5);
-        txtArea.selectedTextProperty().addListener((__, ___, selection) -> log.append("|" + selection));
+        txtArea.selectedTextProperty().addListener((__, ___, selection) -> selectedTextLog.append("|" + selection));
+        txtArea.selectionProperty().addListener((__, ___, selection) -> selectionLog.append("|" + selection.getStart() + "," + selection.getEnd()));
         txtArea.replaceSelection("a");
-        assertEquals("|", log.toString());
+        assertEquals("|", selectedTextLog.toString());
+        assertEquals("|3,3", selectionLog.toString());
         assertEquals("x a", txtArea.getText());
     }
 }
diff a/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextFieldTest.java b/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextFieldTest.java
--- a/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextFieldTest.java
+++ b/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextFieldTest.java
@@ -462,16 +462,19 @@
         assertEquals("actionHandler must be notified", 1, actions.size());
         assertTrue("action must be consumed ", actions.get(0).isConsumed());
     }
 
     @Test public void replaceSelectionAtEndWithListener() {
-        StringBuilder log = new StringBuilder();
+        StringBuilder selectedTextLog = new StringBuilder();
+        StringBuilder selectionLog = new StringBuilder();
         txtField.setText("x xxx");
         txtField.selectRange(2, 5);
-        txtField.selectedTextProperty().addListener((__, ___, selection) -> log.append("|" + selection));
+        txtField.selectedTextProperty().addListener((__, ___, selection) -> selectedTextLog.append("|" + selection));
+        txtField.selectionProperty().addListener((__, ___, selection) -> selectionLog.append("|" + selection.getStart() + "," + selection.getEnd()));
         txtField.replaceSelection("a");
-        assertEquals("|", log.toString());
+        assertEquals("|", selectedTextLog.toString());
+        assertEquals("|3,3", selectionLog.toString());
         assertEquals("x a", txtField.getText());
     }
 
 
     /**
