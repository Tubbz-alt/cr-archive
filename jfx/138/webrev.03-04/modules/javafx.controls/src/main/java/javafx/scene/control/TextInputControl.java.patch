diff a/modules/javafx.controls/src/main/java/javafx/scene/control/TextInputControl.java b/modules/javafx.controls/src/main/java/javafx/scene/control/TextInputControl.java
--- a/modules/javafx.controls/src/main/java/javafx/scene/control/TextInputControl.java
+++ b/modules/javafx.controls/src/main/java/javafx/scene/control/TextInputControl.java
@@ -1143,22 +1143,28 @@
             // Apply reverse change here
             final int start = undoChange.start;
             final String newText = undoChange.newText;
             final String oldText = undoChange.oldText;
 
-            if (newText != null) {
-                getContent().delete(start, start + newText.length(), oldText.isEmpty());
-            }
+            blockSelectedTextUpdate = true;
+            try {
+                if (newText != null) {
+                    getContent().delete(start, start + newText.length(), oldText.isEmpty());
+                }
 
-            if (oldText != null) {
-                getContent().insert(start, oldText, true);
-                doSelectRange(start, start + oldText.length());
-            } else {
-                doSelectRange(start, start + newText.length());
-            }
+                if (oldText != null) {
+                    getContent().insert(start, oldText, true);
+                    doSelectRange(start, start + oldText.length());
+                } else {
+                    doSelectRange(start, start + newText.length());
+                }
 
-            undoChange = undoChange.prev;
+                undoChange = undoChange.prev;
+            } finally {
+                blockSelectedTextUpdate = false;
+                updateSelectedText();
+            }
         }
         updateUndoRedoState();
     }
 
     /**
@@ -1172,19 +1178,25 @@
             undoChange = undoChange.next;
             final int start = undoChange.start;
             final String newText = undoChange.newText;
             final String oldText = undoChange.oldText;
 
-            if (oldText != null) {
-                getContent().delete(start, start + oldText.length(), newText.isEmpty());
-            }
+            blockSelectedTextUpdate = true;
+            try {
+                if (oldText != null) {
+                    getContent().delete(start, start + oldText.length(), newText.isEmpty());
+                }
 
-            if (newText != null) {
-                getContent().insert(start, newText, true);
-                doSelectRange(start + newText.length(), start + newText.length());
-            } else {
-                doSelectRange(start, start);
+                if (newText != null) {
+                    getContent().insert(start, newText, true);
+                    doSelectRange(start + newText.length(), start + newText.length());
+                } else {
+                    doSelectRange(start, start);
+                }
+            } finally {
+                blockSelectedTextUpdate = false;
+                updateSelectedText();
             }
         }
         updateUndoRedoState();
         // else beep ?
     }
