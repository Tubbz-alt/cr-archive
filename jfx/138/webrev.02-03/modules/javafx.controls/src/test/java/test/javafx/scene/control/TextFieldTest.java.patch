diff a/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextFieldTest.java b/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextFieldTest.java
--- a/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextFieldTest.java
+++ b/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextFieldTest.java
@@ -51,10 +51,12 @@
 import javafx.event.Event;
 import javafx.event.EventHandler;
 import javafx.scene.Scene;
 import javafx.scene.control.ComboBox;
 import javafx.scene.control.TextField;
+import javafx.scene.control.TextFormatter;
+import javafx.scene.control.TextFormatter.Change;
 import javafx.scene.control.TextInputControlShim;
 import javafx.scene.input.KeyCode;
 import javafx.scene.input.KeyCodeCombination;
 import javafx.scene.input.KeyEvent;
 import javafx.scene.layout.StackPane;
@@ -461,10 +463,26 @@
         keyboard.doKeyPress(ENTER);
         assertEquals("actionHandler must be notified", 1, actions.size());
         assertTrue("action must be consumed ", actions.get(0).isConsumed());
     }
 
+    @Test public void replaceSelectionWithFilteredCharacters() {
+        txtField.setText("x xxxyyy");
+        txtField.selectRange(2, 5);
+        txtField.setTextFormatter(new TextFormatter<>(this::noDigits));
+        txtField.replaceSelection("a1234a");
+        assertEquals("x aayyy", txtField.getText());
+        assertEquals(4, txtField.getSelection().getStart());
+        assertEquals(4, txtField.getSelection().getStart());
+    }
+
+    private Change noDigits(Change change) {
+        Change filtered = change.clone();
+        filtered.setText(change.getText().replaceAll("[0-9]","\n"));
+        return filtered;
+    }
+
     @Test public void replaceSelectionAtEndWithListener() {
         StringBuilder selectedTextLog = new StringBuilder();
         StringBuilder selectionLog = new StringBuilder();
         txtField.setText("x xxx");
         txtField.selectRange(2, 5);
