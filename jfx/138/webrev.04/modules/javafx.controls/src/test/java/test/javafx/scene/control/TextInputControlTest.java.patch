diff a/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextInputControlTest.java b/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextInputControlTest.java
--- a/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextInputControlTest.java
+++ b/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextInputControlTest.java
@@ -50,10 +50,12 @@
 import javafx.scene.control.PasswordField;
 import javafx.scene.control.TextArea;
 import javafx.scene.control.TextField;
 import javafx.scene.control.TextInputControl;
 import com.sun.javafx.tk.Toolkit;
+
+import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.Parameterized;
 import test.com.sun.javafx.scene.control.infrastructure.KeyEventFirer;
@@ -83,10 +85,29 @@
         this.type = type;
     }
 
     @Before public void setup() throws Exception {
         textInput = (TextInputControl) type.newInstance();
+        setUncaughtExceptionHandler();
+    }
+
+    @After public void cleanup() {
+        removeUncaughtExceptionHandler();
+    }
+
+    private void setUncaughtExceptionHandler() {
+        Thread.currentThread().setUncaughtExceptionHandler((thread, throwable) -> {
+            if (throwable instanceof RuntimeException) {
+                throw (RuntimeException)throwable;
+            } else {
+                Thread.currentThread().getThreadGroup().uncaughtException(thread, throwable);
+            }
+        });
+    }
+
+    private void removeUncaughtExceptionHandler() {
+        Thread.currentThread().setUncaughtExceptionHandler(null);
     }
 
     /******************************************************
      * Test the default states                            *
      *****************************************************/
@@ -1863,10 +1884,24 @@
 
         textInput.undo();
         assertEquals("", textInput.getText());
     }
 
+    @Test public void test_redo_replaceText_selectionShortening() {
+        textInput.setText("0123456789");
+        assertEquals("0123456789", textInput.getText());
+
+        textInput.replaceText(8, 10, "x");
+        assertEquals("01234567x", textInput.getText());
+
+        textInput.undo();
+        assertEquals("0123456789", textInput.getText());
+
+        textInput.redo();
+        assertEquals("01234567x", textInput.getText());
+    }
+
     // Test for JDK-8178418
     @Test public void UndoRedoSpaceSequence() {
         Toolkit tk = (StubToolkit)Toolkit.getToolkit();
         StackPane root = new StackPane();
         Scene scene = new Scene(root);
