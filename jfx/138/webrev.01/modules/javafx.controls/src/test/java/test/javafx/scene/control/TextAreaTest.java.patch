diff a/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextAreaTest.java b/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextAreaTest.java
--- a/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextAreaTest.java
+++ b/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextAreaTest.java
@@ -32,10 +32,11 @@
 import javafx.beans.property.SimpleStringProperty;
 import javafx.beans.property.StringProperty;
 import javafx.scene.Scene;
 import javafx.scene.control.TextArea;
 import javafx.scene.control.TextInputControlShim;
+import org.junit.After;
 import org.junit.Before;
 import org.junit.Ignore;
 import org.junit.Test;
 
 import static test.com.sun.javafx.scene.control.infrastructure.ControlTestUtils.*;
@@ -50,10 +51,29 @@
     private TextArea dummyTxtArea;//With string value
 
     @Before public void setup() {
         txtArea = new TextArea();
         dummyTxtArea = new TextArea("dummy");
+        setUncaughtExceptionHandler();
+    }
+
+    @After public void cleanup() {
+        removeUncaughtExceptionHandler();
+    }
+
+    private void setUncaughtExceptionHandler() {
+        Thread.currentThread().setUncaughtExceptionHandler((thread, throwable) -> {
+            if (throwable instanceof RuntimeException) {
+                throw (RuntimeException)throwable;
+            } else {
+                Thread.currentThread().getThreadGroup().uncaughtException(thread, throwable);
+            }
+        });
+    }
+
+    private void removeUncaughtExceptionHandler() {
+        Thread.currentThread().setUncaughtExceptionHandler(null);
     }
 
     /*********************************************************************
      * Tests for the constructors                                        *
      ********************************************************************/
@@ -480,6 +500,16 @@
     @Test public void deleteParagraphAndCheckParagraphContents() {
         dummyTxtArea.appendText("\nanother");
         dummyTxtArea.deleteText(0,6);
         assertEquals(dummyTxtArea.getParagraphs().get(0).toString(), "another");
     }
+
+    @Test public void replaceSelectionAtEndWithListener() {
+        StringBuilder log = new StringBuilder();
+        txtArea.setText("x xxx");
+        txtArea.selectRange(2, 5);
+        txtArea.selectedTextProperty().addListener((__, ___, selection) -> log.append("|" + selection));
+        txtArea.replaceSelection("a");
+        assertEquals("|", log.toString());
+        assertEquals("x a", txtArea.getText());
+    }
 }
