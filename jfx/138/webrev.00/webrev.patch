diff a/modules/javafx.controls/src/main/java/javafx/scene/control/TextInputControl.java b/modules/javafx.controls/src/main/java/javafx/scene/control/TextInputControl.java
--- a/modules/javafx.controls/src/main/java/javafx/scene/control/TextInputControl.java
+++ b/modules/javafx.controls/src/main/java/javafx/scene/control/TextInputControl.java
@@ -164,11 +164,11 @@
                 int start = sel.getStart();
                 int end = sel.getEnd();
                 int length = txt.length();
                 if (end > start + length) end = length;
                 if (start > length-1) start = end = 0;
-                return txt.substring(start, end);
+                return txt.substring(start, Utils.clamp(0, end, txt.length()));
             }
         });
 
         focusedProperty().addListener((ob, o, n) -> {
             if (n) {
diff a/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextAreaTest.java b/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextAreaTest.java
--- a/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextAreaTest.java
+++ b/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextAreaTest.java
@@ -480,6 +480,15 @@
     @Test public void deleteParagraphAndCheckParagraphContents() {
         dummyTxtArea.appendText("\nanother");
         dummyTxtArea.deleteText(0,6);
         assertEquals(dummyTxtArea.getParagraphs().get(0).toString(), "another");
     }
+
+    @Test public void replaceSelectionAtEndWithListener() {
+        StringBuilder log = new StringBuilder();
+        txtArea.setText("x xxx");
+        txtArea.selectRange(2, 5);
+        txtArea.selectedTextProperty().addListener((__, ___, selection) -> log.append("."));
+        txtArea.replaceSelection("a");
+        assertFalse(log.toString().isEmpty());
+    }
 }
diff a/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextFieldTest.java b/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextFieldTest.java
--- a/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextFieldTest.java
+++ b/modules/javafx.controls/src/test/java/test/javafx/scene/control/TextFieldTest.java
@@ -446,10 +446,20 @@
         keyboard.doKeyPress(ENTER);
         assertEquals("actionHandler must be notified", 1, actions.size());
         assertTrue("action must be consumed ", actions.get(0).isConsumed());
     }
 
+    @Test public void replaceSelectionAtEndWithListener() {
+        StringBuilder log = new StringBuilder();
+        txtField.setText("x xxx");
+        txtField.selectedTextProperty().addListener((__, ___, selection) -> log.append("."));
+        txtField.selectRange(2, 5);
+        txtField.replaceSelection("a");
+        assertFalse(log.toString().isEmpty());
+    }
+
+
     /**
      * Helper method to init the stage only if really needed.
      */
     private void initStage() {
         //This step is not needed (Just to make sure StubToolkit is loaded into VM)
