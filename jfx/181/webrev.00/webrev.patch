diff a/modules/javafx.graphics/src/main/native-glass/ios/GlassViewDelegate.h b/modules/javafx.graphics/src/main/native-glass/ios/GlassViewDelegate.h
--- a/modules/javafx.graphics/src/main/native-glass/ios/GlassViewDelegate.h
+++ b/modules/javafx.graphics/src/main/native-glass/ios/GlassViewDelegate.h
@@ -55,10 +55,11 @@
 @property (nonatomic, retain) UITouch * mouseTouch; // UITouch object associated with mouse emulation (i.e. first UITouch)
 @property (nonatomic) CGPoint lastEventPoint; // coordinates of last 'mouse' event
 // touches
 @property (nonatomic, strong) GlassMutableDictionaryRef touches;
 @property (nonatomic) jlong lastTouchId;
+@property (nonatomic) CGPoint beginTouchEventPoint; // coordinates at the beginning of a 'touch' event
 // gestures
 @property (nonatomic, retain) GlassGestureDelegate *delegate;
 
 
 - (id)initWithView:(UIScrollView*)view withJview:(jobject)jview;
diff a/modules/javafx.graphics/src/main/native-glass/ios/GlassViewDelegate.m b/modules/javafx.graphics/src/main/native-glass/ios/GlassViewDelegate.m
--- a/modules/javafx.graphics/src/main/native-glass/ios/GlassViewDelegate.m
+++ b/modules/javafx.graphics/src/main/native-glass/ios/GlassViewDelegate.m
@@ -94,10 +94,11 @@
 @synthesize ignoreNextScroll;
 @synthesize isInertia;
 @synthesize isScrolling;
 @synthesize mouseTouch;
 @synthesize lastEventPoint;
+@synthesize beginTouchEventPoint;
 
 
 - (void)touchesBeganCallback:(NSSet *)involvedTouches withEvent:(UIEvent *)event
 {
     DNDLOG(@"GlassViewDelegate touchesBeganCallback");
@@ -114,10 +115,11 @@
     //When we are starting first touch, let's associate the first one
     //touch with mouse emulation
     if (self.mouseTouch == nil) {
         UITouch *touch = [[event allTouches] anyObject];
         CGPoint viewPoint = [touch locationInView:self.uiView.superview];
+        self.beginTouchEventPoint = viewPoint;
 
         self.mouseTouch = touch;
 
         //focus owning GlassWindow
         [self.uiView.superview.superview makeKeyWindow];
@@ -142,11 +144,15 @@
     [self sendJavaTouchEvent:event];
 
     // emulate mouse
     if (self.mouseTouch != nil && [involvedTouches containsObject:self.mouseTouch] == YES) {
         CGPoint viewPoint = [self.mouseTouch locationInView:self.uiView.superview];
-        [self sendJavaMouseEvent:viewPoint type:com_sun_glass_events_MouseEvent_DRAG button:com_sun_glass_events_MouseEvent_BUTTON_LEFT];
+        // iOS might send one or more 'NSTouchPhaseMoved', even if the initial event location didn't change.
+        // This check prevents emulating mouse drag events in such cases
+        if (!CGPointEqualToPoint(viewPoint, self.beginTouchEventPoint)) {
+            [self sendJavaMouseEvent:viewPoint type:com_sun_glass_events_MouseEvent_DRAG button:com_sun_glass_events_MouseEvent_BUTTON_LEFT];
+        }
     }
 }
 
 
 - (void)touchesEndedCallback:(NSSet *)involvedTouches withEvent:(UIEvent *)event
