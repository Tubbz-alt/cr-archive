diff a/modules/javafx.base/src/main/java/javafx/beans/property/DoubleProperty.java b/modules/javafx.base/src/main/java/javafx/beans/property/DoubleProperty.java
--- a/modules/javafx.base/src/main/java/javafx/beans/property/DoubleProperty.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/property/DoubleProperty.java
@@ -23,21 +23,18 @@
  * questions.
  */
 
 package javafx.beans.property;
 
+import java.util.Objects;
+
 import com.sun.javafx.binding.BidirectionalBinding;
-import com.sun.javafx.binding.ExpressionHelper;
+import com.sun.javafx.binding.Logging;
+
 import javafx.beans.binding.Bindings;
 import javafx.beans.value.ObservableValue;
 import javafx.beans.value.WritableDoubleValue;
-import com.sun.javafx.binding.Logging;
-import javafx.beans.InvalidationListener;
-import javafx.beans.Observable;
-import javafx.beans.WeakInvalidationListener;
-import javafx.beans.value.ChangeListener;
-import javafx.beans.value.ObservableDoubleValue;
 
 /**
  * This class defines a {@link Property} wrapping a {@code double} value.
  * <p>
  * The value of a {@code DoubleProperty} can be get and set with {@link #get()},
@@ -146,13 +143,11 @@
      *             if {@code property} is {@code null}
      * @see #asObject()
      * @since JavaFX 8.0
      */
     public static DoubleProperty doubleProperty(final Property<Double> property) {
-        if (property == null) {
-            throw new NullPointerException("Property cannot be null");
-        }
+        Objects.requireNonNull(property, "Property cannot be null");
         return new DoublePropertyBase() {
             {
                 BidirectionalBinding.bindNumber(this, property);
             }
 
@@ -187,11 +182,11 @@
      * @return the new {@code ObjectProperty}
      * @since JavaFX 8.0
      */
     @Override
     public ObjectProperty<Double> asObject() {
-        return new ObjectPropertyBase<Double> () {
+        return new ObjectPropertyBase<> () {
             {
                 BidirectionalBinding.bindNumber(this, DoubleProperty.this);
             }
 
             @Override
@@ -203,8 +198,6 @@
             public String getName() {
                 return DoubleProperty.this.getName();
             }
         };
     }
-
-
-}
+}
