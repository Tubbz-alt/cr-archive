diff a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/ios/IosView.java b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/ios/IosView.java
--- a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/ios/IosView.java
+++ b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/ios/IosView.java
@@ -80,7 +80,12 @@
 
     @Override native protected void _setParent(long ptr, long parentPtr);
     @Override protected void _uploadPixels(long ptr, Pixels pixels) {
         throw new RuntimeException("IosView._uploadPixels() UNIMPLEMENTED.");
     }
+
+    private void notifyUnicode(int type, int keyCode, int unicode, int modifiers) {
+        notifyKey(type, keyCode, new char[] {(char) unicode}, modifiers);
+    }
+
 }
 
diff a/modules/javafx.graphics/src/main/native-glass/ios/GlassApplication.m b/modules/javafx.graphics/src/main/native-glass/ios/GlassApplication.m
--- a/modules/javafx.graphics/src/main/native-glass/ios/GlassApplication.m
+++ b/modules/javafx.graphics/src/main/native-glass/ios/GlassApplication.m
@@ -662,16 +662,16 @@
     mat_jScreenClass = (*env)->NewGlobalRef(env, (*env)->FindClass(env, "com/sun/glass/ui/Screen"));
     GLASS_CHECK_EXCEPTION(env);
 
     // view specific
     mat_jViewClass = (*env)->NewGlobalRef(env, (*env)->FindClass(env, "com/sun/glass/ui/ios/IosView"));
+    mat_jViewNotifyKey = (*env)->GetMethodID(env, mat_jViewClass, "notifyUnicode", "(IIII)V");
     jclass mat_jViewBaseClass = (*env)->FindClass(env, "com/sun/glass/ui/View");
     GLASS_CHECK_EXCEPTION(env);
 
     mat_jViewNotifyResize = (*env)->GetMethodID(env, mat_jViewBaseClass, "notifyResize", "(II)V");
     mat_jViewNotifyRepaint = (*env)->GetMethodID(env, mat_jViewBaseClass, "notifyRepaint", "(IIII)V");
-    mat_jViewNotifyKey = (*env)->GetMethodID(env, mat_jViewBaseClass, "notifyKey", "(II[CI)V");
     mat_jViewNotifyMouse = (*env)->GetMethodID(env, mat_jViewBaseClass, "notifyMouse", "(IIIIIIIZZ)V");
     mat_jViewNotifyInputMethod = (*env)->GetMethodID(env, mat_jViewBaseClass, "notifyInputMethod", "(Ljava/lang/String;[I[I[BIII)V");
     mat_jViewNotifyView = (*env)->GetMethodID(env, mat_jViewBaseClass, "notifyView", "(I)V");
     GLASS_CHECK_EXCEPTION(env);
 
diff a/modules/javafx.graphics/src/main/native-glass/ios/GlassViewDelegate.h b/modules/javafx.graphics/src/main/native-glass/ios/GlassViewDelegate.h
--- a/modules/javafx.graphics/src/main/native-glass/ios/GlassViewDelegate.h
+++ b/modules/javafx.graphics/src/main/native-glass/ios/GlassViewDelegate.h
@@ -72,11 +72,11 @@
 
 // We are emulating mouse events
 - (void)sendJavaMouseEvent:(CGPoint)viewPoint type:(int)type button:(int)button;
 
 // Java events callbacks
-- (void)sendJavaKeyEventWithType:(int)type keyCode:(int)code chars:(char)chr modifiers:(int)modif;
+- (void)sendJavaKeyEventWithType:(int)type keyCode:(int)code unicode:(int)unicode modifiers:(int)modif;
 
 - (void)sendJavaTouchEvent:(UIEvent *)theEvent;
 
 - (void) sendJavaInputMethodEvent:(NSString *) text clauseBoundary:(int[])clsBndr attrBoundary:(int[])attrBndr attrValue:(Byte[])attrVal
               committedTextLength:(int)cmtdTxtLen caretPos:(int)crtPos visiblePos:(int)visPos;
diff a/modules/javafx.graphics/src/main/native-glass/ios/GlassViewDelegate.m b/modules/javafx.graphics/src/main/native-glass/ios/GlassViewDelegate.m
--- a/modules/javafx.graphics/src/main/native-glass/ios/GlassViewDelegate.m
+++ b/modules/javafx.graphics/src/main/native-glass/ios/GlassViewDelegate.m
@@ -552,21 +552,15 @@
                            modifiers, isPopupTrigger, isSynthesized);
     GLASS_CHECK_EXCEPTION(env);
 }
 
 
-- (void)sendJavaKeyEventWithType:(int)type keyCode:(int)code chars:(char)chr modifiers:(int)modif;
+- (void)sendJavaKeyEventWithType:(int)type keyCode:(int)code unicode:(int)unicode modifiers:(int)modif
 {
     GET_MAIN_JENV;
 
-    jchar jc[1] = {(jchar) chr};
-    jcharArray jChars = (*env)->NewCharArray(env, 1);
-    (*env)->SetCharArrayRegion(env, jChars, 0, 1, jc);
-
-    (*env)->CallVoidMethod(env, self.jView, mat_jViewNotifyKey, type, code, jChars, modif);
-
-    (*env)->DeleteLocalRef(env, jChars);
+    (*env)->CallVoidMethod(env, self.jView, mat_jViewNotifyKey, type, code, unicode, modif);
 
     GLASS_CHECK_EXCEPTION(env);
 }
 
 -(void) sendJavaInputMethodEvent:(NSString *) text clauseBoundary:(int[])clsBndr attrBoundary:(int[])attrBndr attrValue:(Byte[])attrVal
@@ -713,11 +707,11 @@
 #pragma mark --- UITextFieldDelegate
 
 -(BOOL)textFieldShouldReturn:(UITextField *)textField{
     [self sendJavaKeyEventWithType:com_sun_glass_events_KeyEvent_PRESS
                                           keyCode:com_sun_glass_events_KeyEvent_VK_ENTER
-                                            chars:(char)13
+                                          unicode:(char)13
                                         modifiers:0];
 
     [[GlassWindow getMasterWindow] resignFocusOwner];
 
     return YES;
diff a/modules/javafx.graphics/src/main/native-glass/ios/GlassViewGL.m b/modules/javafx.graphics/src/main/native-glass/ios/GlassViewGL.m
--- a/modules/javafx.graphics/src/main/native-glass/ios/GlassViewGL.m
+++ b/modules/javafx.graphics/src/main/native-glass/ios/GlassViewGL.m
@@ -123,21 +123,31 @@
 
 
 @implementation GlassViewGL : GLView
 
 -(void) doInsertText:(NSString*)myText {
-    int asciiCode = [myText characterAtIndex:0];
-    [self->delegate sendJavaKeyEventWithType:111 keyCode:asciiCode chars:(char)asciiCode modifiers:0];
-    [self->delegate sendJavaKeyEventWithType:113 keyCode:asciiCode chars:(char)asciiCode modifiers:0];
-    [self->delegate sendJavaKeyEventWithType:112 keyCode:asciiCode chars:(char)asciiCode modifiers:0];
+    int unicode = [myText characterAtIndex:0];
+    int code = com_sun_glass_events_KeyEvent_VK_UNDEFINED;
+    if (unicode == com_sun_glass_events_KeyEvent_VK_ENTER) {
+         code = unicode;
+    }
+    [self->delegate sendJavaKeyEventWithType:com_sun_glass_events_KeyEvent_PRESS
+        keyCode:code unicode:unicode modifiers:0];
+    [self->delegate sendJavaKeyEventWithType:com_sun_glass_events_KeyEvent_TYPED
+        keyCode:code unicode:unicode modifiers:0];
+    [self->delegate sendJavaKeyEventWithType:com_sun_glass_events_KeyEvent_RELEASE
+        keyCode:code unicode:unicode modifiers:0];
 }
 
 -(void) doDeleteBackward {
-    int asciiCode = 8;
-    [self->delegate sendJavaKeyEventWithType:111 keyCode:asciiCode chars:(char)asciiCode modifiers:0];
-    [self->delegate sendJavaKeyEventWithType:113 keyCode:asciiCode chars:(char)asciiCode modifiers:0];
-    [self->delegate sendJavaKeyEventWithType:112 keyCode:asciiCode chars:(char)asciiCode modifiers:0];
+    int unicode = com_sun_glass_events_KeyEvent_VK_BACKSPACE;
+    [self->delegate sendJavaKeyEventWithType:com_sun_glass_events_KeyEvent_PRESS
+        keyCode:unicode unicode:unicode modifiers:0];
+    [self->delegate sendJavaKeyEventWithType:com_sun_glass_events_KeyEvent_TYPED
+        keyCode:unicode unicode:unicode modifiers:0];
+    [self->delegate sendJavaKeyEventWithType:com_sun_glass_events_KeyEvent_RELEASE
+        keyCode:unicode unicode:unicode modifiers:0];
 }
 
 -(BOOL) touchesShouldBegin:(NSSet *)touches withEvent:(UIEvent *)event inContentView:(UIView *)view
 {
     return YES;
diff a/modules/javafx.graphics/src/main/native-glass/ios/GlassWindow.m b/modules/javafx.graphics/src/main/native-glass/ios/GlassWindow.m
--- a/modules/javafx.graphics/src/main/native-glass/ios/GlassWindow.m
+++ b/modules/javafx.graphics/src/main/native-glass/ios/GlassWindow.m
@@ -325,10 +325,14 @@
 
     }
     return self;
 }
 
+- (UIKeyboardType) keyboardType
+{
+    return UIKeyboardTypeASCIICapable;
+}
 
 #pragma mark ---
 
 - (void)_setTransparent:(BOOL)state
 {
