diff a/tests/manual/printing/PrintPageRangeTest.java b/tests/manual/printing/PrintPageRangeTest.java
--- a/tests/manual/printing/PrintPageRangeTest.java
+++ b/tests/manual/printing/PrintPageRangeTest.java
@@ -22,20 +22,25 @@
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */
 
 import javafx.application.Application;
-import javafx.concurrent.Worker;
 import javafx.geometry.Insets;
+import javafx.geometry.Pos;
 import javafx.print.PrinterJob;
 import javafx.scene.Scene;
 import javafx.scene.control.Button;
 import javafx.scene.control.Label;
-import javafx.scene.control.TextField;
 import javafx.scene.layout.HBox;
+import javafx.scene.layout.Region;
 import javafx.scene.layout.Priority;
 import javafx.scene.layout.VBox;
+import javafx.scene.layout.Border;
+import javafx.scene.layout.BorderWidths;
+import javafx.scene.layout.BorderStroke;
+import javafx.scene.layout.BorderStrokeStyle;
+import javafx.scene.paint.Color;
 import javafx.scene.text.Text;
 import javafx.scene.web.WebEngine;
 import javafx.scene.web.WebView;
 import javafx.stage.Stage;
 import javafx.stage.Window;
@@ -43,15 +48,11 @@
 public class PrintPageRangeTest extends Application {
 
     private static final double NAVI_BAR_MIN_DIMENSION = 32.0;
     private static final double PADDING_VALUE = 2.0;
     private static final String buttonStyle = "-fx-font-weight: bold; -fx-font-size: 16px;";
-    private static final String goButtonUnicodeSymbol = "\u21B5";
-    private static final String stopButtonUnicodeSymbol = "\u2715";
-    private static final String reloadButtonUnicodeSymbol = "\u27F3";
 
-    private volatile boolean passed = false;
     private Scene scene;
     private WebView webView;
     private Label bottomMessageLabel;
 
     public static void main(String[] args) {
@@ -66,70 +67,58 @@
         stage.show();
     }
 
     static final String instructions =
                     " 1. Press print button to open Print Dialog.\n" +
-                    " 2. Select a Printer and PageRange 3 to 4 in page range selection.\n" +
+                    " 2. Select a Printer, Page Size A4 and PageRange 3 to 4 in page range selection.\n" +
                     " 3. Click Ok.\n" +
                     " 4. After this 2 pages must be printed.\n" +
                     " 5. When all pages are printed you will see <END OF PRINT JOB> on bottom.\n" +
                     " 6. Check whether printed pages are page no 3 and page no 4.\n" +
+                    "     Note: In printed pages, first page should start with approx <HTML Line No. 50>.\n" +
                     " 7. if Yes then Test Passed else Test Failed";
 
     static final String initialURL = "https://en.wikipedia.org/wiki/Java_version_history";
 
-    private Scene createScene() {
+    private String createHtmlPage() {
+        StringBuilder htmlStringBuilder = new StringBuilder();
+        htmlStringBuilder.append("<html><head></head><body>");
+        for(int i = 0; i < 500; ++i) {
+            htmlStringBuilder.append("<p> HTML Line No. ");
+            htmlStringBuilder.append(i);
+            htmlStringBuilder.append(" </p>");
+        }
+        htmlStringBuilder.append("</body></html>");
+        return htmlStringBuilder.toString();
+    }
 
+    private Scene createScene() {
         webView = new WebView();
         final WebEngine webEngine = webView.getEngine();
-
-        final TextField urlBox = new TextField();
-        urlBox.setMinHeight(NAVI_BAR_MIN_DIMENSION);
-        urlBox.setText(initialURL);
-        HBox.setHgrow(urlBox, Priority.ALWAYS);
-        urlBox.setOnAction(e -> webEngine.load(urlBox.getText()));
-
-        bottomMessageLabel = new Label();
-
-        final Button goStopButton = new Button(goButtonUnicodeSymbol);
-        goStopButton.setStyle(buttonStyle);
-        goStopButton.setOnAction(e -> webEngine.load(urlBox.getText()));
-
-        final Button reloadButton = new Button(reloadButtonUnicodeSymbol);
-        reloadButton.setStyle(buttonStyle);
-        reloadButton.setOnAction(e -> webEngine.reload());
-
+        Text instructionsText = new Text(instructions);
+        instructionsText.setWrappingWidth(550);
+        Label htmlBeginLabel = new Label("Html Content below:");
+        htmlBeginLabel.setMinHeight(NAVI_BAR_MIN_DIMENSION);
+        htmlBeginLabel.setStyle(buttonStyle);
         final Button printButton = new Button("Print");
         printButton.setStyle(buttonStyle);
         printButton.setOnAction((e) -> {
             runTest();
         });
-
-        Text instructionsText = new Text(instructions);
-        instructionsText.setWrappingWidth(550);
-
+        Region region = new Region();
+        HBox.setHgrow(region, Priority.ALWAYS);
         final HBox naviBar = new HBox();
-        naviBar.getChildren().addAll(urlBox, reloadButton, goStopButton, printButton);
+        naviBar.setBorder(new Border(new BorderStroke(Color.GRAY, BorderStrokeStyle.SOLID, null, new BorderWidths(1))));
+        naviBar.getChildren().addAll(htmlBeginLabel, region, printButton);
+        naviBar.setAlignment(Pos.CENTER);
         naviBar.setPadding(new Insets(PADDING_VALUE));
-
+        bottomMessageLabel = new Label();
         final VBox root = new VBox();
         root.getChildren().addAll(instructionsText, naviBar, webView, bottomMessageLabel);
         VBox.setVgrow(webView, Priority.ALWAYS);
-
-        webEngine.locationProperty().addListener((observable, oldValue, newValue) ->
-                urlBox.setText(newValue));
-
-        webEngine.getLoadWorker().stateProperty().addListener((observable, oldValue, newValue) -> {
-            if (newValue.compareTo(Worker.State.SUCCEEDED) < 0) {
-                goStopButton.setText(stopButtonUnicodeSymbol);
-                goStopButton.setOnAction(e -> webEngine.getLoadWorker().cancel());
-            } else {
-                goStopButton.setText(goButtonUnicodeSymbol);
-                goStopButton.setOnAction(e -> webEngine.load(urlBox.getText()));
-            }
-        });
-        webEngine.load(initialURL);
+        String htmlContent = createHtmlPage();
+        webEngine.loadContent(htmlContent);
         scene = new Scene(root);
         return scene;
     }
 
     private void SetMessage(String msg) {
