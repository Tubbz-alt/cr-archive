diff a/modules/javafx.web/src/main/java/javafx/scene/web/WebEngine.java b/modules/javafx.web/src/main/java/javafx/scene/web/WebEngine.java
--- a/modules/javafx.web/src/main/java/javafx/scene/web/WebEngine.java
+++ b/modules/javafx.web/src/main/java/javafx/scene/web/WebEngine.java
@@ -46,11 +46,13 @@
 import javafx.beans.property.*;
 import javafx.concurrent.Worker;
 import javafx.event.EventHandler;
 import javafx.event.EventType;
 import javafx.geometry.Rectangle2D;
+import javafx.print.JobSettings;
 import javafx.print.PageLayout;
+import javafx.print.PageRange;
 import javafx.print.PrinterJob;
 import javafx.scene.Node;
 import javafx.util.Callback;
 import org.w3c.dom.Document;
 
@@ -1607,14 +1609,27 @@
         PageLayout pl = job.getJobSettings().getPageLayout();
         float width = (float) pl.getPrintableWidth();
         float height = (float) pl.getPrintableHeight();
         int pageCount = page.beginPrinting(width, height);
 
-        for (int i = 0; i < pageCount; i++) {
-            if (printStatusOK(job)) {
-                Node printable = new Printable(page, i, width);
-                job.printPage(printable);
+        JobSettings jobSettings = job.getJobSettings();
+        if (jobSettings.getPageRanges() != null) {
+            PageRange[] pageRanges = jobSettings.getPageRanges();
+            for (PageRange p : pageRanges) {
+                for (int i = p.getStartPage(); i <= p.getEndPage() && i <= pageCount; ++i) {
+                    if (printStatusOK(job)) {
+                        Node printable = new Printable(page, i - 1, width);
+                        job.printPage(printable);
+                    }
+                }
+            }
+        } else {
+            for (int i = 0; i < pageCount; i++) {
+                if (printStatusOK(job)) {
+                    Node printable = new Printable(page, i, width);
+                    job.printPage(printable);
+                }
             }
         }
         page.endPrinting();
     }
 }
