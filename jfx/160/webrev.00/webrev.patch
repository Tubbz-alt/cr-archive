diff a/modules/javafx.controls/src/main/java/javafx/scene/control/skin/TabPaneSkin.java b/modules/javafx.controls/src/main/java/javafx/scene/control/skin/TabPaneSkin.java
--- a/modules/javafx.controls/src/main/java/javafx/scene/control/skin/TabPaneSkin.java
+++ b/modules/javafx.controls/src/main/java/javafx/scene/control/skin/TabPaneSkin.java
@@ -2046,11 +2046,11 @@
         }
     }
 
     private void handleHeaderDragged(MouseEvent event) {
         if (event.getButton().equals(MouseButton.PRIMARY)) {
-            perfromDrag(event);
+            performDrag(event);
         }
     }
 
     private double getDragDelta(double curr, double prev) {
         if (getSkinnable().getSide().equals(Side.TOP) ||
@@ -2069,11 +2069,14 @@
         }
         // TabHeaderSkin are laid out in right to left direction inside headersRegion
         return MAX_TO_MIN;
     }
 
-    private void perfromDrag(MouseEvent event) {
+    private void performDrag(MouseEvent event) {
+        if (dragState == DragState.NONE) {
+            return;
+        }
         int dragDirection;
         double dragHeaderNewLayoutX;
         Bounds dragHeaderBounds;
         Bounds dropHeaderBounds;
         double draggedDist;
diff a/modules/javafx.controls/src/test/java/test/javafx/scene/control/TabPaneTest.java b/modules/javafx.controls/src/test/java/test/javafx/scene/control/TabPaneTest.java
--- a/modules/javafx.controls/src/test/java/test/javafx/scene/control/TabPaneTest.java
+++ b/modules/javafx.controls/src/test/java/test/javafx/scene/control/TabPaneTest.java
@@ -476,10 +476,14 @@
         double yval = (tabPane.localToScene(tabPane.getLayoutBounds())).getMinY();
 
         SceneHelper.processMouseEvent(scene,
             MouseEventGenerator.generateMouseEvent(MouseEvent.MOUSE_RELEASED, xval+75, yval+20));
         tk.firePulse();
+
+        SceneHelper.processMouseEvent(scene,
+                MouseEventGenerator.generateMouseEvent(MouseEvent.MOUSE_DRAGGED, xval+75, yval+20));
+        tk.firePulse();
     }
 
     @Test public void setRotateGraphicAndSeeValueIsReflectedInModel() {
         tabPane.setRotateGraphic(true);
         assertTrue(tabPane.rotateGraphicProperty().getValue());
