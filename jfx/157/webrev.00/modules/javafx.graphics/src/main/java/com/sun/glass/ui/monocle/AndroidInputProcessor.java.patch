diff a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/AndroidInputProcessor.java b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/AndroidInputProcessor.java
--- a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/AndroidInputProcessor.java
+++ b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/AndroidInputProcessor.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2015, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -22,10 +22,12 @@
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */
 package com.sun.glass.ui.monocle;
 
+import javafx.application.Platform;
+
 class AndroidInputProcessor {
 
     private final AndroidInputDevice device;
     final TouchPipeline touchPipeline;
     private final KeyInput keyInput = new KeyInput();
@@ -52,6 +54,20 @@
 
     synchronized void pushKeyEvent(KeyState keyState) {
         keyInput.setState(keyState);
     }
 
+    synchronized void dispatchKeyEvent(int type, int key, char[] chars, int modifiers) {
+        Platform.runLater( () -> {
+            MonocleWindow window = (MonocleWindow) MonocleWindowManager.getInstance().getFocusedWindow();
+            if (window == null) {
+                return;
+            }
+            MonocleView view = (MonocleView) window.getView();
+            if (view == null) {
+                return;
+            }
+            RunnableProcessor.runLater( () ->  view.notifyKey(type, key, chars, modifiers));
+        });
+    }
+
 }
