diff a/modules/javafx.web/src/main/native/Source/WTF/wtf/Seconds.cpp b/modules/javafx.web/src/main/native/Source/WTF/wtf/Seconds.cpp
--- a/modules/javafx.web/src/main/native/Source/WTF/wtf/Seconds.cpp
+++ b/modules/javafx.web/src/main/native/Source/WTF/wtf/Seconds.cpp
@@ -30,10 +30,11 @@
 #include <wtf/Lock.h>
 #include <wtf/MonotonicTime.h>
 #include <wtf/PrintStream.h>
 #include <wtf/TimeWithDynamicClockType.h>
 #include <wtf/WallTime.h>
+#include <wtf/text/TextStream.h>
 
 namespace WTF {
 
 WallTime Seconds::operator+(WallTime other) const
 {
@@ -68,10 +69,16 @@
 void Seconds::dump(PrintStream& out) const
 {
     out.print(m_value, " sec");
 }
 
+TextStream& operator<<(TextStream& ts, Seconds seconds)
+{
+    ts << seconds.value() << "s";
+    return ts;
+}
+
 void sleep(Seconds value)
 {
     // It's very challenging to find portable ways of sleeping for less than a second. On UNIX, you want to
     // use usleep() but it's hard to #include it in a portable way (you'd think it's in unistd.h, but then
     // you'd be wrong on some OSX SDKs). Also, usleep() won't save you on Windows. Hence, bottoming out in
