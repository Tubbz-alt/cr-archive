diff a/modules/javafx.web/src/main/native/Source/WebCore/history/HistoryItem.h b/modules/javafx.web/src/main/native/Source/WebCore/history/HistoryItem.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/history/HistoryItem.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/history/HistoryItem.h
@@ -61,11 +61,11 @@
 enum class PruningReason;
 
 WEBCORE_EXPORT extern void (*notifyHistoryItemChanged)(HistoryItem&);
 
 class HistoryItem : public RefCounted<HistoryItem> {
-    friend class PageCache;
+    friend class BackForwardCache;
 
 public:
     static Ref<HistoryItem> create()
     {
         return adoptRef(*new HistoryItem);
@@ -97,11 +97,11 @@
 
     WEBCORE_EXPORT const String& originalURLString() const;
     WEBCORE_EXPORT const String& urlString() const;
     WEBCORE_EXPORT const String& title() const;
 
-    bool isInPageCache() const { return m_cachedPage.get(); }
+    bool isInBackForwardCache() const { return m_cachedPage.get(); }
     WEBCORE_EXPORT bool hasCachedPageExpired() const;
 
     WEBCORE_EXPORT void setAlternateTitle(const String&);
     WEBCORE_EXPORT const String& alternateTitle() const;
 
@@ -225,10 +225,13 @@
     WEBCORE_EXPORT HistoryItem();
     WEBCORE_EXPORT HistoryItem(const String& urlString, const String& title);
     WEBCORE_EXPORT HistoryItem(const String& urlString, const String& title, const String& alternateTitle);
     WEBCORE_EXPORT HistoryItem(const String& urlString, const String& title, const String& alternateTitle, BackForwardItemIdentifier);
 
+    void setCachedPage(std::unique_ptr<CachedPage>&&);
+    std::unique_ptr<CachedPage> takeCachedPage();
+
     HistoryItem(const HistoryItem&);
 
     static int64_t generateSequenceNumber();
 
     bool hasSameDocumentTree(HistoryItem& otherItem) const;
@@ -269,11 +272,11 @@
 
     // info used to repost form data
     RefPtr<FormData> m_formData;
     String m_formContentType;
 
-    // PageCache controls these fields.
+    // BackForwardCache controls these fields.
     std::unique_ptr<CachedPage> m_cachedPage;
     PruningReason m_pruningReason;
 
 #if PLATFORM(IOS_FAMILY)
     FloatRect m_exposedContentRect;
