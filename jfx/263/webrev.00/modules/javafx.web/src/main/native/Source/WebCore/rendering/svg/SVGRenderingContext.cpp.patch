diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/svg/SVGRenderingContext.cpp b/modules/javafx.web/src/main/native/Source/WebCore/rendering/svg/SVGRenderingContext.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/svg/SVGRenderingContext.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/svg/SVGRenderingContext.cpp
@@ -36,10 +36,11 @@
 #include "RenderSVGResourceMasker.h"
 #include "RenderView.h"
 #include "SVGLengthContext.h"
 #include "SVGResources.h"
 #include "SVGResourcesCache.h"
+#include <wtf/MathExtras.h>
 
 namespace WebCore {
 
 static inline bool isRenderingMaskImage(const RenderObject& object)
 {
@@ -199,11 +200,11 @@
 }
 
 float SVGRenderingContext::calculateScreenFontSizeScalingFactor(const RenderObject& renderer)
 {
     AffineTransform ctm = calculateTransformationToOutermostCoordinateSystem(renderer);
-    return narrowPrecisionToFloat(sqrt((pow(ctm.xScale(), 2) + pow(ctm.yScale(), 2)) / 2));
+    return narrowPrecisionToFloat(std::hypot(ctm.xScale(), ctm.yScale()) / sqrtOfTwoDouble);
 }
 
 AffineTransform SVGRenderingContext::calculateTransformationToOutermostCoordinateSystem(const RenderObject& renderer)
 {
     AffineTransform absoluteTransform = currentContentTransformation();
@@ -349,11 +350,11 @@
             imageBuffer.reset();
     }
 
     // Create a new buffer and paint the foreground into it.
     if (!imageBuffer) {
-        if ((imageBuffer = ImageBuffer::createCompatibleBuffer(expandedIntSize(boundingBox.size()), ColorSpaceSRGB, m_paintInfo->context()))) {
+        if ((imageBuffer = ImageBuffer::createCompatibleBuffer(expandedIntSize(boundingBox.size()), ColorSpace::SRGB, m_paintInfo->context()))) {
             GraphicsContext& bufferedRenderingContext = imageBuffer->context();
             bufferedRenderingContext.translate(-boundingBox.location());
             PaintInfo bufferedInfo(*m_paintInfo);
             bufferedInfo.setContext(bufferedRenderingContext);
             downcast<RenderSVGImage>(*m_renderer).paintForeground(bufferedInfo);
