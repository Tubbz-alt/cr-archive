diff a/modules/javafx.web/src/main/native/Source/WebCore/dom/RadioButtonGroups.h b/modules/javafx.web/src/main/native/Source/WebCore/dom/RadioButtonGroups.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/dom/RadioButtonGroups.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/dom/RadioButtonGroups.h
@@ -19,33 +19,34 @@
  */
 
 #pragma once
 
 #include <memory>
-#include <wtf/Forward.h>
 #include <wtf/HashMap.h>
 #include <wtf/Vector.h>
+#include <wtf/text/AtomStringHash.h>
 
 namespace WebCore {
 
 class HTMLInputElement;
 class RadioButtonGroup;
 
 class RadioButtonGroups {
+    WTF_MAKE_FAST_ALLOCATED;
 public:
     RadioButtonGroups();
     ~RadioButtonGroups();
     void addButton(HTMLInputElement&);
     void updateCheckedState(HTMLInputElement&);
     void requiredStateChanged(HTMLInputElement&);
     void removeButton(HTMLInputElement&);
-    HTMLInputElement* checkedButtonForGroup(const AtomString& groupName) const;
+    RefPtr<HTMLInputElement> checkedButtonForGroup(const AtomString& groupName) const;
     bool hasCheckedButton(const HTMLInputElement&) const;
     bool isInRequiredGroup(HTMLInputElement&) const;
-    Vector<HTMLInputElement*> groupMembers(const HTMLInputElement&) const;
+    Vector<Ref<HTMLInputElement>> groupMembers(const HTMLInputElement&) const;
 
 private:
-    typedef HashMap<AtomStringImpl*, std::unique_ptr<RadioButtonGroup>> NameToGroupMap;
-    std::unique_ptr<NameToGroupMap> m_nameToGroupMap;
+    typedef HashMap<AtomString, std::unique_ptr<RadioButtonGroup>> NameToGroupMap;
+    NameToGroupMap m_nameToGroupMap;
 };
 
 } // namespace WebCore
