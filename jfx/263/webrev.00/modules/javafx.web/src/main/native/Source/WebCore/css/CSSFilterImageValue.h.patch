diff a/modules/javafx.web/src/main/native/Source/WebCore/css/CSSFilterImageValue.h b/modules/javafx.web/src/main/native/Source/WebCore/css/CSSFilterImageValue.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/css/CSSFilterImageValue.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/css/CSSFilterImageValue.h
@@ -37,11 +37,14 @@
 
 class CachedImage;
 class FilterSubimageObserverProxy;
 class RenderElement;
 class Document;
-class StyleResolver;
+
+namespace Style {
+class BuilderState;
+}
 
 class CSSFilterImageValue final : public CSSImageGeneratorValue {
     friend class FilterSubimageObserverProxy;
 public:
     static Ref<CSSFilterImageValue> create(Ref<CSSValue>&& imageValue, Ref<CSSValue>&& filterValue)
@@ -51,13 +54,13 @@
 
     ~CSSFilterImageValue();
 
     String customCSSText() const;
 
-    RefPtr<Image> image(RenderElement*, const FloatSize&);
+    RefPtr<Image> image(RenderElement&, const FloatSize&);
     bool isFixedSize() const { return true; }
-    FloatSize fixedSize(const RenderElement*);
+    FloatSize fixedSize(const RenderElement&);
 
     bool isPending() const;
     bool knownToBeOpaque(const RenderElement&) const;
 
     void loadSubimages(CachedResourceLoader&, const ResourceLoaderOptions&);
@@ -66,11 +69,11 @@
 
     bool equals(const CSSFilterImageValue&) const;
 
     bool equalInputImages(const CSSFilterImageValue&) const;
 
-    void createFilterOperations(StyleResolver*);
+    void createFilterOperations(Style::BuilderState&);
 
     const FilterOperations& filterOperations() const { return m_filterOperations; }
     void setFilterOperations(const FilterOperations& filterOperations)
     {
         m_filterOperations = filterOperations;
