diff a/modules/javafx.web/src/main/native/Source/WTF/wtf/CrossThreadCopier.h b/modules/javafx.web/src/main/native/Source/WTF/wtf/CrossThreadCopier.h
--- a/modules/javafx.web/src/main/native/Source/WTF/wtf/CrossThreadCopier.h
+++ b/modules/javafx.web/src/main/native/Source/WTF/wtf/CrossThreadCopier.h
@@ -1,8 +1,8 @@
 /*
  * Copyright (C) 2009, 2010 Google Inc. All rights reserved.
- * Copyright (C) 2014-2017 Apple Inc. All rights reserved.
+ * Copyright (C) 2014-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions are
  * met:
  *
@@ -52,15 +52,15 @@
     template<typename T> struct RemovePointer<RefPtr<T>> {
         typedef T Type;
     };
 
     template<typename T> struct IsEnumOrConvertibleToInteger {
-        static const bool value = std::is_integral<T>::value || std::is_enum<T>::value || std::is_convertible<T, long double>::value;
+        static constexpr bool value = std::is_integral<T>::value || std::is_enum<T>::value || std::is_convertible<T, long double>::value;
     };
 
     template<typename T> struct IsThreadSafeRefCountedPointer {
-        static const bool value = std::is_convertible<typename RemovePointer<T>::Type*, ThreadSafeRefCounted<typename RemovePointer<T>::Type>*>::value;
+        static constexpr bool value = std::is_convertible<typename RemovePointer<T>::Type*, ThreadSafeRefCounted<typename RemovePointer<T>::Type>*>::value;
     };
 };
 
 template<typename T> struct CrossThreadCopierPassThrough {
     typedef T Type;
