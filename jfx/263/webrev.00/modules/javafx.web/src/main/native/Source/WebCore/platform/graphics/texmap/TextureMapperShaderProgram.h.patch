diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/texmap/TextureMapperShaderProgram.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/texmap/TextureMapperShaderProgram.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/texmap/TextureMapperShaderProgram.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/texmap/TextureMapperShaderProgram.h
@@ -43,11 +43,11 @@
 #define TEXMAP_DECLARE_SAMPLER(Accessor) TEXMAP_DECLARE_VARIABLE(Accessor, "s_"#Accessor, UniformVariable)
 
 class TextureMapperShaderProgram : public RefCounted<TextureMapperShaderProgram> {
 public:
     enum Option {
-        Texture          = 1L << 0,
+        TextureRGB       = 1L << 0,
         Rect             = 1L << 1,
         SolidColor       = 1L << 2,
         Opacity          = 1L << 3,
         Antialiasing     = 1L << 5,
         GrayscaleFilter  = 1L << 6,
@@ -59,11 +59,16 @@
         InvertFilter     = 1L << 12,
         OpacityFilter    = 1L << 13,
         BlurFilter       = 1L << 14,
         AlphaBlur        = 1L << 15,
         ContentTexture   = 1L << 16,
-        ManualRepeat     = 1L << 17
+        ManualRepeat     = 1L << 17,
+        TextureYUV       = 1L << 18,
+        TextureNV12      = 1L << 19,
+        TextureNV21      = 1L << 20,
+        TexturePackedYUV = 1L << 21,
+        TextureExternalOES = 1L << 22,
     };
 
     typedef unsigned Options;
 
     static Ref<TextureMapperShaderProgram> create(Options);
@@ -78,18 +83,23 @@
     TEXMAP_DECLARE_UNIFORM(textureSpaceMatrix)
     TEXMAP_DECLARE_UNIFORM(textureColorSpaceMatrix)
     TEXMAP_DECLARE_UNIFORM(opacity)
     TEXMAP_DECLARE_UNIFORM(color)
     TEXMAP_DECLARE_UNIFORM(expandedQuadEdgesInScreenSpace)
+    TEXMAP_DECLARE_UNIFORM(yuvToRgb)
     TEXMAP_DECLARE_SAMPLER(sampler)
+    TEXMAP_DECLARE_SAMPLER(samplerY)
+    TEXMAP_DECLARE_SAMPLER(samplerU)
+    TEXMAP_DECLARE_SAMPLER(samplerV)
     TEXMAP_DECLARE_SAMPLER(mask)
 
     TEXMAP_DECLARE_UNIFORM(filterAmount)
     TEXMAP_DECLARE_UNIFORM(gaussianKernel)
     TEXMAP_DECLARE_UNIFORM(blurRadius)
     TEXMAP_DECLARE_UNIFORM(shadowOffset)
     TEXMAP_DECLARE_SAMPLER(contentTexture)
+    TEXMAP_DECLARE_SAMPLER(externalOESTexture)
 
     void setMatrix(GLuint, const TransformationMatrix&);
 
 private:
     TextureMapperShaderProgram(const String& vertexShaderSource, const String& fragmentShaderSource);
