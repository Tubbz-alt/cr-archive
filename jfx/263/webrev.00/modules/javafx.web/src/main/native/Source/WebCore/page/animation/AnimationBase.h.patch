diff a/modules/javafx.web/src/main/native/Source/WebCore/page/animation/AnimationBase.h b/modules/javafx.web/src/main/native/Source/WebCore/page/animation/AnimationBase.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/page/animation/AnimationBase.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/page/animation/AnimationBase.h
@@ -47,10 +47,15 @@
     StyleBlended            = 1 << 0, // Style was changed.
     StateChange             = 1 << 1, // Animation state() changed.
     RunningStateChange      = 1 << 2, // Animation "running or paused" changed.
 };
 
+enum class AnimationImpact {
+    RequiresRecomposite     = 1 << 0,
+    ForcesStackingContext   = 1 << 1
+};
+
 class AnimationBase : public RefCounted<AnimationBase>
     , public CSSPropertyBlendingClient {
     friend class CompositeAnimation;
     friend class CSSPropertyAnimation;
     WTF_MAKE_FAST_ALLOCATED;
@@ -135,11 +140,11 @@
 
     bool isNew() const { return m_animationState == AnimationState::New || m_animationState == AnimationState::PausedNew; }
     bool waitingForStartTime() const { return m_animationState == AnimationState::StartWaitResponse; }
     bool waitingForStyleAvailable() const { return m_animationState == AnimationState::StartWaitStyleAvailable; }
 
-    bool isAccelerated() const override { return m_isAccelerated; }
+    bool isAccelerated() const { return m_isAccelerated; }
 
     virtual Optional<Seconds> timeToNextService();
 
     double progress(double scale = 1, double offset = 0, const TimingFunction* = nullptr) const;
 
