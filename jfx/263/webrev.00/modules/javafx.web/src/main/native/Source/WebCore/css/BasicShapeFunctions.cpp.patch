diff a/modules/javafx.web/src/main/native/Source/WebCore/css/BasicShapeFunctions.cpp b/modules/javafx.web/src/main/native/Source/WebCore/css/BasicShapeFunctions.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/css/BasicShapeFunctions.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/css/BasicShapeFunctions.cpp
@@ -69,22 +69,22 @@
 {
     auto& cssValuePool = CSSValuePool::singleton();
 
     RefPtr<CSSBasicShape> basicShapeValue;
     switch (basicShape.type()) {
-    case BasicShape::BasicShapeCircleType: {
+    case BasicShape::Type::Circle: {
         auto& circle = downcast<BasicShapeCircle>(basicShape);
         auto circleValue = CSSBasicShapeCircle::create();
 
         circleValue->setCenterX(valueForCenterCoordinate(cssValuePool, style, circle.centerX(), BoxOrient::Horizontal));
         circleValue->setCenterY(valueForCenterCoordinate(cssValuePool, style, circle.centerY(), BoxOrient::Vertical));
         circleValue->setRadius(basicShapeRadiusToCSSValue(style, cssValuePool, circle.radius()));
 
         basicShapeValue = WTFMove(circleValue);
         break;
     }
-    case BasicShape::BasicShapeEllipseType: {
+    case BasicShape::Type::Ellipse: {
         auto& ellipse = downcast<BasicShapeEllipse>(basicShape);
         auto ellipseValue = CSSBasicShapeEllipse::create();
 
         ellipseValue->setCenterX(valueForCenterCoordinate(cssValuePool, style, ellipse.centerX(), BoxOrient::Horizontal));
         ellipseValue->setCenterY(valueForCenterCoordinate(cssValuePool, style, ellipse.centerY(), BoxOrient::Vertical));
@@ -92,11 +92,11 @@
         ellipseValue->setRadiusY(basicShapeRadiusToCSSValue(style, cssValuePool, ellipse.radiusY()));
 
         basicShapeValue = WTFMove(ellipseValue);
         break;
     }
-    case BasicShape::BasicShapePolygonType: {
+    case BasicShape::Type::Polygon: {
         auto& polygon = downcast<BasicShapePolygon>(basicShape);
         auto polygonValue = CSSBasicShapePolygon::create();
 
         polygonValue->setWindRule(polygon.windRule());
         const Vector<Length>& values = polygon.values();
@@ -104,19 +104,19 @@
             polygonValue->appendPoint(cssValuePool.createValue(values.at(i), style), cssValuePool.createValue(values.at(i + 1), style));
 
         basicShapeValue = WTFMove(polygonValue);
         break;
     }
-    case BasicShape::BasicShapePathType: {
+    case BasicShape::Type::Path: {
         auto& pathShape = downcast<BasicShapePath>(basicShape);
         auto pathShapeValue = CSSBasicShapePath::create(pathShape.pathData()->copy());
         pathShapeValue->setWindRule(pathShape.windRule());
 
         basicShapeValue = WTFMove(pathShapeValue);
         break;
     }
-    case BasicShape::BasicShapeInsetType: {
+    case BasicShape::Type::Inset: {
         auto& inset = downcast<BasicShapeInset>(basicShape);
         auto insetValue = CSSBasicShapeInset::create();
 
         insetValue->setTop(cssValuePool.createValue(inset.top(), style));
         insetValue->setRight(cssValuePool.createValue(inset.right(), style));
