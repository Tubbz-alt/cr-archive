diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBCursor.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBCursor.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBCursor.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBCursor.h
@@ -64,29 +64,32 @@
     const Optional<IDBKeyPath>& primaryKeyPath() { return m_keyPath; };
     JSValueInWrappedObject& keyWrapper() { return m_keyWrapper; }
     JSValueInWrappedObject& primaryKeyWrapper() { return m_primaryKeyWrapper; }
     JSValueInWrappedObject& valueWrapper() { return m_valueWrapper; }
 
-    ExceptionOr<Ref<IDBRequest>> update(JSC::ExecState&, JSC::JSValue);
+    ExceptionOr<Ref<IDBRequest>> update(JSC::JSGlobalObject&, JSC::JSValue);
     ExceptionOr<void> advance(unsigned);
-    ExceptionOr<void> continueFunction(JSC::ExecState&, JSC::JSValue key);
-    ExceptionOr<void> continuePrimaryKey(JSC::ExecState&, JSC::JSValue key, JSC::JSValue primaryKey);
-    ExceptionOr<Ref<IDBRequest>> deleteFunction(JSC::ExecState&);
+    ExceptionOr<void> continueFunction(JSC::JSGlobalObject&, JSC::JSValue key);
+    ExceptionOr<void> continuePrimaryKey(JSC::JSGlobalObject&, JSC::JSValue key, JSC::JSValue primaryKey);
+    ExceptionOr<Ref<IDBRequest>> deleteFunction(JSC::JSGlobalObject&);
 
     ExceptionOr<void> continueFunction(const IDBKeyData&);
 
     const IDBCursorInfo& info() const { return m_info; }
 
     void setRequest(IDBRequest& request) { m_request = makeWeakPtr(&request); }
     void clearRequest() { m_request.clear(); }
     void clearWrappers();
     IDBRequest* request() { return m_request.get(); }
 
-    bool setGetResult(IDBRequest&, const IDBGetResult&);
+    bool setGetResult(IDBRequest&, const IDBGetResult&, uint64_t operationID);
 
     virtual bool isKeyCursorWithValue() const { return false; }
 
+    Optional<IDBGetResult> iterateWithPrefetchedRecords(unsigned count, uint64_t lastWriteOperationID);
+    void clearPrefetchedRecords();
+
 protected:
     IDBCursor(IDBObjectStore&, const IDBCursorInfo&);
     IDBCursor(IDBIndex&, const IDBCursorInfo&);
 
 private:
@@ -111,10 +114,13 @@
     Optional<IDBKeyPath> m_keyPath;
 
     JSValueInWrappedObject m_keyWrapper;
     JSValueInWrappedObject m_primaryKeyWrapper;
     JSValueInWrappedObject m_valueWrapper;
+
+    Deque<IDBCursorRecord> m_prefetchedRecords;
+    uint64_t m_prefetchOperationID { 0 };
 };
 
 
 inline const IDBCursor::Source& IDBCursor::source() const
 {
