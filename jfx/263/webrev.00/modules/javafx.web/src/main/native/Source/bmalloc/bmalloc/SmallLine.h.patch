diff a/modules/javafx.web/src/main/native/Source/bmalloc/bmalloc/SmallLine.h b/modules/javafx.web/src/main/native/Source/bmalloc/bmalloc/SmallLine.h
--- a/modules/javafx.web/src/main/native/Source/bmalloc/bmalloc/SmallLine.h
+++ b/modules/javafx.web/src/main/native/Source/bmalloc/bmalloc/SmallLine.h
@@ -33,13 +33,13 @@
 
 namespace bmalloc {
 
 class SmallLine {
 public:
-    void ref(std::unique_lock<Mutex>&, unsigned char = 1);
-    bool deref(std::unique_lock<Mutex>&);
-    unsigned refCount(std::unique_lock<Mutex>&) { return m_refCount; }
+    void ref(UniqueLockHolder&, unsigned char = 1);
+    bool deref(UniqueLockHolder&);
+    unsigned refCount(UniqueLockHolder&) { return m_refCount; }
 
     char* begin();
     char* end();
 
 private:
@@ -49,17 +49,17 @@
     smallLineSize / alignment <= std::numeric_limits<decltype(m_refCount)>::max(),
     "maximum object count must fit in SmallLine::m_refCount");
 
 };
 
-inline void SmallLine::ref(std::unique_lock<Mutex>&, unsigned char refCount)
+inline void SmallLine::ref(UniqueLockHolder&, unsigned char refCount)
 {
     BASSERT(!m_refCount);
     m_refCount = refCount;
 }
 
-inline bool SmallLine::deref(std::unique_lock<Mutex>&)
+inline bool SmallLine::deref(UniqueLockHolder&)
 {
     BASSERT(m_refCount);
     --m_refCount;
     return !m_refCount;
 }
