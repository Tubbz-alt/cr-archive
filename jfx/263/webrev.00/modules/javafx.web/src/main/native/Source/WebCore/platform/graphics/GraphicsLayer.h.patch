diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GraphicsLayer.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GraphicsLayer.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GraphicsLayer.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GraphicsLayer.h
@@ -23,11 +23,10 @@
  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 
 #pragma once
 
-#include "Animation.h"
 #include "Color.h"
 #include "EventRegion.h"
 #include "FilterOperations.h"
 #include "FloatPoint.h"
 #include "FloatPoint3D.h"
@@ -36,10 +35,11 @@
 #include "GraphicsLayerClient.h"
 #include "Path.h"
 #include "PlatformLayer.h"
 #include "Region.h"
 #include "ScrollableArea.h"
+#include "TimingFunction.h"
 #include "TransformOperations.h"
 #include "WindRule.h"
 #include <wtf/Function.h>
 #include <wtf/TypeCasts.h>
 
@@ -51,10 +51,11 @@
 class TextStream;
 }
 
 namespace WebCore {
 
+class Animation;
 class GraphicsContext;
 class GraphicsLayerFactory;
 class Image;
 class TiledBacking;
 class TimingFunction;
@@ -266,10 +267,11 @@
     GraphicsLayerClient& client() const { return *m_client; }
 
     // Layer name. Only used to identify layers in debug output
     const String& name() const { return m_name; }
     virtual void setName(const String& name) { m_name = name; }
+    virtual String debugName() const;
 
     GraphicsLayer* parent() const { return m_parent; };
     void setParent(GraphicsLayer*); // Internal use only.
 
     // Returns true if the layer has the given layer as an ancestor (excluding self).
