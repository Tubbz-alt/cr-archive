diff a/modules/javafx.web/src/main/native/Source/WebCore/workers/service/context/ServiceWorkerFetch.cpp b/modules/javafx.web/src/main/native/Source/WebCore/workers/service/context/ServiceWorkerFetch.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/workers/service/context/ServiceWorkerFetch.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/workers/service/context/ServiceWorkerFetch.cpp
@@ -87,12 +87,10 @@
     if (resourceResponse.isRedirection() && resourceResponse.httpHeaderFields().contains(HTTPHeaderName::Location)) {
         client->didReceiveRedirection(resourceResponse);
         return;
     }
 
-    resourceResponse.setSource(ResourceResponse::Source::ServiceWorker);
-
     // In case of main resource and mime type is the default one, we set it to text/html to pass more service worker WPT tests.
     // FIXME: We should refine our MIME type sniffing strategy for synthetic responses.
     if (mode == FetchOptions::Mode::Navigate) {
         if (resourceResponse.mimeType() == defaultMIMEType()) {
             resourceResponse.setMimeType("text/html"_s);
@@ -138,20 +136,19 @@
 
     FetchOptions::Mode mode = options.mode;
     FetchOptions::Redirect redirect = options.redirect;
 
     bool isNavigation = options.mode == FetchOptions::Mode::Navigate;
-    bool isNonSubresourceRequest = WebCore::isNonSubresourceRequest(options.destination);
 
     ASSERT(globalScope.registration().active());
     ASSERT(globalScope.registration().active()->identifier() == globalScope.thread().identifier());
     ASSERT(globalScope.registration().active()->state() == ServiceWorkerState::Activated);
 
     auto* formData = request.httpBody();
     Optional<FetchBody> body;
     if (formData && !formData->isEmpty()) {
-        body = FetchBody::fromFormData(globalScope.sessionID(), *formData);
+        body = FetchBody::fromFormData(*formData);
         if (!body) {
             client->didNotHandle();
             return;
         }
     }
@@ -186,14 +183,10 @@
         }
         client->didNotHandle();
     }
 
     globalScope.updateExtendedEventsSet(event.ptr());
-
-    auto& registration = globalScope.registration();
-    if (isNonSubresourceRequest || registration.needsUpdate())
-        registration.scheduleSoftUpdate();
 }
 
 } // namespace ServiceWorkerFetch
 
 } // namespace WebCore
