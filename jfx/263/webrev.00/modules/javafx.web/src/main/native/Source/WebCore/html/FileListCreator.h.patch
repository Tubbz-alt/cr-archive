diff a/modules/javafx.web/src/main/native/Source/WebCore/html/FileListCreator.h b/modules/javafx.web/src/main/native/Source/WebCore/html/FileListCreator.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/FileListCreator.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/FileListCreator.h
@@ -23,11 +23,10 @@
  * THE POSSIBILITY OF SUCH DAMAGE.
  */
 
 #pragma once
 
-#include <pal/SessionID.h>
 #include <wtf/Forward.h>
 #include <wtf/Function.h>
 #include <wtf/Ref.h>
 #include <wtf/ThreadSafeRefCounted.h>
 #include <wtf/WorkQueue.h>
@@ -40,24 +39,24 @@
 class FileListCreator : public ThreadSafeRefCounted<FileListCreator> {
 public:
     using CompletionHandler = Function<void(Ref<FileList>&&)>;
 
     enum class ShouldResolveDirectories { No, Yes };
-    static Ref<FileListCreator> create(PAL::SessionID sessionID, const Vector<FileChooserFileInfo>& paths, ShouldResolveDirectories shouldResolveDirectories, CompletionHandler&& completionHandler)
+    static Ref<FileListCreator> create(const Vector<FileChooserFileInfo>& paths, ShouldResolveDirectories shouldResolveDirectories, CompletionHandler&& completionHandler)
     {
-        return adoptRef(*new FileListCreator(sessionID, paths, shouldResolveDirectories, WTFMove(completionHandler)));
+        return adoptRef(*new FileListCreator(paths, shouldResolveDirectories, WTFMove(completionHandler)));
     }
 
     ~FileListCreator();
 
     void cancel();
 
 private:
-    FileListCreator(PAL::SessionID, const Vector<FileChooserFileInfo>& paths, ShouldResolveDirectories, CompletionHandler&&);
+    FileListCreator(const Vector<FileChooserFileInfo>& paths, ShouldResolveDirectories, CompletionHandler&&);
 
     template<ShouldResolveDirectories shouldResolveDirectories>
-    static Ref<FileList> createFileList(PAL::SessionID, const Vector<FileChooserFileInfo>&);
+    static Ref<FileList> createFileList(const Vector<FileChooserFileInfo>&);
 
     RefPtr<WorkQueue> m_workQueue;
     CompletionHandler m_completionHander;
 };
 
