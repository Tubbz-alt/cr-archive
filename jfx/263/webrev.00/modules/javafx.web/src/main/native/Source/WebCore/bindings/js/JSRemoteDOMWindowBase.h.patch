diff a/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSRemoteDOMWindowBase.h b/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSRemoteDOMWindowBase.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSRemoteDOMWindowBase.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSRemoteDOMWindowBase.h
@@ -33,24 +33,29 @@
 
 class JSWindowProxy;
 class JSRemoteDOMWindow;
 
 class WEBCORE_EXPORT JSRemoteDOMWindowBase : public JSDOMGlobalObject {
-protected:
-    JSRemoteDOMWindowBase(JSC::VM&, JSC::Structure*, RefPtr<RemoteDOMWindow>&&, JSWindowProxy*);
+public:
+    using Base = JSDOMGlobalObject;
 
     static void destroy(JSCell*);
 
-public:
+    template<typename, JSC::SubspaceAccess>
+    static void subspaceFor(JSC::VM&) { RELEASE_ASSERT_NOT_REACHED(); }
+
     RemoteDOMWindow& wrapped() const { return *m_wrapped; }
 
     DECLARE_INFO;
 
     static const JSC::GlobalObjectMethodTable s_globalObjectMethodTable;
 
     static JSC::RuntimeFlags javaScriptRuntimeFlags(const JSC::JSGlobalObject*);
 
+protected:
+    JSRemoteDOMWindowBase(JSC::VM&, JSC::Structure*, RefPtr<RemoteDOMWindow>&&, JSWindowProxy*);
+
 private:
     RefPtr<RemoteDOMWindow> m_wrapped;
 };
 
 WEBCORE_EXPORT JSRemoteDOMWindow* toJSRemoteDOMWindow(JSC::VM&, JSC::JSValue);
