diff a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGPolyElement.cpp b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGPolyElement.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGPolyElement.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGPolyElement.cpp
@@ -33,11 +33,10 @@
 
 WTF_MAKE_ISO_ALLOCATED_IMPL(SVGPolyElement);
 
 SVGPolyElement::SVGPolyElement(const QualifiedName& tagName, Document& document)
     : SVGGeometryElement(tagName, document)
-    , SVGExternalResourcesRequired(this)
 {
     static std::once_flag onceFlag;
     std::call_once(onceFlag, [] {
         PropertyRegistry::registerProperty<SVGNames::pointsAttr, &SVGPolyElement::m_points>();
     });
@@ -50,11 +49,10 @@
             document().accessSVGExtensions().reportError("Problem parsing points=\"" + value + "\"");
         return;
     }
 
     SVGGeometryElement::parseAttribute(name, value);
-    SVGExternalResourcesRequired::parseAttribute(name, value);
 }
 
 void SVGPolyElement::svgAttributeChanged(const QualifiedName& attrName)
 {
     if (attrName == SVGNames::pointsAttr) {
@@ -65,11 +63,10 @@
         }
         return;
     }
 
     SVGGeometryElement::svgAttributeChanged(attrName);
-    SVGExternalResourcesRequired::svgAttributeChanged(attrName);
 }
 
 size_t SVGPolyElement::approximateMemoryCost() const
 {
     size_t pointsCost = m_points->baseVal()->items().size() * sizeof(FloatPoint);
