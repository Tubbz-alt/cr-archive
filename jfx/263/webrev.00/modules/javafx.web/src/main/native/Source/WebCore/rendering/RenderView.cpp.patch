diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderView.cpp b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderView.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderView.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderView.cpp
@@ -419,11 +419,11 @@
     else {
         const Color& documentBackgroundColor = frameView().documentBackgroundColor();
         const Color& backgroundColor = (settings().backgroundShouldExtendBeyondPage() && documentBackgroundColor.isValid()) ? documentBackgroundColor : frameView().baseBackgroundColor();
         if (backgroundColor.isVisible()) {
             CompositeOperator previousOperator = paintInfo.context().compositeOperation();
-            paintInfo.context().setCompositeOperation(CompositeCopy);
+            paintInfo.context().setCompositeOperation(CompositeOperator::Copy);
             paintInfo.context().fillRect(paintInfo.rect, backgroundColor);
             paintInfo.context().setCompositeOperation(previousOperator);
         } else
             paintInfo.context().clearRect(paintInfo.rect);
     }
@@ -875,10 +875,28 @@
         return multiColumnFlow()->firstMultiColumnSet()->columnCount();
 
     return 0;
 }
 
+void RenderView::layerChildrenChangedDuringStyleChange(RenderLayer& layer)
+{
+    if (!m_styleChangeLayerMutationRoot) {
+        m_styleChangeLayerMutationRoot = makeWeakPtr(layer);
+        return;
+    }
+
+    RenderLayer* commonAncestor = m_styleChangeLayerMutationRoot->commonAncestorWithLayer(layer);
+    m_styleChangeLayerMutationRoot = makeWeakPtr(commonAncestor);
+}
+
+RenderLayer* RenderView::takeStyleChangeLayerTreeMutationRoot()
+{
+    auto* result = m_styleChangeLayerMutationRoot.get();
+    m_styleChangeLayerMutationRoot.clear();
+    return result;
+}
+
 #if ENABLE(CSS_SCROLL_SNAP)
 void RenderView::registerBoxWithScrollSnapPositions(const RenderBox& box)
 {
     m_boxesWithScrollSnapPositions.add(&box);
 }
