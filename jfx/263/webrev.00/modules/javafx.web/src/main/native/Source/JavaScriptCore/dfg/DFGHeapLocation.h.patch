diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGHeapLocation.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGHeapLocation.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGHeapLocation.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGHeapLocation.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2014-2018 Apple Inc. All rights reserved.
+ * Copyright (C) 2014-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -62,16 +62,18 @@
     StructureLoc,
     TypedArrayByteOffsetLoc,
     PrototypeLoc,
     StackLoc,
     StackPayloadLoc,
+    DateFieldLoc,
     MapBucketLoc,
     MapBucketHeadLoc,
     MapBucketValueLoc,
     MapBucketKeyLoc,
     MapBucketNextLoc,
     WeakMapGetLoc,
+    InternalFieldObjectLoc,
     DOMStateLoc,
 };
 
 class HeapLocation {
 public:
@@ -146,11 +148,11 @@
 };
 
 struct HeapLocationHash {
     static unsigned hash(const HeapLocation& key) { return key.hash(); }
     static bool equal(const HeapLocation& a, const HeapLocation& b) { return a == b; }
-    static const bool safeToCompareToEmptyOrDeleted = true;
+    static constexpr bool safeToCompareToEmptyOrDeleted = true;
 };
 
 LocationKind indexedPropertyLocForResultType(NodeFlags);
 
 inline LocationKind indexedPropertyLocForResultType(NodeFlags canonicalResultRepresentation)
@@ -187,11 +189,11 @@
     typedef JSC::DFG::HeapLocationHash Hash;
 };
 
 template<typename T> struct HashTraits;
 template<> struct HashTraits<JSC::DFG::HeapLocation> : SimpleClassHashTraits<JSC::DFG::HeapLocation> {
-    static const bool emptyValueIsZero = false;
+    static constexpr bool emptyValueIsZero = false;
 };
 
 } // namespace WTF
 
 #endif // ENABLE(DFG_JIT)
