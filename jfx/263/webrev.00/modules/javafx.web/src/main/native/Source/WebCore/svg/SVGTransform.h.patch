diff a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGTransform.h b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGTransform.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGTransform.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGTransform.h
@@ -23,10 +23,11 @@
  * THE POSSIBILITY OF SUCH DAMAGE.
  */
 
 #pragma once
 
+#include "DOMMatrix2DInit.h"
 #include "SVGMatrix.h"
 #include "SVGTransformValue.h"
 #include "SVGValueProperty.h"
 
 namespace WebCore {
@@ -68,16 +69,29 @@
 
     unsigned short type() { return m_value.type(); }
     float angle() { return m_value.angle(); }
     const Ref<SVGMatrix>& matrix() { return m_value.matrix(); }
 
-    ExceptionOr<void> setMatrix(SVGMatrix& matrix)
+    ExceptionOr<void> setMatrix(DOMMatrix2DInit&& matrixInit)
     {
         if (isReadOnly())
             return Exception { NoModificationAllowedError };
 
-        m_value.setMatrix(matrix.value());
+        AffineTransform transform;
+        if (matrixInit.a.hasValue())
+            transform.setA(matrixInit.a.value());
+        if (matrixInit.b.hasValue())
+            transform.setB(matrixInit.b.value());
+        if (matrixInit.c.hasValue())
+            transform.setC(matrixInit.c.value());
+        if (matrixInit.d.hasValue())
+            transform.setD(matrixInit.d.value());
+        if (matrixInit.e.hasValue())
+            transform.setE(matrixInit.e.value());
+        if (matrixInit.f.hasValue())
+            transform.setF(matrixInit.f.value());
+        m_value.setMatrix(transform);
         commitChange();
         return { };
     }
 
     ExceptionOr<void> setTranslate(float tx, float ty)
