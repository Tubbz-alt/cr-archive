diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediarecorder/MediaRecorder.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediarecorder/MediaRecorder.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediarecorder/MediaRecorder.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediarecorder/MediaRecorder.h
@@ -69,31 +69,36 @@
     using RefCounted::ref;
     using RefCounted::deref;
 
     ExceptionOr<void> startRecording(Optional<int>);
     ExceptionOr<void> stopRecording();
+    ExceptionOr<void> requestData();
+
+    MediaStream& stream() { return m_stream.get(); }
 
 private:
     MediaRecorder(Document&, Ref<MediaStream>&&, std::unique_ptr<MediaRecorderPrivate>&&, Options&& = { });
 
-    static std::unique_ptr<MediaRecorderPrivate> getPrivateImpl(const MediaStreamPrivate&);
+    static std::unique_ptr<MediaRecorderPrivate> createMediaRecorderPrivate(Document&, const MediaStreamPrivate&);
 
-    Ref<Blob> createRecordingDataBlob();
+    Document* document() const;
 
     // EventTarget
     void refEventTarget() final { ref(); }
     void derefEventTarget() final { deref(); }
     EventTargetInterface eventTargetInterface() const final { return MediaRecorderEventTargetInterfaceType; }
     ScriptExecutionContext* scriptExecutionContext() const final { return ActiveDOMObject::scriptExecutionContext(); }
 
     // ActiveDOMObject API.
+    void suspend(ReasonForSuspension) final;
     void stop() final;
     const char* activeDOMObjectName() const final;
-    bool canSuspendForDocumentSuspension() const final;
 
     void stopRecordingInternal();
 
+    void dispatchError(Exception&&);
+
     // MediaStream::Observer
     void didAddOrRemoveTrack() final;
 
     // MediaStreamTrackPrivate::Observer
     void trackEnded(MediaStreamTrackPrivate&) final;
