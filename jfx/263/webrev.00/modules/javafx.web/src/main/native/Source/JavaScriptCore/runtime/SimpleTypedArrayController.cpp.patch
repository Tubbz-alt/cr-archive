diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/SimpleTypedArrayController.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/SimpleTypedArrayController.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/SimpleTypedArrayController.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/SimpleTypedArrayController.cpp
@@ -33,19 +33,18 @@
 namespace JSC {
 
 SimpleTypedArrayController::SimpleTypedArrayController() { }
 SimpleTypedArrayController::~SimpleTypedArrayController() { }
 
-JSArrayBuffer* SimpleTypedArrayController::toJS(
-    ExecState* exec, JSGlobalObject* globalObject, ArrayBuffer* native)
+JSArrayBuffer* SimpleTypedArrayController::toJS(JSGlobalObject* lexicalGlobalObject, JSGlobalObject* globalObject, ArrayBuffer* native)
 {
+    UNUSED_PARAM(lexicalGlobalObject);
     if (JSArrayBuffer* buffer = native->m_wrapper.get())
         return buffer;
 
     // The JSArrayBuffer::create function will register the wrapper in finishCreation.
-    JSArrayBuffer* result = JSArrayBuffer::create(
-        exec->vm(), globalObject->arrayBufferStructure(native->sharingMode()), native);
+    JSArrayBuffer* result = JSArrayBuffer::create(globalObject->vm(), globalObject->arrayBufferStructure(native->sharingMode()), native);
     return result;
 }
 
 void SimpleTypedArrayController::registerWrapper(JSGlobalObject*, ArrayBuffer* native, JSArrayBuffer* wrapper)
 {
