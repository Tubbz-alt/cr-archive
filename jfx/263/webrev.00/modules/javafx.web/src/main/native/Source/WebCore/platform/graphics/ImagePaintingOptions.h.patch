diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/ImagePaintingOptions.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/ImagePaintingOptions.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/ImagePaintingOptions.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/ImagePaintingOptions.h
@@ -36,15 +36,15 @@
     ImagePaintingOptions(Options... options)
     {
         setOption(options...);
     }
 
-    template<typename... Overrrides>
-    ImagePaintingOptions(const ImagePaintingOptions& other, Overrrides... overrrides)
+    template<typename... Overrides>
+    ImagePaintingOptions(const ImagePaintingOptions& other, Overrides... overrides)
         : ImagePaintingOptions(other)
     {
-        setOption(overrrides...);
+        setOption(overrides...);
     }
 
     ImagePaintingOptions() = default;
     ImagePaintingOptions(const ImagePaintingOptions&) = default;
 
@@ -52,10 +52,13 @@
     BlendMode blendMode() const { return m_blendMode; }
     DecodingMode decodingMode() const { return m_decodingMode; }
     ImageOrientation orientation() const { return m_orientation; }
     InterpolationQuality interpolationQuality() const { return m_interpolationQuality; }
 
+    template<class Encoder> void encode(Encoder&) const;
+    template<class Decoder> static Optional<ImagePaintingOptions> decode(Decoder&);
+
 private:
     template <typename First, typename... Rest>
     void setOption(First first, Rest... rest)
     {
         setOption(first);
@@ -67,13 +70,54 @@
     void setOption(DecodingMode decodingMode) { m_decodingMode = decodingMode; }
     void setOption(ImageOrientation orientation) { m_orientation = orientation; }
     void setOption(ImageOrientation::Orientation orientation) { m_orientation = orientation; }
     void setOption(InterpolationQuality interpolationQuality) { m_interpolationQuality = interpolationQuality; }
 
-    CompositeOperator m_compositeOperator { CompositeSourceOver };
+    CompositeOperator m_compositeOperator { CompositeOperator::SourceOver };
     BlendMode m_blendMode { BlendMode::Normal };
     DecodingMode m_decodingMode { DecodingMode::Synchronous };
     ImageOrientation m_orientation { ImageOrientation::None };
-    InterpolationQuality m_interpolationQuality { InterpolationDefault };
+    InterpolationQuality m_interpolationQuality { InterpolationQuality::Default };
 };
 
+template<class Encoder>
+void ImagePaintingOptions::encode(Encoder& encoder) const
+{
+    encoder << m_compositeOperator;
+    encoder << m_blendMode;
+    encoder << m_decodingMode;
+    encoder << ImageOrientation::Orientation(m_orientation);
+    encoder << m_interpolationQuality;
+}
+
+template<class Decoder>
+Optional<ImagePaintingOptions> ImagePaintingOptions::decode(Decoder& decoder)
+{
+    Optional<CompositeOperator> compositeOperator;
+    decoder >> compositeOperator;
+    if (!compositeOperator)
+        return WTF::nullopt;
+
+    Optional<BlendMode> blendMode;
+    decoder >> blendMode;
+    if (!blendMode)
+        return WTF::nullopt;
+
+    Optional<DecodingMode> decodingMode;
+    decoder >> decodingMode;
+    if (!decodingMode)
+        return WTF::nullopt;
+
+    Optional<ImageOrientation::Orientation> orientation;
+    decoder >> orientation;
+    if (!orientation)
+        return WTF::nullopt;
+
+    Optional<InterpolationQuality> interpolationQuality;
+    decoder >> interpolationQuality;
+    if (!interpolationQuality)
+        return WTF::nullopt;
+
+    return ImagePaintingOptions { *compositeOperator, *blendMode, *decodingMode, *orientation, *interpolationQuality };
+}
+
 }
