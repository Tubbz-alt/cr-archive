diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GraphicsLayerClient.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GraphicsLayerClient.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GraphicsLayerClient.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GraphicsLayerClient.h
@@ -72,10 +72,11 @@
     LayerTreeAsTextIncludeAcceleratesDrawing    = 1 << 7,
     LayerTreeAsTextIncludeClipping              = 1 << 8,
     LayerTreeAsTextIncludeBackingStoreAttached  = 1 << 9,
     LayerTreeAsTextIncludeRootLayerProperties   = 1 << 10,
     LayerTreeAsTextIncludeEventRegion           = 1 << 11,
+    LayerTreeAsTextIncludeDeepColor             = 1 << 12,
     LayerTreeAsTextShowAll                      = 0xFFFF
 };
 typedef unsigned LayerTreeAsTextBehavior;
 
 enum GraphicsLayerPaintFlags {
@@ -100,11 +101,11 @@
     virtual void notifyFlushRequired(const GraphicsLayer*) { }
 
     // Notification that this layer requires a flush before the next display refresh.
     virtual void notifyFlushBeforeDisplayRefresh(const GraphicsLayer*) { }
 
-    virtual void paintContents(const GraphicsLayer*, GraphicsContext&, OptionSet<GraphicsLayerPaintingPhase>, const FloatRect& /* inClip */, GraphicsLayerPaintBehavior) { }
+    virtual void paintContents(const GraphicsLayer*, GraphicsContext&, const FloatRect& /* inClip */, GraphicsLayerPaintBehavior) { }
     virtual void didChangePlatformLayerForLayer(const GraphicsLayer*) { }
 
     // Provides current transform (taking transform-origin and animations into account). Input matrix has been
     // initialized to identity already. Returns false if the layer has no transform.
     virtual bool getCurrentTransform(const GraphicsLayer*, TransformationMatrix&) const { return false; }
