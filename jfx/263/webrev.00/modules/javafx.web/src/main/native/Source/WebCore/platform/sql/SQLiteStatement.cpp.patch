diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/sql/SQLiteStatement.cpp b/modules/javafx.web/src/main/native/Source/WebCore/platform/sql/SQLiteStatement.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/sql/SQLiteStatement.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/sql/SQLiteStatement.cpp
@@ -43,13 +43,10 @@
 
 SQLiteStatement::SQLiteStatement(SQLiteDatabase& db, const String& sql)
     : m_database(db)
     , m_query(sql)
     , m_statement(0)
-#ifndef NDEBUG
-    , m_isPrepared(false)
-#endif
 {
 }
 
 SQLiteStatement::~SQLiteStatement()
 {
@@ -77,11 +74,11 @@
         LOG(SQLDatabase, "sqlite3_prepare16 failed (%i)\n%s\n%s", error, query.data(), sqlite3_errmsg(m_database.sqlite3Handle()));
 
     if (tail && *tail)
         error = SQLITE_ERROR;
 
-#ifndef NDEBUG
+#if ASSERT_ENABLED
     m_isPrepared = error == SQLITE_OK;
 #endif
     return error;
 }
 
@@ -106,11 +103,11 @@
     return error;
 }
 
 int SQLiteStatement::finalize()
 {
-#ifndef NDEBUG
+#if ASSERT_ENABLED
     m_isPrepared = false;
 #endif
     if (!m_statement)
         return SQLITE_OK;
     LOG(SQLDatabase, "SQL - finalize - %s", m_query.ascii().data());
@@ -158,11 +155,11 @@
 int SQLiteStatement::bindBlob(int index, const void* blob, int size)
 {
     ASSERT(m_isPrepared);
     ASSERT(index > 0);
     ASSERT(static_cast<unsigned>(index) <= bindParameterCount());
-    ASSERT(blob);
+    ASSERT(blob || !size);
     ASSERT(size >= 0);
 
     if (!m_statement)
         return SQLITE_ERROR;
 
