diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/AST/WHLSLType.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/AST/WHLSLType.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/AST/WHLSLType.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/AST/WHLSLType.cpp
@@ -69,13 +69,10 @@
         delete &downcast<FloatLiteralType>(type);
         break;
     case Kind::IntegerLiteral:
         delete &downcast<IntegerLiteralType>(type);
         break;
-    case Kind::NullLiteral:
-        delete &downcast<NullLiteralType>(type);
-        break;
     case Kind::UnsignedIntegerLiteral:
         delete &downcast<UnsignedIntegerLiteralType>(type);
         break;
     }
 }
@@ -113,13 +110,10 @@
         downcast<FloatLiteralType>(type).~FloatLiteralType();
         break;
     case Kind::IntegerLiteral:
         downcast<IntegerLiteralType>(type).~IntegerLiteralType();
         break;
-    case Kind::NullLiteral:
-        downcast<NullLiteralType>(type).~NullLiteralType();
-        break;
     case Kind::UnsignedIntegerLiteral:
         downcast<UnsignedIntegerLiteralType>(type).~UnsignedIntegerLiteralType();
         break;
     }
 }
@@ -155,12 +149,10 @@
     switch (kind()) {
     case Kind::FloatLiteral:
         return downcast<FloatLiteralType>(*this).canResolve(type);
     case Kind::IntegerLiteral:
         return downcast<IntegerLiteralType>(*this).canResolve(type);
-    case Kind::NullLiteral:
-        return downcast<NullLiteralType>(*this).canResolve(type);
     case Kind::UnsignedIntegerLiteral:
         return downcast<UnsignedIntegerLiteralType>(*this).canResolve(type);
     default:
         RELEASE_ASSERT_NOT_REACHED();
     }
@@ -171,12 +163,10 @@
     switch (kind()) {
     case Kind::FloatLiteral:
         return downcast<FloatLiteralType>(*this).conversionCost(type);
     case Kind::IntegerLiteral:
         return downcast<IntegerLiteralType>(*this).conversionCost(type);
-    case Kind::NullLiteral:
-        return downcast<NullLiteralType>(*this).conversionCost(type);
     case Kind::UnsignedIntegerLiteral:
         return downcast<UnsignedIntegerLiteralType>(*this).conversionCost(type);
     default:
         RELEASE_ASSERT_NOT_REACHED();
     }
