diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/wasm/WasmSectionParser.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/wasm/WasmSectionParser.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/wasm/WasmSectionParser.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/wasm/WasmSectionParser.h
@@ -52,14 +52,17 @@
 private:
     template <typename ...Args>
     NEVER_INLINE UnexpectedResult WARN_UNUSED_RETURN fail(Args... args) const
     {
         using namespace FailureHelper; // See ADL comment in namespace above.
+        if (UNLIKELY(ASSERT_ENABLED && Options::crashOnFailedWebAssemblyValidate()))
+            CRASH();
+
         return UnexpectedResult(makeString("WebAssembly.Module doesn't parse at byte "_s, String::number(m_offset + m_offsetInSource), ": "_s, makeString(args)...));
     }
 
-    PartialResult WARN_UNUSED_RETURN parseGlobalType(Global&);
+    PartialResult WARN_UNUSED_RETURN parseGlobalType(GlobalInformation&);
     PartialResult WARN_UNUSED_RETURN parseMemoryHelper(bool isImport);
     PartialResult WARN_UNUSED_RETURN parseTableHelper(bool isImport);
     PartialResult WARN_UNUSED_RETURN parseResizableLimits(uint32_t& initial, Optional<uint32_t>& maximum);
     PartialResult WARN_UNUSED_RETURN parseInitExpr(uint8_t&, uint64_t&, Type& initExprType);
 
