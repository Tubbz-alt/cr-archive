diff a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGToOTFFontConversion.cpp b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGToOTFFontConversion.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGToOTFFontConversion.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGToOTFFontConversion.cpp
@@ -100,26 +100,26 @@
 
         Placeholder(Placeholder&& other)
             : m_converter(other.m_converter)
             , m_baseOfOffset(other.m_baseOfOffset)
             , m_location(other.m_location)
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
             , m_active(other.m_active)
 #endif
         {
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
             other.m_active = false;
 #endif
         }
 
         void populate()
         {
             ASSERT(m_active);
             size_t delta = m_converter.m_result.size() - m_baseOfOffset;
             ASSERT(delta < std::numeric_limits<uint16_t>::max());
             m_converter.overwrite16(m_location, delta);
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
             m_active = false;
 #endif
         }
 
         ~Placeholder()
@@ -129,11 +129,11 @@
 
     private:
         SVGToOTFFontConverter& m_converter;
         const size_t m_baseOfOffset;
         const size_t m_location;
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
         bool m_active = { true };
 #endif
     };
 
     struct KerningData {
@@ -635,11 +635,11 @@
     m_result.append(4); // Offsets in this INDEX are 4 bytes long
     append32(1); // 1-index offset of DICT data
     append32(1 + sizeOfTopIndex); // 1-index offset just past end of DICT data
 
     // DICT information
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     unsigned topDictStart = m_result.size();
 #endif
     m_result.append(operand32Bit);
     append32(userDefinedStringStartIndex);
     m_result.append(fullNameKey);
@@ -715,17 +715,17 @@
         m_result.appendVector(glyph.charString);
 }
 
 Glyph SVGToOTFFontConverter::firstGlyph(const Vector<Glyph, 1>& v, UChar32 codepoint) const
 {
-#if ASSERT_DISABLED
+#if !ASSERT_ENABLED
     UNUSED_PARAM(codepoint);
 #endif
     ASSERT(!v.isEmpty());
     if (v.isEmpty())
         return 0;
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     auto codePoints = StringView(m_glyphs[v[0]].codepoints).codePoints();
     auto codePointsIterator = codePoints.begin();
     ASSERT(codePointsIterator != codePoints.end());
     ASSERT(codepoint == *codePointsIterator);
 #endif
@@ -1106,11 +1106,11 @@
 void SVGToOTFFontConverter::appendKERNTable()
 {
     append16(0); // Version
     append16(2); // Number of subtables
 
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     auto subtablesOffset = m_result.size();
 #endif
 
     size_t sizeOfHorizontalSubtable = appendKERNSubtable<SVGHKernElement>(&SVGHKernElement::buildHorizontalKerningPair, 1);
     ASSERT_UNUSED(sizeOfHorizontalSubtable, subtablesOffset + sizeOfHorizontalSubtable == m_result.size());
