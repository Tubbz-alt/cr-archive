diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/InjectedScriptModule.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/InjectedScriptModule.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/InjectedScriptModule.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/InjectedScriptModule.h
@@ -43,19 +43,19 @@
 class InjectedScript;
 class InjectedScriptManager;
 
 class JS_EXPORT_PRIVATE InjectedScriptModule : public InjectedScriptBase {
 public:
-    virtual ~InjectedScriptModule();
+    ~InjectedScriptModule() override;
     virtual String source() const = 0;
-    virtual JSC::JSValue host(InjectedScriptManager*, JSC::ExecState*) const = 0;
+    virtual JSC::JSValue host(InjectedScriptManager*, JSC::JSGlobalObject*) const = 0;
 
 protected:
     // Do not expose constructor in the child classes as well. Instead provide
     // a static factory method that would create a new instance of the class
     // and call its ensureInjected() method immediately.
     explicit InjectedScriptModule(const String& name);
-    void ensureInjected(InjectedScriptManager*, JSC::ExecState*);
+    void ensureInjected(InjectedScriptManager*, JSC::JSGlobalObject*);
     void ensureInjected(InjectedScriptManager*, const InjectedScript&);
 };
 
 } // namespace Inspector
