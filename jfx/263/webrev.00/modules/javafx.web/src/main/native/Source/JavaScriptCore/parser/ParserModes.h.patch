diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/parser/ParserModes.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/parser/ParserModes.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/parser/ParserModes.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/parser/ParserModes.h
@@ -24,19 +24,19 @@
  */
 
 #pragma once
 
 #include "ConstructAbility.h"
+#include "ConstructorKind.h"
 #include "Identifier.h"
 
 namespace JSC {
 
 enum class JSParserStrictMode { NotStrict, Strict };
 enum class JSParserBuiltinMode { NotBuiltin, Builtin };
 enum class JSParserScriptMode { Classic, Module };
 
-enum class ConstructorKind { None, Base, Extends };
 enum class SuperBinding { Needed, NotNeeded };
 
 enum class CodeGenerationMode : uint8_t {
     Debugger = 1 << 0,
     TypeProfiler = 1 << 1,
@@ -64,10 +64,11 @@
     ModuleEvaluateMode                = 14,
     AsyncGeneratorBodyMode            = 15,
     AsyncGeneratorWrapperFunctionMode = 16,
     AsyncGeneratorWrapperMethodMode   = 17,
     GeneratorWrapperMethodMode        = 18,
+    InstanceFieldInitializerMode      = 19,
 };
 
 class SourceParseModeSet {
 public:
     template<typename... Modes>
@@ -112,11 +113,12 @@
         SourceParseMode::AsyncMethodMode,
         SourceParseMode::AsyncArrowFunctionMode,
         SourceParseMode::AsyncArrowFunctionBodyMode,
         SourceParseMode::AsyncGeneratorBodyMode,
         SourceParseMode::AsyncGeneratorWrapperFunctionMode,
-        SourceParseMode::AsyncGeneratorWrapperMethodMode).contains(parseMode);
+        SourceParseMode::AsyncGeneratorWrapperMethodMode,
+        SourceParseMode::InstanceFieldInitializerMode).contains(parseMode);
 }
 
 ALWAYS_INLINE bool isAsyncFunctionParseMode(SourceParseMode parseMode)
 {
     return SourceParseModeSet(
