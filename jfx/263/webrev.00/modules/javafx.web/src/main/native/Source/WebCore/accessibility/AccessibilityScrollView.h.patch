diff a/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilityScrollView.h b/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilityScrollView.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilityScrollView.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilityScrollView.h
@@ -38,16 +38,16 @@
     static Ref<AccessibilityScrollView> create(ScrollView*);
     AccessibilityRole roleValue() const override { return AccessibilityRole::ScrollArea; }
     ScrollView* scrollView() const { return m_scrollView; }
 
     virtual ~AccessibilityScrollView();
-    void detach(AccessibilityDetachmentType, AXObjectCache*) override;
 
     AccessibilityObject* webAreaObject() const;
 
 private:
     explicit AccessibilityScrollView(ScrollView*);
+    void detachRemoteParts(AccessibilityDetachmentType) override;
 
     ScrollableArea* getScrollableAreaIfScrollable() const override;
     void scrollTo(const IntPoint&) const override;
     bool computeAccessibilityIsIgnored() const override;
     bool isAccessibilityScrollView() const override { return true; }
@@ -57,11 +57,11 @@
     Widget* widgetForAttachmentView() const override;
 
     AccessibilityObject* scrollBar(AccessibilityOrientation) override;
     void addChildren() override;
     void clearChildren() override;
-    AccessibilityObjectInterface* accessibilityHitTest(const IntPoint&) const override;
+    AXCoreObject* accessibilityHitTest(const IntPoint&) const override;
     void updateChildrenIfNecessary() override;
     void setNeedsToUpdateChildren() override { m_childrenDirty = true; }
     void updateScrollbars();
     void setFocused(bool) override;
     bool canSetFocusAttribute() const override;
