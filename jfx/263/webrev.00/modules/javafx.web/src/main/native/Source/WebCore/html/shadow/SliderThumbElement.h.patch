diff a/modules/javafx.web/src/main/native/Source/WebCore/html/shadow/SliderThumbElement.h b/modules/javafx.web/src/main/native/Source/WebCore/html/shadow/SliderThumbElement.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/shadow/SliderThumbElement.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/shadow/SliderThumbElement.h
@@ -64,22 +64,20 @@
     Ref<Element> cloneElementWithoutAttributesAndChildren(Document&) final;
     bool isDisabledFormControl() const final;
     bool matchesReadWritePseudoClass() const final;
     RefPtr<Element> focusDelegate() final;
 
-#if !PLATFORM(IOS_FAMILY)
     void defaultEventHandler(Event&) final;
     bool willRespondToMouseMoveEvents() final;
     bool willRespondToMouseClickEvents() final;
-#endif
 
 #if ENABLE(IOS_TOUCH_EVENTS)
     void didAttachRenderers() final;
 #endif
     void willDetachRenderers() final;
 
-    Optional<ElementStyle> resolveCustomStyle(const RenderStyle&, const RenderStyle*) final;
+    Optional<Style::ElementStyle> resolveCustomStyle(const RenderStyle&, const RenderStyle*) final;
     const AtomString& shadowPseudoId() const final;
 
     void startDragging();
     void stopDragging();
 
@@ -134,11 +132,11 @@
     static Ref<SliderContainerElement> create(Document&);
 
 private:
     SliderContainerElement(Document&);
     RenderPtr<RenderElement> createElementRenderer(RenderStyle&&, const RenderTreePosition&) final;
-    Optional<ElementStyle> resolveCustomStyle(const RenderStyle&, const RenderStyle*) final;
+    Optional<Style::ElementStyle> resolveCustomStyle(const RenderStyle&, const RenderStyle*) final;
     const AtomString& shadowPseudoId() const final;
     bool isSliderContainerElement() const final { return true; }
 
     AtomString m_shadowPseudoId;
 };
