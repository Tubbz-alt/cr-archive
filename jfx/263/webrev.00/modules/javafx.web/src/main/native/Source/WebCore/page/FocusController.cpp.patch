diff a/modules/javafx.web/src/main/native/Source/WebCore/page/FocusController.cpp b/modules/javafx.web/src/main/native/Source/WebCore/page/FocusController.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/page/FocusController.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/page/FocusController.cpp
@@ -833,18 +833,18 @@
         clearSelectionIfNeeded(oldFocusedFrame.get(), &newFocusedFrame, element);
 
     if (!element) {
         if (oldDocument)
             oldDocument->setFocusedElement(nullptr);
-        m_page.editorClient().setInputMethodState(false);
+        m_page.editorClient().setInputMethodState(nullptr);
         return true;
     }
 
     Ref<Document> newDocument(element->document());
 
     if (newDocument->focusedElement() == element) {
-        m_page.editorClient().setInputMethodState(element->shouldUseInputMethod());
+        m_page.editorClient().setInputMethodState(element);
         return true;
     }
 
     if (oldDocument && oldDocument != newDocument.ptr())
         oldDocument->setFocusedElement(nullptr);
@@ -860,11 +860,11 @@
     bool successfullyFocused = newDocument->setFocusedElement(element, direction);
     if (!successfullyFocused)
         return false;
 
     if (newDocument->focusedElement() == element)
-        m_page.editorClient().setInputMethodState(element->shouldUseInputMethod());
+        m_page.editorClient().setInputMethodState(element);
 
     m_focusSetTime = MonotonicTime::now();
     m_focusRepaintTimer.stop();
 
     return true;
