diff a/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/WebDebuggerAgent.h b/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/WebDebuggerAgent.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/WebDebuggerAgent.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/WebDebuggerAgent.h
@@ -28,24 +28,45 @@
 #include "InspectorWebAgentBase.h"
 #include <JavaScriptCore/InspectorDebuggerAgent.h>
 
 namespace WebCore {
 
+class EventListener;
+class EventTarget;
 class InstrumentingAgents;
+class RegisteredEventListener;
+class TimerBase;
 typedef String ErrorString;
 
 class WebDebuggerAgent : public Inspector::InspectorDebuggerAgent {
     WTF_MAKE_NONCOPYABLE(WebDebuggerAgent);
     WTF_MAKE_FAST_ALLOCATED;
 public:
-    virtual ~WebDebuggerAgent();
+    ~WebDebuggerAgent() override;
+    bool enabled() const override;
+
+    // InspectorInstrumentation
+    void didAddEventListener(EventTarget&, const AtomString& eventType, EventListener&, bool capture);
+    void willRemoveEventListener(EventTarget&, const AtomString& eventType, EventListener&, bool capture);
+    void willHandleEvent(const RegisteredEventListener&);
+    void didPostMessage(const TimerBase&, JSC::JSGlobalObject&);
+    void didFailPostMessage(const TimerBase&);
+    void willDispatchPostMessage(const TimerBase&);
+    void didDispatchPostMessage(const TimerBase&);
 
 protected:
     WebDebuggerAgent(WebAgentContext&);
-
     void enable() override;
     void disable(bool isBeingDestroyed) override;
 
+    void didClearAsyncStackTraceData() final;
+
     InstrumentingAgents& m_instrumentingAgents;
+
+private:
+    HashMap<const RegisteredEventListener*, int> m_registeredEventListeners;
+    HashMap<const TimerBase*, int> m_postMessageTimers;
+    int m_nextEventListenerIdentifier { 1 };
+    int m_nextPostMessageIdentifier { 1 };
 };
 
 } // namespace WebCore
