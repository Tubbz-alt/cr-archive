diff a/modules/javafx.web/src/main/native/Source/WebCore/dom/WebKitAnimationEvent.h b/modules/javafx.web/src/main/native/Source/WebCore/dom/WebKitAnimationEvent.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/dom/WebKitAnimationEvent.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/dom/WebKitAnimationEvent.h
@@ -28,19 +28,21 @@
 #include "Event.h"
 
 namespace WebCore {
 
 class WebKitAnimationEvent final : public Event {
+    WTF_MAKE_ISO_ALLOCATED(WebKitAnimationEvent);
 public:
-    static Ref<WebKitAnimationEvent> create(const AtomString& type, const String& animationName, double elapsedTime)
+    static Ref<WebKitAnimationEvent> create(const AtomString& type, const String& animationName, double elapsedTime, const String& pseudoElement)
     {
-        return adoptRef(*new WebKitAnimationEvent(type, animationName, elapsedTime));
+        return adoptRef(*new WebKitAnimationEvent(type, animationName, elapsedTime, pseudoElement));
     }
 
     struct Init : EventInit {
         String animationName;
         double elapsedTime { 0.0 };
+        String pseudoElement;
     };
 
     static Ref<WebKitAnimationEvent> create(const AtomString& type, const Init& initializer, IsTrusted isTrusted = IsTrusted::No)
     {
         return adoptRef(*new WebKitAnimationEvent(type, initializer, isTrusted));
@@ -48,17 +50,19 @@
 
     virtual ~WebKitAnimationEvent();
 
     const String& animationName() const;
     double elapsedTime() const;
+    const String& pseudoElement() const;
 
     EventInterface eventInterface() const override;
 
 private:
-    WebKitAnimationEvent(const AtomString& type, const String& animationName, double elapsedTime);
+    WebKitAnimationEvent(const AtomString& type, const String& animationName, double elapsedTime, const String& pseudoElement);
     WebKitAnimationEvent(const AtomString&, const Init&, IsTrusted);
 
     String m_animationName;
     double m_elapsedTime;
+    String m_pseudoElement;
 };
 
 } // namespace WebCore
