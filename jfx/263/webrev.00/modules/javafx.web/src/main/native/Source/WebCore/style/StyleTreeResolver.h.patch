diff a/modules/javafx.web/src/main/native/Source/WebCore/style/StyleTreeResolver.h b/modules/javafx.web/src/main/native/Source/WebCore/style/StyleTreeResolver.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/style/StyleTreeResolver.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/style/StyleTreeResolver.h
@@ -38,14 +38,16 @@
 class Document;
 class Element;
 class Node;
 class RenderStyle;
 class ShadowRoot;
-class StyleResolver;
 
 namespace Style {
 
+class Resolver;
+
+DECLARE_ALLOCATOR_WITH_HEAP_IDENTIFIER(TreeResolverScope);
 class TreeResolver {
 public:
     TreeResolver(Document&);
     ~TreeResolver();
 
@@ -60,11 +62,12 @@
 
     ElementUpdate createAnimatedElementUpdate(std::unique_ptr<RenderStyle>, Element&, Change);
     ElementUpdate resolvePseudoStyle(Element&, const ElementUpdate&, PseudoId);
 
     struct Scope : RefCounted<Scope> {
-        StyleResolver& styleResolver;
+        WTF_MAKE_STRUCT_FAST_ALLOCATED_WITH_HEAP_IDENTIFIER(TreeResolverScope);
+        Resolver& resolver;
         SelectorFilter selectorFilter;
         SharingResolver sharingResolver;
         ShadowRoot* shadowRoot { nullptr };
         Scope* enclosingScope { nullptr };
 
@@ -94,10 +97,11 @@
     void pushParent(Element&, const RenderStyle&, Change, DescendantsToResolve);
     void popParent();
     void popParentsToDepth(unsigned depth);
 
     const RenderStyle* parentBoxStyle() const;
+    const RenderStyle* parentBoxStyleForPseudo(const ElementUpdate&) const;
 
     Document& m_document;
     std::unique_ptr<RenderStyle> m_documentElementStyle;
 
     Vector<Ref<Scope>, 4> m_scopeStack;
