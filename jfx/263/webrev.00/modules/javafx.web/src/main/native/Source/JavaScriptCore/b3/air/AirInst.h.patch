diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/air/AirInst.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/air/AirInst.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/air/AirInst.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/air/AirInst.h
@@ -27,11 +27,12 @@
 
 #if ENABLE(B3_JIT)
 
 #include "AirArg.h"
 #include "AirKind.h"
-#include "CCallHelpers.h"
+#include "MacroAssembler.h"
+#include <wtf/ScopedLambda.h>
 
 namespace JSC {
 
 class CCallHelpers;
 class RegisterSet;
@@ -189,11 +190,11 @@
     bool hasNonControlEffects() { return hasNonArgNonControlEffects() || hasArgEffects(); }
 
     // Generate some code for this instruction. This is, like, literally our backend. If this is the
     // terminal, it returns the jump that needs to be linked for the "then" case, with the "else"
     // case being fall-through. This function is auto-generated by opcode_generator.rb.
-    CCallHelpers::Jump generate(CCallHelpers&, GenerationContext&);
+    MacroAssembler::Jump generate(CCallHelpers&, GenerationContext&);
 
     // If source arguments benefits from being aliased to a destination argument,
     // this return the index of the destination argument.
     // The source are assumed to be at (index - 1) and (index - 2)
     // For example,
