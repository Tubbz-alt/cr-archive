diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/GCSegmentedArray.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/GCSegmentedArray.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/GCSegmentedArray.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/GCSegmentedArray.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2014-2016 Apple Inc. All rights reserved.
+ * Copyright (C) 2014-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -23,23 +23,26 @@
  * THE POSSIBILITY OF SUCH DAMAGE.
  */
 
 #pragma once
 
+#include <wtf/DebugHeap.h>
 #include <wtf/DoublyLinkedList.h>
 #include <wtf/Forward.h>
 #include <wtf/Noncopyable.h>
 
 namespace JSC {
 
+DECLARE_ALLOCATOR_WITH_HEAP_IDENTIFIER(GCSegmentedArray);
+
 template <typename T>
 class GCArraySegment : public DoublyLinkedListNode<GCArraySegment<T>> {
     friend class WTF::DoublyLinkedListNode<GCArraySegment<T>>;
 public:
     GCArraySegment()
         : DoublyLinkedListNode<GCArraySegment<T>>()
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
         , m_top(0)
 #endif
     {
     }
 
@@ -49,15 +52,15 @@
     T* data()
     {
         return bitwise_cast<T*>(this + 1);
     }
 
-    static const size_t blockSize = 4 * KB;
+    static constexpr size_t blockSize = 4 * KB;
 
     GCArraySegment* m_prev;
     GCArraySegment* m_next;
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     size_t m_top;
 #endif
 };
 
 template <typename T> class GCSegmentedArrayIterator;
@@ -88,11 +91,11 @@
     iterator begin() const { return GCSegmentedArrayIterator<T>(m_segments.head(), m_top); }
     iterator end() const { return GCSegmentedArrayIterator<T>(); }
 
 protected:
     template <size_t size> struct CapacityFromSize {
-        static const size_t value = (size - sizeof(GCArraySegment<T>)) / sizeof(T);
+        static constexpr size_t value = (size - sizeof(GCArraySegment<T>)) / sizeof(T);
     };
 
     void expand();
 
     size_t postIncTop();
