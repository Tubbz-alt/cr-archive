diff a/modules/javafx.web/src/main/native/Source/WebCore/loader/cache/CachedCSSStyleSheet.cpp b/modules/javafx.web/src/main/native/Source/WebCore/loader/cache/CachedCSSStyleSheet.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/loader/cache/CachedCSSStyleSheet.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/loader/cache/CachedCSSStyleSheet.cpp
@@ -29,10 +29,11 @@
 #include "CachedResourceRequest.h"
 #include "CachedStyleSheetClient.h"
 #include "HTTPHeaderNames.h"
 #include "HTTPParsers.h"
 #include "MemoryCache.h"
+#include "ParsedContentType.h"
 #include "SharedBuffer.h"
 #include "StyleSheetContents.h"
 #include "TextResourceDecoder.h"
 
 namespace WebCore {
@@ -149,11 +150,11 @@
     // This implementation should be observationally equivalent.
     //
     // This code defaults to allowing the stylesheet for non-HTTP protocols so
     // folks can use standards mode for local HTML documents.
     String mimeType = responseMIMEType();
-    bool typeOK = mimeType.isEmpty() || equalLettersIgnoringASCIICase(mimeType, "text/css") || equalLettersIgnoringASCIICase(mimeType, "application/x-unknown-content-type");
+    bool typeOK = mimeType.isEmpty() || equalLettersIgnoringASCIICase(mimeType, "text/css") || equalLettersIgnoringASCIICase(mimeType, "application/x-unknown-content-type") || !isValidContentType(mimeType);
     if (hasValidMIMEType)
         *hasValidMIMEType = typeOK;
     return typeOK;
 }
 
