diff a/modules/javafx.web/src/main/native/Source/WebCore/history/HistoryItem.cpp b/modules/javafx.web/src/main/native/Source/WebCore/history/HistoryItem.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/history/HistoryItem.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/history/HistoryItem.cpp
@@ -24,14 +24,14 @@
  */
 
 #include "config.h"
 #include "HistoryItem.h"
 
+#include "BackForwardCache.h"
 #include "CachedPage.h"
 #include "Document.h"
 #include "KeyedCoding.h"
-#include "PageCache.h"
 #include "ResourceRequest.h"
 #include "SerializedScriptValue.h"
 #include "SharedBuffer.h"
 #include <stdio.h>
 #include <wtf/DateMath.h>
@@ -184,10 +184,26 @@
 bool HistoryItem::hasCachedPageExpired() const
 {
     return m_cachedPage ? m_cachedPage->hasExpired() : false;
 }
 
+void HistoryItem::setCachedPage(std::unique_ptr<CachedPage>&& cachedPage)
+{
+    bool wasInBackForwardCache = isInBackForwardCache();
+    m_cachedPage = WTFMove(cachedPage);
+    if (wasInBackForwardCache != isInBackForwardCache())
+        notifyChanged();
+}
+
+std::unique_ptr<CachedPage> HistoryItem::takeCachedPage()
+{
+    ASSERT(m_cachedPage);
+    auto cachedPage = std::exchange(m_cachedPage, nullptr);
+    notifyChanged();
+    return cachedPage;
+}
+
 URL HistoryItem::url() const
 {
     return URL({ }, m_urlString);
 }
 
@@ -218,11 +234,11 @@
     notifyChanged();
 }
 
 void HistoryItem::setURL(const URL& url)
 {
-    PageCache::singleton().remove(*this);
+    BackForwardCache::singleton().remove(*this);
     setURLString(url.string());
     clearDocumentState();
 }
 
 void HistoryItem::setOriginalURLString(const String& urlString)
