diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/air/AirBasicBlock.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/air/AirBasicBlock.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/air/AirBasicBlock.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/air/AirBasicBlock.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2015-2017 Apple Inc. All rights reserved.
+ * Copyright (C) 2015-2020 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -70,25 +70,25 @@
 
 void BasicBlock::deepDump(PrintStream& out) const
 {
     dumpHeader(out);
     for (const Inst& inst : *this)
-        out.print("    ", inst, "\n");
+        out.print(tierName, "    ", inst, "\n");
     dumpFooter(out);
 }
 
 void BasicBlock::dumpHeader(PrintStream& out) const
 {
-    out.print("BB", *this, ": ; frequency = ", m_frequency, "\n");
+    out.print(tierName, "BB", *this, ": ; frequency = ", m_frequency, "\n");
     if (predecessors().size())
-        out.print("  Predecessors: ", pointerListDump(predecessors()), "\n");
+        out.print(tierName, "  Predecessors: ", pointerListDump(predecessors()), "\n");
 }
 
 void BasicBlock::dumpFooter(PrintStream& out) const
 {
     if (successors().size())
-        out.print("  Successors: ", listDump(successors()), "\n");
+        out.print(tierName, "  Successors: ", listDump(successors()), "\n");
 }
 
 BasicBlock::BasicBlock(unsigned index, double frequency)
     : m_index(index)
     , m_frequency(frequency)
