diff a/modules/javafx.web/src/main/native/Source/WebCore/dom/ElementAndTextDescendantIterator.h b/modules/javafx.web/src/main/native/Source/WebCore/dom/ElementAndTextDescendantIterator.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/dom/ElementAndTextDescendantIterator.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/dom/ElementAndTextDescendantIterator.h
@@ -75,11 +75,11 @@
         unsigned depth;
     };
     Vector<AncestorSibling, 16> m_ancestorSiblingStack;
     unsigned m_depth { 0 };
 
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     ElementIteratorAssertions m_assertions;
 #endif
 };
 
 class ElementAndTextDescendantIteratorAdapter {
@@ -101,11 +101,11 @@
 {
 }
 
 inline ElementAndTextDescendantIterator::ElementAndTextDescendantIterator(ContainerNode& root, FirstChildTag)
     : m_current(firstChild(root))
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     , m_assertions(m_current)
 #endif
 {
     if (!m_current)
         return;
@@ -113,11 +113,11 @@
     m_depth = 1;
 }
 
 inline ElementAndTextDescendantIterator::ElementAndTextDescendantIterator(ContainerNode& root, Node* current)
     : m_current(current)
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     , m_assertions(m_current)
 #endif
 {
     if (!m_current)
         return;
@@ -141,11 +141,11 @@
     m_depth = ancestorStack.size() + 1;
 }
 
 inline void ElementAndTextDescendantIterator::dropAssertions()
 {
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     m_assertions.clear();
 #endif
 }
 
 inline Node* ElementAndTextDescendantIterator::firstChild(Node& current)
@@ -176,11 +176,11 @@
 {
     m_current = m_ancestorSiblingStack.last().node;
     m_depth = m_ancestorSiblingStack.last().depth;
     m_ancestorSiblingStack.removeLast();
 
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     // Drop the assertion when the iterator reaches the end.
     if (!m_current)
         m_assertions.dropEventDispatchAssertion();
 #endif
 }
@@ -228,11 +228,11 @@
     ASSERT(m_current);
     ASSERT(!m_assertions.domTreeHasMutated());
 
     m_current = nextSibling(*m_current);
 
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     if (!m_current)
         m_assertions.dropEventDispatchAssertion();
 #endif
     return *this;
 }
@@ -242,11 +242,11 @@
     ASSERT(m_current);
     ASSERT(!m_assertions.domTreeHasMutated());
 
     m_current = previousSibling(*m_current);
 
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     if (!m_current)
         m_assertions.dropEventDispatchAssertion();
 #endif
     return *this;
 }
