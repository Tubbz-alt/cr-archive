diff a/modules/javafx.web/src/main/native/Source/bmalloc/bmalloc/PerProcess.h b/modules/javafx.web/src/main/native/Source/bmalloc/bmalloc/PerProcess.h
--- a/modules/javafx.web/src/main/native/Source/bmalloc/bmalloc/PerProcess.h
+++ b/modules/javafx.web/src/main/native/Source/bmalloc/bmalloc/PerProcess.h
@@ -44,11 +44,11 @@
 //
 // Object* object = PerProcess<Object>::get();
 // x = object->m_field; // OK
 // if (globalFlag) { ... } // Undefined behavior.
 //
-// std::lock_guard<Mutex> lock(PerProcess<Object>::mutex());
+// LockHolder lock(PerProcess<Object>::mutex());
 // Object* object = PerProcess<Object>::get(lock);
 // if (globalFlag) { ... } // OK.
 
 struct PerProcessData {
     const char* disambiguator;
@@ -103,11 +103,11 @@
         s_data = getPerProcessData(stringHash(disambiguator), disambiguator, sizeof(T), std::alignment_of<T>::value);
     }
 
     BNO_INLINE static T* getSlowCase()
     {
-        std::lock_guard<Mutex> lock(mutex());
+        LockHolder lock(mutex());
         if (!s_object.load()) {
             if (s_data->isInitialized)
                 s_object.store(static_cast<T*>(s_data->memory));
             else {
                 T* t = new (s_data->memory) T(lock);
