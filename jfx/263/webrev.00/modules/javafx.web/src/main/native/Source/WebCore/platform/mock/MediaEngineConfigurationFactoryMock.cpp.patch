diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/mock/MediaEngineConfigurationFactoryMock.cpp b/modules/javafx.web/src/main/native/Source/WebCore/platform/mock/MediaEngineConfigurationFactoryMock.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/mock/MediaEngineConfigurationFactoryMock.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/mock/MediaEngineConfigurationFactoryMock.cpp
@@ -47,11 +47,17 @@
     if (videoConfig && videoConfig->width > 1280 && videoConfig->height > 720)
         return false;
 
     // Only the "mock-with-alpha" codec supports alphaChannel
     if (videoConfig && videoConfig->alphaChannel && videoConfig->alphaChannel.value()) {
-        if (ContentType(videoConfig->contentType).codecsParameter() != "mock-with-alpha")
+        if (ContentType(videoConfig->contentType).parameter(ContentType::codecsParameter()) != "mock-with-alpha")
+            return false;
+    }
+
+    // Only the "mock-with-hdr" codec supports HDR)
+    if (videoConfig && (videoConfig->colorGamut || videoConfig->hdrMetadataType || videoConfig->transferFunction)) {
+        if (ContentType(videoConfig->contentType).parameter(ContentType::codecsParameter()) != "mock-with-hdr")
             return false;
     }
 
     // Audio decoding support limited to audio/mp4.
     auto audioConfig = configuration.audio;
@@ -98,11 +104,11 @@
     if (videoConfig && videoConfig->width > 1280 && videoConfig->height > 720)
         return false;
 
     // Only the "mock-with-alpha" codec supports alphaChannel
     if (videoConfig && videoConfig->alphaChannel && videoConfig->alphaChannel.value()) {
-        if (ContentType(videoConfig->contentType).codecsParameter() != "mock-with-alpha")
+        if (ContentType(videoConfig->contentType).parameter(ContentType::codecsParameter()) != "mock-with-alpha")
             return false;
     }
 
     // Audio encoding support limited to audio/mp4.
     auto audioConfig = configuration.audio;
