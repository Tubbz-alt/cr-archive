diff a/modules/javafx.web/src/main/native/Source/WebCore/dom/FullscreenManager.h b/modules/javafx.web/src/main/native/Source/WebCore/dom/FullscreenManager.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/dom/FullscreenManager.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/dom/FullscreenManager.h
@@ -52,11 +52,11 @@
     Document& topDocument() const { return m_document.topDocument(); }
     Page* page() const { return m_document.page(); }
     Frame* frame() const { return m_document.frame(); }
     Element* documentElement() const { return m_document.documentElement(); }
     bool hasLivingRenderTree() const { return m_document.hasLivingRenderTree(); }
-    Document::PageCacheState pageCacheState() const { return m_document.pageCacheState(); }
+    Document::BackForwardCacheState backForwardCacheState() const { return m_document.backForwardCacheState(); }
     void scheduleFullStyleRebuild() { m_document.scheduleFullStyleRebuild(); }
 
     // W3C Fullscreen API
     Element* fullscreenElement() const { return !m_fullscreenElementStack.isEmpty() ? m_fullscreenElementStack.last().get() : nullptr; }
     WEBCORE_EXPORT bool isFullscreenEnabled() const;
@@ -81,11 +81,10 @@
 
     void setFullscreenRenderer(RenderTreeBuilder&, RenderFullScreen&);
     RenderFullScreen* fullscreenRenderer() const;
 
     void dispatchFullscreenChangeEvents();
-    bool fullscreenIsAllowedForElement(Element&) const;
     void fullscreenElementRemoved();
 
     void adjustFullscreenElementOnNodeRemoval(Node&, Document::NodeRemoval = Document::NodeRemoval::Node);
 
     WEBCORE_EXPORT bool isAnimatingFullscreen() const;
