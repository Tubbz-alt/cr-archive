diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/WHLSLPruneUnreachableStandardLibraryFunctions.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/WHLSLPruneUnreachableStandardLibraryFunctions.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/WHLSLPruneUnreachableStandardLibraryFunctions.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/WHLSLPruneUnreachableStandardLibraryFunctions.cpp
@@ -28,10 +28,11 @@
 
 #if ENABLE(WEBGPU)
 
 #include "WHLSLAST.h"
 #include "WHLSLProgram.h"
+#include "WHLSLVisitor.h"
 
 namespace WebCore {
 
 namespace WHLSL {
 
@@ -49,27 +50,10 @@
         Visitor::visit(callExpression);
         if (is<AST::FunctionDefinition>(callExpression.function()))
             visit(downcast<AST::FunctionDefinition>(callExpression.function()));
     }
 
-    void visit(AST::PropertyAccessExpression& expression) override
-    {
-        auto visitFunction = [&] (AST::FunctionDeclaration* function) {
-            if (!function)
-                return;
-            if (is<AST::FunctionDefinition>(*function))
-                visit(downcast<AST::FunctionDefinition>(*function));
-        };
-
-        visitFunction(expression.getterFunction());
-        visitFunction(expression.anderFunction());
-        visitFunction(expression.threadAnderFunction());
-        visitFunction(expression.setterFunction());
-
-        Visitor::visit(expression);
-    }
-
     HashSet<AST::FunctionDefinition*> takeReachableFunctions() { return WTFMove(m_reachableFunctions); }
 
 private:
     HashSet<AST::FunctionDefinition*> m_reachableFunctions;
 };
