diff a/modules/javafx.web/src/main/native/Source/WebCore/page/PageConfiguration.h b/modules/javafx.web/src/main/native/Source/WebCore/page/PageConfiguration.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/page/PageConfiguration.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/page/PageConfiguration.h
@@ -23,14 +23,17 @@
  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 
 #pragma once
 
+#include <pal/SessionID.h>
+#include <wtf/Forward.h>
 #include <wtf/Noncopyable.h>
 #include <wtf/Optional.h>
 #include <wtf/RefPtr.h>
 #include <wtf/UniqueRef.h>
+#include <wtf/Vector.h>
 
 #if ENABLE(APPLICATION_MANIFEST)
 #include "ApplicationManifest.h"
 #endif
 
@@ -49,10 +52,11 @@
 class DragClient;
 class EditorClient;
 class FrameLoaderClient;
 class InspectorClient;
 class LibWebRTCProvider;
+class MediaRecorderProvider;
 class PaymentCoordinatorClient;
 class PerformanceLoggingClient;
 class PlugInClient;
 class PluginInfoProvider;
 class ProgressTrackerClient;
@@ -65,22 +69,23 @@
 class SpeechSynthesisClient;
 
 class PageConfiguration {
     WTF_MAKE_NONCOPYABLE(PageConfiguration); WTF_MAKE_FAST_ALLOCATED;
 public:
-    WEBCORE_EXPORT PageConfiguration(UniqueRef<EditorClient>&&, Ref<SocketProvider>&&, UniqueRef<LibWebRTCProvider>&&, Ref<CacheStorageProvider>&&, Ref<BackForwardClient>&&, Ref<CookieJar>&&);
+    WEBCORE_EXPORT PageConfiguration(PAL::SessionID, UniqueRef<EditorClient>&&, Ref<SocketProvider>&&, UniqueRef<LibWebRTCProvider>&&, Ref<CacheStorageProvider>&&, Ref<BackForwardClient>&&, Ref<CookieJar>&&, UniqueRef<ProgressTrackerClient>&&, UniqueRef<MediaRecorderProvider>&&);
     WEBCORE_EXPORT ~PageConfiguration();
     PageConfiguration(PageConfiguration&&);
 
-    AlternativeTextClient* alternativeTextClient { nullptr };
+    PAL::SessionID sessionID;
+    std::unique_ptr<AlternativeTextClient> alternativeTextClient;
     ChromeClient* chromeClient { nullptr };
 #if ENABLE(CONTEXT_MENUS)
     ContextMenuClient* contextMenuClient { nullptr };
 #endif
     UniqueRef<EditorClient> editorClient;
     Ref<SocketProvider> socketProvider;
-    DragClient* dragClient { nullptr };
+    std::unique_ptr<DragClient> dragClient;
     InspectorClient* inspectorClient { nullptr };
 #if ENABLE(APPLE_PAY)
     PaymentCoordinatorClient* paymentCoordinatorClient { nullptr };
 #endif
 
@@ -92,12 +97,12 @@
     Optional<ApplicationManifest> applicationManifest;
 #endif
 
     UniqueRef<LibWebRTCProvider> libWebRTCProvider;
 
-    PlugInClient* plugInClient { nullptr };
-    ProgressTrackerClient* progressTrackerClient { nullptr };
+    std::unique_ptr<PlugInClient> plugInClient;
+    UniqueRef<ProgressTrackerClient> progressTrackerClient;
     Ref<BackForwardClient> backForwardClient;
     Ref<CookieJar> cookieJar;
     std::unique_ptr<ValidationMessageClient> validationMessageClient;
     FrameLoaderClient* loaderClientForMainFrame { nullptr };
     std::unique_ptr<DiagnosticLoggingClient> diagnosticLoggingClient;
@@ -114,8 +119,14 @@
     Ref<CacheStorageProvider> cacheStorageProvider;
     RefPtr<PluginInfoProvider> pluginInfoProvider;
     RefPtr<StorageNamespaceProvider> storageNamespaceProvider;
     RefPtr<UserContentProvider> userContentProvider;
     RefPtr<VisitedLinkStore> visitedLinkStore;
+
+#if ENABLE(DEVICE_ORIENTATION) && PLATFORM(IOS_FAMILY)
+    RefPtr<DeviceOrientationUpdateProvider> deviceOrientationUpdateProvider;
+#endif
+    Vector<String> corsDisablingPatterns;
+    UniqueRef<MediaRecorderProvider> mediaRecorderProvider;
 };
 
 }
