diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/geolocation/Geolocation.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/geolocation/Geolocation.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/geolocation/Geolocation.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/geolocation/Geolocation.h
@@ -50,11 +50,11 @@
 class ScriptExecutionContext;
 class SecurityOrigin;
 struct PositionOptions;
 
 class Geolocation final : public ScriptWrappable, public RefCounted<Geolocation>, public ActiveDOMObject {
-    WTF_MAKE_ISO_ALLOCATED(Geolocation);
+    WTF_MAKE_ISO_ALLOCATED_EXPORT(Geolocation, WEBCORE_EXPORT);
     friend class GeoNotifier;
 public:
     static Ref<Geolocation> create(Navigator&);
     WEBCORE_EXPORT ~Geolocation();
 
@@ -63,12 +63,13 @@
 
     void getCurrentPosition(Ref<PositionCallback>&&, RefPtr<PositionErrorCallback>&&, PositionOptions&&);
     int watchPosition(Ref<PositionCallback>&&, RefPtr<PositionErrorCallback>&&, PositionOptions&&);
     void clearWatch(int watchID);
 
-    WEBCORE_EXPORT void setIsAllowed(bool);
-    void resetIsAllowed() { m_allowGeolocation = Unknown; }
+    WEBCORE_EXPORT void setIsAllowed(bool, const String& authorizationToken);
+    const String& authorizationToken() const { return m_authorizationToken; }
+    WEBCORE_EXPORT void resetIsAllowed();
     bool isAllowed() const { return m_allowGeolocation == Yes; }
 
     void positionChanged();
     void setError(GeolocationError&);
     bool shouldBlockGeolocationRequests();
@@ -81,11 +82,10 @@
 
     GeolocationPosition* lastPosition();
 
     // ActiveDOMObject
     void stop() override;
-    bool canSuspendForDocumentSuspension() const override;
     void suspend(ReasonForSuspension) override;
     void resume() override;
     const char* activeDOMObjectName() const override;
 
     bool isDenied() const { return m_allowGeolocation == No; }
@@ -131,10 +131,11 @@
 
     void makeSuccessCallbacks(GeolocationPosition&);
     void handleError(GeolocationPositionError&);
 
     void requestPermission();
+    void revokeAuthorizationTokenIfNecessary();
 
     bool startUpdating(GeoNotifier*);
     void stopUpdating();
 
     void handlePendingPermissionNotifiers();
@@ -154,10 +155,11 @@
     Watchers m_watchers;
     GeoNotifierSet m_pendingForPermissionNotifiers;
     RefPtr<GeolocationPosition> m_lastPosition;
 
     enum { Unknown, InProgress, Yes, No } m_allowGeolocation { Unknown };
+    String m_authorizationToken;
     bool m_isSuspended { false };
     bool m_resetOnResume { false };
     bool m_hasChangedPosition { false };
     RefPtr<GeolocationPositionError> m_errorWaitingForResume;
     Timer m_resumeTimer;
