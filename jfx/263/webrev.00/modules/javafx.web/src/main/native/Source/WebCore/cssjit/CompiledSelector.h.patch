diff a/modules/javafx.web/src/main/native/Source/WebCore/cssjit/CompiledSelector.h b/modules/javafx.web/src/main/native/Source/WebCore/cssjit/CompiledSelector.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/cssjit/CompiledSelector.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/cssjit/CompiledSelector.h
@@ -26,43 +26,41 @@
 #pragma once
 
 #if ENABLE(CSS_SELECTOR_JIT)
 
 #include "CSSPtrTag.h"
+#include "CSSSelector.h"
 #include <JavaScriptCore/MacroAssemblerCodeRef.h>
 
-namespace WebCore {
-
-class SelectorCompilationStatus {
-public:
-    enum Status {
-        NotCompiled,
-        CannotCompile,
-        SimpleSelectorChecker,
-        SelectorCheckerWithCheckingContext
-    };
-
-    SelectorCompilationStatus()
-        : m_status(NotCompiled)
-    { }
-
-    SelectorCompilationStatus(Status status)
-        : m_status(status)
-    { }
+#define CSS_SELECTOR_JIT_PROFILING 0
 
-    operator Status() const { return m_status; }
+namespace WebCore {
 
-private:
-    Status m_status;
+enum class SelectorCompilationStatus : uint8_t {
+    NotCompiled,
+    CannotCompile,
+    SimpleSelectorChecker,
+    SelectorCheckerWithCheckingContext
 };
 
 struct CompiledSelector {
     WTF_MAKE_STRUCT_FAST_ALLOCATED;
-    SelectorCompilationStatus status;
+    SelectorCompilationStatus status { SelectorCompilationStatus::NotCompiled };
     JSC::MacroAssemblerCodeRef<CSSSelectorPtrTag> codeRef;
+
 #if defined(CSS_SELECTOR_JIT_PROFILING) && CSS_SELECTOR_JIT_PROFILING
     unsigned useCount { 0 };
+    const CSSSelector* selector { nullptr };
+    void wasUsed() { ++useCount; }
+
+    ~CompiledSelector()
+    {
+        if (codeRef.code().executableAddress())
+            dataLogF("CompiledSelector %d \"%s\"\n", useCount, selector->selectorText().utf8().data());
+    }
+#else
+    void wasUsed() { }
 #endif
 };
 
 }
 
