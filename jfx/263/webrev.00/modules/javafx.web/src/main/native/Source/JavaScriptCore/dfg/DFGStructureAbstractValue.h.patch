diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGStructureAbstractValue.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGStructureAbstractValue.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGStructureAbstractValue.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGStructureAbstractValue.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2011-2015 Apple Inc. All rights reserved.
+ * Copyright (C) 2011-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -88,14 +88,14 @@
     {
         m_set.deleteListIfNecessary();
         m_set.m_pointer = topValue;
     }
 
-#if ASSERT_DISABLED
-    void assertIsRegistered(Graph&) const { }
-#else
+#if ASSERT_ENABLED
     void assertIsRegistered(Graph&) const;
+#else
+    void assertIsRegistered(Graph&) const { }
 #endif
 
     void clobber();
     void observeInvalidationPoint() { setClobbered(false); }
 
@@ -249,14 +249,14 @@
     bool isSubClassOf(const ClassInfo*) const;
 
     void validateReferences(const TrackedReferences&) const;
 
 private:
-    static const uintptr_t clobberedFlag = RegisteredStructureSet::reservedFlag;
-    static const uintptr_t topValue = RegisteredStructureSet::reservedValue;
-    static const unsigned polymorphismLimit = 10;
-    static const unsigned clobberedSupremacyThreshold = 2;
+    static constexpr uintptr_t clobberedFlag = RegisteredStructureSet::reservedFlag;
+    static constexpr uintptr_t topValue = RegisteredStructureSet::reservedValue;
+    static constexpr unsigned polymorphismLimit = 10;
+    static constexpr unsigned clobberedSupremacyThreshold = 2;
 
     void filterSlow(SpeculatedType type);
     void filterClassInfoSlow(const ClassInfo*);
     bool mergeSlow(const StructureAbstractValue& other);
 
