diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBKeyRange.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBKeyRange.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBKeyRange.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBKeyRange.h
@@ -31,11 +31,12 @@
 #include "ScriptWrappable.h"
 #include <wtf/RefCounted.h>
 #include <wtf/RefPtr.h>
 
 namespace JSC {
-class ExecState;
+class CallFrame;
+class JSGlobalObject;
 class JSValue;
 }
 
 namespace WebCore {
 
@@ -53,18 +54,18 @@
     IDBKey* upper() const { return m_upper.get(); }
     bool lowerOpen() const { return m_isLowerOpen; }
     bool upperOpen() const { return m_isUpperOpen; }
 
     static ExceptionOr<Ref<IDBKeyRange>> only(RefPtr<IDBKey>&& value);
-    static ExceptionOr<Ref<IDBKeyRange>> only(JSC::ExecState&, JSC::JSValue key);
+    static ExceptionOr<Ref<IDBKeyRange>> only(JSC::JSGlobalObject&, JSC::JSValue key);
 
-    static ExceptionOr<Ref<IDBKeyRange>> lowerBound(JSC::ExecState&, JSC::JSValue bound, bool open);
-    static ExceptionOr<Ref<IDBKeyRange>> upperBound(JSC::ExecState&, JSC::JSValue bound, bool open);
+    static ExceptionOr<Ref<IDBKeyRange>> lowerBound(JSC::JSGlobalObject&, JSC::JSValue bound, bool open);
+    static ExceptionOr<Ref<IDBKeyRange>> upperBound(JSC::JSGlobalObject&, JSC::JSValue bound, bool open);
 
-    static ExceptionOr<Ref<IDBKeyRange>> bound(JSC::ExecState&, JSC::JSValue lower, JSC::JSValue upper, bool lowerOpen, bool upperOpen);
+    static ExceptionOr<Ref<IDBKeyRange>> bound(JSC::JSGlobalObject&, JSC::JSValue lower, JSC::JSValue upper, bool lowerOpen, bool upperOpen);
 
-    ExceptionOr<bool> includes(JSC::ExecState&, JSC::JSValue key);
+    ExceptionOr<bool> includes(JSC::JSGlobalObject&, JSC::JSValue key);
 
     WEBCORE_EXPORT bool isOnlyKey() const;
 
 private:
     IDBKeyRange(RefPtr<IDBKey>&& lower, RefPtr<IDBKey>&& upper, bool isLowerOpen, bool isUpperOpen);
