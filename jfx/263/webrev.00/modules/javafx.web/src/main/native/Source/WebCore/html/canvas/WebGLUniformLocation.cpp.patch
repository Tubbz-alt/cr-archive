diff a/modules/javafx.web/src/main/native/Source/WebCore/html/canvas/WebGLUniformLocation.cpp b/modules/javafx.web/src/main/native/Source/WebCore/html/canvas/WebGLUniformLocation.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/canvas/WebGLUniformLocation.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/canvas/WebGLUniformLocation.cpp
@@ -30,16 +30,16 @@
 
 #include "WebGLUniformLocation.h"
 
 namespace WebCore {
 
-Ref<WebGLUniformLocation> WebGLUniformLocation::create(WebGLProgram* program, GC3Dint location, GC3Denum type)
+Ref<WebGLUniformLocation> WebGLUniformLocation::create(WebGLProgram* program, GCGLint location, GCGLenum type)
 {
     return adoptRef(*new WebGLUniformLocation(program, location, type));
 }
 
-WebGLUniformLocation::WebGLUniformLocation(WebGLProgram* program, GC3Dint location, GC3Denum type)
+WebGLUniformLocation::WebGLUniformLocation(WebGLProgram* program, GCGLint location, GCGLenum type)
     : m_program(program)
     , m_location(location)
     , m_type(type)
 {
     ASSERT(m_program);
@@ -53,19 +53,19 @@
     if (m_program->getLinkCount() != m_linkCount)
         return 0;
     return m_program.get();
 }
 
-GC3Dint WebGLUniformLocation::location() const
+GCGLint WebGLUniformLocation::location() const
 {
     // If the program has been linked again, then this UniformLocation is no
     // longer valid.
     ASSERT(m_program->getLinkCount() == m_linkCount);
     return m_location;
 }
 
-GC3Denum WebGLUniformLocation::type() const
+GCGLenum WebGLUniformLocation::type() const
 {
     // If the program has been linked again, then this UniformLocation is no
     // longer valid.
     ASSERT(m_program->getLinkCount() == m_linkCount);
     return m_type;
