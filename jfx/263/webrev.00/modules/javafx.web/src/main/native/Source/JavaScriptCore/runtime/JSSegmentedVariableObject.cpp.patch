diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSSegmentedVariableObject.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSSegmentedVariableObject.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSSegmentedVariableObject.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSSegmentedVariableObject.cpp
@@ -93,18 +93,12 @@
         if (toValue && toValue.isCell())
             analyzer.analyzeVariableNameEdge(thisObject, toValue.asCell(), it->key.get());
     }
 }
 
-void JSSegmentedVariableObject::destroy(JSCell* cell)
-{
-    static_cast<JSSegmentedVariableObject*>(cell)->JSSegmentedVariableObject::~JSSegmentedVariableObject();
-}
-
 JSSegmentedVariableObject::JSSegmentedVariableObject(VM& vm, Structure* structure, JSScope* scope)
     : JSSymbolTableObject(vm, structure, scope)
-    , m_classInfo(structure->classInfo())
 {
 }
 
 JSSegmentedVariableObject::~JSSegmentedVariableObject()
 {
@@ -116,12 +110,9 @@
 
 void JSSegmentedVariableObject::finishCreation(VM& vm)
 {
     Base::finishCreation(vm);
     setSymbolTable(vm, SymbolTable::create(vm));
-    vm.heap.addFinalizer(this, [] (JSCell* cell) {
-        static_cast<JSSegmentedVariableObject*>(cell)->classInfo()->methodTable.destroy(cell);
-    });
 }
 
 } // namespace JSC
 
