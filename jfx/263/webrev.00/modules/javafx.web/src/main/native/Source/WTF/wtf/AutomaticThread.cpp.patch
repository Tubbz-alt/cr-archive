diff a/modules/javafx.web/src/main/native/Source/WTF/wtf/AutomaticThread.cpp b/modules/javafx.web/src/main/native/Source/WTF/wtf/AutomaticThread.cpp
--- a/modules/javafx.web/src/main/native/Source/WTF/wtf/AutomaticThread.cpp
+++ b/modules/javafx.web/src/main/native/Source/WTF/wtf/AutomaticThread.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2016-2017 Apple Inc. All rights reserved.
+ * Copyright (C) 2016-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -29,11 +29,11 @@
 #include <wtf/DataLog.h>
 #include <wtf/Threading.h>
 
 namespace WTF {
 
-static const bool verbose = false;
+static constexpr bool verbose = false;
 
 Ref<AutomaticThreadCondition> AutomaticThreadCondition::create()
 {
     return adoptRef(*new AutomaticThreadCondition);
 }
@@ -169,11 +169,11 @@
                 dataLog(RawPointer(this), ": Running automatic thread!\n");
 
             RefPtr<AutomaticThread> thread = preserveThisForThread;
             thread->threadDidStart();
 
-            if (!ASSERT_DISABLED) {
+            if (ASSERT_ENABLED) {
                 LockHolder locker(*m_lock);
                 ASSERT(m_condition->contains(locker, this));
             }
 
             auto stopImpl = [&] (const AbstractLocker& locker) {
