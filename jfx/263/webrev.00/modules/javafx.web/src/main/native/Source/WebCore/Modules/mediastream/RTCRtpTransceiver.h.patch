diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCRtpTransceiver.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCRtpTransceiver.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCRtpTransceiver.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/RTCRtpTransceiver.h
@@ -43,10 +43,12 @@
 #include <wtf/RefPtr.h>
 #include <wtf/text/WTFString.h>
 
 namespace WebCore {
 
+struct RTCRtpCodecCapability;
+
 class RTCRtpTransceiver final : public RefCounted<RTCRtpTransceiver>, public ScriptWrappable {
     WTF_MAKE_ISO_ALLOCATED(RTCRtpTransceiver);
 public:
     static Ref<RTCRtpTransceiver> create(Ref<RTCRtpSender>&& sender, Ref<RTCRtpReceiver>&& receiver, std::unique_ptr<RTCRtpTransceiverBackend>&& backend) { return adoptRef(*new RTCRtpTransceiver(WTFMove(sender), WTFMove(receiver), WTFMove(backend))); }
     virtual ~RTCRtpTransceiver() = default;
@@ -63,10 +65,11 @@
     RTCRtpSender& sender() { return m_sender.get(); }
     RTCRtpReceiver& receiver() { return m_receiver.get(); }
 
     bool stopped() const;
     void stop();
+    ExceptionOr<void> setCodecPreferences(const Vector<RTCRtpCodecCapability>&);
 
     // FIXME: Temporary solution to keep track of ICE states for this transceiver. Later, each
     // sender and receiver will have up to two DTLS transports, which in turn will have an ICE
     // transport each.
     RTCIceTransport& iceTransport() { return m_iceTransport.get(); }
