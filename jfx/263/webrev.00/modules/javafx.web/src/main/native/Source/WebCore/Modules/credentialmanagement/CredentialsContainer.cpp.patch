diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/credentialmanagement/CredentialsContainer.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/credentialmanagement/CredentialsContainer.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/credentialmanagement/CredentialsContainer.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/credentialmanagement/CredentialsContainer.cpp
@@ -87,11 +87,11 @@
     if (!m_document->hasFocus()) {
         promise.reject(Exception { NotAllowedError, "The document is not focused."_s });
         return;
     }
 
-    m_document->page()->authenticatorCoordinator().discoverFromExternalSource(m_document->securityOrigin(), options.publicKey.value(), doesHaveSameOriginAsItsAncestors(), WTFMove(options.signal), WTFMove(promise));
+    m_document->page()->authenticatorCoordinator().discoverFromExternalSource(*m_document, options.publicKey.value(), doesHaveSameOriginAsItsAncestors(), WTFMove(options.signal), WTFMove(promise));
 }
 
 void CredentialsContainer::store(const BasicCredential&, CredentialPromise&& promise)
 {
     promise.reject(Exception { NotSupportedError, "Not implemented."_s });
@@ -122,11 +122,11 @@
     if (!m_document->hasFocus()) {
         promise.reject(Exception { NotAllowedError, "The document is not focused."_s });
         return;
     }
 
-    m_document->page()->authenticatorCoordinator().create(m_document->securityOrigin(), options.publicKey.value(), doesHaveSameOriginAsItsAncestors(), WTFMove(options.signal), WTFMove(promise));
+    m_document->page()->authenticatorCoordinator().create(*m_document, options.publicKey.value(), doesHaveSameOriginAsItsAncestors(), WTFMove(options.signal), WTFMove(promise));
 }
 
 void CredentialsContainer::preventSilentAccess(DOMPromiseDeferred<void>&& promise) const
 {
     promise.reject(Exception { NotSupportedError, "Not implemented."_s });
