diff a/modules/javafx.web/src/main/native/Source/WebCore/page/ResizeObserver.cpp b/modules/javafx.web/src/main/native/Source/WebCore/page/ResizeObserver.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/page/ResizeObserver.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/page/ResizeObserver.cpp
@@ -27,10 +27,11 @@
 
 #if ENABLE(RESIZE_OBSERVER)
 #include "ResizeObserver.h"
 
 #include "Element.h"
+#include "InspectorInstrumentation.h"
 #include "ResizeObserverEntry.h"
 
 namespace WebCore {
 
 Ref<ResizeObserver> ResizeObserver::create(Document& document, Ref<ResizeObserverCallback>&& callback)
@@ -120,11 +121,18 @@
     for (const auto& observation : m_activeObservations) {
         ASSERT(observation->target());
         entries.append(ResizeObserverEntry::create(observation->target(), observation->computeContentRect()));
     }
     m_activeObservations.clear();
+
+    auto* context = m_callback->scriptExecutionContext();
+    if (!context)
+        return;
+
+    InspectorInstrumentation::willFireObserverCallback(*context, "ResizeObserver"_s);
     m_callback->handleEvent(entries, *this);
+    InspectorInstrumentation::didFireObserverCallback(*context);
 }
 
 bool ResizeObserver::removeTarget(Element& target)
 {
     auto* observerData = target.resizeObserverData();
@@ -169,15 +177,10 @@
 const char* ResizeObserver::activeDOMObjectName() const
 {
     return "ResizeObserver";
 }
 
-bool ResizeObserver::canSuspendForDocumentSuspension() const
-{
-    return true;
-}
-
 void ResizeObserver::stop()
 {
     disconnect();
     m_callback = nullptr;
 }
