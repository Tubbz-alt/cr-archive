diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/server/IDBConnectionToClientDelegate.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/server/IDBConnectionToClientDelegate.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/server/IDBConnectionToClientDelegate.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/server/IDBConnectionToClientDelegate.h
@@ -25,29 +25,28 @@
 
 #pragma once
 
 #if ENABLE(INDEXED_DATABASE)
 
+#include "IDBResourceIdentifier.h"
 #include <wtf/Forward.h>
-#include <wtf/WeakPtr.h>
 #include <wtf/text/WTFString.h>
 
 namespace WebCore {
 
 class IDBError;
-class IDBResourceIdentifier;
 class IDBResultData;
 
 namespace IDBServer {
 
 class UniqueIDBDatabaseConnection;
 
-class IDBConnectionToClientDelegate : public CanMakeWeakPtr<IDBConnectionToClientDelegate> {
+class IDBConnectionToClientDelegate {
 public:
     virtual ~IDBConnectionToClientDelegate() = default;
 
-    virtual uint64_t identifier() const = 0;
+    virtual IDBConnectionIdentifier identifier() const = 0;
 
     virtual void didDeleteDatabase(const IDBResultData&) = 0;
     virtual void didOpenDatabase(const IDBResultData&) = 0;
     virtual void didAbortTransaction(const IDBResourceIdentifier& transactionIdentifier, const IDBError&) = 0;
     virtual void didCommitTransaction(const IDBResourceIdentifier& transactionIdentifier, const IDBError&) = 0;
@@ -70,13 +69,10 @@
     virtual void didStartTransaction(const IDBResourceIdentifier& transactionIdentifier, const IDBError&) = 0;
     virtual void didCloseFromServer(UniqueIDBDatabaseConnection&, const IDBError&) = 0;
     virtual void notifyOpenDBRequestBlocked(const IDBResourceIdentifier& requestIdentifier, uint64_t oldVersion, uint64_t newVersion) = 0;
 
     virtual void didGetAllDatabaseNames(uint64_t callbackID, const Vector<String>& databaseNames) = 0;
-
-    virtual void ref() = 0;
-    virtual void deref() = 0;
 };
 
 } // namespace IDBServer
 } // namespace WebCore
 
