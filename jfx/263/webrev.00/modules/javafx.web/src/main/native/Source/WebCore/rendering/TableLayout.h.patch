diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/TableLayout.h b/modules/javafx.web/src/main/native/Source/WebCore/rendering/TableLayout.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/TableLayout.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/TableLayout.h
@@ -26,12 +26,14 @@
 
 namespace WebCore {
 
 class RenderTable;
 
+DECLARE_ALLOCATOR_WITH_HEAP_IDENTIFIER(TableLayout);
 class TableLayout {
-    WTF_MAKE_NONCOPYABLE(TableLayout); WTF_MAKE_FAST_ALLOCATED;
+    WTF_MAKE_NONCOPYABLE(TableLayout);
+    WTF_MAKE_FAST_ALLOCATED_WITH_HEAP_IDENTIFIER(TableLayout);
 public:
     explicit TableLayout(RenderTable* table)
         : m_table(table)
     {
     }
@@ -44,11 +46,11 @@
     virtual void layout() = 0;
 
 protected:
     // FIXME: Once we enable SATURATED_LAYOUT_ARITHMETHIC, this should just be LayoutUnit::nearlyMax().
     // Until then though, using nearlyMax causes overflow in some tests, so we just pick a large number.
-    const static int tableMaxWidth = 1000000;
+    static constexpr int tableMaxWidth = 1000000;
 
     RenderTable* m_table;
 };
 
 } // namespace WebCore
