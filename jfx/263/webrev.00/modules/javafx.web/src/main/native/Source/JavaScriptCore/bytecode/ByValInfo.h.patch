diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/ByValInfo.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/ByValInfo.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/ByValInfo.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/ByValInfo.h
@@ -223,11 +223,11 @@
 }
 
 struct ByValInfo {
     ByValInfo() { }
 
-    ByValInfo(unsigned bytecodeIndex, CodeLocationJump<JSInternalPtrTag> notIndexJump, CodeLocationJump<JSInternalPtrTag> badTypeJump, CodeLocationLabel<ExceptionHandlerPtrTag> exceptionHandler, JITArrayMode arrayMode, ArrayProfile* arrayProfile, CodeLocationLabel<JSInternalPtrTag> badTypeDoneTarget, CodeLocationLabel<JSInternalPtrTag> badTypeNextHotPathTarget, CodeLocationLabel<JSInternalPtrTag> slowPathTarget)
+    ByValInfo(BytecodeIndex bytecodeIndex, CodeLocationJump<JSInternalPtrTag> notIndexJump, CodeLocationJump<JSInternalPtrTag> badTypeJump, CodeLocationLabel<ExceptionHandlerPtrTag> exceptionHandler, JITArrayMode arrayMode, ArrayProfile* arrayProfile, CodeLocationLabel<JSInternalPtrTag> badTypeDoneTarget, CodeLocationLabel<JSInternalPtrTag> badTypeNextHotPathTarget, CodeLocationLabel<JSInternalPtrTag> slowPathTarget)
         : notIndexJump(notIndexJump)
         , badTypeJump(badTypeJump)
         , exceptionHandler(exceptionHandler)
         , badTypeDoneTarget(badTypeDoneTarget)
         , badTypeNextHotPathTarget(badTypeNextHotPathTarget)
@@ -247,22 +247,22 @@
     CodeLocationLabel<ExceptionHandlerPtrTag> exceptionHandler;
     CodeLocationLabel<JSInternalPtrTag> badTypeDoneTarget;
     CodeLocationLabel<JSInternalPtrTag> badTypeNextHotPathTarget;
     CodeLocationLabel<JSInternalPtrTag> slowPathTarget;
     ArrayProfile* arrayProfile;
-    unsigned bytecodeIndex;
+    BytecodeIndex bytecodeIndex;
     unsigned slowPathCount;
     RefPtr<JITStubRoutine> stubRoutine;
     Identifier cachedId;
     WriteBarrier<Symbol> cachedSymbol;
     StructureStubInfo* stubInfo;
     JITArrayMode arrayMode; // The array mode that was baked into the inline JIT code.
     bool tookSlowPath : 1;
     bool seen : 1;
 };
 
-inline unsigned getByValInfoBytecodeIndex(ByValInfo* info)
+inline BytecodeIndex getByValInfoBytecodeIndex(ByValInfo* info)
 {
     return info->bytecodeIndex;
 }
 
 #endif // ENABLE(JIT)
