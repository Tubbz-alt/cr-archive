diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/nicosia/NicosiaSceneIntegration.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/nicosia/NicosiaSceneIntegration.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/nicosia/NicosiaSceneIntegration.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/nicosia/NicosiaSceneIntegration.h
@@ -28,27 +28,29 @@
 
 #pragma once
 
 #include <memory>
 #include <wtf/Lock.h>
-#include <wtf/Ref.h>
+#include <wtf/RefPtr.h>
 #include <wtf/ThreadSafeRefCounted.h>
 
 namespace Nicosia {
 
+class Scene;
+
 class SceneIntegration : public ThreadSafeRefCounted<SceneIntegration> {
 public:
     class Client {
     public:
         virtual ~Client();
 
         virtual void requestUpdate() = 0;
     };
 
-    static Ref<SceneIntegration> create(Client& client)
+    static Ref<SceneIntegration> create(Scene& scene, Client& client)
     {
-        return adoptRef(*new SceneIntegration(client));
+        return adoptRef(*new SceneIntegration(scene, client));
     }
     ~SceneIntegration();
 
     void setClient(Client&);
     void invalidate();
@@ -67,14 +69,15 @@
     };
 
     std::unique_ptr<UpdateScope> createUpdateScope();
 
 private:
-    explicit SceneIntegration(Client&);
+    explicit SceneIntegration(Scene&, Client&);
 
     struct {
         Lock lock;
+        RefPtr<Scene> scene;
         Client* object { nullptr };
     } m_client;
 };
 
 } // namespace Nicosia
