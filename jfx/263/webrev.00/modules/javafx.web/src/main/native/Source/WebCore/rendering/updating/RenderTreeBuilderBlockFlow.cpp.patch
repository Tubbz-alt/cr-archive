diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/updating/RenderTreeBuilderBlockFlow.cpp b/modules/javafx.web/src/main/native/Source/WebCore/rendering/updating/RenderTreeBuilderBlockFlow.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/updating/RenderTreeBuilderBlockFlow.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/updating/RenderTreeBuilderBlockFlow.cpp
@@ -37,12 +37,17 @@
 {
 }
 
 void RenderTreeBuilder::BlockFlow::attach(RenderBlockFlow& parent, RenderPtr<RenderObject> child, RenderObject* beforeChild)
 {
-    if (parent.multiColumnFlow() && (!parent.isFieldset() || !child->isLegend()))
+    if (parent.multiColumnFlow() && (!parent.isFieldset() || !child->isLegend())) {
+        if (parent.isFieldset() && beforeChild && beforeChild->isLegend())
+            return m_builder.blockBuilder().attach(*parent.multiColumnFlow(), WTFMove(child), nullptr);
+
         return m_builder.attach(*parent.multiColumnFlow(), WTFMove(child), beforeChild);
+    }
+
     auto* beforeChildOrPlaceholder = beforeChild;
     if (auto* containingFragmentedFlow = parent.enclosingFragmentedFlow())
         beforeChildOrPlaceholder = m_builder.multiColumnBuilder().resolveMovedChild(*containingFragmentedFlow, beforeChild);
     m_builder.blockBuilder().attach(parent, WTFMove(child), beforeChildOrPlaceholder);
 }
