diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/gpu/Texture.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/gpu/Texture.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/gpu/Texture.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/gpu/Texture.h
@@ -35,27 +35,27 @@
 #include <wtf/RefCounted.h>
 #include <wtf/RefPtr.h>
 #include <wtf/Vector.h>
 
 namespace WebCore {
-class GraphicsContext3D;
+class GraphicsContextGLOpenGL;
 
 class IntRect;
 
 class Texture : public RefCounted<Texture> {
 public:
     ~Texture();
     enum Format { RGBA8, BGRA8 };
-    static RefPtr<Texture> create(GraphicsContext3D*, Format, int width, int height);
+    static RefPtr<Texture> create(GraphicsContextGLOpenGL*, Format, int width, int height);
     void bindTile(int tile);
     void load(void* pixels);
     void updateSubRect(void* pixels, const IntRect&);
     Format format() const { return m_format; }
     const TilingData& tiles() const { return m_tiles; }
 private:
-    Texture(GraphicsContext3D*, std::unique_ptr<Vector<unsigned>> tileTextureIds, Format, int width, int height, int maxTextureSize);
-    GraphicsContext3D* m_context;
+    Texture(GraphicsContextGLOpenGL*, std::unique_ptr<Vector<unsigned>> tileTextureIds, Format, int width, int height, int maxTextureSize);
+    GraphicsContextGLOpenGL* m_context;
     Format m_format;
     TilingData m_tiles;
     std::unique_ptr<Vector<unsigned>> m_tileTextureIds;
 };
 
