diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBGetResult.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBGetResult.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBGetResult.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/IDBGetResult.h
@@ -25,10 +25,11 @@
 
 #pragma once
 
 #if ENABLE(INDEXED_DATABASE)
 
+#include "IDBCursorRecord.h"
 #include "IDBKey.h"
 #include "IDBKeyData.h"
 #include "IDBKeyPath.h"
 #include "IDBValue.h"
 #include "SharedBuffer.h"
@@ -74,10 +75,19 @@
         , m_primaryKeyData(primaryKeyData)
         , m_keyPath(keyPath)
     {
     }
 
+    IDBGetResult(const IDBKeyData& keyData, const IDBKeyData& primaryKeyData, IDBValue&& value, const Optional<IDBKeyPath>& keyPath, Vector<IDBCursorRecord>&& prefetechedRecords)
+        : m_value(WTFMove(value))
+        , m_keyData(keyData)
+        , m_primaryKeyData(primaryKeyData)
+        , m_keyPath(keyPath)
+        , m_prefetchedRecords(WTFMove(prefetechedRecords))
+    {
+    }
+
     enum IsolatedCopyTag { IsolatedCopy };
     IDBGetResult(const IDBGetResult&, IsolatedCopyTag);
 
     IDBGetResult isolatedCopy() const;
 
@@ -85,10 +95,11 @@
 
     const IDBValue& value() const { return m_value; }
     const IDBKeyData& keyData() const { return m_keyData; }
     const IDBKeyData& primaryKeyData() const { return m_primaryKeyData; }
     const Optional<IDBKeyPath>& keyPath() const { return m_keyPath; }
+    const Vector<IDBCursorRecord>& prefetchedRecords() const { return m_prefetchedRecords; }
     bool isDefined() const { return m_isDefined; }
 
     template<class Encoder> void encode(Encoder&) const;
     template<class Decoder> static bool decode(Decoder&, IDBGetResult&);
 
@@ -99,17 +110,18 @@
 
     IDBValue m_value;
     IDBKeyData m_keyData;
     IDBKeyData m_primaryKeyData;
     Optional<IDBKeyPath> m_keyPath;
+    Vector<IDBCursorRecord> m_prefetchedRecords;
     bool m_isDefined { true };
 };
 
 template<class Encoder>
 void IDBGetResult::encode(Encoder& encoder) const
 {
-    encoder << m_keyData << m_primaryKeyData << m_keyPath << m_isDefined << m_value;
+    encoder << m_keyData << m_primaryKeyData << m_keyPath << m_isDefined << m_value << m_prefetchedRecords;
 }
 
 template<class Decoder>
 bool IDBGetResult::decode(Decoder& decoder, IDBGetResult& result)
 {
@@ -135,10 +147,16 @@
     decoder >> value;
     if (!value)
         return false;
     result.m_value = WTFMove(*value);
 
+    Optional<Vector<IDBCursorRecord>> prefetchedRecords;
+    decoder >> prefetchedRecords;
+    if (!prefetchedRecords)
+        return false;
+    result.m_prefetchedRecords = WTFMove(*prefetchedRecords);
+
     return true;
 }
 
 } // namespace WebCore
 
