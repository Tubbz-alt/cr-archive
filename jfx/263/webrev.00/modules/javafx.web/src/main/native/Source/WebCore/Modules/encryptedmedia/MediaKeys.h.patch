diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/encryptedmedia/MediaKeys.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/encryptedmedia/MediaKeys.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/encryptedmedia/MediaKeys.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/encryptedmedia/MediaKeys.h
@@ -29,12 +29,10 @@
 #pragma once
 
 #if ENABLE(ENCRYPTED_MEDIA)
 
 #include "ExceptionOr.h"
-#include "GenericTaskQueue.h"
-#include "JSDOMPromiseDeferred.h"
 #include "MediaKeySessionType.h"
 #include <wtf/Ref.h>
 #include <wtf/RefCounted.h>
 #include <wtf/WeakPtr.h>
 
@@ -42,11 +40,13 @@
 
 class CDM;
 class CDMClient;
 class CDMInstance;
 class BufferSource;
+class DeferredPromise;
 class MediaKeySession;
+class ScriptExecutionContext;
 
 class MediaKeys : public RefCounted<MediaKeys>, public CanMakeWeakPtr<MediaKeys> {
 public:
     using KeySessionType = MediaKeySessionType;
 
@@ -56,11 +56,11 @@
     }
 
     ~MediaKeys();
 
     ExceptionOr<Ref<MediaKeySession>> createSession(ScriptExecutionContext&, MediaKeySessionType);
-    void setServerCertificate(const BufferSource&, Ref<DeferredPromise>&&);
+    void setServerCertificate(ScriptExecutionContext&, const BufferSource&, Ref<DeferredPromise>&&);
 
     void attachCDMClient(CDMClient&);
     void detachCDMClient(CDMClient&);
     void attemptToResumePlaybackOnClients();
 
@@ -77,11 +77,10 @@
     Ref<CDM> m_implementation;
     Ref<CDMInstance> m_instance;
 
     Vector<Ref<MediaKeySession>> m_sessions;
     Vector<CDMClient*> m_cdmClients;
-    GenericTaskQueue<Timer> m_taskQueue;
 };
 
 } // namespace WebCore
 
 #endif // ENABLE(ENCRYPTED_MEDIA)
