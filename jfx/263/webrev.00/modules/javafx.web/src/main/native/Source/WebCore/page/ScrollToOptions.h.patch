diff a/modules/javafx.web/src/main/native/Source/WebCore/page/ScrollToOptions.h b/modules/javafx.web/src/main/native/Source/WebCore/page/ScrollToOptions.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/page/ScrollToOptions.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/page/ScrollToOptions.h
@@ -26,18 +26,25 @@
  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 
 #pragma once
 
+#include "ScrollOptions.h"
 #include <cmath>
 #include <wtf/Optional.h>
 
 namespace WebCore {
 
-struct ScrollToOptions {
+struct ScrollToOptions : ScrollOptions {
     Optional<double> left;
     Optional<double> top;
+
+    ScrollToOptions() = default;
+    ScrollToOptions(double x, double y)
+        : left(x)
+        , top(y)
+    { }
 };
 
 inline double normalizeNonFiniteValueOrFallBackTo(Optional<double> value, double fallbackValue)
 {
     // Normalize non-finite values (https://drafts.csswg.org/cssom-view/#normalize-non-finite-values).
@@ -45,11 +52,11 @@
 }
 
 // FIXME(https://webkit.org/b/88339): Consider using FloatPoint or DoublePoint for fallback and return values.
 inline ScrollToOptions normalizeNonFiniteCoordinatesOrFallBackTo(const ScrollToOptions& value, double x, double y)
 {
-    ScrollToOptions options;
+    ScrollToOptions options = value;
     options.left = normalizeNonFiniteValueOrFallBackTo(value.left, x);
     options.top = normalizeNonFiniteValueOrFallBackTo(value.top, y);
     return options;
 }
 
