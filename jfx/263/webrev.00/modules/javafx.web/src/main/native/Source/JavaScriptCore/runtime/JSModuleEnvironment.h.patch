diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSModuleEnvironment.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSModuleEnvironment.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSModuleEnvironment.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSModuleEnvironment.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2015-2016 Apple Inc. All rights reserved.
+ * Copyright (C) 2015-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  *
@@ -38,11 +38,11 @@
 class JSModuleEnvironment final : public JSLexicalEnvironment {
     friend class JIT;
     friend class LLIntOffsetsExtractor;
 public:
     using Base = JSLexicalEnvironment;
-    static const unsigned StructureFlags = Base::StructureFlags | OverridesGetOwnPropertySlot | OverridesGetPropertyNames;
+    static constexpr unsigned StructureFlags = Base::StructureFlags | OverridesGetOwnPropertySlot | OverridesGetPropertyNames;
 
     static JSModuleEnvironment* create(VM&, Structure*, JSScope*, SymbolTable*, JSValue initialValue, AbstractModuleRecord*);
 
     static JSModuleEnvironment* create(VM& vm, JSGlobalObject* globalObject, JSScope* currentScope, SymbolTable* symbolTable, JSValue initialValue, AbstractModuleRecord* moduleRecord)
     {
@@ -72,14 +72,14 @@
     AbstractModuleRecord* moduleRecord()
     {
         return moduleRecordSlot().get();
     }
 
-    static bool getOwnPropertySlot(JSObject*, ExecState*, PropertyName, PropertySlot&);
-    static void getOwnNonIndexPropertyNames(JSObject*, ExecState*, PropertyNameArray&, EnumerationMode);
-    static bool put(JSCell*, ExecState*, PropertyName, JSValue, PutPropertySlot&);
-    static bool deleteProperty(JSCell*, ExecState*, PropertyName);
+    static bool getOwnPropertySlot(JSObject*, JSGlobalObject*, PropertyName, PropertySlot&);
+    static void getOwnNonIndexPropertyNames(JSObject*, JSGlobalObject*, PropertyNameArray&, EnumerationMode);
+    static bool put(JSCell*, JSGlobalObject*, PropertyName, JSValue, PutPropertySlot&);
+    static bool deleteProperty(JSCell*, JSGlobalObject*, PropertyName);
 
 private:
     JSModuleEnvironment(VM&, Structure*, JSScope*, SymbolTable*);
 
     void finishCreation(VM&, JSValue initialValue, AbstractModuleRecord*);
