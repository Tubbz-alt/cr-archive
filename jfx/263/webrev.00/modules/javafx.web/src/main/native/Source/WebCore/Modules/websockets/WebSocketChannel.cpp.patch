diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/websockets/WebSocketChannel.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/websockets/WebSocketChannel.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/websockets/WebSocketChannel.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/websockets/WebSocketChannel.cpp
@@ -202,11 +202,11 @@
         m_closingTimer.startOneShot(TCPMaximumSegmentLifetime * 2);
 }
 
 void WebSocketChannel::fail(const String& reason)
 {
-    LOG(Network, "WebSocketChannel %p fail() reason='%s'", this, reason.utf8().data());
+    RELEASE_LOG(Network, "WebSocketChannel %p fail() reason='%s'", this, reason.utf8().data());
     ASSERT(!m_suspended);
     if (m_document) {
         InspectorInstrumentation::didReceiveWebSocketFrameError(m_document.get(), m_identifier, reason);
 
         String consoleMessage;
@@ -362,10 +362,11 @@
             message = makeString("WebSocket network error: error code ", error.errorCode());
         else
             message = "WebSocket network error: " + error.localizedDescription();
         InspectorInstrumentation::didReceiveWebSocketFrameError(m_document.get(), m_identifier, message);
         m_document->addConsoleMessage(MessageSource::Network, MessageLevel::Error, message);
+        LOG_ERROR("%s", message.utf8().data());
     }
     m_shouldDiscardReceivedData = true;
     if (m_client)
         m_client->didReceiveMessageError();
     handle.disconnect();
