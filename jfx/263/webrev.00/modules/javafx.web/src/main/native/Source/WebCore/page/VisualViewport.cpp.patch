diff a/modules/javafx.web/src/main/native/Source/WebCore/page/VisualViewport.cpp b/modules/javafx.web/src/main/native/Source/WebCore/page/VisualViewport.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/page/VisualViewport.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/page/VisualViewport.cpp
@@ -27,11 +27,10 @@
 #include "VisualViewport.h"
 
 #include "ContextDestructionObserver.h"
 #include "DOMWindow.h"
 #include "Document.h"
-#include "DocumentEventQueue.h"
 #include "Event.h"
 #include "EventNames.h"
 #include "Frame.h"
 #include "FrameView.h"
 #include "Page.h"
@@ -148,11 +147,12 @@
     m_pageTop = 0;
     double width = 0;
     double height = 0;
     double scale = 1;
 
-    if (auto* frame = this->frame()) {
+    auto frame = makeRefPtr(this->frame());
+    if (frame) {
         if (auto* view = frame->view()) {
             auto visualViewportRect = view->visualViewportRect();
             auto layoutViewportRect = view->layoutViewportRect();
             auto pageZoomFactor = frame->pageZoomFactor();
             ASSERT(pageZoomFactor);
@@ -165,37 +165,22 @@
         }
         if (auto* page = frame->page())
             scale = page->pageScaleFactor();
     }
 
+    RefPtr<Document> document = frame ? frame->document() : nullptr;
     if (m_offsetLeft != offsetLeft || m_offsetTop != offsetTop) {
-        enqueueScrollEvent();
+        if (document)
+            document->setNeedsVisualViewportScrollEvent();
         m_offsetLeft = offsetLeft;
         m_offsetTop = offsetTop;
     }
     if (m_width != width || m_height != height || m_scale != scale) {
-        enqueueResizeEvent();
+        if (document)
+            document->setNeedsVisualViewportResize();
         m_width = width;
         m_height = height;
         m_scale = scale;
     }
 }
 
-void VisualViewport::enqueueResizeEvent()
-{
-    auto* frame = this->frame();
-    if (!frame)
-        return;
-
-    frame->document()->eventQueue().enqueueResizeEvent(*this, Event::CanBubble::No, Event::IsCancelable::No);
-}
-
-void VisualViewport::enqueueScrollEvent()
-{
-    auto* frame = this->frame();
-    if (!frame)
-        return;
-
-    frame->document()->eventQueue().enqueueScrollEvent(*this, Event::CanBubble::No, Event::IsCancelable::No);
-}
-
 } // namespace WebCore
