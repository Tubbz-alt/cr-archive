diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/mediastream/RealtimeMediaSourceCenter.cpp b/modules/javafx.web/src/main/native/Source/WebCore/platform/mediastream/RealtimeMediaSourceCenter.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/mediastream/RealtimeMediaSourceCenter.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/mediastream/RealtimeMediaSourceCenter.cpp
@@ -50,10 +50,11 @@
     return center;
 }
 
 RealtimeMediaSourceCenter::RealtimeMediaSourceCenter()
 {
+    m_supportedConstraints.setSupportsEchoCancellation(true);
     m_supportedConstraints.setSupportsWidth(true);
     m_supportedConstraints.setSupportsHeight(true);
     m_supportedConstraints.setSupportsAspectRatio(true);
     m_supportedConstraints.setSupportsFrameRate(true);
     m_supportedConstraints.setSupportsFacingMode(true);
@@ -76,11 +77,11 @@
         else {
 #if !LOG_DISABLED
             if (!audioSource.errorMessage.isEmpty())
                 LOG(Media, "RealtimeMediaSourceCenter::createMediaStream(%p), audio constraints failed to apply: %s", this, audioSource.errorMessage.utf8().data());
 #endif
-            completionHandler(nullptr);
+            completionHandler(makeUnexpected(makeString("Failed to create MediaStream audio source: ", audioSource.errorMessage)));
             return;
         }
     }
 
     if (videoDevice) {
@@ -95,11 +96,11 @@
         else {
 #if !LOG_DISABLED
             if (!videoSource.errorMessage.isEmpty())
                 LOG(Media, "RealtimeMediaSourceCenter::createMediaStream(%p), video constraints failed to apply: %s", this, videoSource.errorMessage.utf8().data());
 #endif
-            completionHandler(nullptr);
+            completionHandler(makeUnexpected(makeString("Failed to create MediaStream video source: ", videoSource.errorMessage)));
             return;
         }
     }
 
     completionHandler(MediaStreamPrivate::create(WTFMove(logger), audioSources, videoSources));
