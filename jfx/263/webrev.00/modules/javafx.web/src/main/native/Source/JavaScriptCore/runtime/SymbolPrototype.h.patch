diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/SymbolPrototype.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/SymbolPrototype.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/SymbolPrototype.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/SymbolPrototype.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2012 Apple Inc. All rights reserved.
+ * Copyright (C) 2012-2019 Apple Inc. All rights reserved.
  * Copyright (C) 2015 Yusuke Suzuki <utatane.tea@gmail.com>.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
@@ -33,11 +33,11 @@
 
 // In the ES6 spec, Symbol.prototype object is an ordinary JS object, not one of the symbol wrapper object instance.
 class SymbolPrototype final : public JSNonFinalObject {
 public:
     typedef JSNonFinalObject Base;
-    static const unsigned StructureFlags = Base::StructureFlags | HasStaticPropertyTable;
+    static constexpr unsigned StructureFlags = Base::StructureFlags | HasStaticPropertyTable;
 
     static SymbolPrototype* create(VM& vm, JSGlobalObject* globalObject, Structure* structure)
     {
         SymbolPrototype* prototype = new (NotNull, allocateCell<SymbolPrototype>(vm.heap)) SymbolPrototype(vm, structure);
         prototype->finishCreation(vm, globalObject);
