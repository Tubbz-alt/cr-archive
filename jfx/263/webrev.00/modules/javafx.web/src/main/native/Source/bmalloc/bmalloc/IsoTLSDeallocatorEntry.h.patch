diff a/modules/javafx.web/src/main/native/Source/bmalloc/bmalloc/IsoTLSDeallocatorEntry.h b/modules/javafx.web/src/main/native/Source/bmalloc/bmalloc/IsoTLSDeallocatorEntry.h
--- a/modules/javafx.web/src/main/native/Source/bmalloc/bmalloc/IsoTLSDeallocatorEntry.h
+++ b/modules/javafx.web/src/main/native/Source/bmalloc/bmalloc/IsoTLSDeallocatorEntry.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2017 Apple Inc. All rights reserved.
+ * Copyright (C) 2017-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -31,20 +31,23 @@
 #include <mutex>
 
 namespace bmalloc {
 
 template<typename Config>
-class IsoTLSDeallocatorEntry : public DefaultIsoTLSEntry<IsoDeallocator<Config>> {
+class IsoTLSDeallocatorEntry final : public DefaultIsoTLSEntry<IsoDeallocator<Config>> {
 public:
-    IsoTLSDeallocatorEntry(const std::lock_guard<Mutex>&);
+    template<typename T> friend class IsoTLSEntryHolder;
     ~IsoTLSDeallocatorEntry();
 
     // This is used as the heap lock, since heaps in the same size class share the same deallocator
     // logs.
     Mutex lock;
 
 private:
+    IsoTLSDeallocatorEntry(const LockHolder&);
+
     void construct(void* entry) override;
+    void scavenge(void* entry) override;
 };
 
 } // namespace bmalloc
 
