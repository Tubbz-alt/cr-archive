diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/assembler/LinkBuffer.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/assembler/LinkBuffer.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/assembler/LinkBuffer.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/assembler/LinkBuffer.h
@@ -41,10 +41,14 @@
 #include <wtf/FastMalloc.h>
 #include <wtf/Noncopyable.h>
 
 namespace JSC {
 
+namespace Wasm {
+enum class CompilationMode : uint8_t;
+}
+
 class CodeBlock;
 
 // LinkBuffer:
 //
 // This class assists in linking code generated by the macro assembler, once code generation
@@ -392,8 +396,18 @@
     FINALIZE_CODE_IF((JSC::Options::asyncDisassembly() || JSC::Options::dumpDisassembly() || Options::dumpDFGDisassembly()), linkBufferReference, resultPtrTag, __VA_ARGS__)
 
 #define FINALIZE_REGEXP_CODE(linkBufferReference, resultPtrTag, dataLogFArgumentsForHeading)  \
     FINALIZE_CODE_IF(JSC::Options::asyncDisassembly() || JSC::Options::dumpDisassembly() || Options::dumpRegExpDisassembly(), linkBufferReference, resultPtrTag, dataLogFArgumentsForHeading)
 
+bool shouldDumpDisassemblyFor(Wasm::CompilationMode);
+
+#define FINALIZE_WASM_CODE(linkBufferReference, resultPtrTag, ...)  \
+    FINALIZE_CODE_IF((JSC::Options::asyncDisassembly() || JSC::Options::dumpDisassembly() || Options::dumpWasmDisassembly()), linkBufferReference, resultPtrTag, __VA_ARGS__)
+
+#define FINALIZE_WASM_CODE_FOR_MODE(mode, linkBufferReference, resultPtrTag, ...)  \
+    FINALIZE_CODE_IF(shouldDumpDisassemblyFor(mode), linkBufferReference, resultPtrTag, __VA_ARGS__)
+
+
+
 } // namespace JSC
 
 #endif // ENABLE(ASSEMBLER)
