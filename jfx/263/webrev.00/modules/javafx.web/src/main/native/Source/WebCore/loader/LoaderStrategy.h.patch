diff a/modules/javafx.web/src/main/native/Source/WebCore/loader/LoaderStrategy.h b/modules/javafx.web/src/main/native/Source/WebCore/loader/LoaderStrategy.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/loader/LoaderStrategy.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/loader/LoaderStrategy.h
@@ -28,11 +28,10 @@
 #include "FetchOptions.h"
 #include "PageIdentifier.h"
 #include "ResourceLoadPriority.h"
 #include "ResourceLoaderOptions.h"
 #include "StoredCredentialsPolicy.h"
-#include <pal/SessionID.h>
 #include <wtf/Forward.h>
 
 namespace WebCore {
 
 class CachedResource;
@@ -42,10 +41,11 @@
 class HTTPHeaderMap;
 class NetscapePlugInStreamLoader;
 class NetscapePlugInStreamLoaderClient;
 struct NetworkTransactionInformation;
 class NetworkLoadMetrics;
+class Page;
 class ResourceError;
 class ResourceLoader;
 class ResourceRequest;
 class ResourceResponse;
 class SecurityOrigin;
@@ -56,11 +56,11 @@
 
 class WEBCORE_EXPORT LoaderStrategy {
 public:
     virtual void loadResource(Frame&, CachedResource&, ResourceRequest&&, const ResourceLoaderOptions&, CompletionHandler<void(RefPtr<SubresourceLoader>&&)>&&) = 0;
     virtual void loadResourceSynchronously(FrameLoader&, unsigned long identifier, const ResourceRequest&, ClientCredentialPolicy, const FetchOptions&, const HTTPHeaderMap&, ResourceError&, ResourceResponse&, Vector<char>& data) = 0;
-    virtual void pageLoadCompleted(PageIdentifier) = 0;
+    virtual void pageLoadCompleted(Page&) = 0;
 
     virtual void remove(ResourceLoader*) = 0;
     virtual void setDefersLoading(ResourceLoader&, bool) = 0;
     virtual void crossOriginRedirectReceived(ResourceLoader*, const URL& redirectURL) = 0;
 
