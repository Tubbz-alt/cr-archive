diff a/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLElement.idl b/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLElement.idl
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLElement.idl
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/HTMLElement.idl
@@ -27,18 +27,14 @@
     // Metadata attributes.
     [CEReactions, Reflect] attribute DOMString title;
     [CEReactions, Reflect] attribute DOMString lang;
     [CEReactions] attribute boolean translate;
     [CEReactions] attribute DOMString dir;
-    readonly attribute DOMStringMap dataset; // FIXME: Should be [SameObject].
 
     // User interaction.
     [CEReactions, Reflect] attribute boolean hidden;
     void click();
-    [CEReactions, ImplementedAs=tabIndexForBindings] attribute long tabIndex;
-    void focus();
-    void blur();
     [CEReactions, Reflect] attribute DOMString accessKey;
     // readonly attribute DOMString accessKeyLabel; // FIXME: Not supported.
     [CEReactions] attribute boolean draggable;
     // [CEReactions] attribute HTMLMenuElement? contextMenu; // FIXME: Not supported.
     [CEReactions] attribute boolean spellcheck;
@@ -60,16 +56,18 @@
 
     // Non Standard but may get added to the specification (https://github.com/whatwg/html/issues/668).
     [CEReactions] attribute [TreatNullAs=EmptyString] DOMString outerText;
 
     // iOS autocorrect / autocapitalization extensions.
-    [Conditional=IOS_AUTOCORRECT_AND_AUTOCAPITALIZE, CEReactions] attribute boolean autocorrect;
-    [Conditional=IOS_AUTOCORRECT_AND_AUTOCAPITALIZE, CEReactions] attribute [TreatNullAs=EmptyString] DOMString autocapitalize;
+    [Conditional=AUTOCORRECT, CEReactions] attribute boolean autocorrect;
+    [Conditional=AUTOCAPITALIZE, CEReactions] attribute [TreatNullAs=EmptyString] DOMString autocapitalize;
 
     // FIXME: We are the only browser to support this now that Blink dropped it (http://crbug.com/688943).
     [CEReactions, Reflect] attribute DOMString webkitdropzone;
 
     attribute DOMString inputMode;
+    [EnabledBySetting=EnterKeyHint] attribute DOMString enterKeyHint;
 };
 
 HTMLElement implements ElementCSSInlineStyle;
 HTMLElement implements GlobalEventHandlers;
+HTMLElement implements HTMLOrForeignElement;
