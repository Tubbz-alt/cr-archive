diff a/modules/javafx.web/src/main/native/Source/WebCore/html/parser/HTMLTreeBuilder.cpp b/modules/javafx.web/src/main/native/Source/WebCore/html/parser/HTMLTreeBuilder.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/parser/HTMLTreeBuilder.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/parser/HTMLTreeBuilder.cpp
@@ -267,11 +267,11 @@
     : m_parser(parser)
     , m_options(options)
     , m_tree(document, parserContentPolicy, options.maximumDOMTreeDepth)
     , m_scriptToProcessStartPosition(uninitializedPositionValue1())
 {
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     m_destructionProhibited = false;
 #endif
 }
 
 HTMLTreeBuilder::HTMLTreeBuilder(HTMLDocumentParser& parser, DocumentFragment& fragment, Element& contextElement, ParserContentPolicy parserContentPolicy, const HTMLParserOptions& options)
@@ -292,11 +292,11 @@
 
     resetInsertionModeAppropriately();
 
     m_tree.setForm(is<HTMLFormElement>(contextElement) ? &downcast<HTMLFormElement>(contextElement) : HTMLFormElement::findClosestFormAncestor(contextElement));
 
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     m_destructionProhibited = false;
 #endif
 }
 
 HTMLTreeBuilder::FragmentParsingContext::FragmentParsingContext()
@@ -336,11 +336,11 @@
     return WTFMove(m_scriptToProcess);
 }
 
 void HTMLTreeBuilder::constructTree(AtomicHTMLToken&& token)
 {
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     ASSERT(!m_destroyed);
     ASSERT(!m_destructionProhibited);
     m_destructionProhibited = true;
 #endif
 
@@ -355,11 +355,11 @@
         && !HTMLElementStack::isMathMLTextIntegrationPoint(m_tree.currentStackItem());
 
     m_parser.tokenizer().setForceNullCharacterReplacement(m_insertionMode == InsertionMode::Text || inForeignContent);
     m_parser.tokenizer().setShouldAllowCDATA(inForeignContent);
 
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     m_destructionProhibited = false;
 #endif
 
     m_tree.executeQueuedTasks();
     // The tree builder might have been destroyed as an indirect result of executing the queued tasks.
@@ -789,11 +789,11 @@
     }
     if (token.name() == noembedTag) {
         processGenericRawTextStartTag(WTFMove(token));
         return;
     }
-    if (token.name() == noscriptTag && m_options.scriptEnabled) {
+    if (token.name() == noscriptTag && m_options.scriptingFlag) {
         processGenericRawTextStartTag(WTFMove(token));
         return;
     }
     if (token.name() == selectTag) {
         m_tree.reconstructTheActiveFormattingElements();
@@ -2606,11 +2606,11 @@
     if (token.name() == titleTag) {
         processGenericRCDATAStartTag(WTFMove(token));
         return true;
     }
     if (token.name() == noscriptTag) {
-        if (m_options.scriptEnabled) {
+        if (m_options.scriptingFlag) {
             processGenericRawTextStartTag(WTFMove(token));
             return true;
         }
         m_tree.insertHTMLElement(WTFMove(token));
         m_insertionMode = InsertionMode::InHeadNoscript;
