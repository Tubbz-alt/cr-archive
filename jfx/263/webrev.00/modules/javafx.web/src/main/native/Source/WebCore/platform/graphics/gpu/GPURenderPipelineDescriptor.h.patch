diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/gpu/GPURenderPipelineDescriptor.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/gpu/GPURenderPipelineDescriptor.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/gpu/GPURenderPipelineDescriptor.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/gpu/GPURenderPipelineDescriptor.h
@@ -28,11 +28,11 @@
 #if ENABLE(WEBGPU)
 
 #include "GPUColorStateDescriptor.h"
 #include "GPUDepthStencilStateDescriptor.h"
 #include "GPUPipelineDescriptorBase.h"
-#include "GPUPipelineStageDescriptor.h"
+#include "GPUProgrammableStageDescriptor.h"
 #include "GPUVertexInputDescriptor.h"
 #include <wtf/Optional.h>
 #include <wtf/Vector.h>
 
 namespace WebCore {
@@ -51,20 +51,20 @@
     Optional<GPUDepthStencilStateDescriptor> depthStencilState;
     GPUVertexInputDescriptor vertexInput;
 };
 
 struct GPURenderPipelineDescriptor : GPUPipelineDescriptorBase, GPURenderPipelineDescriptorBase {
-    GPURenderPipelineDescriptor(RefPtr<GPUPipelineLayout>&& layout, GPUPipelineStageDescriptor&& vertex, Optional<GPUPipelineStageDescriptor>&& fragment, const GPURenderPipelineDescriptorBase& base)
+    GPURenderPipelineDescriptor(RefPtr<GPUPipelineLayout>&& layout, GPUProgrammableStageDescriptor&& vertex, Optional<GPUProgrammableStageDescriptor>&& fragment, const GPURenderPipelineDescriptorBase& base)
         : GPUPipelineDescriptorBase { WTFMove(layout) }
         , GPURenderPipelineDescriptorBase(base)
         , vertexStage(WTFMove(vertex))
         , fragmentStage(WTFMove(fragment))
     {
     }
 
-    GPUPipelineStageDescriptor vertexStage;
-    Optional<GPUPipelineStageDescriptor> fragmentStage;
+    GPUProgrammableStageDescriptor vertexStage;
+    Optional<GPUProgrammableStageDescriptor> fragmentStage;
 };
 
 } // namespace WebCore
 
 #endif // ENABLE(WEBGPU)
