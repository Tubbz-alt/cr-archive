diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/CustomGetterSetter.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/CustomGetterSetter.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/CustomGetterSetter.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/CustomGetterSetter.cpp
@@ -33,29 +33,29 @@
 
 STATIC_ASSERT_IS_TRIVIALLY_DESTRUCTIBLE(CustomGetterSetter);
 
 const ClassInfo CustomGetterSetter::s_info = { "CustomGetterSetter", nullptr, nullptr, nullptr, CREATE_METHOD_TABLE(CustomGetterSetter) };
 
-bool callCustomSetter(ExecState* exec, CustomGetterSetter::CustomSetter setter, bool isAccessor, JSValue thisValue, JSValue value)
+bool callCustomSetter(JSGlobalObject* globalObject, CustomGetterSetter::CustomSetter setter, bool isAccessor, JSValue thisValue, JSValue value)
 {
     ASSERT(setter);
-    bool result = setter(exec, JSValue::encode(thisValue), JSValue::encode(value));
+    bool result = setter(globalObject, JSValue::encode(thisValue), JSValue::encode(value));
     // Always return true if there is a setter and it is observed as an accessor to users.
     if (isAccessor)
         return true;
     return result;
 }
 
-bool callCustomSetter(ExecState* exec, JSValue customGetterSetter, bool isAccessor, JSObject* base, JSValue thisValue, JSValue value)
+bool callCustomSetter(JSGlobalObject* globalObject, JSValue customGetterSetter, bool isAccessor, JSObject* base, JSValue thisValue, JSValue value)
 {
     CustomGetterSetter::CustomSetter setter = jsCast<CustomGetterSetter*>(customGetterSetter)->setter();
     // Return false since there is no setter.
     if (!setter)
         return false;
     // FIXME: Remove this differences in custom values and custom accessors.
     // https://bugs.webkit.org/show_bug.cgi?id=158014
     if (!isAccessor)
         thisValue = base;
-    return callCustomSetter(exec, setter, isAccessor, thisValue, value);
+    return callCustomSetter(globalObject, setter, isAccessor, thisValue, value);
 }
 
 } // namespace JSC
