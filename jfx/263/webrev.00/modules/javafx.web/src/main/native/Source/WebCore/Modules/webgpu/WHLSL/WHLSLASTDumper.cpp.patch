diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/WHLSLASTDumper.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/WHLSLASTDumper.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/WHLSLASTDumper.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/WHLSLASTDumper.cpp
@@ -300,16 +300,10 @@
 void ASTDumper::visit(AST::FloatLiteral& floatLiteral)
 {
     m_out.print(floatLiteral.value());
 }
 
-void ASTDumper::visit(AST::NullLiteral& nullLiteral)
-{
-    m_out.print("null");
-    visit(nullLiteral.type());
-}
-
 void ASTDumper::visit(AST::BooleanLiteral& booleanLiteral)
 {
     if (booleanLiteral.value())
         m_out.print("true");
     else
@@ -326,14 +320,10 @@
 
 void ASTDumper::visit(AST::FloatLiteralType&)
 {
 }
 
-void ASTDumper::visit(AST::NullLiteralType&)
-{
-}
-
 void ASTDumper::visit(AST::EnumerationMemberLiteral& enumerationMemberLiteral)
 {
     m_out.print(enumerationMemberLiteral.left(), ".", enumerationMemberLiteral.right());
 }
 
@@ -423,11 +413,10 @@
 void ASTDumper::visit(AST::Expression& expression)
 {
     bool skipParens = is<AST::BooleanLiteral>(expression)
         || is<AST::FloatLiteral>(expression)
         || is<AST::IntegerLiteral>(expression)
-        || is<AST::NullLiteral>(expression)
         || is<AST::UnsignedIntegerLiteral>(expression)
         || is<AST::EnumerationMemberLiteral>(expression)
         || is<AST::CommaExpression>(expression)
         || is<AST::VariableReference>(expression);
 
