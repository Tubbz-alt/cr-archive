diff a/modules/javafx.base/src/main/java/javafx/beans/binding/BooleanBinding.java b/modules/javafx.base/src/main/java/javafx/beans/binding/BooleanBinding.java
--- a/modules/javafx.base/src/main/java/javafx/beans/binding/BooleanBinding.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/binding/BooleanBinding.java
@@ -58,11 +58,11 @@
  */
 public abstract class BooleanBinding extends BooleanExpression implements
         Binding<Boolean> {
 
     /**
-     * Creates a default BooleanBinding.
+     * Creates a default {@code BooleanBinding}.
      */
     public BooleanBinding() {
     }
 
     private boolean value;
diff a/modules/javafx.base/src/main/java/javafx/beans/binding/BooleanExpression.java b/modules/javafx.base/src/main/java/javafx/beans/binding/BooleanExpression.java
--- a/modules/javafx.base/src/main/java/javafx/beans/binding/BooleanExpression.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/binding/BooleanExpression.java
@@ -43,11 +43,11 @@
  * @since JavaFX 2.0
  */
 public abstract class BooleanExpression implements ObservableBooleanValue {
 
     /**
-     * Creates a default BooleanExpression.
+     * Creates a default {@code BooleanExpression}.
      */
     public BooleanExpression() {
     }
 
     @Override
diff a/modules/javafx.base/src/main/java/javafx/beans/binding/DoubleBinding.java b/modules/javafx.base/src/main/java/javafx/beans/binding/DoubleBinding.java
--- a/modules/javafx.base/src/main/java/javafx/beans/binding/DoubleBinding.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/binding/DoubleBinding.java
@@ -115,11 +115,11 @@
     private boolean valid;
     private BindingHelperObserver observer;
     private ExpressionHelper<Number> helper = null;
 
     /**
-     * Creates a default DoubleBinding.
+     * Creates a default {@code DoubleBinding}.
      */
     public DoubleBinding() {
     }
 
     @Override
diff a/modules/javafx.base/src/main/java/javafx/beans/binding/DoubleExpression.java b/modules/javafx.base/src/main/java/javafx/beans/binding/DoubleExpression.java
--- a/modules/javafx.base/src/main/java/javafx/beans/binding/DoubleExpression.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/binding/DoubleExpression.java
@@ -43,11 +43,11 @@
  */
 public abstract class DoubleExpression extends NumberExpressionBase implements
         ObservableDoubleValue {
 
     /**
-     * Creates a default DoubleExpression.
+     * Creates a default {@code DoubleExpression}.
      */
     public DoubleExpression() {
     }
 
     @Override
diff a/modules/javafx.base/src/main/java/javafx/beans/binding/FloatBinding.java b/modules/javafx.base/src/main/java/javafx/beans/binding/FloatBinding.java
--- a/modules/javafx.base/src/main/java/javafx/beans/binding/FloatBinding.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/binding/FloatBinding.java
@@ -65,11 +65,11 @@
     private boolean valid;
     private BindingHelperObserver observer;
     private ExpressionHelper<Number> helper = null;
 
     /**
-     * Creates a default FloatBinding.
+     * Creates a default {@code FloatBinding}.
      */
     public FloatBinding() {
     }
 
     @Override
diff a/modules/javafx.base/src/main/java/javafx/beans/binding/FloatExpression.java b/modules/javafx.base/src/main/java/javafx/beans/binding/FloatExpression.java
--- a/modules/javafx.base/src/main/java/javafx/beans/binding/FloatExpression.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/binding/FloatExpression.java
@@ -42,11 +42,11 @@
  */
 public abstract class FloatExpression extends NumberExpressionBase implements
         ObservableFloatValue {
 
     /**
-     * Creates a default FloatExpression.
+     * Creates a default {@code FloatExpression}.
      */
     public FloatExpression() {
     }
 
     @Override
diff a/modules/javafx.base/src/main/java/javafx/beans/binding/IntegerBinding.java b/modules/javafx.base/src/main/java/javafx/beans/binding/IntegerBinding.java
--- a/modules/javafx.base/src/main/java/javafx/beans/binding/IntegerBinding.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/binding/IntegerBinding.java
@@ -65,11 +65,11 @@
     private boolean valid = false;
     private BindingHelperObserver observer;
     private ExpressionHelper<Number> helper = null;
 
     /**
-     * Creates a default IntegerBinding.
+     * Creates a default {@code IntegerBinding}.
      */
     public IntegerBinding() {
     }
 
     @Override
diff a/modules/javafx.base/src/main/java/javafx/beans/binding/IntegerExpression.java b/modules/javafx.base/src/main/java/javafx/beans/binding/IntegerExpression.java
--- a/modules/javafx.base/src/main/java/javafx/beans/binding/IntegerExpression.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/binding/IntegerExpression.java
@@ -42,11 +42,11 @@
  */
 public abstract class IntegerExpression extends NumberExpressionBase implements
         ObservableIntegerValue {
 
     /**
-     * Creates a default IntegerExpression.
+     * Creates a default {@code IntegerExpression}.
      */
     public IntegerExpression() {
     }
 
     @Override
diff a/modules/javafx.base/src/main/java/javafx/beans/binding/ListBinding.java b/modules/javafx.base/src/main/java/javafx/beans/binding/ListBinding.java
--- a/modules/javafx.base/src/main/java/javafx/beans/binding/ListBinding.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/binding/ListBinding.java
@@ -63,11 +63,11 @@
  * @since JavaFX 2.1
  */
 public abstract class ListBinding<E> extends ListExpression<E> implements Binding<ObservableList<E>> {
 
     /**
-     * Creates a default ListBinding.
+     * Creates a default {@code ListBinding}.
      */
     public ListBinding() {
     }
 
     private final ListChangeListener<E> listChangeListener = new ListChangeListener<E>() {
diff a/modules/javafx.base/src/main/java/javafx/beans/binding/ListExpression.java b/modules/javafx.base/src/main/java/javafx/beans/binding/ListExpression.java
--- a/modules/javafx.base/src/main/java/javafx/beans/binding/ListExpression.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/binding/ListExpression.java
@@ -56,11 +56,11 @@
 public abstract class ListExpression<E> implements ObservableListValue<E> {
 
     private static final ObservableList EMPTY_LIST = FXCollections.emptyObservableList();
 
     /**
-     * Creates a default ListExpression.
+     * Creates a default {@code ListExpression}.
      */
     public ListExpression() {
     }
 
     @Override
diff a/modules/javafx.base/src/main/java/javafx/beans/binding/LongBinding.java b/modules/javafx.base/src/main/java/javafx/beans/binding/LongBinding.java
--- a/modules/javafx.base/src/main/java/javafx/beans/binding/LongBinding.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/binding/LongBinding.java
@@ -65,11 +65,11 @@
     private boolean valid = false;
     private BindingHelperObserver observer;
     private ExpressionHelper<Number> helper = null;
 
     /**
-     * Creates a default LongBinding.
+     * Creates a default {@code LongBinding}.
      */
     public LongBinding() {
     }
 
     @Override
diff a/modules/javafx.base/src/main/java/javafx/beans/binding/LongExpression.java b/modules/javafx.base/src/main/java/javafx/beans/binding/LongExpression.java
--- a/modules/javafx.base/src/main/java/javafx/beans/binding/LongExpression.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/binding/LongExpression.java
@@ -41,11 +41,11 @@
  */
 public abstract class LongExpression extends NumberExpressionBase implements
         ObservableLongValue {
 
     /**
-     * Creates a default LongExpression.
+     * Creates a default {@code LongExpression}.
      */
     public LongExpression() {
     }
 
     @Override
diff a/modules/javafx.base/src/main/java/javafx/beans/binding/MapBinding.java b/modules/javafx.base/src/main/java/javafx/beans/binding/MapBinding.java
--- a/modules/javafx.base/src/main/java/javafx/beans/binding/MapBinding.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/binding/MapBinding.java
@@ -83,11 +83,11 @@
 
     private SizeProperty size0;
     private EmptyProperty empty0;
 
     /**
-     * Creates a default MapBinding.
+     * Creates a default {@code MapBinding}.
      */
     public MapBinding() {
     }
 
     @Override
diff a/modules/javafx.base/src/main/java/javafx/beans/binding/MapExpression.java b/modules/javafx.base/src/main/java/javafx/beans/binding/MapExpression.java
--- a/modules/javafx.base/src/main/java/javafx/beans/binding/MapExpression.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/binding/MapExpression.java
@@ -90,11 +90,11 @@
     public ObservableMap<K, V> getValue() {
         return get();
     }
 
     /**
-     * Creates a default MapExpression.
+     * Creates a default {@code MapExpression}.
      */
     public MapExpression() {
     }
 
     /**
diff a/modules/javafx.base/src/main/java/javafx/beans/binding/NumberExpressionBase.java b/modules/javafx.base/src/main/java/javafx/beans/binding/NumberExpressionBase.java
--- a/modules/javafx.base/src/main/java/javafx/beans/binding/NumberExpressionBase.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/binding/NumberExpressionBase.java
@@ -48,11 +48,11 @@
  * @since JavaFX 2.0
  */
 public abstract class NumberExpressionBase implements NumberExpression {
 
     /**
-     * Creates a default NumberExpressionBase.
+     * Creates a default {@code NumberExpressionBase}.
      */
     public NumberExpressionBase() {
     }
 
     /**
diff a/modules/javafx.base/src/main/java/javafx/beans/binding/ObjectBinding.java b/modules/javafx.base/src/main/java/javafx/beans/binding/ObjectBinding.java
--- a/modules/javafx.base/src/main/java/javafx/beans/binding/ObjectBinding.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/binding/ObjectBinding.java
@@ -65,11 +65,11 @@
     private boolean valid = false;
     private BindingHelperObserver observer;
     private ExpressionHelper<T> helper = null;
 
     /**
-     * Creates a default ObjectBinding.
+     * Creates a default {@code ObjectBinding}.
      */
     public ObjectBinding() {
     }
 
     @Override
diff a/modules/javafx.base/src/main/java/javafx/beans/binding/ObjectExpression.java b/modules/javafx.base/src/main/java/javafx/beans/binding/ObjectExpression.java
--- a/modules/javafx.base/src/main/java/javafx/beans/binding/ObjectExpression.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/binding/ObjectExpression.java
@@ -48,11 +48,11 @@
     public T getValue() {
         return get();
     }
 
     /**
-     * Creates a default ObjectExpression.
+     * Creates a default {@code ObjectExpression}.
      */
     public ObjectExpression() {
     }
 
     /**
diff a/modules/javafx.base/src/main/java/javafx/beans/binding/SetBinding.java b/modules/javafx.base/src/main/java/javafx/beans/binding/SetBinding.java
--- a/modules/javafx.base/src/main/java/javafx/beans/binding/SetBinding.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/binding/SetBinding.java
@@ -64,11 +64,11 @@
  * @since JavaFX 2.1
  */
 public abstract class SetBinding<E> extends SetExpression<E> implements Binding<ObservableSet<E>> {
 
     /**
-     * Creates a default SetBinding.
+     * Creates a default {@code SetBinding}.
      */
     public SetBinding() {
     }
 
     private final SetChangeListener<E> setChangeListener = new SetChangeListener<E>() {
diff a/modules/javafx.base/src/main/java/javafx/beans/binding/SetExpression.java b/modules/javafx.base/src/main/java/javafx/beans/binding/SetExpression.java
--- a/modules/javafx.base/src/main/java/javafx/beans/binding/SetExpression.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/binding/SetExpression.java
@@ -56,11 +56,11 @@
  * @since JavaFX 2.1
  */
 public abstract class SetExpression<E> implements ObservableSetValue<E> {
 
     /**
-     * Creates a default SetExpression.
+     * Creates a default {@code SetExpression}.
      */
     public SetExpression() {
     }
 
     private static final ObservableSet EMPTY_SET = new EmptyObservableSet();
diff a/modules/javafx.base/src/main/java/javafx/beans/binding/StringBinding.java b/modules/javafx.base/src/main/java/javafx/beans/binding/StringBinding.java
--- a/modules/javafx.base/src/main/java/javafx/beans/binding/StringBinding.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/binding/StringBinding.java
@@ -64,11 +64,11 @@
     private boolean valid = false;
     private BindingHelperObserver observer;
     private ExpressionHelper<String> helper = null;
 
     /**
-     * Creates a default StringBinding.
+     * Creates a default {@code StringBinding}.
      */
     public StringBinding() {
     }
 
     @Override
diff a/modules/javafx.base/src/main/java/javafx/beans/binding/StringExpression.java b/modules/javafx.base/src/main/java/javafx/beans/binding/StringExpression.java
--- a/modules/javafx.base/src/main/java/javafx/beans/binding/StringExpression.java
+++ b/modules/javafx.base/src/main/java/javafx/beans/binding/StringExpression.java
@@ -45,11 +45,11 @@
  * @since JavaFX 2.0
  */
 public abstract class StringExpression implements ObservableStringValue {
 
     /**
-     * Creates a default StringExpression.
+     * Creates a default {@code StringExpression}.
      */
     public StringExpression() {
     }
 
     @Override
