diff a/tests/system/src/test/java/test/javafx/accessibility/virtualflow/VirtualFlowMemoryLeakTest.java b/tests/system/src/test/java/test/javafx/accessibility/virtualflow/VirtualFlowMemoryLeakTest.java
--- a/tests/system/src/test/java/test/javafx/accessibility/virtualflow/VirtualFlowMemoryLeakTest.java
+++ b/tests/system/src/test/java/test/javafx/accessibility/virtualflow/VirtualFlowMemoryLeakTest.java
@@ -54,10 +54,11 @@
 import javafx.scene.control.TableRow;
 import javafx.scene.control.TableView;
 import javafx.scene.control.TableView.TableViewSelectionModel;
 import javafx.stage.Stage;
 import test.util.Util;
+import de.sandec.jmemorybuddy.JMemoryBuddy;
 
 public class VirtualFlowMemoryLeakTest {
 
     private static CountDownLatch startupLatch;
     private static CountDownLatch screenReaderLatch = new CountDownLatch(1);
@@ -173,19 +174,11 @@
         for (int i = 0; i < 20; i++) {
             runAndWait(() -> addItem());
         }
         runAndWait(() -> items.clear());
 
-        for (int j = 0; j < 5; ++j) {
-            System.gc();
-            System.runFinalization();
-            if (firstRowRef.get() == null) {
-                break;
-            }
-            MILLISECONDS.sleep(100);
-        }
-        assertEquals(null, firstRowRef.get());
+        JMemoryBuddy.assertCollectable(firstRowRef);
     }
 
     private void runAndWait(final Runnable runnable) {
         Util.runAndWait(runnable);
     }
