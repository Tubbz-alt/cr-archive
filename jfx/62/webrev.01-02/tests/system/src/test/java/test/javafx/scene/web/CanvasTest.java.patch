diff a/tests/system/src/test/java/test/javafx/scene/web/CanvasTest.java b/tests/system/src/test/java/test/javafx/scene/web/CanvasTest.java
--- a/tests/system/src/test/java/test/javafx/scene/web/CanvasTest.java
+++ b/tests/system/src/test/java/test/javafx/scene/web/CanvasTest.java
@@ -116,18 +116,21 @@
             webView.getEngine().loadContent(htmlCanvasContent);
 
             webView.focusedProperty().
                 addListener((observable, oldValue, newValue) -> {
                 if (newValue) {
-                    int redColor = 255;
-                    assertEquals("Rect top-left corner", redColor, (int) webView.getEngine().executeScript(
-                        "document.getElementById('canvas').getContext('2d').getImageData(1, 1, 1, 1).data[0]"));
-                    assertEquals("Rect bottom-right corner", redColor, (int) webView.getEngine().executeScript(
-                        "document.getElementById('canvas').getContext('2d').getImageData(99, 99, 1, 1).data[0]"));
                     webViewStateLatch.countDown();
                 }
             });
         });
 
         assertTrue("Timeout when waiting for focus change ", Util.await(webViewStateLatch));
+
+        Util.runAndWait(() -> {
+            int redColor = 255;
+            assertEquals("Rect top-left corner", redColor, (int) webView.getEngine().executeScript(
+                "document.getElementById('canvas').getContext('2d').getImageData(1, 1, 1, 1).data[0]"));
+            assertEquals("Rect bottom-right corner", redColor, (int) webView.getEngine().executeScript(
+                "document.getElementById('canvas').getContext('2d').getImageData(99, 99, 1, 1).data[0]"));
+        });
     }
 }
