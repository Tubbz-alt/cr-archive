diff a/buildSrc/linux.gradle b/buildSrc/linux.gradle
--- a/buildSrc/linux.gradle
+++ b/buildSrc/linux.gradle
@@ -43,10 +43,12 @@
 def commonFlags = [
         "-fno-strict-aliasing", "-fPIC", "-fno-omit-frame-pointer", // optimization flags
         "-fstack-protector",
         "-Wextra", "-Wall", "-Wformat-security", "-Wno-unused", "-Wno-parentheses", "-Werror=trampolines"] // warning flags
 
+def noImplicitDeclFlag = "-Werror=implicit-function-declaration"
+
 if (!IS_64) {
     commonFlags += "-m32"
 }
 
 if (IS_STATIC_BUILD) {
@@ -140,11 +142,11 @@
             throw new IllegalStateException("GTK3 development packages not found. If GTK3 packages are installed, please remove the build directory and try again.")
         }
     }
 )
 
-def pangoCCFlags = ["-D_ENABLE_PANGO"];
+def pangoCCFlags = ["-D_ENABLE_PANGO", noImplicitDeclFlag];
 def pangoLinkFlags = [];
 setupTools("linux_pango_tools",
     { propFile ->
         ByteArrayOutputStream results = new ByteArrayOutputStream();
         exec {
@@ -171,11 +173,11 @@
         }
     }
 )
 
 def freetypeCCFlags = [ext.IS_COMPILE_PANGO ? "-D_ENABLE_PANGO" :
-                       ext.IS_COMPILE_HARFBUZZ ? "-D_ENABLE_HARFBUZZ" : ""]
+                       ext.IS_COMPILE_HARFBUZZ ? "-D_ENABLE_HARFBUZZ" : "", noImplicitDeclFlag]
 def freetypeLinkFlags = []
 setupTools("linux_freetype_tools",
     { propFile ->
         ByteArrayOutputStream results = new ByteArrayOutputStream();
         exec {
@@ -255,29 +257,29 @@
 LINUX.decora.lib = "decora_sse"
 
 LINUX.prism = [:]
 LINUX.prism.nativeSource = file("${project(":graphics").projectDir}/src/main/native-prism")
 LINUX.prism.compiler = compiler
-LINUX.prism.ccFlags = [ccFlags, "-DINLINE=inline"].flatten()
+LINUX.prism.ccFlags = [ccFlags, "-DINLINE=inline", noImplicitDeclFlag].flatten()
 LINUX.prism.linker = linker
 LINUX.prism.linkFlags = [linkFlags].flatten()
 LINUX.prism.lib = "prism_common"
 
 LINUX.prismSW = [:]
 LINUX.prismSW.nativeSource = file("${project(":graphics").projectDir}/src/main/native-prism-sw")
 LINUX.prismSW.compiler = compiler
-LINUX.prismSW.ccFlags = [ccFlags, "-DINLINE=inline"].flatten()
+LINUX.prismSW.ccFlags = [ccFlags, "-DINLINE=inline", noImplicitDeclFlag].flatten()
 LINUX.prismSW.linker = linker
 LINUX.prismSW.linkFlags = [linkFlags].flatten()
 LINUX.prismSW.lib = "prism_sw"
 
 LINUX.iio = [:]
 LINUX.iio.nativeSource = [
     file("${project("graphics").projectDir}/src/main/native-iio"),
     file("${project("graphics").projectDir}/src/main/native-iio/libjpeg")]
 LINUX.iio.compiler = compiler
-LINUX.iio.ccFlags = [ccFlags].flatten()
+LINUX.iio.ccFlags = [ccFlags, noImplicitDeclFlag].flatten()
 LINUX.iio.linker = linker
 LINUX.iio.linkFlags = [linkFlags].flatten()
 LINUX.iio.lib = "javafx_iio"
 
 LINUX.prismES2 = [:]
@@ -285,20 +287,20 @@
     file("${project("graphics").projectDir}/src/main/native-prism-es2"),
     file("${project("graphics").projectDir}/src/main/native-prism-es2/GL"),
     file("${project("graphics").projectDir}/src/main/native-prism-es2/x11")
 ]
 LINUX.prismES2.compiler = compiler
-LINUX.prismES2.ccFlags = ["-DLINUX", ccFlags].flatten()
+LINUX.prismES2.ccFlags = ["-DLINUX", ccFlags, noImplicitDeclFlag].flatten()
 LINUX.prismES2.linker = linker
 LINUX.prismES2.linkFlags =IS_STATIC_BUILD ? linkFlags : [linkFlags, "-lX11", "-lXxf86vm", "-lGL"].flatten()
 LINUX.prismES2.lib = "prism_es2"
 
 def closedDir = file("$projectDir/../rt-closed")
 LINUX.font = [:]
 LINUX.font.compiler = compiler
 LINUX.font.nativeSource = [file("${project("graphics").projectDir}/src/main/native-font")]
-LINUX.font.ccFlags = ["-DJFXFONT_PLUS", ccFlags].flatten()
+LINUX.font.ccFlags = ["-DJFXFONT_PLUS", ccFlags, noImplicitDeclFlag].flatten()
 LINUX.font.linker = linker
 LINUX.font.linkFlags = [linkFlags].flatten()
 LINUX.font.lib = "javafx_font"
 
 LINUX.fontFreetype = [:]
