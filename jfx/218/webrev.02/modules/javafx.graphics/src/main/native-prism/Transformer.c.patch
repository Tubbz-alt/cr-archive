diff a/modules/javafx.graphics/src/main/native-prism/Transformer.c b/modules/javafx.graphics/src/main/native-prism/Transformer.c
--- a/modules/javafx.graphics/src/main/native-prism/Transformer.c
+++ b/modules/javafx.graphics/src/main/native-prism/Transformer.c
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2012, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -86,217 +86,217 @@
     this.myy = myy;
     this.myt = myt;
     return &pTransformer->consumer;
 }
 
-static void Translate_moveTo(PathConsumer *pTransformer,
+static jint Translate_moveTo(PathConsumer *pTransformer,
                              jfloat x0, jfloat y0)
 {
-    this.out->moveTo(this.out,
+    return this.out->moveTo(this.out,
                      (jfloat) (x0 + this.mxt),
                      (jfloat) (y0 + this.myt));
 }
 
-static void Translate_lineTo(PathConsumer *pTransformer,
+static jint Translate_lineTo(PathConsumer *pTransformer,
                              jfloat x1, jfloat y1)
 {
-    this.out->lineTo(this.out,
+    return this.out->lineTo(this.out,
                      (jfloat) (x1 + this.mxt),
                      (jfloat) (y1 + this.myt));
 }
 
-static void Translate_quadTo(PathConsumer *pTransformer,
+static jint Translate_quadTo(PathConsumer *pTransformer,
                              jfloat xc, jfloat yc,
                              jfloat x1, jfloat y1)
 {
-    this.out->quadTo(this.out,
+    return this.out->quadTo(this.out,
                      (jfloat) (xc + this.mxt),
                      (jfloat) (yc + this.myt),
                      (jfloat) (x1 + this.mxt),
                      (jfloat) (y1 + this.myt));
 }
 
-static void Translate_curveTo(PathConsumer *pTransformer,
+static jint Translate_curveTo(PathConsumer *pTransformer,
                               jfloat xc0, jfloat yc0,
                               jfloat xc1, jfloat yc1,
                               jfloat x1, jfloat y1)
 {
-    this.out->curveTo(this.out,
+    return this.out->curveTo(this.out,
                       (jfloat) (xc0 + this.mxt),
                       (jfloat) (yc0 + this.myt),
                       (jfloat) (xc1 + this.mxt),
                       (jfloat) (yc1 + this.myt),
                       (jfloat) (x1  + this.mxt),
                       (jfloat) (y1  + this.myt));
 }
 
-static void DeltaScale_moveTo(PathConsumer *pTransformer,
+static jint DeltaScale_moveTo(PathConsumer *pTransformer,
                               jfloat x0, jfloat y0)
 {
-    this.out->moveTo(this.out,
+    return this.out->moveTo(this.out,
                      (jfloat) (x0 * this.mxx),
                      (jfloat) (y0 * this.myy));
 }
 
-static void DeltaScale_lineTo(PathConsumer *pTransformer,
+static jint DeltaScale_lineTo(PathConsumer *pTransformer,
                               jfloat x1, jfloat y1)
 {
-    this.out->lineTo(this.out,
+    return this.out->lineTo(this.out,
                      (jfloat) (x1 * this.mxx),
                      (jfloat) (y1 * this.myy));
 }
 
-static void DeltaScale_quadTo(PathConsumer *pTransformer,
+static jint DeltaScale_quadTo(PathConsumer *pTransformer,
                               jfloat xc, jfloat yc,
                               jfloat x1, jfloat y1)
 {
-    this.out->quadTo(this.out,
+    return this.out->quadTo(this.out,
                      (jfloat) (xc * this.mxx),
                      (jfloat) (yc * this.myy),
                      (jfloat) (x1 * this.mxx),
                      (jfloat) (y1 * this.myy));
 }
 
-static void DeltaScale_curveTo(PathConsumer *pTransformer,
+static jint DeltaScale_curveTo(PathConsumer *pTransformer,
                                jfloat xc0, jfloat yc0,
                                jfloat xc1, jfloat yc1,
                                jfloat x1, jfloat y1)
 {
-    this.out->curveTo(this.out,
+    return this.out->curveTo(this.out,
                       (jfloat) (xc0 * this.mxx),
                       (jfloat) (yc0 * this.myy),
                       (jfloat) (xc1 * this.mxx),
                       (jfloat) (yc1 * this.myy),
                       (jfloat) (x1  * this.mxx),
                       (jfloat) (y1  * this.myy));
 }
 
-static void DeltaTransform_moveTo(PathConsumer *pTransformer,
+static jint DeltaTransform_moveTo(PathConsumer *pTransformer,
                                   jfloat x0, jfloat y0)
 {
-    this.out->moveTo(this.out,
+    return this.out->moveTo(this.out,
                      (jfloat) (x0 * this.mxx + y0 * this.mxy),
                      (jfloat) (x0 * this.myx + y0 * this.myy));
 }
 
-static void DeltaTransform_lineTo(PathConsumer *pTransformer,
+static jint DeltaTransform_lineTo(PathConsumer *pTransformer,
                                   jfloat x1, jfloat y1)
 {
-    this.out->lineTo(this.out,
+    return this.out->lineTo(this.out,
                      (jfloat) (x1 * this.mxx + y1 * this.mxy),
                      (jfloat) (x1 * this.myx + y1 * this.myy));
 }
 
-static void DeltaTransform_quadTo(PathConsumer *pTransformer,
+static jint DeltaTransform_quadTo(PathConsumer *pTransformer,
                                   jfloat xc, jfloat yc,
                                   jfloat x1, jfloat y1)
 {
-    this.out->quadTo(this.out,
+    return this.out->quadTo(this.out,
                      (jfloat) (xc * this.mxx + yc * this.mxy),
                      (jfloat) (xc * this.myx + yc * this.myy),
                      (jfloat) (x1 * this.mxx + y1 * this.mxy),
                      (jfloat) (x1 * this.myx + y1 * this.myy));
 }
 
-static void DeltaTransform_curveTo(PathConsumer *pTransformer,
+static jint DeltaTransform_curveTo(PathConsumer *pTransformer,
                                    jfloat xc0, jfloat yc0,
                                    jfloat xc1, jfloat yc1,
                                    jfloat x1, jfloat y1)
 {
-    this.out->curveTo(this.out,
+    return this.out->curveTo(this.out,
                       (jfloat) (xc0 * this.mxx + yc0 * this.mxy),
                       (jfloat) (xc0 * this.myx + yc0 * this.myy),
                       (jfloat) (xc1 * this.mxx + yc1 * this.mxy),
                       (jfloat) (xc1 * this.myx + yc1 * this.myy),
                       (jfloat) (x1  * this.mxx + y1  * this.mxy),
                       (jfloat) (x1  * this.myx + y1  * this.myy));
 }
 
-static void ScaleTranslate_moveTo(PathConsumer *pTransformer,
+static jint ScaleTranslate_moveTo(PathConsumer *pTransformer,
                                   jfloat x0, jfloat y0)
 {
-    this.out->moveTo(this.out,
+    return this.out->moveTo(this.out,
                      (jfloat) (x0 * this.mxx + this.mxt),
                      (jfloat) (y0 * this.myy + this.myt));
 }
 
-static void ScaleTranslate_lineTo(PathConsumer *pTransformer,
+static jint ScaleTranslate_lineTo(PathConsumer *pTransformer,
                                   jfloat x1, jfloat y1)
 {
-    this.out->lineTo(this.out,
+    return this.out->lineTo(this.out,
                      (jfloat) (x1 * this.mxx + this.mxt),
                      (jfloat) (y1 * this.myy + this.myt));
 }
 
-static void ScaleTranslate_quadTo(PathConsumer *pTransformer,
+static jint ScaleTranslate_quadTo(PathConsumer *pTransformer,
                                   jfloat xc, jfloat yc,
                                   jfloat x1, jfloat y1)
 {
-    this.out->quadTo(this.out,
+    return this.out->quadTo(this.out,
                      (jfloat) (xc * this.mxx + this.mxt),
                      (jfloat) (yc * this.myy + this.myt),
                      (jfloat) (x1 * this.mxx + this.mxt),
                      (jfloat) (y1 * this.myy + this.myt));
 }
 
-static void ScaleTranslate_curveTo(PathConsumer *pTransformer,
+static jint ScaleTranslate_curveTo(PathConsumer *pTransformer,
                                    jfloat xc0, jfloat yc0,
                                    jfloat xc1, jfloat yc1,
                                    jfloat x1, jfloat y1)
 {
-    this.out->curveTo(this.out,
+    return this.out->curveTo(this.out,
                       (jfloat) (xc0 * this.mxx + this.mxt),
                       (jfloat) (yc0 * this.myy + this.myt),
                       (jfloat) (xc1 * this.mxx + this.mxt),
                       (jfloat) (yc1 * this.myy + this.myt),
                       (jfloat) (x1  * this.mxx + this.mxt),
                       (jfloat) (y1  * this.myy + this.myt));
 }
 
-static void Transform_moveTo(PathConsumer *pTransformer,
+static jint Transform_moveTo(PathConsumer *pTransformer,
                              jfloat x0, jfloat y0)
 {
-    this.out->moveTo(this.out,
+    return this.out->moveTo(this.out,
                      (jfloat) (x0 * this.mxx + y0 * this.mxy + this.mxt),
                      (jfloat) (x0 * this.myx + y0 * this.myy + this.myt));
 }
 
-static void Transform_lineTo(PathConsumer *pTransformer,
+static jint Transform_lineTo(PathConsumer *pTransformer,
                              jfloat x1, jfloat y1)
 {
-    this.out->lineTo(this.out,
+    return this.out->lineTo(this.out,
                      (jfloat) (x1 * this.mxx + y1 * this.mxy + this.mxt),
                      (jfloat) (x1 * this.myx + y1 * this.myy + this.myt));
 }
 
-static void Transform_quadTo(PathConsumer *pTransformer,
+static jint Transform_quadTo(PathConsumer *pTransformer,
                              jfloat xc, jfloat yc,
                              jfloat x1, jfloat y1)
 {
-    this.out->quadTo(this.out,
+    return this.out->quadTo(this.out,
                      (jfloat) (xc * this.mxx + yc * this.mxy + this.mxt),
                      (jfloat) (xc * this.myx + yc * this.myy + this.myt),
                      (jfloat) (x1 * this.mxx + y1 * this.mxy + this.mxt),
                      (jfloat) (x1 * this.myx + y1 * this.myy + this.myt));
 }
 
-static void Transform_curveTo(PathConsumer *pTransformer,
+static jint Transform_curveTo(PathConsumer *pTransformer,
                               jfloat xc0, jfloat yc0,
                               jfloat xc1, jfloat yc1,
                               jfloat x1, jfloat y1)
 {
-    this.out->curveTo(this.out,
+    return this.out->curveTo(this.out,
                       (jfloat) (xc0 * this.mxx + yc0 * this.mxy + this.mxt),
                       (jfloat) (xc0 * this.myx + yc0 * this.myy + this.myt),
                       (jfloat) (xc1 * this.mxx + yc1 * this.mxy + this.mxt),
                       (jfloat) (xc1 * this.myx + yc1 * this.myy + this.myt),
                       (jfloat) (x1  * this.mxx + y1  * this.mxy + this.mxt),
                       (jfloat) (x1  * this.myx + y1  * this.myy + this.myt));
 }
 
-static void Transformer_closePath(PathConsumer *pTransformer) {
-    this.out->closePath(this.out);
+static jint Transformer_closePath(PathConsumer *pTransformer) {
+    return this.out->closePath(this.out);
 }
 
-static void Transformer_pathDone(PathConsumer *pTransformer) {
-    this.out->pathDone(this.out);
+static jint Transformer_pathDone(PathConsumer *pTransformer) {
+    return this.out->pathDone(this.out);
 }
