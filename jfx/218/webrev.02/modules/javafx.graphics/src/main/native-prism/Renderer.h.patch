diff a/modules/javafx.graphics/src/main/native-prism/Renderer.h b/modules/javafx.graphics/src/main/native-prism/Renderer.h
--- a/modules/javafx.graphics/src/main/native-prism/Renderer.h
+++ b/modules/javafx.graphics/src/main/native-prism/Renderer.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2012, 2014, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2012, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -52,16 +52,18 @@
 #define YMAX         0
 #define CURX         1
 
 // NEXT and OR are meant to be indices into "int" fields, but arrays must
 // be homogenous, so every field is a float. However floats can represent
-// exactly up to 26 bit ints, so we're ok.
+// exactly up to 24 bit ints, so we're ok as long as we check for overflow.
 #define OR           2
 #define SLOPE        3
 #define NEXT         4
 #define SIZEOF_EDGE  5
 
+#define MAX_EDGE_IDX (1 << 24)
+
 #define WIND_EVEN_ODD   0
 #define WIND_NON_ZERO   1
 
 #define DEC_BND   1.0f
 #define INC_BND   0.4f
@@ -108,11 +110,11 @@
 
 extern void Renderer_destroy(Renderer *pRenderer);
 
 extern void Renderer_getOutputBounds(Renderer *pRenderer, jint bounds[]);
 
-extern void Renderer_produceAlphas(Renderer *pRenderer, AlphaConsumer *pAC);
+extern jint Renderer_produceAlphas(Renderer *pRenderer, AlphaConsumer *pAC);
 
 #ifdef __cplusplus
 }
 #endif
 
