diff a/modules/javafx.web/src/main/native/Source/WebCore/editing/ReplaceSelectionCommand.h b/modules/javafx.web/src/main/native/Source/WebCore/editing/ReplaceSelectionCommand.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/editing/ReplaceSelectionCommand.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/editing/ReplaceSelectionCommand.h
@@ -29,10 +29,11 @@
 #include "NodeTraversal.h"
 
 namespace WebCore {
 
 class DocumentFragment;
+class Range;
 class ReplacementFragment;
 
 class ReplaceSelectionCommand : public CompositeEditCommand {
 public:
     enum CommandOption {
@@ -50,10 +51,12 @@
         return adoptRef(*new ReplaceSelectionCommand(document, WTFMove(fragment), options, editingAction));
     }
 
     VisibleSelection visibleSelectionForInsertedText() const { return m_visibleSelectionForInsertedText; }
 
+    RefPtr<Range> insertedContentRange() const;
+
 private:
     ReplaceSelectionCommand(Document&, RefPtr<DocumentFragment>&&, OptionSet<CommandOption>, EditAction);
 
     String inputEventData() const final;
     RefPtr<DataTransfer> inputEventDataTransfer() const final;
@@ -97,10 +100,11 @@
     void mergeEndIfNeeded();
 
     void removeUnrenderedTextNodesAtEnds(InsertedNodes&);
 
     void removeRedundantStylesAndKeepStyleSpanInline(InsertedNodes&);
+    void inverseTransformColor(InsertedNodes&);
     void makeInsertedContentRoundTrippableWithHTMLTreeBuilder(InsertedNodes&);
     void moveNodeOutOfAncestor(Node&, Node& ancestor, InsertedNodes&);
     void handleStyleSpans(InsertedNodes&);
     void handlePasteAsQuotationNode();
 
