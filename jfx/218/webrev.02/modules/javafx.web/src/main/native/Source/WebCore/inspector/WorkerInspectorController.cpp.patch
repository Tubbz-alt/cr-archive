diff a/modules/javafx.web/src/main/native/Source/WebCore/inspector/WorkerInspectorController.cpp b/modules/javafx.web/src/main/native/Source/WebCore/inspector/WorkerInspectorController.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/inspector/WorkerInspectorController.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/inspector/WorkerInspectorController.cpp
@@ -32,10 +32,11 @@
 #include "WebHeapAgent.h"
 #include "WebInjectedScriptHost.h"
 #include "WebInjectedScriptManager.h"
 #include "WorkerAuditAgent.h"
 #include "WorkerConsoleAgent.h"
+#include "WorkerDOMDebuggerAgent.h"
 #include "WorkerDebuggerAgent.h"
 #include "WorkerGlobalScope.h"
 #include "WorkerNetworkAgent.h"
 #include "WorkerRuntimeAgent.h"
 #include "WorkerThread.h"
@@ -172,11 +173,16 @@
         m_agents.append(makeUnique<WorkerNetworkAgent>(workerContext));
     }
 #endif
 
     m_agents.append(makeUnique<WebHeapAgent>(workerContext));
-    m_agents.append(makeUnique<WorkerDebuggerAgent>(workerContext));
+
+    auto debuggerAgent = makeUnique<WorkerDebuggerAgent>(workerContext);
+    auto debuggerAgentPtr = debuggerAgent.get();
+    m_agents.append(WTFMove(debuggerAgent));
+
+    m_agents.append(makeUnique<WorkerDOMDebuggerAgent>(workerContext, debuggerAgentPtr));
     m_agents.append(makeUnique<WorkerAuditAgent>(workerContext));
 
     if (auto& commandLineAPIHost = m_injectedScriptManager->commandLineAPIHost())
         commandLineAPIHost->init(m_instrumentingAgents.copyRef());
 }
