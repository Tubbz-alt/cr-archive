diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/offlineasm/instructions.rb b/modules/javafx.web/src/main/native/Source/JavaScriptCore/offlineasm/instructions.rb
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/offlineasm/instructions.rb
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/offlineasm/instructions.rb
@@ -31,25 +31,34 @@
 MACRO_INSTRUCTIONS =
     [
      "emit",
      "addi",
      "andi",
+     "andf",
+     "andd",
      "lshifti",
      "lshiftp",
      "lshiftq",
      "muli",
      "negi",
      "negp",
      "negq",
      "noti",
      "ori",
+     "orf",
+     "ord",
+     "orh",
      "rshifti",
      "urshifti",
      "rshiftp",
      "urshiftp",
      "rshiftq",
      "urshiftq",
+     "lrotatei",
+     "lrotateq",
+     "rrotatei",
+     "rrotateq",
      "subi",
      "xori",
      "loadi",
      "loadis",
      "loadb",
@@ -57,20 +66,51 @@
      "loadbsq",
      "loadh",
      "loadhsi",
      "loadhsq",
      "storei",
+     "storeh",
      "storeb",
+     "loadf",
      "loadd",
      "moved",
+     "storef",
      "stored",
+     "addf",
      "addd",
+     "divf",
      "divd",
+     "subf",
      "subd",
+     "mulf",
      "muld",
+     "sqrtf",
      "sqrtd",
+     "floorf",
+     "floord",
+     "roundf",
+     "roundd",
+     "truncatef",
+     "truncated",
+     "truncatef2i",
+     "truncatef2q",
+     "truncated2q",
+     "truncated2i",
+     "truncatef2is",
+     "truncated2is",
+     "truncatef2qs",
+     "truncated2qs",
      "ci2d",
+     "ci2ds",
+     "ci2f",
+     "ci2fs",
+     "cq2f",
+     "cq2fs",
+     "cq2d",
+     "cq2ds",
+     "cd2f",
+     "cf2d",
      "fii2d", # usage: fii2d <gpr with least significant bits>, <gpr with most significant bits>, <fpr>
      "fd2ii", # usage: fd2ii <fpr>, <gpr with least significant bits>, <gpr with most significant bits>
      "fq2d",
      "fd2q",
      "bdeq",
@@ -83,10 +123,17 @@
      "bdnequn",
      "bdgtun",
      "bdgtequn",
      "bdltun",
      "bdltequn",
+     "bfeq",
+     "bfgt",
+     "bflt",
+     "bfgtun",
+     "bfgtequn",
+     "bfltun",
+     "bfltequn",
      "btd2i",
      "td2i",
      "bcd2i",
      "movdz",
      "pop",
@@ -254,16 +301,48 @@
      "memfence",
      "tagReturnAddress",
      "untagReturnAddress",
      "removeCodePtrTag",
      "untagArrayPtr",    
+     "tzcnti",
+     "tzcntq",
+     "lzcnti",
+     "lzcntq",
+     "absf",
+     "absd",
+     "negf",
+     "negd",
+     "ceilf",
+     "ceild",
+     "cfeq",
+     "cdeq",
+     "cfneq",
+     "cfnequn",
+     "cdneq",
+     "cdnequn",
+     "cflt",
+     "cdlt",
+     "cflteq",
+     "cdlteq",
+     "cfgt",
+     "cdgt",
+     "cfgteq",
+     "cdgteq",
+     "fi2f",
+     "ff2i",
+     "tls_loadp",
+     "tls_storep",
     ]
 
 X86_INSTRUCTIONS =
     [
      "cdqi",
-     "idivi"
+     "idivi",
+     "udivi",
+     "cqoq",
+     "idivq",
+     "udivq",
     ]
 
 ARM_INSTRUCTIONS =
     [
      "clrbp",
@@ -274,11 +353,15 @@
 ARM64_INSTRUCTIONS =
     [
      "bfiq", # Bit field insert <source reg> <last bit written> <width immediate> <dest reg>
      "pcrtoaddr",   # Address from PC relative offset - adr instruction
      "nopFixCortexA53Err835769", # nop on Cortex-A53 (nothing otherwise)
-     "globaladdr"
+     "globaladdr",
+     "divi",
+     "divis",
+     "divq",
+     "divqs",
     ]
 
 RISC_INSTRUCTIONS =
     [
      "smulli",  # Multiply two 32-bit words and produce a 64-bit word
