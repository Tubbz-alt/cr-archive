diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/B3ReduceLoopStrength.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/B3ReduceLoopStrength.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/B3ReduceLoopStrength.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/B3ReduceLoopStrength.cpp
@@ -143,11 +143,11 @@
     : "xmm0", "xmm1");
 }
 #endif
 
 class ReduceLoopStrength {
-    static const bool verbose = false;
+    static constexpr bool verbose = false;
 
     struct AddrInfo {
         Value* appendAddr(Procedure& proc, BasicBlock* block, Value* addr)
         {
             block->appendNew<Value>(proc, Identity, addr->origin(), addr);
@@ -435,12 +435,12 @@
         auto origin = loopPostfooter->at(0)->origin();
 
         BasicBlock* memcpy = m_blockInsertionSet.insertBefore(loopPostfooter, loopPostfooter->frequency());
         memcpy->setSuccessors(FrequentedBlock(loopPostfooter));
         memcpy->addPredecessor(loopPreheader);
-        for (BasicBlock* pred : loopPostfooter->predecessors())
-            loopPostfooter->removePredecessor(pred);
+        while (loopPostfooter->predecessors().size())
+            loopPostfooter->removePredecessor(loopPostfooter->predecessors()[0]);
         loopPostfooter->addPredecessor(memcpy);
         loopPreheader->setSuccessors(memcpy);
 
         Effects effects = Effects::forCall();
         memcpy->appendNew<CCallValue>(m_proc, B3::Void, origin, effects,
