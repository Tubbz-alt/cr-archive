diff a/modules/javafx.web/src/main/native/Source/WebCore/accessibility/atk/WebKitAccessibleInterfaceSelection.cpp b/modules/javafx.web/src/main/native/Source/WebCore/accessibility/atk/WebKitAccessibleInterfaceSelection.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/accessibility/atk/WebKitAccessibleInterfaceSelection.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/accessibility/atk/WebKitAccessibleInterfaceSelection.cpp
@@ -48,11 +48,11 @@
         return nullptr;
 
     return &webkitAccessibleGetAccessibilityObject(WEBKIT_ACCESSIBLE(selection));
 }
 
-static AccessibilityObject* listObjectForCoreSelection(AccessibilityObject* coreSelection)
+static AXCoreObject* listObjectForCoreSelection(AccessibilityObject* coreSelection)
 {
     // Only list boxes and menu lists supported so far.
     if (!coreSelection->isListBox() && !coreSelection->isMenuList())
         return nullptr;
 
@@ -65,36 +65,36 @@
     // of items with role MenuListOptionRole.
     const AccessibilityObject::AccessibilityChildrenVector& children = coreSelection->children();
     if (!children.size())
         return nullptr;
 
-    AccessibilityObject* listObject = children.at(0).get();
+    AXCoreObject* listObject = children.at(0).get();
     if (!listObject->isMenuListPopup())
         return nullptr;
 
     return listObject;
 }
 
-static AccessibilityObject* optionFromList(AtkSelection* selection, gint index)
+static AXCoreObject* optionFromList(AtkSelection* selection, gint index)
 {
     AccessibilityObject* coreSelection = core(selection);
     if (!coreSelection || index < 0)
         return nullptr;
 
     // Need to select the proper list object depending on the type.
-    AccessibilityObject* listObject = listObjectForCoreSelection(coreSelection);
+    AXCoreObject* listObject = listObjectForCoreSelection(coreSelection);
     if (!listObject)
         return nullptr;
 
     const AccessibilityObject::AccessibilityChildrenVector& options = listObject->children();
     if (index < static_cast<gint>(options.size()))
         return options.at(index).get();
 
     return nullptr;
 }
 
-static AccessibilityObject* optionFromSelection(AtkSelection* selection, gint index)
+static AXCoreObject* optionFromSelection(AtkSelection* selection, gint index)
 {
     AccessibilityObject* coreSelection = core(selection);
     if (!coreSelection || !coreSelection->isAccessibilityRenderObject() || index < 0)
         return nullptr;
 
@@ -118,11 +118,11 @@
 
     AccessibilityObject* coreSelection = core(selection);
     if (!coreSelection)
         return FALSE;
 
-    AccessibilityObject* option = optionFromList(selection, index);
+    AXCoreObject* option = optionFromList(selection, index);
     if (option && (coreSelection->isListBox() || coreSelection->isMenuList())) {
         option->setSelected(true);
         return option->isSelected();
     }
 
@@ -152,11 +152,11 @@
 static AtkObject* webkitAccessibleSelectionRefSelection(AtkSelection* selection, gint index)
 {
     g_return_val_if_fail(ATK_SELECTION(selection), nullptr);
     returnValIfWebKitAccessibleIsInvalid(WEBKIT_ACCESSIBLE(selection), nullptr);
 
-    AccessibilityObject* option = optionFromSelection(selection, index);
+    AXCoreObject* option = optionFromSelection(selection, index);
     if (option) {
         auto* child = option->wrapper();
         g_object_ref(child);
         return ATK_OBJECT(child);
     }
@@ -194,11 +194,11 @@
 
     AccessibilityObject* coreSelection = core(selection);
     if (!coreSelection)
         return FALSE;
 
-    AccessibilityObject* option = optionFromList(selection, index);
+    AXCoreObject* option = optionFromList(selection, index);
     if (option && (coreSelection->isListBox() || coreSelection->isMenuList()))
         return option->isSelected();
 
     return FALSE;
 }
@@ -210,11 +210,11 @@
 
     AccessibilityObject* coreSelection = core(selection);
     if (!coreSelection)
         return FALSE;
 
-    AccessibilityObject* option = optionFromSelection(selection, index);
+    AXCoreObject* option = optionFromSelection(selection, index);
     if (option && (coreSelection->isListBox() || coreSelection->isMenuList())) {
         option->setSelected(false);
         return !option->isSelected();
     }
 
