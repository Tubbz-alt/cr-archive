diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/MethodOfGettingAValueProfile.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/MethodOfGettingAValueProfile.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/MethodOfGettingAValueProfile.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/MethodOfGettingAValueProfile.h
@@ -29,18 +29,21 @@
 // that are currently only used if the DFG is enabled (i.e. they are not
 // available in the profile-only configuration). Hopefully someday all of
 // these #if's will disappear...
 #if ENABLE(DFG_JIT)
 
+#include "BytecodeIndex.h"
 #include "GPRInfo.h"
+#include "Operands.h"
 
 namespace JSC {
 
+class UnaryArithProfile;
+class BinaryArithProfile;
 class CCallHelpers;
 class CodeBlock;
 class LazyOperandValueProfileKey;
-struct ArithProfile;
 struct ValueProfile;
 
 class MethodOfGettingAValueProfile {
 public:
     MethodOfGettingAValueProfile()
@@ -55,15 +58,24 @@
             u.profile = profile;
         } else
             m_kind = None;
     }
 
-    MethodOfGettingAValueProfile(ArithProfile* profile)
+    MethodOfGettingAValueProfile(UnaryArithProfile* profile)
     {
         if (profile) {
-            m_kind = ArithProfileReady;
-            u.arithProfile = profile;
+            m_kind = UnaryArithProfileReady;
+            u.unaryArithProfile = profile;
+        } else
+            m_kind = None;
+    }
+
+    MethodOfGettingAValueProfile(BinaryArithProfile* profile)
+    {
+        if (profile) {
+            m_kind = BinaryArithProfileReady;
+            u.binaryArithProfile = profile;
         } else
             m_kind = None;
     }
 
     static MethodOfGettingAValueProfile fromLazyOperand(
@@ -76,22 +88,28 @@
 
 private:
     enum Kind {
         None,
         Ready,
-        ArithProfileReady,
+        UnaryArithProfileReady,
+        BinaryArithProfileReady,
         LazyOperand
     };
 
     Kind m_kind;
-    union {
+    union Data {
+        Data()
+            : profile(nullptr)
+        { }
+
         ValueProfile* profile;
-        ArithProfile* arithProfile;
+        UnaryArithProfile* unaryArithProfile;
+        BinaryArithProfile* binaryArithProfile;
         struct {
             CodeBlock* codeBlock;
-            unsigned bytecodeOffset;
-            int operand;
+            BytecodeIndex bytecodeOffset;
+            Operand operand;
         } lazyOperand;
     } u;
 };
 
 } // namespace JSC
