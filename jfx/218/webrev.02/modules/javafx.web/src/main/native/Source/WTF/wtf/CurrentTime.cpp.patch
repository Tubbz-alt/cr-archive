diff a/modules/javafx.web/src/main/native/Source/WTF/wtf/CurrentTime.cpp b/modules/javafx.web/src/main/native/Source/WTF/wtf/CurrentTime.cpp
--- a/modules/javafx.web/src/main/native/Source/WTF/wtf/CurrentTime.cpp
+++ b/modules/javafx.web/src/main/native/Source/WTF/wtf/CurrentTime.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2006-2016 Apple Inc. All rights reserved.
+ * Copyright (C) 2006-2019 Apple Inc. All rights reserved.
  * Copyright (C) 2008 Google Inc. All rights reserved.
  * Copyright (C) 2007-2009 Torch Mobile, Inc.
  * Copyright (C) 2008 Cameron Zwarich <cwzwarich@uwaterloo.ca>
  *
  * Redistribution and use in source and binary forms, with or without
@@ -66,12 +66,12 @@
 namespace WTF {
 
 #if OS(WINDOWS)
 
 // Number of 100 nanosecond between January 1, 1601 and January 1, 1970.
-static const ULONGLONG epochBias = 116444736000000000ULL;
-static const double hundredsOfNanosecondsPerMillisecond = 10000;
+static constexpr ULONGLONG epochBias = 116444736000000000ULL;
+static constexpr double hundredsOfNanosecondsPerMillisecond = 10000;
 
 static double lowResUTCTime()
 {
     FILETIME fileTime;
 
@@ -228,13 +228,11 @@
 // better accuracy compared with Windows implementation of g_get_current_time:
 // (http://www.google.com/codesearch/p?hl=en#HHnNRjks1t0/glib-2.5.2/glib/gmain.c&q=g_get_current_time).
 // Non-Windows GTK builds could use gettimeofday() directly but for the sake of consistency lets use GTK function.
 static inline double currentTime()
 {
-    GTimeVal now;
-    g_get_current_time(&now);
-    return static_cast<double>(now.tv_sec) + static_cast<double>(now.tv_usec / 1000000.0);
+    return static_cast<double>(g_get_real_time() / 1000000.0);
 }
 
 #else
 
 static inline double currentTime()
