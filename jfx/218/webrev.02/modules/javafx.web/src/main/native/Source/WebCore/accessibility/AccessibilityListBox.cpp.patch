diff a/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilityListBox.cpp b/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilityListBox.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilityListBox.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilityListBox.cpp
@@ -140,11 +140,11 @@
     downcast<AccessibilityListBoxOption>(listBoxObject).setHTMLElement(element);
 
     return &listBoxObject;
 }
 
-AccessibilityObject* AccessibilityListBox::elementAccessibilityHitTest(const IntPoint& point) const
+AXCoreObject* AccessibilityListBox::elementAccessibilityHitTest(const IntPoint& point) const
 {
     // the internal HTMLSelectElement methods for returning a listbox option at a point
     // ignore optgroup elements.
     if (!m_renderer)
         return nullptr;
@@ -153,11 +153,11 @@
     if (!node)
         return nullptr;
 
     LayoutRect parentRect = boundingBoxRect();
 
-    AccessibilityObject* listBoxOption = nullptr;
+    AXCoreObject* listBoxOption = nullptr;
     unsigned length = m_children.size();
     for (unsigned i = 0; i < length; ++i) {
         LayoutRect rect = downcast<RenderListBox>(*m_renderer).itemBoundingBoxRect(parentRect.location(), i);
         // The cast to HTMLElement below is safe because the only other possible listItem type
         // would be a WMLElement, but WML builds don't use accessibility features at all.
