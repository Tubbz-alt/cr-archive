diff a/modules/javafx.web/src/main/native/Source/WebCore/PAL/pal/SessionID.h b/modules/javafx.web/src/main/native/Source/WebCore/PAL/pal/SessionID.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/PAL/pal/SessionID.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/PAL/pal/SessionID.h
@@ -53,10 +53,15 @@
     explicit SessionID(WTF::HashTableEmptyValueType)
         : m_identifier(HashTableEmptyValueID)
     {
     }
 
+    explicit SessionID(uint64_t identifier)
+        : m_identifier(identifier)
+    {
+    }
+
     PAL_EXPORT static SessionID generateEphemeralSessionID();
     PAL_EXPORT static SessionID generatePersistentSessionID();
     PAL_EXPORT static void enableGenerationProtection();
 
     bool isValid() const { return isValidSessionIDValue(m_identifier); }
@@ -74,15 +79,10 @@
     SessionID isolatedCopy() const { return *this; }
 
     explicit operator bool() const { return m_identifier; }
 
 private:
-    explicit SessionID(uint64_t identifier)
-        : m_identifier(identifier)
-    {
-    }
-
     static bool isValidSessionIDValue(uint64_t sessionID) { return sessionID != HashTableEmptyValueID && sessionID != HashTableDeletedValueID; }
 
     uint64_t m_identifier;
 };
 
@@ -96,13 +96,12 @@
 template<class Decoder>
 Optional<SessionID> SessionID::decode(Decoder& decoder)
 {
     Optional<uint64_t> sessionID;
     decoder >> sessionID;
-    if (!sessionID)
+    if (!sessionID || !isValidSessionIDValue(*sessionID))
         return WTF::nullopt;
-    ASSERT(isValidSessionIDValue(*sessionID));
     return SessionID { *sessionID };
 }
 
 } // namespace PAL
 
