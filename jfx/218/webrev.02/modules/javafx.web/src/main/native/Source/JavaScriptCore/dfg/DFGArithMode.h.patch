diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGArithMode.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGArithMode.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGArithMode.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGArithMode.h
@@ -27,11 +27,12 @@
 
 #if ENABLE(DFG_JIT)
 
 namespace JSC {
 
-class ExecState;
+class CallFrame;
+class JSGlobalObject;
 using EncodedJSValue = int64_t;
 
 namespace DFG {
 
 // Arith::Mode describes the mode of an arithmetic operation that speculates integer.
@@ -80,20 +81,20 @@
     FOR_EACH_DFG_ARITH_UNARY_OP(DFG_ARITH_UNARY_ENUM)
 #undef DFG_ARITH_UNARY_ENUM
 };
 
 typedef double (*UnaryFunction)(double);
-typedef double (*UnaryOperation)(ExecState*, EncodedJSValue);
+typedef double (*UnaryOperation)(JSGlobalObject*, EncodedJSValue);
 
 } // namespace Arith
 
 inline bool doesOverflow(Arith::Mode mode)
 {
     switch (mode) {
     case Arith::NotSet:
         ASSERT_NOT_REACHED();
-#if ASSERT_DISABLED
+#if !ASSERT_ENABLED
         FALLTHROUGH;
 #endif
     case Arith::Unchecked:
     case Arith::CheckOverflow:
     case Arith::CheckOverflowAndNegativeZero:
