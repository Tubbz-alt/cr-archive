diff a/modules/javafx.web/src/main/native/Source/WebCore/layout/FormattingState.h b/modules/javafx.web/src/main/native/Source/WebCore/layout/FormattingState.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/layout/FormattingState.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/layout/FormattingState.h
@@ -25,30 +25,25 @@
 
 #pragma once
 
 #if ENABLE(LAYOUT_FORMATTING_CONTEXT)
 
-#include "FloatingState.h"
 #include "FormattingContext.h"
-#include "LayoutBox.h"
 #include "LayoutState.h"
-#include "LayoutUnit.h"
 #include <wtf/IsoMalloc.h>
 #include <wtf/WeakPtr.h>
 
 namespace WebCore {
-
 namespace Layout {
 
 class Box;
+class FloatingState;
 enum class StyleDiff;
 
 class FormattingState {
     WTF_MAKE_ISO_ALLOCATED(FormattingState);
 public:
-    virtual ~FormattingState();
-
     FloatingState& floatingState() const { return m_floatingState; }
 
     void markNeedsLayout(const Box&, StyleDiff);
     bool needsLayout(const Box&);
 
@@ -63,19 +58,21 @@
     bool isInlineFormattingState() const { return m_type == Type::Inline; }
     bool isTableFormattingState() const { return m_type == Type::Table; }
 
     LayoutState& layoutState() const { return m_layoutState; }
 
+    Display::Box& displayBox(const Box& layoutBox);
     // Since we layout the out-of-flow boxes at the end of the formatting context layout, it's okay to store them in the formatting state -as opposed to the containing block level.
     using OutOfFlowBoxList = Vector<WeakPtr<const Box>>;
     void addOutOfFlowBox(const Box& outOfFlowBox) { m_outOfFlowBoxes.append(makeWeakPtr(outOfFlowBox)); }
     void removeOutOfFlowBox(const Box&);
     const OutOfFlowBoxList& outOfFlowBoxes() const { return m_outOfFlowBoxes; }
 
 protected:
     enum class Type { Block, Inline, Table };
     FormattingState(Ref<FloatingState>&&, Type, LayoutState&);
+    ~FormattingState();
 
 private:
     LayoutState& m_layoutState;
     Ref<FloatingState> m_floatingState;
     HashMap<const Box*, FormattingContext::IntrinsicWidthConstraints> m_intrinsicWidthConstraintsForBoxes;
