diff a/modules/javafx.web/src/main/native/Source/WebCore/dom/UserGestureIndicator.h b/modules/javafx.web/src/main/native/Source/WebCore/dom/UserGestureIndicator.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/dom/UserGestureIndicator.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/dom/UserGestureIndicator.h
@@ -29,10 +29,11 @@
 #include <wtf/Function.h>
 #include <wtf/MonotonicTime.h>
 #include <wtf/Noncopyable.h>
 #include <wtf/RefCounted.h>
 #include <wtf/Vector.h>
+#include <wtf/WeakPtr.h>
 
 namespace WebCore {
 
 class Document;
 
@@ -42,11 +43,11 @@
     NotProcessingUserGesture
 };
 
 enum class UserGestureType { EscapeKey, Other };
 
-class UserGestureToken : public RefCounted<UserGestureToken> {
+class UserGestureToken : public RefCounted<UserGestureToken>, public CanMakeWeakPtr<UserGestureToken> {
 public:
     static Ref<UserGestureToken> create(ProcessingUserGestureState state, UserGestureType gestureType)
     {
         return adoptRef(*new UserGestureToken(state, gestureType));
     }
@@ -86,10 +87,12 @@
     bool hasExpired(Seconds expirationInterval) const
     {
         return m_startTime + expirationInterval < MonotonicTime::now();
     }
 
+    MonotonicTime startTime() const { return m_startTime; }
+
 private:
     UserGestureToken(ProcessingUserGestureState state, UserGestureType gestureType)
         : m_state(state)
         , m_gestureType(gestureType)
     {
