diff a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGPathTraversalStateBuilder.cpp b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGPathTraversalStateBuilder.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGPathTraversalStateBuilder.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGPathTraversalStateBuilder.cpp
@@ -34,28 +34,28 @@
     m_traversalState.setDesiredLength(desiredLength);
 }
 
 void SVGPathTraversalStateBuilder::moveTo(const FloatPoint& targetPoint, bool, PathCoordinateMode)
 {
-    m_traversalState.processPathElement(PathElementMoveToPoint, &targetPoint);
+    m_traversalState.processPathElement(PathElement::Type::MoveToPoint, &targetPoint);
 }
 
 void SVGPathTraversalStateBuilder::lineTo(const FloatPoint& targetPoint, PathCoordinateMode)
 {
-    m_traversalState.processPathElement(PathElementAddLineToPoint, &targetPoint);
+    m_traversalState.processPathElement(PathElement::Type::AddLineToPoint, &targetPoint);
 }
 
 void SVGPathTraversalStateBuilder::curveToCubic(const FloatPoint& point1, const FloatPoint& point2, const FloatPoint& targetPoint, PathCoordinateMode)
 {
     FloatPoint points[] = { point1, point2, targetPoint };
 
-    m_traversalState.processPathElement(PathElementAddCurveToPoint, points);
+    m_traversalState.processPathElement(PathElement::Type::AddCurveToPoint, points);
 }
 
 void SVGPathTraversalStateBuilder::closePath()
 {
-    m_traversalState.processPathElement(PathElementCloseSubpath, nullptr);
+    m_traversalState.processPathElement(PathElement::Type::CloseSubpath, nullptr);
 }
 
 bool SVGPathTraversalStateBuilder::continueConsuming()
 {
     return !m_traversalState.success();
