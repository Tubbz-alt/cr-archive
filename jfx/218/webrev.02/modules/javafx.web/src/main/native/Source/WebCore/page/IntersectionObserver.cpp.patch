diff a/modules/javafx.web/src/main/native/Source/WebCore/page/IntersectionObserver.cpp b/modules/javafx.web/src/main/native/Source/WebCore/page/IntersectionObserver.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/page/IntersectionObserver.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/page/IntersectionObserver.cpp
@@ -260,16 +260,15 @@
 
     auto* context = m_callback->scriptExecutionContext();
     if (!context)
         return;
 
-    InspectorInstrumentationCookie cookie = InspectorInstrumentation::willFireObserverCallback(*context, "IntersectionObserver"_s);
-
     auto takenRecords = takeRecords();
-    m_callback->handleEvent(WTFMove(takenRecords.records), *this);
 
-    InspectorInstrumentation::didFireObserverCallback(cookie);
+    InspectorInstrumentation::willFireObserverCallback(*context, "IntersectionObserver"_s);
+    m_callback->handleEvent(WTFMove(takenRecords.records), *this);
+    InspectorInstrumentation::didFireObserverCallback(*context);
 }
 
 bool IntersectionObserver::hasPendingActivity() const
 {
     return (hasObservationTargets() && trackingDocument()) || !m_queuedEntries.isEmpty();
@@ -278,15 +277,10 @@
 const char* IntersectionObserver::activeDOMObjectName() const
 {
     return "IntersectionObserver";
 }
 
-bool IntersectionObserver::canSuspendForDocumentSuspension() const
-{
-    return true;
-}
-
 void IntersectionObserver::stop()
 {
     disconnect();
     m_callback = nullptr;
     m_queuedEntries.clear();
