diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGInPlaceAbstractState.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGInPlaceAbstractState.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGInPlaceAbstractState.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGInPlaceAbstractState.h
@@ -165,17 +165,15 @@
     {
         activateVariableIfNecessary(index);
         return fastForward(m_variables[index]);
     }
 
-    AbstractValue& operand(int operand)
+    AbstractValue& operand(Operand operand)
     {
         return variableAt(m_variables.operandIndex(operand));
     }
 
-    AbstractValue& operand(VirtualRegister operand) { return this->operand(operand.offset()); }
-
     AbstractValue& local(size_t index)
     {
         return variableAt(m_variables.localIndex(index));
     }
 
@@ -255,11 +253,11 @@
     // This method is evil - it causes a huge maintenance headache and there is a gross amount of
     // code devoted to it. It would be much nicer to just always run the constant folder on each
     // block. But, the last time we did it, it was a 1% SunSpider regression:
     // https://bugs.webkit.org/show_bug.cgi?id=133947
     // So, we should probably keep this method.
-    void setFoundConstants(bool foundConstants) { m_foundConstants = foundConstants; }
+    void setShouldTryConstantFolding(bool tryConstantFolding) { m_shouldTryConstantFolding = tryConstantFolding; }
 
     void setProofStatus(Edge& edge, ProofStatus status)
     {
         edge.setProofStatus(status);
     }
@@ -281,11 +279,11 @@
     FlowMap<AbstractValue>& m_abstractValues;
     Operands<AbstractValue> m_variables;
     FastBitVector m_activeVariables;
     BasicBlock* m_block;
 
-    bool m_foundConstants;
+    bool m_shouldTryConstantFolding;
 
     bool m_isValid;
     AbstractInterpreterClobberState m_clobberState;
     StructureClobberState m_structureClobberState;
     AbstractValueClobberEpoch m_epochAtHead;
