diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderQuote.cpp b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderQuote.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderQuote.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderQuote.cpp
@@ -68,11 +68,11 @@
     }
 }
 
 const unsigned maxDistinctQuoteCharacters = 16;
 
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
 
 static void checkNumberOfDistinctQuoteCharacters(UChar character)
 {
     ASSERT(character);
     static UChar distinctQuoteCharacters[maxDistinctQuoteCharacters];
@@ -85,11 +85,11 @@
         }
     }
     ASSERT_NOT_REACHED();
 }
 
-#endif
+#endif // ASSERT_ENABLED
 
 struct QuotesForLanguage {
     const char* language;
     UChar open1;
     UChar close1;
@@ -257,11 +257,11 @@
         { "zu",         0x201c, 0x201d, 0x2018, 0x2019 },
     };
 
     const unsigned maxLanguageLength = 8;
 
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     // One time check that the table meets the constraints that the code below relies on.
 
     static bool didOneTimeCheck = false;
     if (!didOneTimeCheck) {
         didOneTimeCheck = true;
@@ -282,11 +282,11 @@
             checkNumberOfDistinctQuoteCharacters(quoteTable[i].close1);
             checkNumberOfDistinctQuoteCharacters(quoteTable[i].open2);
             checkNumberOfDistinctQuoteCharacters(quoteTable[i].close2);
         }
     }
-#endif
+#endif // ASSERT_ENABLED
 
     unsigned length = language.length();
     if (!length || length > maxLanguageLength)
         return 0;
 
