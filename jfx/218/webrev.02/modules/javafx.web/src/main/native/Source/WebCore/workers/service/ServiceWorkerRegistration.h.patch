diff a/modules/javafx.web/src/main/native/Source/WebCore/workers/service/ServiceWorkerRegistration.h b/modules/javafx.web/src/main/native/Source/WebCore/workers/service/ServiceWorkerRegistration.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/workers/service/ServiceWorkerRegistration.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/workers/service/ServiceWorkerRegistration.h
@@ -27,17 +27,17 @@
 
 #if ENABLE(SERVICE_WORKER)
 
 #include "ActiveDOMObject.h"
 #include "EventTarget.h"
-#include "JSDOMPromiseDeferred.h"
 #include "SWClientConnection.h"
 #include "ServiceWorkerRegistrationData.h"
 #include "Timer.h"
 
 namespace WebCore {
 
+class DeferredPromise;
 class ScriptExecutionContext;
 class ServiceWorker;
 class ServiceWorkerContainer;
 
 class ServiceWorkerRegistration final : public RefCounted<ServiceWorkerRegistration>, public EventTargetWithInlineData, public ActiveDOMObject {
@@ -51,11 +51,11 @@
 
     ServiceWorker* installing();
     ServiceWorker* waiting();
     ServiceWorker* active();
 
-    ServiceWorker* getNewestWorker();
+    ServiceWorker* getNewestWorker() const;
 
     const String& scope() const;
 
     ServiceWorkerUpdateViaCache updateViaCache() const;
     void setUpdateViaCache(ServiceWorkerUpdateViaCache);
@@ -66,46 +66,41 @@
     bool needsUpdate() const { return lastUpdateTime() && (WallTime::now() - lastUpdateTime()) > 86400_s; }
 
     void update(Ref<DeferredPromise>&&);
     void unregister(Ref<DeferredPromise>&&);
 
-    void scheduleSoftUpdate();
-
     using RefCounted::ref;
     using RefCounted::deref;
 
     const ServiceWorkerRegistrationData& data() const { return m_registrationData; }
 
     void updateStateFromServer(ServiceWorkerRegistrationState, RefPtr<ServiceWorker>&&);
-    void fireUpdateFoundEvent();
+    void queueTaskToFireUpdateFoundEvent();
+
+    // ActiveDOMObject.
+    bool hasPendingActivity() const final;
 
 private:
     ServiceWorkerRegistration(ScriptExecutionContext&, Ref<ServiceWorkerContainer>&&, ServiceWorkerRegistrationData&&);
-    void updatePendingActivityForEventDispatch();
 
     EventTargetInterface eventTargetInterface() const final;
     ScriptExecutionContext* scriptExecutionContext() const final;
     void refEventTarget() final { ref(); }
     void derefEventTarget() final { deref(); }
 
-    void softUpdate();
-
     // ActiveDOMObject.
     const char* activeDOMObjectName() const final;
-    bool canSuspendForDocumentSuspension() const final;
     void stop() final;
 
     ServiceWorkerRegistrationData m_registrationData;
     Ref<ServiceWorkerContainer> m_container;
 
     RefPtr<ServiceWorker> m_installingWorker;
     RefPtr<ServiceWorker> m_waitingWorker;
     RefPtr<ServiceWorker> m_activeWorker;
 
     bool m_isStopped { false };
-    RefPtr<PendingActivity<ServiceWorkerRegistration>> m_pendingActivityForEventDispatch;
-    Timer m_softUpdateTimer;
 };
 
 } // namespace WebCore
 
 #endif // ENABLE(SERVICE_WORKER)
