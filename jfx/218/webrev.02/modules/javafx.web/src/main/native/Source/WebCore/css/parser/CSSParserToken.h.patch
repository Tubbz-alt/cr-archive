diff a/modules/javafx.web/src/main/native/Source/WebCore/css/parser/CSSParserToken.h b/modules/javafx.web/src/main/native/Source/WebCore/css/parser/CSSParserToken.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/css/parser/CSSParserToken.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/css/parser/CSSParserToken.h
@@ -125,11 +125,11 @@
     NumericSign numericSign() const;
     NumericValueType numericValueType() const;
     double numericValue() const;
     HashTokenType getHashTokenType() const { ASSERT(m_type == HashToken); return m_hashTokenType; }
     BlockType getBlockType() const { return static_cast<BlockType>(m_blockType); }
-    CSSPrimitiveValue::UnitType unitType() const { return static_cast<CSSPrimitiveValue::UnitType>(m_unit); }
+    CSSUnitType unitType() const { return static_cast<CSSUnitType>(m_unit); }
     UChar32 unicodeRangeStart() const { ASSERT(m_type == UnicodeRangeToken); return m_unicodeRange.start; }
     UChar32 unicodeRangeEnd() const { ASSERT(m_type == UnicodeRangeToken); return m_unicodeRange.end; }
     CSSValueID id() const;
     CSSValueID functionId() const;
 
@@ -150,11 +150,11 @@
     }
     unsigned m_type : 6; // CSSParserTokenType
     unsigned m_blockType : 2; // BlockType
     unsigned m_numericValueType : 1; // NumericValueType
     unsigned m_numericSign : 2; // NumericSign
-    unsigned m_unit : 7; // CSSPrimitiveValue::UnitType
+    unsigned m_unit : 7; // CSSUnitType
 
     bool valueDataCharRawEqual(const CSSParserToken& other) const;
 
     // m_value... is an unpacked StringView so that we can pack it
     // tightly with the rest of this object for a smaller object size.
