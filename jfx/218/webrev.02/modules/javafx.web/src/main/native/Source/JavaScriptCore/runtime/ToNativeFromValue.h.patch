diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ToNativeFromValue.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ToNativeFromValue.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ToNativeFromValue.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ToNativeFromValue.h
@@ -36,17 +36,17 @@
         return Adaptor::toNativeFromInt32(value.asInt32());
     return Adaptor::toNativeFromDouble(value.asDouble());
 }
 
 template<typename Adaptor>
-typename Adaptor::Type toNativeFromValue(ExecState* exec, JSValue value)
+typename Adaptor::Type toNativeFromValue(JSGlobalObject* globalObject, JSValue value)
 {
     if (value.isInt32())
         return Adaptor::toNativeFromInt32(value.asInt32());
     if (value.isNumber())
         return Adaptor::toNativeFromDouble(value.asDouble());
-    return Adaptor::toNativeFromDouble(value.toNumber(exec));
+    return Adaptor::toNativeFromDouble(value.toNumber(globalObject));
 }
 
 template<typename Adaptor>
 Optional<typename Adaptor::Type> toNativeFromValueWithoutCoercion(JSValue value)
 {
