diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/MarkingConstraintSet.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/MarkingConstraintSet.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/MarkingConstraintSet.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/MarkingConstraintSet.cpp
@@ -81,12 +81,11 @@
 }
 
 bool MarkingConstraintSet::executeConvergence(SlotVisitor& visitor)
 {
     bool result = executeConvergenceImpl(visitor);
-    if (Options::logGC())
-        dataLog(" ");
+    dataLogIf(Options::logGC(), " ");
     return result;
 }
 
 bool MarkingConstraintSet::isWavefrontAdvancing(SlotVisitor& visitor)
 {
@@ -102,12 +101,11 @@
     SuperSamplerScope superSamplerScope(false);
     MarkingConstraintSolver solver(*this);
 
     unsigned iteration = m_iteration++;
 
-    if (Options::logGC())
-        dataLog("i#", iteration, ":");
+    dataLogIf(Options::logGC(), "i#", iteration, ":");
 
     if (iteration == 1) {
         // First iteration is before any visitor draining, so it's unlikely to trigger any constraints
         // other than roots.
         solver.drain(m_unexecutedRoots);
@@ -172,11 +170,10 @@
 
 void MarkingConstraintSet::executeAll(SlotVisitor& visitor)
 {
     for (auto& constraint : m_set)
         constraint->execute(visitor);
-    if (Options::logGC())
-        dataLog(" ");
+    dataLogIf(Options::logGC(), " ");
 }
 
 } // namespace JSC
 
