diff a/modules/javafx.web/src/main/native/Source/WebCore/css/CSSTimingFunctionValue.cpp b/modules/javafx.web/src/main/native/Source/WebCore/css/CSSTimingFunctionValue.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/css/CSSTimingFunctionValue.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/css/CSSTimingFunctionValue.cpp
@@ -30,21 +30,11 @@
 
 namespace WebCore {
 
 String CSSCubicBezierTimingFunctionValue::customCSSText() const
 {
-    StringBuilder builder;
-    builder.appendLiteral("cubic-bezier(");
-    builder.appendFixedPrecisionNumber(m_x1);
-    builder.appendLiteral(", ");
-    builder.appendFixedPrecisionNumber(m_y1);
-    builder.appendLiteral(", ");
-    builder.appendFixedPrecisionNumber(m_x2);
-    builder.appendLiteral(", ");
-    builder.appendFixedPrecisionNumber(m_y2);
-    builder.append(')');
-    return builder.toString();
+    return makeString("cubic-bezier(", m_x1, ", ", m_y1, ", ", m_x2, ", ", m_y2, ')');
 }
 
 bool CSSCubicBezierTimingFunctionValue::equals(const CSSCubicBezierTimingFunctionValue& other) const
 {
     return m_x1 == other.m_x1 && m_x2 == other.m_x2 && m_y1 == other.m_y1 && m_y2 == other.m_y2;
@@ -69,17 +59,17 @@
 
 String CSSSpringTimingFunctionValue::customCSSText() const
 {
     StringBuilder builder;
     builder.appendLiteral("spring(");
-    builder.appendFixedPrecisionNumber(m_mass);
+    builder.append(FormattedNumber::fixedPrecision(m_mass));
     builder.append(' ');
-    builder.appendFixedPrecisionNumber(m_stiffness);
+    builder.append(FormattedNumber::fixedPrecision(m_stiffness));
     builder.append(' ');
-    builder.appendFixedPrecisionNumber(m_damping);
+    builder.append(FormattedNumber::fixedPrecision(m_damping));
     builder.append(' ');
-    builder.appendFixedPrecisionNumber(m_initialVelocity);
+    builder.append(FormattedNumber::fixedPrecision(m_initialVelocity));
     builder.append(')');
     return builder.toString();
 }
 
 bool CSSSpringTimingFunctionValue::equals(const CSSSpringTimingFunctionValue& other) const
