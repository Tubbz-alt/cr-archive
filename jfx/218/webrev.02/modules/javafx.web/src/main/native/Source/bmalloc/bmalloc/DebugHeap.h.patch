diff a/modules/javafx.web/src/main/native/Source/bmalloc/bmalloc/DebugHeap.h b/modules/javafx.web/src/main/native/Source/bmalloc/bmalloc/DebugHeap.h
--- a/modules/javafx.web/src/main/native/Source/bmalloc/bmalloc/DebugHeap.h
+++ b/modules/javafx.web/src/main/native/Source/bmalloc/bmalloc/DebugHeap.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2016-2018 Apple Inc. All rights reserved.
+ * Copyright (C) 2016-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -24,10 +24,11 @@
  */
 
 #pragma once
 
 #include "Environment.h"
+#include "FailureAction.h"
 #include "Mutex.h"
 #include "StaticPerProcess.h"
 #include <mutex>
 #include <unordered_map>
 
@@ -37,15 +38,15 @@
 
 namespace bmalloc {
 
 class DebugHeap : private StaticPerProcess<DebugHeap> {
 public:
-    DebugHeap(std::lock_guard<Mutex>&);
+    DebugHeap(const LockHolder&);
 
-    void* malloc(size_t, bool crashOnFailure);
-    void* memalign(size_t alignment, size_t, bool crashOnFailure);
-    void* realloc(void*, size_t, bool crashOnFailure);
+    void* malloc(size_t, FailureAction);
+    void* memalign(size_t alignment, size_t, FailureAction);
+    void* realloc(void*, size_t, FailureAction);
     void free(void*);
 
     void* memalignLarge(size_t alignment, size_t);
     void freeLarge(void* base);
 
