diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/ftl/FTLSlowPathCall.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/ftl/FTLSlowPathCall.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/ftl/FTLSlowPathCall.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/ftl/FTLSlowPathCall.h
@@ -81,11 +81,11 @@
     FunctionPtr<CFunctionPtrTag> function, GPRReg resultGPR, ArgumentTypes... arguments)
 {
     SlowPathCall call;
     {
         SlowPathCallContext context(usedRegisters, jit, sizeof...(ArgumentTypes) + 1, resultGPR);
-        jit.setupArguments<void(ExecState*, ArgumentTypes...)>(arguments...);
+        jit.setupArguments<void(ArgumentTypes...)>(arguments...);
         call = context.makeCall(vm, function);
     }
     if (exceptionTarget)
         exceptionTarget->append(jit.emitExceptionCheck(vm));
     return call;
@@ -98,11 +98,11 @@
     ArgumentTypes... arguments)
 {
     if (callSiteIndex) {
         jit.store32(
             CCallHelpers::TrustedImm32(callSiteIndex.bits()),
-            CCallHelpers::tagFor(CallFrameSlot::argumentCount));
+            CCallHelpers::tagFor(VirtualRegister(CallFrameSlot::argumentCountIncludingThis)));
     }
     return callOperation(vm, usedRegisters, jit, exceptionTarget, function, resultGPR, arguments...);
 }
 
 CallSiteIndex callSiteIndexForCodeOrigin(State&, CodeOrigin);
