diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecompiler/RegisterID.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecompiler/RegisterID.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecompiler/RegisterID.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecompiler/RegisterID.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2008 Apple Inc. All rights reserved.
+ * Copyright (C) 2008-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  *
@@ -41,42 +41,42 @@
         friend class VirtualRegister;
     public:
         RegisterID()
             : m_refCount(0)
             , m_isTemporary(false)
-#ifndef NDEBUG
+#if ASSERT_ENABLED
             , m_didSetIndex(false)
 #endif
         {
         }
 
         RegisterID(VirtualRegister virtualRegister)
             : m_refCount(0)
             , m_virtualRegister(virtualRegister)
             , m_isTemporary(false)
-#ifndef NDEBUG
+#if ASSERT_ENABLED
             , m_didSetIndex(true)
 #endif
         {
         }
 
         explicit RegisterID(int index)
             : m_refCount(0)
             , m_virtualRegister(VirtualRegister(index))
             , m_isTemporary(false)
-#ifndef NDEBUG
+#if ASSERT_ENABLED
             , m_didSetIndex(true)
 #endif
         {
         }
 
-        void setIndex(int index)
+        void setIndex(VirtualRegister index)
         {
-#ifndef NDEBUG
+#if ASSERT_ENABLED
             m_didSetIndex = true;
 #endif
-            m_virtualRegister = VirtualRegister(index);
+            m_virtualRegister = index;
         }
 
         void setTemporary()
         {
             m_isTemporary = true;
@@ -118,19 +118,19 @@
     private:
 
         int m_refCount;
         VirtualRegister m_virtualRegister;
         bool m_isTemporary;
-#ifndef NDEBUG
+#if ASSERT_ENABLED
         bool m_didSetIndex;
 #endif
     };
 } // namespace JSC
 
 namespace WTF {
 
     template<> struct VectorTraits<JSC::RegisterID> : VectorTraitsBase<true, JSC::RegisterID> {
-        static const bool needsInitialization = true;
-        static const bool canInitializeWithMemset = true; // Default initialization just sets everything to 0 or false, so this is safe.
+        static constexpr bool needsInitialization = true;
+        static constexpr bool canInitializeWithMemset = true; // Default initialization just sets everything to 0 or false, so this is safe.
     };
 
 } // namespace WTF
