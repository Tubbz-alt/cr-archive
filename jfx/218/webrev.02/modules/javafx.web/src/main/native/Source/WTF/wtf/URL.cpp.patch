diff a/modules/javafx.web/src/main/native/Source/WTF/wtf/URL.cpp b/modules/javafx.web/src/main/native/Source/WTF/wtf/URL.cpp
--- a/modules/javafx.web/src/main/native/Source/WTF/wtf/URL.cpp
+++ b/modules/javafx.web/src/main/native/Source/WTF/wtf/URL.cpp
@@ -43,11 +43,11 @@
 namespace WTF {
 
 typedef Vector<char, 512> CharBuffer;
 typedef Vector<UChar, 512> UCharBuffer;
 
-static const unsigned invalidPortNumber = 0xFFFF;
+static constexpr unsigned invalidPortNumber = 0xFFFF;
 
 // Copies the source to the destination, assuming all the source characters are
 // ASCII. The destination buffer must be large enough. Null characters are allowed
 // in the source string, and no attempt is made to null-terminate the result.
 static void copyASCII(const String& string, char* dest)
@@ -376,10 +376,16 @@
         URLParser parser(makeString(*canonicalized, ":", m_string));
         *this = parser.result();
         return true;
     }
 
+    if ((m_passwordEnd != m_userStart || port()) && *canonicalized == "file")
+        return true;
+
+    if (isLocalFile() && host().isEmpty())
+        return true;
+
     URLParser parser(makeString(*canonicalized, m_string.substring(m_schemeEnd)));
     *this = parser.result();
     return true;
 }
 
@@ -466,10 +472,19 @@
 
     URLParser parser(makeString(StringView(m_string).left(portStart), (colonNeeded ? ":" : ""), static_cast<unsigned>(i), StringView(m_string).substring(m_hostEnd + m_portLength)));
     *this = parser.result();
 }
 
+void URL::removeHostAndPort()
+{
+    if (!m_isValid)
+        return;
+    if (!host().isEmpty())
+        setHost({ });
+    removePort();
+}
+
 void URL::setHostAndPort(const String& hostAndPort)
 {
     if (!m_isValid)
         return;
 
