diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/JITCode.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/JITCode.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/JITCode.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/JITCode.h
@@ -190,10 +190,11 @@
 
     virtual DFG::CommonData* dfgCommon();
     virtual DFG::JITCode* dfg();
     virtual FTL::JITCode* ftl();
     virtual FTL::ForOSREntryJITCode* ftlForOSREntry();
+    virtual void shrinkToFit(const ConcurrentJSLocker&);
 
     virtual void validateReferences(const TrackedReferences&);
 
     JSValue execute(VM*, ProtoCallFrame*);
 
@@ -235,11 +236,13 @@
 
 protected:
     CodeRef<JSEntryPtrTag> m_ref;
 };
 
+DECLARE_ALLOCATOR_WITH_HEAP_IDENTIFIER(DirectJITCode);
 class DirectJITCode : public JITCodeWithCodeRef {
+    WTF_MAKE_STRUCT_FAST_ALLOCATED_WITH_HEAP_IDENTIFIER(DirectJITCode);
 public:
     DirectJITCode(JITType);
     DirectJITCode(CodeRef<JSEntryPtrTag>, CodePtr<JSEntryPtrTag> withArityCheck, JITType, JITCode::ShareAttribute = JITCode::ShareAttribute::NotShared);
     DirectJITCode(CodeRef<JSEntryPtrTag>, CodePtr<JSEntryPtrTag> withArityCheck, JITType, Intrinsic, JITCode::ShareAttribute = JITCode::ShareAttribute::NotShared); // For generated thunk.
     virtual ~DirectJITCode();
