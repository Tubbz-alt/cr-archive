diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/JITDivGenerator.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/JITDivGenerator.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/JITDivGenerator.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/JITDivGenerator.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2015 Apple Inc. All rights reserved.
+ * Copyright (C) 2015-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -122,17 +122,17 @@
     notInt32.link(&jit);
 #if USE(JSVALUE64)
     jit.moveDoubleTo64(m_leftFPR, m_scratchGPR);
     CCallHelpers::Jump notDoubleZero = jit.branchTest64(CCallHelpers::NonZero, m_scratchGPR);
 
-    jit.move(GPRInfo::tagTypeNumberRegister, m_result.payloadGPR());
+    jit.move(GPRInfo::numberTagRegister, m_result.payloadGPR());
     m_endJumpList.append(jit.jump());
 
     notDoubleZero.link(&jit);
 #endif
     if (m_arithProfile)
-        jit.or32(CCallHelpers::TrustedImm32(ArithProfile::specialFastPathBit), CCallHelpers::AbsoluteAddress(m_arithProfile->addressOfBits()));
+        m_arithProfile->emitUnconditionalSet(jit, BinaryArithProfile::specialFastPathBit);
     jit.boxDouble(m_leftFPR, m_result);
 }
 
 } // namespace JSC
 
