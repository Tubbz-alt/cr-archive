diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/parser/ParserTokens.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/parser/ParserTokens.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/parser/ParserTokens.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/parser/ParserTokens.h
@@ -83,11 +83,11 @@
     CATCH,
     FINALLY,
     DEBUGGER,
     ELSE,
     IMPORT,
-    EXPORT,
+    EXPORT_,
     CLASSTOKEN,
     EXTENDS,
     SUPER,
 
     // Contextual keywords
@@ -195,11 +195,17 @@
 };
 static_assert(static_cast<unsigned>(POW) <= 0x00ffffffU, "JSTokenType must be 24bits.");
 
 struct JSTextPosition {
     JSTextPosition() = default;
-    JSTextPosition(int _line, int _offset, int _lineStartOffset) : line(_line), offset(_offset), lineStartOffset(_lineStartOffset) { }
+    JSTextPosition(int _line, int _offset, int _lineStartOffset)
+        : line(_line)
+        , offset(_offset)
+        , lineStartOffset(_lineStartOffset)
+    {
+        checkConsistency();
+    }
 
     JSTextPosition operator+(int adjustment) const { return JSTextPosition(line, offset + adjustment, lineStartOffset); }
     JSTextPosition operator+(unsigned adjustment) const { return *this + static_cast<int>(adjustment); }
     JSTextPosition operator-(int adjustment) const { return *this + (- adjustment); }
     JSTextPosition operator-(unsigned adjustment) const { return *this + (- static_cast<int>(adjustment)); }
@@ -215,13 +221,23 @@
     bool operator!=(const JSTextPosition& other) const
     {
         return !(*this == other);
     }
 
-    int line { 0 };
-    int offset { 0 };
-    int lineStartOffset { 0 };
+    int column() const { return offset - lineStartOffset; }
+    void checkConsistency()
+    {
+        // FIXME: We should test ASSERT(offset >= lineStartOffset); but that breaks a lot of tests.
+        ASSERT(line >= 0);
+        ASSERT(offset >= 0);
+        ASSERT(lineStartOffset >= 0);
+    }
+
+    // FIXME: these should be unsigned.
+    int line { -1 };
+    int offset { -1 };
+    int lineStartOffset { -1 };
 };
 
 union JSTokenData {
     struct {
         const Identifier* cooked;
