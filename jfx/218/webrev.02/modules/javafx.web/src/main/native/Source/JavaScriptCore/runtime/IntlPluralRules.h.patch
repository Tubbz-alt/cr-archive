diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/IntlPluralRules.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/IntlPluralRules.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/IntlPluralRules.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/IntlPluralRules.h
@@ -25,11 +25,11 @@
 
 #pragma once
 
 #if ENABLE(INTL)
 
-#include "JSDestructibleObject.h"
+#include "JSObject.h"
 #include <unicode/unum.h>
 #include <unicode/upluralrules.h>
 #include <unicode/uvernum.h>
 
 #define HAVE_ICU_PLURALRULES_KEYWORDS (U_ICU_VERSION_MAJOR_NUM >= 59)
@@ -38,27 +38,39 @@
 namespace JSC {
 
 class IntlPluralRulesConstructor;
 class JSBoundFunction;
 
-class IntlPluralRules final : public JSDestructibleObject {
+class IntlPluralRules final : public JSNonFinalObject {
 public:
-    typedef JSDestructibleObject Base;
+    using Base = JSNonFinalObject;
+
+    static constexpr bool needsDestruction = true;
+
+    static void destroy(JSCell* cell)
+    {
+        static_cast<IntlPluralRules*>(cell)->IntlPluralRules::~IntlPluralRules();
+    }
+
+    template<typename CellType, SubspaceAccess mode>
+    static IsoSubspace* subspaceFor(VM& vm)
+    {
+        return vm.intlPluralRulesSpace<mode>();
+    }
 
     static IntlPluralRules* create(VM&, Structure*);
     static Structure* createStructure(VM&, JSGlobalObject*, JSValue);
 
     DECLARE_INFO;
 
-    void initializePluralRules(ExecState&, JSValue locales, JSValue options);
-    JSValue select(ExecState&, double value);
-    JSObject* resolvedOptions(ExecState&);
+    void initializePluralRules(JSGlobalObject*, JSValue locales, JSValue options);
+    JSValue select(JSGlobalObject*, double value);
+    JSObject* resolvedOptions(JSGlobalObject*);
 
 protected:
     IntlPluralRules(VM&, Structure*);
     void finishCreation(VM&);
-    static void destroy(JSCell*);
     static void visitChildren(JSCell*, SlotVisitor&);
 
 private:
     struct UPluralRulesDeleter {
         void operator()(UPluralRules*) const;
