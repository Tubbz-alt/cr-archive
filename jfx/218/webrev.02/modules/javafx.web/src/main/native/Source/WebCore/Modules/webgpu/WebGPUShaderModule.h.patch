diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WebGPUShaderModule.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WebGPUShaderModule.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WebGPUShaderModule.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WebGPUShaderModule.h
@@ -26,26 +26,33 @@
 #pragma once
 
 #if ENABLE(WEBGPU)
 
 #include "GPUShaderModule.h"
-
+#include <wtf/Forward.h>
 #include <wtf/RefCounted.h>
-#include <wtf/RefPtr.h>
 
 namespace WebCore {
 
+class WebGPUDevice;
+
 class WebGPUShaderModule : public RefCounted<WebGPUShaderModule> {
 public:
-    static Ref<WebGPUShaderModule> create(RefPtr<GPUShaderModule>&&);
+    static Ref<WebGPUShaderModule> create(RefPtr<GPUShaderModule>&&, const String& source);
 
-    const GPUShaderModule* module() const { return m_module.get(); }
+    GPUShaderModule* module() const { return m_module.get(); }
+    const String& source() const { return m_source; }
+
+    void update(const WebGPUDevice&, const String& source);
 
 private:
-    WebGPUShaderModule(RefPtr<GPUShaderModule>&&);
+    WebGPUShaderModule(RefPtr<GPUShaderModule>&&, const String& source);
 
     RefPtr<GPUShaderModule> m_module;
+
+    // Preserved for Web Inspector recompilation.
+    String m_source;
 };
 
 } // namespace WebCore
 
 #endif // ENABLE(WEBGPU)
