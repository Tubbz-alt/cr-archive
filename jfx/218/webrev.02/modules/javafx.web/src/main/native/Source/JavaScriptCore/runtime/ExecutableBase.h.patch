diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ExecutableBase.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ExecutableBase.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ExecutableBase.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ExecutableBase.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2009-2018 Apple Inc. All rights reserved.
+ * Copyright (C) 2009-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -55,11 +55,11 @@
     return false;
 }
 
 class ExecutableBase : public JSCell {
     friend class JIT;
-    friend MacroAssemblerCodeRef<JITThunkPtrTag> boundThisNoArgsFunctionCallGenerator(VM*);
+    friend MacroAssemblerCodeRef<JITThunkPtrTag> boundFunctionCallGenerator(VM*);
 
 protected:
     ExecutableBase(VM& vm, Structure* structure)
         : JSCell(vm, structure)
     {
@@ -70,13 +70,13 @@
         Base::finishCreation(vm);
     }
 
 public:
     typedef JSCell Base;
-    static const unsigned StructureFlags = Base::StructureFlags;
+    static constexpr unsigned StructureFlags = Base::StructureFlags;
 
-    static const bool needsDestruction = true;
+    static constexpr bool needsDestruction = true;
     static void destroy(JSCell*);
 
     // Force subclasses to override this.
     template<typename, SubspaceAccess>
     static void subspaceFor(VM&) { }
