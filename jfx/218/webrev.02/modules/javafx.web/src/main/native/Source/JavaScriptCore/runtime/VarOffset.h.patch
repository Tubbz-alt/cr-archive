diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/VarOffset.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/VarOffset.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/VarOffset.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/VarOffset.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2015 Apple Inc. All rights reserved.
+ * Copyright (C) 2015-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -167,11 +167,11 @@
         return m_offset;
     }
 
     void checkSanity() const
     {
-        if (ASSERT_DISABLED)
+        if (!ASSERT_ENABLED)
             return;
 
         switch (m_kind) {
         case VarKind::Invalid:
             ASSERT(m_offset == UINT_MAX);
@@ -219,11 +219,11 @@
 };
 
 struct VarOffsetHash {
     static unsigned hash(const VarOffset& key) { return key.hash(); }
     static bool equal(const VarOffset& a, const VarOffset& b) { return a == b; }
-    static const bool safeToCompareToEmptyOrDeleted = true;
+    static constexpr bool safeToCompareToEmptyOrDeleted = true;
 };
 
 } // namespace JSC
 
 namespace WTF {
@@ -235,9 +235,9 @@
     typedef JSC::VarOffsetHash Hash;
 };
 
 template<typename T> struct HashTraits;
 template<> struct HashTraits<JSC::VarOffset> : SimpleClassHashTraits<JSC::VarOffset> {
-    static const bool emptyValueIsZero = false;
+    static constexpr bool emptyValueIsZero = false;
 };
 
 } // namespace WTF
