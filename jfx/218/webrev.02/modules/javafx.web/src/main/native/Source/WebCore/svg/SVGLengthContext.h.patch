diff a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGLengthContext.h b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGLengthContext.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGLengthContext.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGLengthContext.h
@@ -1,7 +1,8 @@
 /*
  * Copyright (C) Research In Motion Limited 2011. All rights reserved.
+ * Copyright (C) 2019 Apple Inc. All rights reserved.
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Library General Public
  * License as published by the Free Software Foundation; either
  * version 2 of the License, or (at your option) any later version.
@@ -19,39 +20,19 @@
 
 #pragma once
 
 #include "ExceptionOr.h"
 #include "FloatRect.h"
+#include "SVGLengthValue.h"
 #include "SVGUnitTypes.h"
 
 namespace WebCore {
 
 class SVGElement;
-class SVGLengthValue;
 
 struct Length;
 
-enum SVGLengthType {
-    LengthTypeUnknown = 0,
-    LengthTypeNumber,
-    LengthTypePercentage,
-    LengthTypeEMS,
-    LengthTypeEXS,
-    LengthTypePX,
-    LengthTypeCM,
-    LengthTypeMM,
-    LengthTypeIN,
-    LengthTypePT,
-    LengthTypePC
-};
-
-enum SVGLengthMode {
-    LengthModeWidth = 0,
-    LengthModeHeight,
-    LengthModeOther
-};
-
 class SVGLengthContext {
 public:
     explicit SVGLengthContext(const SVGElement*);
 
     template<typename T>
@@ -62,13 +43,13 @@
 
     static FloatRect resolveRectangle(const SVGElement*, SVGUnitTypes::SVGUnitType, const FloatRect& viewport, const SVGLengthValue& x, const SVGLengthValue& y, const SVGLengthValue& width, const SVGLengthValue& height);
     static FloatPoint resolvePoint(const SVGElement*, SVGUnitTypes::SVGUnitType, const SVGLengthValue& x, const SVGLengthValue& y);
     static float resolveLength(const SVGElement*, SVGUnitTypes::SVGUnitType, const SVGLengthValue&);
 
-    float valueForLength(const Length&, SVGLengthMode = LengthModeOther);
-    ExceptionOr<float> convertValueToUserUnits(float, SVGLengthMode, SVGLengthType fromUnit) const;
-    ExceptionOr<float> convertValueFromUserUnits(float, SVGLengthMode, SVGLengthType toUnit) const;
+    float valueForLength(const Length&, SVGLengthMode = SVGLengthMode::Other);
+    ExceptionOr<float> convertValueToUserUnits(float, SVGLengthType, SVGLengthMode) const;
+    ExceptionOr<float> convertValueFromUserUnits(float, SVGLengthType, SVGLengthMode) const;
 
     bool determineViewport(FloatSize&) const;
 
 private:
     SVGLengthContext(const SVGElement*, const FloatRect& viewport);
