diff a/modules/javafx.web/src/main/native/Source/WebCore/html/canvas/WebGLDebugShaders.cpp b/modules/javafx.web/src/main/native/Source/WebCore/html/canvas/WebGLDebugShaders.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/canvas/WebGLDebugShaders.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/canvas/WebGLDebugShaders.cpp
@@ -27,35 +27,36 @@
 
 #if ENABLE(WEBGL)
 
 #include "WebGLDebugShaders.h"
 
-#include "Extensions3D.h"
+#include "ExtensionsGL.h"
 #include "WebGLRenderingContextBase.h"
 #include "WebGLShader.h"
 
 namespace WebCore {
 
 WebGLDebugShaders::WebGLDebugShaders(WebGLRenderingContextBase& context)
     : WebGLExtension(context)
 {
+    context.graphicsContextGL()->getExtensions().ensureEnabled("GL_ANGLE_translated_shader_source");
 }
 
 WebGLDebugShaders::~WebGLDebugShaders() = default;
 
 WebGLExtension::ExtensionName WebGLDebugShaders::getName() const
 {
     return WebGLDebugShadersName;
 }
 
-String WebGLDebugShaders::getTranslatedShaderSource(WebGLShader* shader)
+String WebGLDebugShaders::getTranslatedShaderSource(WebGLShader& shader)
 {
     if (m_context.isContextLost())
         return String();
-    if (!m_context.validateWebGLObject("getTranslatedShaderSource", shader))
+    if (!m_context.validateWebGLObject("getTranslatedShaderSource", &shader))
         return emptyString();
-    return m_context.graphicsContext3D()->getExtensions().getTranslatedShaderSourceANGLE(shader->object());
+    return m_context.graphicsContextGL()->getExtensions().getTranslatedShaderSourceANGLE(shader.object());
 }
 
 } // namespace WebCore
 
 #endif // ENABLE(WEBGL)
