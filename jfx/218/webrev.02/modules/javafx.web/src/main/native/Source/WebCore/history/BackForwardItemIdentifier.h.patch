diff a/modules/javafx.web/src/main/native/Source/WebCore/history/BackForwardItemIdentifier.h b/modules/javafx.web/src/main/native/Source/WebCore/history/BackForwardItemIdentifier.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/history/BackForwardItemIdentifier.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/history/BackForwardItemIdentifier.h
@@ -36,14 +36,19 @@
     ProcessIdentifier processIdentifier;
     enum ItemIdentifierType { };
     ObjectIdentifier<ItemIdentifierType> itemIdentifier;
 
     unsigned hash() const;
+    explicit operator bool() const { return processIdentifier && itemIdentifier; }
 
     template<class Encoder> void encode(Encoder&) const;
     template<class Decoder> static Optional<BackForwardItemIdentifier> decode(Decoder&);
 
+    String string() const { return makeString(processIdentifier.toUInt64(), '-', itemIdentifier.toUInt64()); }
+
+    WEBCORE_EXPORT bool isValid() const;
+
 #if !LOG_DISABLED
     const char* logString() const;
 #endif
 };
 
@@ -59,10 +64,15 @@
 inline bool operator==(const BackForwardItemIdentifier& a, const BackForwardItemIdentifier& b)
 {
     return a.processIdentifier == b.processIdentifier &&  a.itemIdentifier == b.itemIdentifier;
 }
 
+inline bool operator!=(const BackForwardItemIdentifier& a, const BackForwardItemIdentifier& b)
+{
+    return !(a == b);
+}
+
 template<class Encoder>
 void BackForwardItemIdentifier::encode(Encoder& encoder) const
 {
     encoder << processIdentifier << itemIdentifier;
 }
@@ -78,11 +88,14 @@
     Optional<ObjectIdentifier<ItemIdentifierType>> itemIdentifier;
     decoder >> itemIdentifier;
     if (!itemIdentifier)
         return WTF::nullopt;
 
-    return { { WTFMove(*processIdentifier), WTFMove(*itemIdentifier) } };
+    BackForwardItemIdentifier result = { WTFMove(*processIdentifier), WTFMove(*itemIdentifier) };
+    if (!result.isValid())
+        return WTF::nullopt;
+    return result;
 }
 
 inline unsigned BackForwardItemIdentifier::hash() const
 {
     return computeHash(processIdentifier.toUInt64(), itemIdentifier.toUInt64());
