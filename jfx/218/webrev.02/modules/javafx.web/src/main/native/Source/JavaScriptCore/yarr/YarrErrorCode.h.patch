diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/yarr/YarrErrorCode.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/yarr/YarrErrorCode.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/yarr/YarrErrorCode.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/yarr/YarrErrorCode.h
@@ -25,32 +25,37 @@
 
 #pragma once
 
 namespace JSC {
 
-class ExecState;
+class CallFrame;
+class JSGlobalObject;
 class JSObject;
 
 namespace Yarr {
 
 enum class ErrorCode : uint8_t {
     NoError = 0,
     PatternTooLarge,
     QuantifierOutOfOrder,
     QuantifierWithoutAtom,
     QuantifierTooLarge,
+    QuantifierIncomplete,
     MissingParentheses,
+    BracketUnmatched,
     ParenthesesUnmatched,
     ParenthesesTypeInvalid,
     InvalidGroupName,
     DuplicateGroupName,
     CharacterClassUnmatched,
-    CharacterClassOutOfOrder,
+    CharacterClassRangeOutOfOrder,
+    CharacterClassRangeInvalid,
     EscapeUnterminated,
     InvalidUnicodeEscape,
     InvalidBackreference,
     InvalidIdentityEscape,
+    InvalidControlLetterEscape,
     InvalidUnicodePropertyExpression,
     TooManyDisjunctions,
     OffsetTooLarge,
     InvalidRegularExpressionFlags,
 };
@@ -65,8 +70,8 @@
 {
     // TooManyDisjunctions means that we ran out stack compiling.
     // All other errors are due to problems in the expression.
     return hasError(errorCode) && errorCode != ErrorCode::TooManyDisjunctions;
 }
-JS_EXPORT_PRIVATE JSObject* errorToThrow(ExecState*, ErrorCode);
+JS_EXPORT_PRIVATE JSObject* errorToThrow(JSGlobalObject*, ErrorCode);
 
 } } // namespace JSC::Yarr
