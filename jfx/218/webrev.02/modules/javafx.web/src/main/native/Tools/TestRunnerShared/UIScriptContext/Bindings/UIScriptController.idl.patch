diff a/modules/javafx.web/src/main/native/Tools/TestRunnerShared/UIScriptContext/Bindings/UIScriptController.idl b/modules/javafx.web/src/main/native/Tools/TestRunnerShared/UIScriptContext/Bindings/UIScriptController.idl
--- a/modules/javafx.web/src/main/native/Tools/TestRunnerShared/UIScriptContext/Bindings/UIScriptController.idl
+++ b/modules/javafx.web/src/main/native/Tools/TestRunnerShared/UIScriptContext/Bindings/UIScriptController.idl
@@ -57,13 +57,16 @@
     // resulting behavior may also be asynchronous. Points are in "global" (WKWebView) coordinates.
     void touchDownAtPoint(long x, long y, long touchCount, object callback);
     void liftUpAtPoint(long x, long y, long touchCount, object callback);
     void singleTapAtPoint(long x, long y, object callback);
     void singleTapAtPointWithModifiers(long x, long y, object modifierArray, object callback);
+    void twoFingerSingleTapAtPoint(long x, long y, object callback);
     void doubleTapAtPoint(long x, long y, float delay, object callback);
     void dragFromPointToPoint(long startX, long startY, long endX, long endY, double durationSeconds, object callback);
 
+    void activateAtPoint(long x, long y, object callback);
+
     void longPressAtPoint(long x, long y, object callback);
 
     void stylusDownAtPoint(long x, long y, float azimuthAngle, float altitudeAngle, float pressure, object callback);
     void stylusMoveToPoint(long x, long y, float azimuthAngle, float altitudeAngle, float pressure, object callback);
     void stylusUpAtPoint(long x, long y, object callback);
@@ -73,10 +76,11 @@
     void enterText(DOMString text);
     void typeCharacterUsingHardwareKeyboard(DOMString character, object callback);
 
     void keyDown(DOMString character, object modifierArray);
     void toggleCapsLock(object callback);
+    void setContinuousSpellCheckingEnabled(boolean enabled);
 
     void rawKeyDown(DOMString key);
     void rawKeyUp(DOMString key);
 
     // eventsJSON describes a series of user events in JSON form. For the keys, see HIDEventGenerator.mm.
@@ -198,13 +202,13 @@
 
     // Form control handling
     attribute object didStartFormControlInteractionCallback;
     attribute object didEndFormControlInteractionCallback;
 
-    // Force press preview handling
-    attribute object didShowForcePressPreviewCallback;
-    attribute object didDismissForcePressPreviewCallback;
+    // Pop Over preview handling
+    attribute object didShowContextMenuCallback;
+    attribute object didDismissContextMenuCallback;
 
     // <select> picker
     void selectFormAccessoryPickerRow(long rowIndex);
     readonly attribute DOMString selectFormPopoverTitle;
     readonly attribute DOMString formInputLabel;
@@ -214,10 +218,11 @@
     // Share sheet
     void setShareSheetCompletesImmediatelyWithResolution(boolean resolved);
 
     // <datalist>
     readonly attribute boolean isShowingDataListSuggestions;
+    void activateDataListSuggestion(unsigned long index, object callback);
 
     void keyboardAccessoryBarNext();
     void keyboardAccessoryBarPrevious();
 
     void applyAutocorrection(DOMString newString, DOMString oldString, object callback);
@@ -235,10 +240,12 @@
     attribute object didHideMenuCallback;
     readonly attribute boolean isDismissingMenu;
     readonly attribute boolean isShowingMenu;
     readonly attribute object menuRect;
     object rectForMenuAction(DOMString action);
+    void chooseMenuAction(DOMString action, object callback);
+    void dismissMenu();
 
     readonly attribute boolean isShowingPopover;
     attribute object willPresentPopoverCallback;
     attribute object didDismissPopoverCallback;
 
@@ -255,10 +262,12 @@
 
     void becomeFirstResponder();
     void resignFirstResponder();
     readonly attribute boolean isPresentingModally;
 
+    void copyText(DOMString text);
+
     readonly attribute double contentOffsetX;
     readonly attribute double contentOffsetY;
 
     attribute boolean scrollUpdatesDisabled; // Turns off notifications back to the web process after scrolls (used for testing scrolling tree).
 
