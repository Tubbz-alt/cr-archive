diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/JITRightShiftGenerator.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/JITRightShiftGenerator.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/JITRightShiftGenerator.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/JITRightShiftGenerator.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2015 Apple Inc. All rights reserved.
+ * Copyright (C) 2015-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -55,11 +55,11 @@
             if (m_shiftType == SignedShift)
                 jit.rshift32(CCallHelpers::Imm32(shiftAmount), m_result.payloadGPR());
             else
                 jit.urshift32(CCallHelpers::Imm32(shiftAmount), m_result.payloadGPR());
 #if USE(JSVALUE64)
-            jit.or64(GPRInfo::tagTypeNumberRegister, m_result.payloadGPR());
+            jit.or64(GPRInfo::numberTagRegister, m_result.payloadGPR());
 #endif
         }
 
         if (jit.supportsFloatingPointTruncate()) {
             m_endJumpList.append(jit.jump()); // Terminate the above case before emitting more code.
@@ -114,11 +114,11 @@
         if (m_shiftType == SignedShift)
             jit.rshift32(rightOperandGPR, m_result.payloadGPR());
         else
             jit.urshift32(rightOperandGPR, m_result.payloadGPR());
 #if USE(JSVALUE64)
-        jit.or64(GPRInfo::tagTypeNumberRegister, m_result.payloadGPR());
+        jit.or64(GPRInfo::numberTagRegister, m_result.payloadGPR());
 #endif
         if (m_leftOperand.isConstInt32())
             return;
 
         if (jit.supportsFloatingPointTruncate()) {
