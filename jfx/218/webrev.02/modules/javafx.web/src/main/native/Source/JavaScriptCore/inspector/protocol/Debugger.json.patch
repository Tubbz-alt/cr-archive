diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/protocol/Debugger.json b/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/protocol/Debugger.json
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/protocol/Debugger.json
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/protocol/Debugger.json
@@ -1,8 +1,9 @@
 {
     "domain": "Debugger",
     "description": "Debugger domain exposes JavaScript debugging capabilities. It allows setting and removing breakpoints, stepping through execution, exploring stack traces, etc.",
+    "targetTypes": ["javascript", "page", "service-worker", "worker"],
     "types": [
         {
             "id": "BreakpointId",
             "type": "string",
             "description": "Breakpoint identifier."
@@ -26,12 +27,12 @@
             "id": "Location",
             "type": "object",
             "description": "Location in the source code.",
             "properties": [
                 { "name": "scriptId", "$ref": "ScriptId", "description": "Script identifier as reported in the <code>Debugger.scriptParsed</code>." },
-                { "name": "lineNumber", "type": "integer", "description": "Line number in the script." },
-                { "name": "columnNumber", "type": "integer", "optional": true, "description": "Column number in the script." }
+                { "name": "lineNumber", "type": "integer", "description": "Line number in the script (0-based)." },
+                { "name": "columnNumber", "type": "integer", "optional": true, "description": "Column number in the script (0-based)." }
             ]
         },
         {
             "id": "BreakpointAction",
             "type": "object",
@@ -245,10 +246,17 @@
             ],
             "returns": [
                 { "name": "details", "$ref": "FunctionDetails", "description": "Information about the function." }
             ]
         },
+        {
+            "name": "setPauseOnDebuggerStatements",
+            "description": "Control whether the debugger pauses execution before `debugger` statements.",
+            "parameters": [
+                { "name": "enabled", "type": "boolean" }
+            ]
+        },
         {
             "name": "setPauseOnExceptions",
             "description": "Defines pause on exceptions state. Can be set to stop on all exceptions, uncaught exceptions or no exceptions. Initial pause on exceptions state is <code>none</code>.",
             "parameters": [
                 { "name": "state", "type": "string", "enum": ["none", "uncaught", "all"], "description": "Pause on exceptions mode." }
@@ -292,10 +300,20 @@
             "returns": [
                 { "name": "result", "$ref": "Runtime.RemoteObject", "description": "Object wrapper for the evaluation result." },
                 { "name": "wasThrown", "type": "boolean", "optional": true, "description": "True if the result was thrown during the evaluation." },
                 { "name": "savedResultIndex", "type": "integer", "optional": true, "description": "If the result was saved, this is the $n index that can be used to access the value." }
             ]
+        },
+        {
+            "name": "setShouldBlackboxURL",
+            "description": "Sets whether the given URL should be in the list of blackboxed scripts, which are ignored when pausing/stepping/debugging.",
+            "parameters": [
+                { "name": "url", "type": "string" },
+                { "name": "shouldBlackbox", "type": "boolean" },
+                { "name": "caseSensitive", "type": "boolean", "optional": true, "description": "If true, <code>url</code> is case sensitive." },
+                { "name": "isRegex", "type": "boolean", "optional": true, "description": "If true, treat <code>url</code> as regular expression." }
+            ]
         }
     ],
     "events": [
         {
             "name": "globalObjectCleared",
@@ -339,11 +357,11 @@
         {
             "name": "paused",
             "description": "Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.",
             "parameters": [
                 { "name": "callFrames", "type": "array", "items": { "$ref": "CallFrame" }, "description": "Call stack the virtual machine stopped on." },
-                { "name": "reason", "type": "string", "enum": ["XHR", "Fetch", "DOM", "AnimationFrame", "Interval", "Listener", "Timeout", "exception", "assert", "CSPViolation", "DebuggerStatement", "Breakpoint", "PauseOnNextStatement", "Microtask", "other"], "description": "Pause reason." },
+                { "name": "reason", "type": "string", "enum": ["XHR", "Fetch", "DOM", "AnimationFrame", "Interval", "Listener", "Timeout", "exception", "assert", "CSPViolation", "DebuggerStatement", "Breakpoint", "PauseOnNextStatement", "Microtask", "BlackboxedScript", "other"], "description": "Pause reason." },
                 { "name": "data", "type": "object", "optional": true, "description": "Object containing break-specific auxiliary properties." },
                 { "name": "asyncStackTrace", "$ref": "Console.StackTrace", "optional": true, "description": "Linked list of asynchronous StackTraces." }
             ]
         },
         {
