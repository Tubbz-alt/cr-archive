diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/HostCallReturnValue.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/HostCallReturnValue.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/HostCallReturnValue.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/HostCallReturnValue.cpp
@@ -38,15 +38,15 @@
 namespace JSC {
 
 // Note: getHostCallReturnValueWithExecState() needs to be placed before the
 // definition of getHostCallReturnValue() below because the Windows build
 // requires it.
-extern "C" EncodedJSValue HOST_CALL_RETURN_VALUE_OPTION getHostCallReturnValueWithExecState(ExecState* exec)
+extern "C" EncodedJSValue HOST_CALL_RETURN_VALUE_OPTION getHostCallReturnValueWithExecState(CallFrame* callFrame)
 {
-    if (!exec)
+    if (!callFrame)
         return JSValue::encode(JSValue());
-    return JSValue::encode(exec->vm().hostCallReturnValue);
+    return JSValue::encode(callFrame->deprecatedVM().hostCallReturnValue);
 }
 
 #if COMPILER(GCC_COMPATIBLE) && CPU(X86_64)
 asm (
 ".globl " SYMBOL_STRING(getHostCallReturnValue) "\n"
