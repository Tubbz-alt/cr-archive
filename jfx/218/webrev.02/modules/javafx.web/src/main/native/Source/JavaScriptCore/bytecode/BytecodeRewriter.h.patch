diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/BytecodeRewriter.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/BytecodeRewriter.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/BytecodeRewriter.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/BytecodeRewriter.h
@@ -171,11 +171,11 @@
         BytecodeGenerator& m_bytecodeGenerator;
         InstructionStreamWriter& m_writer;
         IncludeBranch& m_includeBranch;
     };
 
-    BytecodeRewriter(BytecodeGenerator& bytecodeGenerator, BytecodeGraph& graph, UnlinkedCodeBlock* codeBlock, InstructionStreamWriter& writer)
+    BytecodeRewriter(BytecodeGenerator& bytecodeGenerator, BytecodeGraph& graph, UnlinkedCodeBlockGenerator* codeBlock, InstructionStreamWriter& writer)
         : m_bytecodeGenerator(bytecodeGenerator)
         , m_graph(graph)
         , m_codeBlock(codeBlock)
         , m_writer(writer)
     {
@@ -225,20 +225,20 @@
     void adjustJumpTargets();
 
 private:
     void insertImpl(InsertionPoint, IncludeBranch, InstructionStreamWriter&& fragment);
 
-    friend class UnlinkedCodeBlock;
+    friend class UnlinkedCodeBlockGenerator;
     void applyModification();
     void adjustJumpTargetsInFragment(unsigned finalOffset, Insertion&);
 
     int adjustJumpTarget(InsertionPoint startPoint, InsertionPoint jumpTargetPoint);
     template<typename Iterator> int calculateDifference(Iterator begin, Iterator end);
 
     BytecodeGenerator& m_bytecodeGenerator;
     BytecodeGraph& m_graph;
-    UnlinkedCodeBlock* m_codeBlock;
+    UnlinkedCodeBlockGenerator* m_codeBlock;
     InstructionStreamWriter& m_writer;
     Vector<Insertion, 8> m_insertions;
 };
 
 template<typename Iterator>
