diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/StackFrame.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/StackFrame.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/StackFrame.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/StackFrame.cpp
@@ -36,14 +36,14 @@
 StackFrame::StackFrame(VM& vm, JSCell* owner, JSCell* callee)
     : m_callee(vm, owner, callee)
 {
 }
 
-StackFrame::StackFrame(VM& vm, JSCell* owner, JSCell* callee, CodeBlock* codeBlock, unsigned bytecodeOffset)
+StackFrame::StackFrame(VM& vm, JSCell* owner, JSCell* callee, CodeBlock* codeBlock, BytecodeIndex bytecodeIndex)
     : m_callee(vm, owner, callee)
     , m_codeBlock(vm, owner, codeBlock)
-    , m_bytecodeOffset(bytecodeOffset)
+    , m_bytecodeIndex(bytecodeIndex)
 {
 }
 
 StackFrame::StackFrame(Wasm::IndexOrName indexOrName)
     : m_wasmFunctionIndexOrName(indexOrName)
@@ -109,11 +109,11 @@
     }
 
     int divot = 0;
     int unusedStartOffset = 0;
     int unusedEndOffset = 0;
-    m_codeBlock->expressionRangeForBytecodeOffset(m_bytecodeOffset, divot, unusedStartOffset, unusedEndOffset, line, column);
+    m_codeBlock->expressionRangeForBytecodeIndex(m_bytecodeIndex, divot, unusedStartOffset, unusedEndOffset, line, column);
 
     ScriptExecutable* executable = m_codeBlock->ownerExecutable();
     if (Optional<int> overrideLineNumber = executable->overrideLineNumber(m_codeBlock->vm()))
         line = overrideLineNumber.value();
 }
