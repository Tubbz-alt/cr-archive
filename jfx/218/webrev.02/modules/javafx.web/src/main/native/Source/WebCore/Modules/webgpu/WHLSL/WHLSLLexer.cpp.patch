diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/WHLSLLexer.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/WHLSLLexer.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/WHLSLLexer.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WHLSL/WHLSLLexer.cpp
@@ -860,33 +860,10 @@
             goto parseIdentifier;
 
         switch (peek()) {
         case '&':
             shift();
-            switch (peek()) {
-            case '[':
-                shift();
-                if (consume(']'))
-                    return token(Token::Type::OperatorName);
-                return token(Token::Type::Invalid);
-            case '.':
-                shift();
-                if (!isValidIdentifierStart(peek()))
-                    return token(Token::Type::Invalid);
-                shift();
-                while (isValidNonStartingIdentifierChar(peek()))
-                    shift();
-                return token(Token::Type::OperatorName);
-            default:
-                return token(Token::Type::OperatorName);
-            }
-
-        case '[':
-            shift();
-            if (!consume(']'))
-                return token(Token::Type::Invalid);
-            consume('=');
             return token(Token::Type::OperatorName);
 
         case '>':
             shift();
             if (consume('>'))
@@ -945,19 +922,10 @@
 
         case '^':
             shift();
             return token(Token::Type::OperatorName);
 
-        case '.':
-            shift();
-            if (!isValidIdentifierStart(peek()))
-                return token(Token::Type::Invalid);
-            shift();
-            while (isValidNonStartingIdentifierChar(peek()))
-                shift();
-            consume('=');
-            return token(Token::Type::OperatorName);
         default:
             break;
         }
 
         return token(Token::Type::Operator);
