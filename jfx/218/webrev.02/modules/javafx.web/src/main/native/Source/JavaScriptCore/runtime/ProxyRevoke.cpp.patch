diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ProxyRevoke.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ProxyRevoke.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ProxyRevoke.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ProxyRevoke.cpp
@@ -36,38 +36,38 @@
 const ClassInfo ProxyRevoke::s_info = { "ProxyRevoke", &Base::s_info, nullptr, nullptr, CREATE_METHOD_TABLE(ProxyRevoke) };
 
 ProxyRevoke* ProxyRevoke::create(VM& vm, Structure* structure, ProxyObject* proxy)
 {
     ProxyRevoke* revoke = new (NotNull, allocateCell<ProxyRevoke>(vm.heap)) ProxyRevoke(vm, structure);
-    revoke->finishCreation(vm, "revoke", proxy);
+    revoke->finishCreation(vm, proxy);
     return revoke;
 }
 
-static EncodedJSValue JSC_HOST_CALL performProxyRevoke(ExecState*);
+static EncodedJSValue JSC_HOST_CALL performProxyRevoke(JSGlobalObject*, CallFrame*);
 
 ProxyRevoke::ProxyRevoke(VM& vm, Structure* structure)
     : Base(vm, structure, performProxyRevoke, nullptr)
 {
 }
 
-void ProxyRevoke::finishCreation(VM& vm, const char* name, ProxyObject* proxy)
+void ProxyRevoke::finishCreation(VM& vm, ProxyObject* proxy)
 {
-    Base::finishCreation(vm, String(name), NameVisibility::Anonymous);
+    Base::finishCreation(vm, emptyString());
     m_proxy.set(vm, this, proxy);
 
     putDirect(vm, vm.propertyNames->length, jsNumber(0), PropertyAttribute::ReadOnly | PropertyAttribute::DontEnum);
 }
 
-static EncodedJSValue JSC_HOST_CALL performProxyRevoke(ExecState* exec)
+static EncodedJSValue JSC_HOST_CALL performProxyRevoke(JSGlobalObject* globalObject, CallFrame* callFrame)
 {
-    ProxyRevoke* proxyRevoke = jsCast<ProxyRevoke*>(exec->jsCallee());
+    ProxyRevoke* proxyRevoke = jsCast<ProxyRevoke*>(callFrame->jsCallee());
     JSValue proxyValue = proxyRevoke->proxy();
     if (proxyValue.isNull())
         return JSValue::encode(jsUndefined());
 
     ProxyObject* proxy = jsCast<ProxyObject*>(proxyValue);
-    VM& vm = exec->vm();
+    VM& vm = globalObject->vm();
     proxy->revoke(vm);
     proxyRevoke->setProxyToNull(vm);
     return JSValue::encode(jsUndefined());
 }
 
