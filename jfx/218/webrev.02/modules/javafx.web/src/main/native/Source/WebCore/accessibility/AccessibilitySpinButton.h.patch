diff a/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilitySpinButton.h b/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilitySpinButton.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilitySpinButton.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilitySpinButton.h
@@ -35,20 +35,19 @@
     static Ref<AccessibilitySpinButton> create();
     virtual ~AccessibilitySpinButton();
 
     void setSpinButtonElement(SpinButtonElement* spinButton) { m_spinButtonElement = spinButton; }
 
-    AccessibilityObject* incrementButton();
-    AccessibilityObject* decrementButton();
+    AXCoreObject* incrementButton() override;
+    AXCoreObject* decrementButton() override;
 
     void step(int amount);
 
 private:
     AccessibilitySpinButton();
 
     AccessibilityRole roleValue() const override { return AccessibilityRole::SpinButton; }
-    bool isSpinButton() const override { return true; }
     bool isNativeSpinButton() const override { return true; }
     void addChildren() override;
     LayoutRect elementRect() const override;
 
     SpinButtonElement* m_spinButtonElement;
@@ -57,11 +56,11 @@
 class AccessibilitySpinButtonPart final : public AccessibilityMockObject {
 public:
     static Ref<AccessibilitySpinButtonPart> create();
     virtual ~AccessibilitySpinButtonPart() = default;
 
-    bool isIncrementor() const { return m_isIncrementor; }
+    bool isIncrementor() const override { return m_isIncrementor; }
     void setIsIncrementor(bool value) { m_isIncrementor = value; }
 
 private:
     AccessibilitySpinButtonPart();
 
