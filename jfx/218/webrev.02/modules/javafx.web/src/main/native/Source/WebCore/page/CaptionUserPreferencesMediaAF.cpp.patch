diff a/modules/javafx.web/src/main/native/Source/WebCore/page/CaptionUserPreferencesMediaAF.cpp b/modules/javafx.web/src/main/native/Source/WebCore/page/CaptionUserPreferencesMediaAF.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/page/CaptionUserPreferencesMediaAF.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/page/CaptionUserPreferencesMediaAF.cpp
@@ -349,11 +349,11 @@
     CGFloat radius = MACaptionAppearanceGetWindowRoundedCornerRadius(kMACaptionAppearanceDomainUser, &behavior);
     if (!radius)
         return emptyString();
 
     StringBuilder builder;
-    appendCSS(builder, CSSPropertyBorderRadius, makeString(FormattedNumber::fixedWidth(radius, 2), "px"), behavior == kMACaptionAppearanceBehaviorUseValue);
+    appendCSS(builder, CSSPropertyBorderRadius, makeString(radius, "px"), behavior == kMACaptionAppearanceBehaviorUseValue);
     return builder.toString();
 }
 
 String CaptionUserPreferencesMediaAF::colorPropertyCSS(CSSPropertyID id, const Color& color, bool important) const
 {
@@ -585,11 +585,11 @@
 
     String windowColor = captionsWindowCSS();
     String windowCornerRadius = windowRoundedCornerRadiusCSS();
     if (!windowColor.isEmpty() || !windowCornerRadius.isEmpty()) {
         captionsOverrideStyleSheet.appendLiteral(" ::");
-        captionsOverrideStyleSheet.append(VTTCue::cueBackdropShadowPseudoId());
+        captionsOverrideStyleSheet.append(TextTrackCue::cueBackdropShadowPseudoId());
         captionsOverrideStyleSheet.append('{');
 
         if (!windowColor.isEmpty())
             captionsOverrideStyleSheet.append(windowColor);
         if (!windowCornerRadius.isEmpty()) {
@@ -839,11 +839,16 @@
             return aIsMainContent;
         return bIsMainContent;
     }
 
     // ... and tracks of the same type and language sort by the menu item text.
-    return codePointCompare(trackDisplayName(a.get()), trackDisplayName(b.get())) < 0;
+    auto trackDisplayComparison = codePointCompare(trackDisplayName(a.get()), trackDisplayName(b.get()));
+    if (trackDisplayComparison)
+        return trackDisplayComparison < 0;
+
+    // ... and if the menu item text is the same, compare the unique IDs
+    return a->uniqueId() < b->uniqueId();
 }
 
 Vector<RefPtr<AudioTrack>> CaptionUserPreferencesMediaAF::sortedTrackListForMenu(AudioTrackList* trackList)
 {
     ASSERT(trackList);
@@ -855,11 +860,15 @@
         String language = displayNameForLanguageLocale(track->validBCP47Language());
         tracksForMenu.append(track);
     }
 
     std::sort(tracksForMenu.begin(), tracksForMenu.end(), [](auto& a, auto& b) {
-        return codePointCompare(trackDisplayName(a.get()), trackDisplayName(b.get())) < 0;
+        auto trackDisplayComparison = codePointCompare(trackDisplayName(a.get()), trackDisplayName(b.get()));
+        if (trackDisplayComparison)
+            return trackDisplayComparison < 0;
+
+        return a->uniqueId() < b->uniqueId();
     });
 
     return tracksForMenu;
 }
 
