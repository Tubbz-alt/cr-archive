diff a/modules/javafx.web/src/main/native/Source/WebCore/dom/ScriptElement.h b/modules/javafx.web/src/main/native/Source/WebCore/dom/ScriptElement.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/dom/ScriptElement.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/dom/ScriptElement.h
@@ -54,13 +54,14 @@
 
     void executePendingScript(PendingScript&);
 
     // XML parser calls these
     virtual void dispatchLoadEvent() = 0;
-    void dispatchErrorEvent();
+    virtual void dispatchErrorEvent();
 
     bool haveFiredLoadEvent() const { return m_haveFiredLoad; }
+    bool errorOccurred() const { return m_errorOccurred; }
     bool willBeParserExecuted() const { return m_willBeParserExecuted; }
     bool readyToBeParserExecuted() const { return m_readyToBeParserExecuted; }
     bool willExecuteWhenDocumentFinishedParsing() const { return m_willExecuteWhenDocumentFinishedParsing; }
     bool willExecuteInOrder() const { return m_willExecuteInOrder; }
     LoadableScript* loadableScript() { return m_loadableScript.get(); }
@@ -74,10 +75,11 @@
 
 protected:
     ScriptElement(Element&, bool createdByParser, bool isEvaluated);
 
     void setHaveFiredLoadEvent(bool haveFiredLoad) { m_haveFiredLoad = haveFiredLoad; }
+    void setErrorOccurred(bool errorOccurred) { m_errorOccurred = errorOccurred; }
     bool isParserInserted() const { return m_parserInserted; }
     bool alreadyStarted() const { return m_alreadyStarted; }
     bool forceAsync() const { return m_forceAsync; }
 
     // Helper functions used by our parent classes.
@@ -120,10 +122,11 @@
     WTF::OrdinalNumber m_startLineNumber;
     bool m_parserInserted : 1;
     bool m_isExternalScript : 1;
     bool m_alreadyStarted : 1;
     bool m_haveFiredLoad : 1;
+    bool m_errorOccurred : 1;
     bool m_willBeParserExecuted : 1; // Same as "The parser will handle executing the script."
     bool m_readyToBeParserExecuted : 1;
     bool m_willExecuteWhenDocumentFinishedParsing : 1;
     bool m_forceAsync : 1;
     bool m_willExecuteInOrder : 1;
