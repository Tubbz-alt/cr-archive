diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/GridTrackSizingAlgorithm.cpp b/modules/javafx.web/src/main/native/Source/WebCore/rendering/GridTrackSizingAlgorithm.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/GridTrackSizingAlgorithm.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/GridTrackSizingAlgorithm.cpp
@@ -1345,22 +1345,22 @@
     setAvailableSpace(ForRows, WTF::nullopt);
     setAvailableSpace(ForColumns, WTF::nullopt);
     m_hasPercentSizedRowsIndefiniteHeight = false;
 }
 
-#ifndef NDEBUG
+#if ASSERT_ENABLED
 bool GridTrackSizingAlgorithm::tracksAreWiderThanMinTrackBreadth() const
 {
     const Vector<GridTrack>& allTracks = tracks(m_direction);
     for (size_t i = 0; i < allTracks.size(); ++i) {
         GridTrackSize trackSize = gridTrackSize(m_direction, i);
         if (initialBaseSize(trackSize) > allTracks[i].baseSize())
             return false;
     }
     return true;
 }
-#endif
+#endif // ASSERT_ENABLED
 
 GridTrackSizingAlgorithm::StateMachine::StateMachine(GridTrackSizingAlgorithm& algorithm)
     : m_algorithm(algorithm)
 {
     ASSERT(m_algorithm.isValidTransition());
