diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WebGPUShaderModule.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WebGPUShaderModule.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WebGPUShaderModule.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WebGPUShaderModule.cpp
@@ -26,20 +26,31 @@
 #include "config.h"
 #include "WebGPUShaderModule.h"
 
 #if ENABLE(WEBGPU)
 
+#include "GPUShaderModuleDescriptor.h"
+#include "WebGPUDevice.h"
+#include <wtf/RefPtr.h>
+
 namespace WebCore {
 
-Ref<WebGPUShaderModule> WebGPUShaderModule::create(RefPtr<GPUShaderModule>&& module)
+Ref<WebGPUShaderModule> WebGPUShaderModule::create(RefPtr<GPUShaderModule>&& module, const String& source)
 {
-    return adoptRef(*new WebGPUShaderModule(WTFMove(module)));
+    return adoptRef(*new WebGPUShaderModule(WTFMove(module), source));
 }
 
-WebGPUShaderModule::WebGPUShaderModule(RefPtr<GPUShaderModule>&& module)
+WebGPUShaderModule::WebGPUShaderModule(RefPtr<GPUShaderModule>&& module, const String& source)
     : m_module(WTFMove(module))
+    , m_source(source)
+{
+}
+
+void WebGPUShaderModule::update(const WebGPUDevice& device, const String& source)
 {
+    m_source = source;
+    m_module = GPUShaderModule::tryCreate(device.device(), { m_source });
 }
 
 } // namespace WebCore
 
 #endif // ENABLE(WEBGPU)
