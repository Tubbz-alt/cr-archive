diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WebGPUAdapter.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WebGPUAdapter.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WebGPUAdapter.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webgpu/WebGPUAdapter.cpp
@@ -26,12 +26,14 @@
 #include "config.h"
 #include "WebGPUAdapter.h"
 
 #if ENABLE(WEBGPU)
 
+#include "Document.h"
+#include "InspectorInstrumentation.h"
+#include "JSDOMPromiseDeferred.h"
 #include "JSWebGPUDevice.h"
-#include "ScriptExecutionContext.h"
 
 namespace WebCore {
 
 Ref<WebGPUAdapter> WebGPUAdapter::create(Optional<GPURequestAdapterOptions>&& options)
 {
@@ -41,16 +43,20 @@
 WebGPUAdapter::WebGPUAdapter(Optional<GPURequestAdapterOptions>&& options)
     : m_options(WTFMove(options))
 {
 }
 
-void WebGPUAdapter::requestDevice(DeviceRequestPromise&& promise) const
+void WebGPUAdapter::requestDevice(Document& document, DeviceRequestPromise&& promise) const
 {
-    if (auto device = WebGPUDevice::tryCreate(*this))
-        promise.resolve(device.releaseNonNull());
-    else
-        promise.reject();
+    document.postTask([protectedThis = makeRef(*this), promise = WTFMove(promise)] (ScriptExecutionContext& context) mutable {
+        if (auto device = WebGPUDevice::tryCreate(context, protectedThis.get())) {
+            InspectorInstrumentation::didCreateWebGPUDevice(*device);
+
+            promise.resolve(device.releaseNonNull());
+        } else
+            promise.reject();
+    });
 }
 
 } // namespace WebCore
 
 #endif // ENABLE(WEBGPU)
