diff a/modules/javafx.web/src/main/native/Source/WebCore/dom/ContainerNodeAlgorithms.h b/modules/javafx.web/src/main/native/Source/WebCore/dom/ContainerNodeAlgorithms.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/dom/ContainerNodeAlgorithms.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/dom/ContainerNodeAlgorithms.h
@@ -25,11 +25,11 @@
 #include <wtf/Assertions.h>
 
 namespace WebCore {
 
 // FIXME: Delete this class after fixing FormAssociatedElement to avoid calling getElementById during a tree removal.
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
 class ContainerChildRemovalScope {
 public:
     ContainerChildRemovalScope(ContainerNode& parentOfRemovedTree, Node& child)
         : m_parentOfRemovedTree(parentOfRemovedTree)
         , m_removedChild(child)
@@ -52,16 +52,16 @@
     ContainerNode& m_parentOfRemovedTree;
     Node& m_removedChild;
     ContainerChildRemovalScope* m_previousScope;
     static ContainerChildRemovalScope* s_scope;
 };
-#else
+#else // not ASSERT_ENABLED
 class ContainerChildRemovalScope {
 public:
     ContainerChildRemovalScope(ContainerNode&, Node&) { }
 };
-#endif
+#endif // not ASSERT_ENABLED
 
 NodeVector notifyChildNodeInserted(ContainerNode& parentOfInsertedTree, Node&);
 void notifyChildNodeRemoved(ContainerNode& oldParentOfRemovedTree, Node&);
 void removeDetachedChildrenInContainer(ContainerNode&);
 
