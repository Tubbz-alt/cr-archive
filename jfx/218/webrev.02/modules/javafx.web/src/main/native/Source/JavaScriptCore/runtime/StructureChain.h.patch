diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/StructureChain.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/StructureChain.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/StructureChain.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/StructureChain.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2008 Apple Inc. All rights reserved.
+ * Copyright (C) 2008-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -39,14 +39,20 @@
 class StructureChain final : public JSCell {
     friend class JIT;
 
 public:
     using Base = JSCell;
-    static const unsigned StructureFlags = Base::StructureFlags | StructureIsImmortal;
+    static constexpr unsigned StructureFlags = Base::StructureFlags | StructureIsImmortal;
+
+    template<typename CellType, SubspaceAccess>
+    static IsoSubspace* subspaceFor(VM& vm)
+    {
+        return &vm.structureChainSpace;
+    }
 
     static StructureChain* create(VM&, JSObject*);
-    WriteBarrier<Structure>* head() { return m_vector.get(); }
+    StructureID* head() { return m_vector.get(); }
     static void visitChildren(JSCell*, SlotVisitor&);
 
     static Structure* createStructure(VM& vm, JSGlobalObject* globalObject, JSValue prototype)
     {
         return Structure::create(vm, globalObject, prototype, TypeInfo(CellType, StructureFlags), info());
@@ -57,10 +63,10 @@
 private:
     friend class LLIntOffsetsExtractor;
 
     void finishCreation(VM&, JSObject* head);
 
-    StructureChain(VM&, Structure*, WriteBarrier<Structure>*);
-    AuxiliaryBarrier<WriteBarrier<Structure>*> m_vector;
+    StructureChain(VM&, Structure*, StructureID*);
+    AuxiliaryBarrier<StructureID*> m_vector;
 };
 
 } // namespace JSC
