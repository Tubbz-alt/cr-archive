diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/GenericTypedArrayViewInlines.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/GenericTypedArrayViewInlines.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/GenericTypedArrayViewInlines.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/GenericTypedArrayViewInlines.h
@@ -24,11 +24,11 @@
  */
 
 #pragma once
 
 #include "GenericTypedArrayView.h"
-#include "JSGlobalObject.h"
+#include "JSGlobalObjectInlines.h"
 
 namespace JSC {
 
 template<typename Adaptor>
 GenericTypedArrayView<Adaptor>::GenericTypedArrayView(
@@ -134,13 +134,12 @@
     clampOffsetAndNumElements<Adaptor::Type>(*buffer, byteOffset(), &offset, &length);
     return tryCreate(buffer, offset, length);
 }
 
 template<typename Adaptor>
-JSArrayBufferView* GenericTypedArrayView<Adaptor>::wrap(
-    ExecState* exec, JSGlobalObject* globalObject)
+JSArrayBufferView* GenericTypedArrayView<Adaptor>::wrap(JSGlobalObject* lexicalGlobalObject, JSGlobalObject* globalObject)
 {
-    return Adaptor::JSViewType::create(
-        exec->vm(), globalObject->typedArrayStructure(Adaptor::typeValue), this);
+    UNUSED_PARAM(lexicalGlobalObject);
+    return Adaptor::JSViewType::create(globalObject->vm(), globalObject->typedArrayStructure(Adaptor::typeValue), this);
 }
 
 } // namespace JSC
