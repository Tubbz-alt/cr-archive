diff a/modules/javafx.web/src/main/native/Source/WebCore/html/track/TextTrack.cpp b/modules/javafx.web/src/main/native/Source/WebCore/html/track/TextTrack.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/track/TextTrack.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/track/TextTrack.cpp
@@ -235,15 +235,12 @@
     // because they will no longer be accessible from the cues() function.
     if (mode == Mode::Disabled && m_client && m_cues)
         m_client->textTrackRemoveCues(*this, *m_cues);
 
     if (mode != Mode::Showing && m_cues) {
-        for (size_t i = 0; i < m_cues->length(); ++i) {
-            RefPtr<TextTrackCue> cue = m_cues->item(i);
-            if (cue->isRenderable())
-                toVTTCue(cue.get())->removeDisplayTree();
-        }
+        for (size_t i = 0; i < m_cues->length(); ++i)
+            m_cues->item(i)->removeDisplayTree();
     }
 
     m_mode = mode;
 
     if (m_client)
@@ -439,13 +436,15 @@
     m_client->textTrackAddCue(*this, *cue);
 }
 
 int TextTrack::trackIndex()
 {
-    ASSERT(m_mediaElement);
-    if (!m_trackIndex)
+    if (!m_trackIndex) {
+        if (!m_mediaElement)
+            return 0;
         m_trackIndex = m_mediaElement->ensureTextTracks().getTrackIndex(*this);
+    }
     return m_trackIndex.value();
 }
 
 void TextTrack::invalidateTrackIndex()
 {
@@ -466,13 +465,15 @@
     return *m_cues;
 }
 
 int TextTrack::trackIndexRelativeToRenderedTracks()
 {
-    ASSERT(m_mediaElement);
-    if (!m_renderedTrackIndex)
+    if (!m_renderedTrackIndex) {
+        if (!m_mediaElement)
+            return 0;
         m_renderedTrackIndex = m_mediaElement->ensureTextTracks().getTrackIndexRelativeToRenderedTracks(*this);
+    }
     return m_renderedTrackIndex.value();
 }
 
 bool TextTrack::hasCue(TextTrackCue* cue, TextTrackCue::CueMatchRules match)
 {
