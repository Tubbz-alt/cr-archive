diff a/modules/javafx.web/src/main/native/Source/WebCore/html/parser/HTMLParserScheduler.cpp b/modules/javafx.web/src/main/native/Source/WebCore/html/parser/HTMLParserScheduler.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/parser/HTMLParserScheduler.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/parser/HTMLParserScheduler.cpp
@@ -78,11 +78,11 @@
 HTMLParserScheduler::HTMLParserScheduler(HTMLDocumentParser& parser)
     : m_parser(parser)
     , m_parserTimeLimit(Seconds(parserTimeLimit(m_parser.document()->page())))
     , m_continueNextChunkTimer(*this, &HTMLParserScheduler::continueNextChunkTimerFired)
     , m_isSuspendedWithActiveTimer(false)
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     , m_suspended(false)
 #endif
 {
 }
 
@@ -126,11 +126,11 @@
 
 void HTMLParserScheduler::suspend()
 {
     ASSERT(!m_suspended);
     ASSERT(!m_isSuspendedWithActiveTimer);
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     m_suspended = true;
 #endif
 
     if (!m_continueNextChunkTimer.isActive())
         return;
@@ -140,11 +140,11 @@
 
 void HTMLParserScheduler::resume()
 {
     ASSERT(m_suspended);
     ASSERT(!m_continueNextChunkTimer.isActive());
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     m_suspended = false;
 #endif
 
     if (!m_isSuspendedWithActiveTimer)
         return;
