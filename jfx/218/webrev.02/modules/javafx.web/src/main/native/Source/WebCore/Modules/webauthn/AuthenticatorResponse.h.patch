diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webauthn/AuthenticatorResponse.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webauthn/AuthenticatorResponse.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webauthn/AuthenticatorResponse.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webauthn/AuthenticatorResponse.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2018 Apple Inc. All rights reserved.
+ * Copyright (C) 2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -25,35 +25,45 @@
 
 #pragma once
 
 #if ENABLE(WEB_AUTHN)
 
-#include <JavaScriptCore/ArrayBuffer.h>
+#include "AuthenticationExtensionsClientOutputs.h"
+#include "IDLTypes.h"
 #include <wtf/RefCounted.h>
 #include <wtf/TypeCasts.h>
 
 namespace WebCore {
 
+struct AuthenticatorResponseData;
+
 class AuthenticatorResponse : public RefCounted<AuthenticatorResponse> {
 public:
     enum class Type {
         Assertion,
         Attestation
     };
 
-    explicit AuthenticatorResponse(Ref<ArrayBuffer>&& clientDataJSON)
-        : m_clientDataJSON(WTFMove(clientDataJSON))
-    {
-    }
+    static RefPtr<AuthenticatorResponse> tryCreate(AuthenticatorResponseData&&);
     virtual ~AuthenticatorResponse() = default;
 
     virtual Type type() const = 0;
+    virtual AuthenticatorResponseData data() const;
+
+    WEBCORE_EXPORT ArrayBuffer* rawId() const;
+    WEBCORE_EXPORT void setExtensions(AuthenticationExtensionsClientOutputs&&);
+    AuthenticationExtensionsClientOutputs extensions() const;
+    void setClientDataJSON(Ref<ArrayBuffer>&&);
+    ArrayBuffer* clientDataJSON() const;
 
-    ArrayBuffer* clientDataJSON() const { return m_clientDataJSON.ptr(); }
+protected:
+    AuthenticatorResponse(Ref<ArrayBuffer>&&);
 
 private:
-    Ref<ArrayBuffer> m_clientDataJSON;
+    Ref<ArrayBuffer> m_rawId;
+    AuthenticationExtensionsClientOutputs m_extensions;
+    RefPtr<ArrayBuffer> m_clientDataJSON;
 };
 
 } // namespace WebCore
 
 #define SPECIALIZE_TYPE_TRAITS_AUTHENTICATOR_RESPONSE(ToClassName, Type) \
