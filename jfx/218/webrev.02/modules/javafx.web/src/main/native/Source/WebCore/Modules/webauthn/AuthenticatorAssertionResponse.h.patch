diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webauthn/AuthenticatorAssertionResponse.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webauthn/AuthenticatorAssertionResponse.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/webauthn/AuthenticatorAssertionResponse.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/webauthn/AuthenticatorAssertionResponse.h
@@ -31,35 +31,38 @@
 
 namespace WebCore {
 
 class AuthenticatorAssertionResponse : public AuthenticatorResponse {
 public:
-    static Ref<AuthenticatorAssertionResponse> create(Ref<ArrayBuffer>&& clientDataJSON, Ref<ArrayBuffer>&& authenticatorData, Ref<ArrayBuffer>&& signature, RefPtr<ArrayBuffer>&& userHandle)
-    {
-        return adoptRef(*new AuthenticatorAssertionResponse(WTFMove(clientDataJSON), WTFMove(authenticatorData), WTFMove(signature), WTFMove(userHandle)));
-    }
-
+    static Ref<AuthenticatorAssertionResponse> create(Ref<ArrayBuffer>&& rawId, Ref<ArrayBuffer>&& authenticatorData, Ref<ArrayBuffer>&& signature, RefPtr<ArrayBuffer>&& userHandle, Optional<AuthenticationExtensionsClientOutputs>&&);
+    WEBCORE_EXPORT static Ref<AuthenticatorAssertionResponse> create(const Vector<uint8_t>& rawId, const Vector<uint8_t>& authenticatorData, const Vector<uint8_t>& signature,  const Vector<uint8_t>& userHandle);
     virtual ~AuthenticatorAssertionResponse() = default;
 
     ArrayBuffer* authenticatorData() const { return m_authenticatorData.ptr(); }
     ArrayBuffer* signature() const { return m_signature.ptr(); }
     ArrayBuffer* userHandle() const { return m_userHandle.get(); }
 
+    void setName(const String& name) { m_name = name; }
+    const String& name() const { return m_name; }
+    void setDisplayName(const String& displayName) { m_displayName = displayName; }
+    const String& displayName() const { return m_displayName; }
+    void setNumberOfCredentials(size_t numberOfCredentials) { m_numberOfCredentials = numberOfCredentials; }
+    size_t numberOfCredentials() const { return m_numberOfCredentials; }
+
 private:
-    AuthenticatorAssertionResponse(Ref<ArrayBuffer>&& clientDataJSON, Ref<ArrayBuffer>&& authenticatorData, Ref<ArrayBuffer>&& signature, RefPtr<ArrayBuffer>&& userHandle)
-        : AuthenticatorResponse(WTFMove(clientDataJSON))
-        , m_authenticatorData(WTFMove(authenticatorData))
-        , m_signature(WTFMove(signature))
-        , m_userHandle(WTFMove(userHandle))
-    {
-    }
+    AuthenticatorAssertionResponse(Ref<ArrayBuffer>&&, Ref<ArrayBuffer>&&, Ref<ArrayBuffer>&&, RefPtr<ArrayBuffer>&&);
 
     Type type() const final { return Type::Assertion; }
+    AuthenticatorResponseData data() const final;
 
     Ref<ArrayBuffer> m_authenticatorData;
     Ref<ArrayBuffer> m_signature;
     RefPtr<ArrayBuffer> m_userHandle;
+
+    String m_name;
+    String m_displayName;
+    size_t m_numberOfCredentials { 0 };
 };
 
 } // namespace WebCore
 
 SPECIALIZE_TYPE_TRAITS_AUTHENTICATOR_RESPONSE(AuthenticatorAssertionResponse, AuthenticatorResponse::Type::Assertion)
