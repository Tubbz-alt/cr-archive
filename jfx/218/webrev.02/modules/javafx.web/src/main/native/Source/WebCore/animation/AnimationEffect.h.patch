diff a/modules/javafx.web/src/main/native/Source/WebCore/animation/AnimationEffect.h b/modules/javafx.web/src/main/native/Source/WebCore/animation/AnimationEffect.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/animation/AnimationEffect.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/animation/AnimationEffect.h
@@ -45,11 +45,11 @@
 #include <wtf/Variant.h>
 #include <wtf/WeakPtr.h>
 
 namespace WebCore {
 
-class AnimationEffect : public RefCounted<AnimationEffect> {
+class AnimationEffect : public RefCounted<AnimationEffect>, public CanMakeWeakPtr<AnimationEffect> {
 public:
     virtual ~AnimationEffect();
 
     virtual bool isKeyframeEffect() const { return false; }
 
@@ -58,15 +58,19 @@
     ComputedEffectTiming getComputedTiming() const;
     ExceptionOr<void> updateTiming(Optional<OptionalEffectTiming>);
 
     virtual void apply(RenderStyle&) = 0;
     virtual void invalidate() = 0;
+    virtual void animationDidTick() = 0;
+    virtual void animationDidPlay() = 0;
     virtual void animationDidSeek() = 0;
+    virtual void animationWasCanceled() = 0;
     virtual void animationSuspensionStateDidChange(bool) = 0;
+    virtual void animationTimelineDidChange(AnimationTimeline*) = 0;
 
     WebAnimation* animation() const { return m_animation.get(); }
-    void setAnimation(WebAnimation* animation) { m_animation = makeWeakPtr(animation); }
+    virtual void setAnimation(WebAnimation* animation) { m_animation = makeWeakPtr(animation); }
 
     Seconds delay() const { return m_delay; }
     void setDelay(const Seconds&);
 
     Seconds endDelay() const { return m_endDelay; }
@@ -88,10 +92,15 @@
     void setDirection(PlaybackDirection);
 
     TimingFunction* timingFunction() const { return m_timingFunction.get(); }
     void setTimingFunction(const RefPtr<TimingFunction>&);
 
+    Seconds activeDuration() const { return m_activeDuration; }
+    Seconds endTime() const { return m_endTime; }
+
+    void updateStaticTimingProperties();
+
 protected:
     explicit AnimationEffect();
 
 private:
     enum class ComputedDirection : uint8_t { Forwards, Reverse };
@@ -106,10 +115,12 @@
     double m_iterations { 1 };
 
     Seconds m_delay { 0_s };
     Seconds m_endDelay { 0_s };
     Seconds m_iterationDuration { 0_s };
+    Seconds m_activeDuration { 0_s };
+    Seconds m_endTime { 0_s };
 };
 
 } // namespace WebCore
 
 #define SPECIALIZE_TYPE_TRAITS_ANIMATION_EFFECT(ToValueTypeName, predicate) \
