diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/TypeProfiler.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/TypeProfiler.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/TypeProfiler.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/TypeProfiler.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2014 Apple Inc. All Rights Reserved.
+ * Copyright (C) 2014-2019 Apple Inc. All Rights Reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -76,11 +76,11 @@
             && m_searchDescriptor == other.m_searchDescriptor;
     }
 
     unsigned hash() const
     {
-        unsigned hash = m_sourceID + m_divot * m_searchDescriptor;
+        unsigned hash = static_cast<unsigned>(m_sourceID) + m_divot * m_searchDescriptor;
         return hash;
     }
 
     intptr_t m_sourceID;
     unsigned m_divot;
@@ -88,11 +88,11 @@
 };
 
 struct QueryKeyHash {
     static unsigned hash(const QueryKey& key) { return key.hash(); }
     static bool equal(const QueryKey& a, const QueryKey& b) { return a == b; }
-    static const bool safeToCompareToEmptyOrDeleted = true;
+    static constexpr bool safeToCompareToEmptyOrDeleted = true;
 };
 
 } // namespace JSC
 
 namespace WTF {
@@ -102,11 +102,11 @@
     typedef JSC::QueryKeyHash Hash;
 };
 
 template<typename T> struct HashTraits;
 template<> struct HashTraits<JSC::QueryKey> : SimpleClassHashTraits<JSC::QueryKey> {
-    static const bool emptyValueIsZero = false;
+    static constexpr bool emptyValueIsZero = false;
 };
 
 } // namespace WTF
 
 namespace JSC {
