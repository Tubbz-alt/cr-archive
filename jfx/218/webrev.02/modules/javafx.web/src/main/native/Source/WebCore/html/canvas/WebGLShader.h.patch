diff a/modules/javafx.web/src/main/native/Source/WebCore/html/canvas/WebGLShader.h b/modules/javafx.web/src/main/native/Source/WebCore/html/canvas/WebGLShader.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/canvas/WebGLShader.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/canvas/WebGLShader.h
@@ -26,32 +26,33 @@
 #pragma once
 
 #if ENABLE(WEBGL)
 
 #include "WebGLSharedObject.h"
+#include <wtf/text/WTFString.h>
 
 namespace WebCore {
 
 class WebGLShader final : public WebGLSharedObject {
 public:
-    static Ref<WebGLShader> create(WebGLRenderingContextBase&, GC3Denum);
+    static Ref<WebGLShader> create(WebGLRenderingContextBase&, GCGLenum);
     virtual ~WebGLShader();
 
-    GC3Denum getType() const { return m_type; }
+    GCGLenum getType() const { return m_type; }
     const String& getSource() const { return m_source; }
 
     void setSource(const String& source) { m_source = source; }
 
     bool isValid() const { return m_isValid; }
     void setValid(bool valid) { m_isValid = valid; }
 
 private:
-    WebGLShader(WebGLRenderingContextBase&, GC3Denum);
+    WebGLShader(WebGLRenderingContextBase&, GCGLenum);
 
-    void deleteObjectImpl(GraphicsContext3D*, Platform3DObject) final;
+    void deleteObjectImpl(GraphicsContextGLOpenGL*, PlatformGLObject) final;
 
-    GC3Denum m_type;
+    GCGLenum m_type;
     String m_source;
     bool m_isValid;
 };
 
 } // namespace WebCore
