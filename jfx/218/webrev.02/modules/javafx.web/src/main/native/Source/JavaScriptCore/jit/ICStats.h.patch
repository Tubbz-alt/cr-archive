diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/ICStats.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/ICStats.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/ICStats.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/ICStats.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2016 Apple Inc. All rights reserved.
+ * Copyright (C) 2016-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -36,21 +36,22 @@
 
 namespace JSC {
 
 #define FOR_EACH_ICEVENT_KIND(macro) \
     macro(InvalidKind) \
-    macro(GetByIdAddAccessCase) \
-    macro(GetByIdReplaceWithJump) \
-    macro(GetByIdSelfPatch) \
+    macro(GetByAddAccessCase) \
+    macro(GetByReplaceWithJump) \
+    macro(GetBySelfPatch) \
     macro(InAddAccessCase) \
     macro(InReplaceWithJump) \
     macro(InstanceOfAddAccessCase) \
     macro(InstanceOfReplaceWithJump) \
     macro(OperationGetById) \
     macro(OperationGetByIdGeneric) \
     macro(OperationGetByIdBuildList) \
     macro(OperationGetByIdOptimize) \
+    macro(OperationGetByValOptimize) \
     macro(OperationGetByIdWithThisOptimize) \
     macro(OperationGenericIn) \
     macro(OperationInById) \
     macro(OperationInByIdGeneric) \
     macro(OperationInByIdOptimize) \
@@ -161,11 +162,11 @@
 };
 
 struct ICEventHash {
     static unsigned hash(const ICEvent& key) { return key.hash(); }
     static bool equal(const ICEvent& a, const ICEvent& b) { return a == b; }
-    static const bool safeToCompareToEmptyOrDeleted = true;
+    static constexpr bool safeToCompareToEmptyOrDeleted = true;
 };
 
 } // namespace JSC
 
 namespace WTF {
@@ -177,11 +178,11 @@
     typedef JSC::ICEventHash Hash;
 };
 
 template<typename T> struct HashTraits;
 template<> struct HashTraits<JSC::ICEvent> : SimpleClassHashTraits<JSC::ICEvent> {
-    static const bool emptyValueIsZero = false;
+    static constexpr bool emptyValueIsZero = false;
 };
 
 } // namespace WTF
 
 namespace JSC {
