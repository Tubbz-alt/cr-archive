diff a/modules/javafx.web/src/main/native/Source/WebCore/page/PointerCaptureController.h b/modules/javafx.web/src/main/native/Source/WebCore/page/PointerCaptureController.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/page/PointerCaptureController.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/page/PointerCaptureController.h
@@ -24,18 +24,25 @@
 
 #pragma once
 
 #if ENABLE(POINTER_EVENTS)
 
+#include "ExceptionOr.h"
 #include "PointerID.h"
 #include <wtf/HashMap.h>
 
 namespace WebCore {
 
+class Document;
 class Element;
 class EventTarget;
+class IntPoint;
+class MouseEvent;
+class Page;
+class PlatformTouchEvent;
 class PointerEvent;
+class WindowProxy;
 
 class PointerCaptureController {
     WTF_MAKE_NONCOPYABLE(PointerCaptureController);
     WTF_MAKE_FAST_ALLOCATED;
 public:
@@ -65,18 +72,22 @@
 
 private:
     struct CapturingData {
         RefPtr<Element> pendingTargetOverride;
         RefPtr<Element> targetOverride;
+#if ENABLE(TOUCH_EVENTS) && PLATFORM(IOS_FAMILY)
+        RefPtr<Element> previousTarget;
+#endif
         String pointerType;
         bool cancelled { false };
         bool isPrimary { false };
         bool preventsCompatibilityMouseEvents { false };
         bool pointerIsPressed { false };
         short previousMouseButton { -1 };
     };
 
+    CapturingData& ensureCapturingDataForPointerEvent(const PointerEvent&);
     void pointerEventWillBeDispatched(const PointerEvent&, EventTarget*);
     void pointerEventWasDispatched(const PointerEvent&);
 
     Page& m_page;
     // While PointerID is defined as int32_t, we use int64_t here so that we may use a value outside of the int32_t range to have safe
