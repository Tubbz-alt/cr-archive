diff a/modules/javafx.web/src/main/native/Source/WebCore/style/StyleSharingResolver.h b/modules/javafx.web/src/main/native/Source/WebCore/style/StyleSharingResolver.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/style/StyleSharingResolver.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/style/StyleSharingResolver.h
@@ -28,26 +28,26 @@
 #include <wtf/HashMap.h>
 
 namespace WebCore {
 
 class Document;
-class DocumentRuleSets;
 class Element;
 class Node;
 class RenderStyle;
-class RuleSet;
 class SelectorFilter;
 class SpaceSplitString;
 class StyledElement;
 
 namespace Style {
 
+class RuleSet;
+class ScopeRuleSets;
 class Update;
 
 class SharingResolver {
 public:
-    SharingResolver(const Document&, const DocumentRuleSets&, const SelectorFilter&);
+    SharingResolver(const Document&, const ScopeRuleSets&, const SelectorFilter&);
 
     std::unique_ptr<RenderStyle> resolve(const Element&, const Update&);
 
 private:
     struct Context;
@@ -58,11 +58,11 @@
     bool styleSharingCandidateMatchesRuleSet(const StyledElement&, const RuleSet*) const;
     bool sharingCandidateHasIdenticalStyleAffectingAttributes(const Context&, const StyledElement& sharingCandidate) const;
     bool classNamesAffectedByRules(const SpaceSplitString& classNames) const;
 
     const Document& m_document;
-    const DocumentRuleSets& m_ruleSets;
+    const ScopeRuleSets& m_ruleSets;
     const SelectorFilter& m_selectorFilter;
 
     HashMap<const Element*, const Element*> m_elementsSharingStyle;
 };
 
