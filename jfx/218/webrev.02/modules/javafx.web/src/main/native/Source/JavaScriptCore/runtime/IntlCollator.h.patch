diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/IntlCollator.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/IntlCollator.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/IntlCollator.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/IntlCollator.h
@@ -25,39 +25,51 @@
 
 #pragma once
 
 #if ENABLE(INTL)
 
-#include "JSDestructibleObject.h"
+#include "JSObject.h"
 
 struct UCollator;
 
 namespace JSC {
 
 class IntlCollatorConstructor;
 class JSBoundFunction;
 
-class IntlCollator final : public JSDestructibleObject {
+class IntlCollator final : public JSNonFinalObject {
 public:
-    typedef JSDestructibleObject Base;
+    using Base = JSNonFinalObject;
+
+    static constexpr bool needsDestruction = true;
+
+    static void destroy(JSCell* cell)
+    {
+        static_cast<IntlCollator*>(cell)->IntlCollator::~IntlCollator();
+    }
+
+    template<typename CellType, SubspaceAccess mode>
+    static IsoSubspace* subspaceFor(VM& vm)
+    {
+        return vm.intlCollatorSpace<mode>();
+    }
 
     static IntlCollator* create(VM&, Structure*);
     static Structure* createStructure(VM&, JSGlobalObject*, JSValue);
 
     DECLARE_INFO;
 
-    void initializeCollator(ExecState&, JSValue locales, JSValue optionsValue);
-    JSValue compareStrings(ExecState&, StringView, StringView);
-    JSObject* resolvedOptions(ExecState&);
+    void initializeCollator(JSGlobalObject*, JSValue locales, JSValue optionsValue);
+    JSValue compareStrings(JSGlobalObject*, StringView, StringView);
+    JSObject* resolvedOptions(JSGlobalObject*);
 
     JSBoundFunction* boundCompare() const { return m_boundCompare.get(); }
     void setBoundCompare(VM&, JSBoundFunction*);
 
 protected:
     IntlCollator(VM&, Structure*);
     void finishCreation(VM&);
-    static void destroy(JSCell*);
     static void visitChildren(JSCell*, SlotVisitor&);
 
 private:
     enum class Usage : uint8_t { Sort, Search };
     enum class Sensitivity : uint8_t { Base, Accent, Case, Variant };
@@ -65,11 +77,11 @@
 
     struct UCollatorDeleter {
         void operator()(UCollator*) const;
     };
 
-    void createCollator(ExecState&);
+    void createCollator(JSGlobalObject*);
     static ASCIILiteral usageString(Usage);
     static ASCIILiteral sensitivityString(Sensitivity);
     static ASCIILiteral caseFirstString(CaseFirst);
 
     String m_locale;
