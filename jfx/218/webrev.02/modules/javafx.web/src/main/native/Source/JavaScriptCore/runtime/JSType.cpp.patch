diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSType.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSType.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSType.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSType.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2018 Apple Inc. All rights reserved.
+ * Copyright (C) 2018-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -55,11 +55,10 @@
     CASE(UnlinkedProgramCodeBlockType)
     CASE(UnlinkedModuleProgramCodeBlockType)
     CASE(UnlinkedEvalCodeBlockType)
     CASE(UnlinkedFunctionCodeBlockType)
     CASE(CodeBlockType)
-    CASE(JSFixedArrayType)
     CASE(JSImmutableButterflyType)
     CASE(JSSourceCodeType)
     CASE(JSScriptFetcherType)
     CASE(JSScriptFetchParametersType)
     CASE(ObjectType)
@@ -92,18 +91,26 @@
     CASE(GlobalLexicalEnvironmentType)
     CASE(LexicalEnvironmentType)
     CASE(ModuleEnvironmentType)
     CASE(StrictEvalActivationType)
     CASE(WithScopeType)
+    CASE(ModuleNamespaceObjectType)
     CASE(RegExpObjectType)
+    CASE(JSDateType)
     CASE(ProxyObjectType)
+    CASE(JSGeneratorType)
+    CASE(JSAsyncGeneratorType)
+    CASE(JSArrayIteratorType)
+    CASE(JSStringIteratorType)
+    CASE(JSPromiseType)
     CASE(JSMapType)
     CASE(JSSetType)
     CASE(JSWeakMapType)
     CASE(JSWeakSetType)
-    CASE(WebAssemblyToJSCalleeType)
+    CASE(WebAssemblyModuleType)
     CASE(StringObjectType)
+    CASE(DerivedStringObjectType)
     CASE(MaxJSType)
     }
 }
 
 #undef CASE
