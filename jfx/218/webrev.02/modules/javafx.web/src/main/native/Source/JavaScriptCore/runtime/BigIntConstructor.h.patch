diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/BigIntConstructor.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/BigIntConstructor.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/BigIntConstructor.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/BigIntConstructor.h
@@ -1,8 +1,8 @@
 /*
  * Copyright (C) 2017 Caio Lima <ticaiolima@gmail.com>
- * Copyright (C) 2017 Apple Inc. All rights reserved.
+ * Copyright (C) 2017-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -34,11 +34,11 @@
 class GetterSetter;
 
 class BigIntConstructor final : public InternalFunction {
 public:
     using Base = InternalFunction;
-    static const unsigned StructureFlags = Base::StructureFlags | HasStaticPropertyTable;
+    static constexpr unsigned StructureFlags = Base::StructureFlags | HasStaticPropertyTable;
 
     static BigIntConstructor* create(VM& vm, Structure* structure, BigIntPrototype* bigIntPrototype, GetterSetter*)
     {
         BigIntConstructor* constructor = new (NotNull, allocateCell<BigIntConstructor>(vm.heap)) BigIntConstructor(vm, structure);
         constructor->finishCreation(vm, bigIntPrototype);
@@ -56,7 +56,8 @@
     void finishCreation(VM&, BigIntPrototype*);
 
 private:
     BigIntConstructor(VM&, Structure*);
 };
+STATIC_ASSERT_ISO_SUBSPACE_SHARABLE(BigIntConstructor, InternalFunction);
 
 } // namespace JSC
