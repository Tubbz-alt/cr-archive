diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderLayoutState.cpp b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderLayoutState.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderLayoutState.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderLayoutState.cpp
@@ -37,15 +37,13 @@
 
 RenderLayoutState::RenderLayoutState(RenderElement& renderer, IsPaginated isPaginated)
     : m_clipped(false)
     , m_isPaginated(isPaginated == IsPaginated::Yes)
     , m_pageLogicalHeightChanged(false)
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     , m_layoutDeltaXSaturated(false)
     , m_layoutDeltaYSaturated(false)
-#endif
-#ifndef NDEBUG
     , m_renderer(&renderer)
 #endif
 {
     if (RenderElement* container = renderer.container()) {
         FloatPoint absContentPoint = container->localToAbsolute(FloatPoint(), UseTransforms);
@@ -66,15 +64,13 @@
 
 RenderLayoutState::RenderLayoutState(const FrameViewLayoutContext::LayoutStateStack& layoutStateStack, RenderBox& renderer, const LayoutSize& offset, LayoutUnit pageLogicalHeight, bool pageLogicalHeightChanged)
     : m_clipped(false)
     , m_isPaginated(false)
     , m_pageLogicalHeightChanged(false)
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     , m_layoutDeltaXSaturated(false)
     , m_layoutDeltaYSaturated(false)
-#endif
-#ifndef NDEBUG
     , m_renderer(&renderer)
 #endif
 {
     if (!layoutStateStack.isEmpty()) {
         auto& ancestor = *layoutStateStack.last().get();
@@ -107,11 +103,11 @@
 
     if (renderer.hasOverflowClip())
         m_paintOffset -= toLayoutSize(renderer.scrollPosition());
 
     m_layoutDelta = ancestor.layoutDelta();
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     m_layoutDeltaXSaturated = ancestor.m_layoutDeltaXSaturated;
     m_layoutDeltaYSaturated = ancestor.m_layoutDeltaYSaturated;
 #endif
 }
 
@@ -258,17 +254,17 @@
 }
 
 void RenderLayoutState::addLayoutDelta(LayoutSize delta)
 {
     m_layoutDelta += delta;
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     m_layoutDeltaXSaturated |= m_layoutDelta.width() == LayoutUnit::max() || m_layoutDelta.width() == LayoutUnit::min();
     m_layoutDeltaYSaturated |= m_layoutDelta.height() == LayoutUnit::max() || m_layoutDelta.height() == LayoutUnit::min();
 #endif
 }
 
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
 bool RenderLayoutState::layoutDeltaMatches(LayoutSize delta) const
 {
     return (delta.width() == m_layoutDelta.width() || m_layoutDeltaXSaturated) && (delta.height() == m_layoutDelta.height() || m_layoutDeltaYSaturated);
 }
 #endif
