diff a/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/worker/WorkerNetworkAgent.h b/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/worker/WorkerNetworkAgent.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/worker/WorkerNetworkAgent.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/inspector/agents/worker/WorkerNetworkAgent.h
@@ -32,19 +32,19 @@
 class WorkerNetworkAgent final : public InspectorNetworkAgent {
     WTF_MAKE_NONCOPYABLE(WorkerNetworkAgent);
     WTF_MAKE_FAST_ALLOCATED;
 public:
     WorkerNetworkAgent(WorkerAgentContext&);
-    virtual ~WorkerNetworkAgent();
+    ~WorkerNetworkAgent() override;
 
 private:
-    String loaderIdentifier(DocumentLoader*);
-    String frameIdentifier(DocumentLoader*);
-    Vector<WebSocket*> activeWebSockets(const LockHolder&);
-    void setResourceCachingDisabled(bool);
-    ScriptExecutionContext* scriptExecutionContext(ErrorString&, const String& frameId);
-    bool shouldForceBufferingNetworkResourceData() const { return true; }
+    String loaderIdentifier(DocumentLoader*) override;
+    String frameIdentifier(DocumentLoader*) override;
+    Vector<WebSocket*> activeWebSockets(const LockHolder&) override;
+    void setResourceCachingDisabled(bool) override;
+    ScriptExecutionContext* scriptExecutionContext(ErrorString&, const String& frameId) override;
+    bool shouldForceBufferingNetworkResourceData() const override { return true; }
 
     WorkerGlobalScope& m_workerGlobalScope;
 };
 
 } // namespace WebCore
