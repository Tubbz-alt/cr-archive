diff a/modules/javafx.web/src/main/native/Source/WTF/wtf/PtrTag.h b/modules/javafx.web/src/main/native/Source/WTF/wtf/PtrTag.h
--- a/modules/javafx.web/src/main/native/Source/WTF/wtf/PtrTag.h
+++ b/modules/javafx.web/src/main/native/Source/WTF/wtf/PtrTag.h
@@ -101,14 +101,14 @@
 constexpr PtrTag AnyPtrTag = static_cast<PtrTag>(-1); // Only used for assertion messages.
 
 WTF_EXPORT_PRIVATE void registerPtrTagLookup(PtrTagLookup*);
 WTF_EXPORT_PRIVATE void reportBadTag(const void*, PtrTag expectedTag);
 
-#if ASSERT_DISABLED
-constexpr bool enablePtrTagDebugAssert = false;
-#else
+#if ASSERT_ENABLED
 constexpr bool enablePtrTagDebugAssert = true;
+#else
+constexpr bool enablePtrTagDebugAssert = false;
 #endif
 
 #define WTF_PTRTAG_ASSERT(action, ptr, expectedTag, assertion) \
     do { \
         if (action == PtrTagAction::ReleaseAssert \
@@ -261,11 +261,11 @@
 inline PtrType retagCodePtrImpl(PtrType ptr, PtrTag oldTag, PtrTag newTag)
 {
     if (!ptr)
         return nullptr;
     PtrTagAction untagAction = (tagAction == PtrTagAction::NoAssert) ? PtrTagAction::NoAssert : PtrTagAction::ReleaseAssert;
-    WTF_PTRTAG_ASSERT(untagAction, ptr, oldTag, removeCodePtrTag(ptr) == untagCodePtrImpl<PtrTagAction::NoAssert>(ptr, oldTag));
+    WTF_PTRTAG_ASSERT(untagAction, ptr, oldTag, ptr == tagCodePtrImpl<PtrTagAction::NoAssert>(removeCodePtrTag(ptr), oldTag));
     PtrType result = retagCodePtrImplHelper<tagAction>(ptr, oldTag, newTag);
     WTF_PTRTAG_ASSERT(tagAction, ptr, newTag, result == tagCodePtrImpl<PtrTagAction::NoAssert>(removeCodePtrTag(ptr), newTag));
     return result;
 }
 
@@ -293,11 +293,11 @@
 template<PtrTagAction tagAction, typename PtrType>
 inline PtrType tagCFunctionPtrImpl(PtrType ptr, PtrTag tag)
 {
     if (!ptr)
         return nullptr;
-    WTF_PTRTAG_ASSERT(tagAction, ptr, CFunctionPtrTag, removeCodePtrTag(ptr) == untagCodePtrImpl<PtrTagAction::NoAssert>(ptr, CFunctionPtrTag));
+    WTF_PTRTAG_ASSERT(tagAction, ptr, CFunctionPtrTag, ptr == tagCodePtrImpl<PtrTagAction::NoAssert>(removeCodePtrTag(ptr), CFunctionPtrTag));
     return retagCodePtrImpl<tagAction>(ptr, CFunctionPtrTag, tag);
 }
 
 template<typename T, typename PtrType, typename = std::enable_if_t<std::is_pointer<PtrType>::value && !std::is_same<T, PtrType>::value>>
 inline T tagCFunctionPtr(PtrType ptr, PtrTag tag)
@@ -323,11 +323,11 @@
 template<PtrTagAction tagAction, typename PtrType>
 inline PtrType untagCFunctionPtrImpl(PtrType ptr, PtrTag tag)
 {
     if (!ptr)
         return nullptr;
-    WTF_PTRTAG_ASSERT(tagAction, ptr, tag, removeCodePtrTag(ptr) == untagCodePtrImpl<PtrTagAction::NoAssert>(ptr, tag));
+    WTF_PTRTAG_ASSERT(tagAction, ptr, tag, ptr == tagCodePtrImpl<PtrTagAction::NoAssert>(removeCodePtrTag(ptr), tag));
     return retagCodePtrImpl<tagAction>(ptr, tag, CFunctionPtrTag);
 }
 
 template<typename T, typename PtrType, typename = std::enable_if_t<std::is_pointer<PtrType>::value && !std::is_same<T, PtrType>::value>>
 inline T untagCFunctionPtr(PtrType ptr, PtrTag tag)
@@ -365,11 +365,11 @@
 
 template<typename PtrType>
 void assertIsCFunctionPtr(PtrType value)
 {
     void* ptr = bitwise_cast<void*>(value);
-    WTF_PTRTAG_ASSERT(PtrTagAction::ReleaseAssert, ptr, CFunctionPtrTag, untagCodePtrImpl<PtrTagAction::NoAssert>(ptr, CFunctionPtrTag) == removeCodePtrTag(ptr));
+    WTF_PTRTAG_ASSERT(PtrTagAction::ReleaseAssert, ptr, CFunctionPtrTag, ptr == tagCodePtrImpl<PtrTagAction::NoAssert>(removeCodePtrTag(ptr), CFunctionPtrTag));
 }
 
 template<typename PtrType>
 void assertIsNullOrCFunctionPtr(PtrType ptr)
 {
@@ -402,11 +402,11 @@
 bool isTaggedWith(PtrType value, PtrTag tag)
 {
     void* ptr = bitwise_cast<void*>(value);
     if (tag == NoPtrTag)
         return ptr == removeCodePtrTag(ptr);
-    return untagCodePtrImpl<PtrTagAction::NoAssert>(ptr, tag) == removeCodePtrTag(ptr);
+    return ptr == tagCodePtrImpl<PtrTagAction::NoAssert>(removeCodePtrTag(ptr), tag);
 }
 
 template<typename PtrType>
 void assertIsTaggedWith(PtrType value, PtrTag tag)
 {
