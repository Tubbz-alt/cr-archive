diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/tools/JSDollarVM.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/tools/JSDollarVM.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/tools/JSDollarVM.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/tools/JSDollarVM.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2015-2017 Apple Inc. All rights reserved.
+ * Copyright (C) 2015-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -24,38 +24,53 @@
  */
 
 #pragma once
 
 #include "JSObject.h"
+#include "Options.h"
 
 namespace JSC {
 
+struct DollarVMAssertScope {
+    DollarVMAssertScope() { RELEASE_ASSERT(Options::useDollarVM()); }
+    ~DollarVMAssertScope() { RELEASE_ASSERT(Options::useDollarVM()); }
+};
+
 class JSDollarVM final : public JSNonFinalObject {
 public:
     typedef JSNonFinalObject Base;
 
     DECLARE_EXPORT_INFO;
 
     static Structure* createStructure(VM& vm, JSGlobalObject* globalObject, JSValue prototype)
     {
+        DollarVMAssertScope assertScope;
         return Structure::create(vm, globalObject, prototype, TypeInfo(ObjectType, StructureFlags), info());
     }
 
     static JSDollarVM* create(VM& vm, Structure* structure)
     {
+        DollarVMAssertScope assertScope;
         JSDollarVM* instance = new (NotNull, allocateCell<JSDollarVM>(vm.heap)) JSDollarVM(vm, structure);
         instance->finishCreation(vm);
         return instance;
     }
 
+    Structure* objectDoingSideEffectPutWithoutCorrectSlotStatusStructure() { return m_objectDoingSideEffectPutWithoutCorrectSlotStatusStructure.get(); }
+
 private:
     JSDollarVM(VM& vm, Structure* structure)
         : Base(vm, structure)
     {
+        DollarVMAssertScope assertScope;
     }
 
     void finishCreation(VM&);
     void addFunction(VM&, JSGlobalObject*, const char* name, NativeFunction, unsigned arguments);
     void addConstructibleFunction(VM&, JSGlobalObject*, const char* name, NativeFunction, unsigned arguments);
+
+    static void visitChildren(JSCell*, SlotVisitor&);
+
+    WriteBarrier<Structure> m_objectDoingSideEffectPutWithoutCorrectSlotStatusStructure;
 };
 
 } // namespace JSC
