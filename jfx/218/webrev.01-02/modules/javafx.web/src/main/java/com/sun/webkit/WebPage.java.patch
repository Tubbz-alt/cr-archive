diff a/modules/javafx.web/src/main/java/com/sun/webkit/WebPage.java b/modules/javafx.web/src/main/java/com/sun/webkit/WebPage.java
--- a/modules/javafx.web/src/main/java/com/sun/webkit/WebPage.java
+++ b/modules/javafx.web/src/main/java/com/sun/webkit/WebPage.java
@@ -631,16 +631,20 @@
             if (isDisposed) {
                 paintLog.fine("updateContent() request for a disposed web page.");
                 return;
             }
             updateDirty(toPaint);
-
+            updateRendering();
         } finally {
             unlockPage();
         }
     }
 
+    public void updateRendering() {
+        twkUpdateRendering(getPage());
+    }
+
     public int getUpdateContentCycleID() {
         return updateContentCycleID;
     }
 
     public boolean isRepaintPending() {
@@ -1153,10 +1157,16 @@
         } finally {
             unlockPage();
         }
     }
 
+    // DRT support
+    public void forceRepaint() {
+        repaintAll();
+        updateContent(new WCRectangle(0, 0, width, height));
+    }
+
     public String getContentType(long frameID) {
         lockPage();
         try {
             log.fine("Get content type: frame = " + frameID);
             if (isDisposed) {
@@ -2595,10 +2605,11 @@
     private native void twkSetBackgroundColor(long pFrame, int backgroundColor);
 
     private native void twkSetBounds(long pPage, int x, int y, int w, int h);
     private native void twkPrePaint(long pPage);
     private native void twkUpdateContent(long pPage, WCRenderQueue rq, int x, int y, int w, int h);
+    private native void twkUpdateRendering(long pPage);
     private native void twkPostPaint(long pPage, WCRenderQueue rq,
                                      int x, int y, int w, int h);
 
     private native String twkGetEncoding(long pPage);
     private native void twkSetEncoding(long pPage, String encoding);
