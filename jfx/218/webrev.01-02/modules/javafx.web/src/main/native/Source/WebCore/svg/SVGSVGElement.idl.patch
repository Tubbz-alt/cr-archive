diff a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGSVGElement.idl b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGSVGElement.idl
--- a/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGSVGElement.idl
+++ b/modules/javafx.web/src/main/native/Source/WebCore/svg/SVGSVGElement.idl
@@ -1,10 +1,10 @@
 /*
  * Copyright (C) 2004, 2005 Nikolas Zimmermann <zimmermann@kde.org>
  * Copyright (C) 2004, 2005, 2010 Rob Buis <buis@kde.org>
  * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>
- * Copyright (C) 2006 Apple Inc. All rights reserved.
+ * Copyright (C) 2006-2019 Apple Inc. All rights reserved.
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Library General Public
  * License as published by the Free Software Foundation; either
  * version 2 of the License, or (at your option) any later version.
@@ -26,57 +26,51 @@
 
 [
     JSGenerateToNativeObject,
     ExportMacro=WEBCORE_EXPORT,
 ] interface SVGSVGElement : SVGGraphicsElement {
-    readonly attribute SVGAnimatedLength x;
-    readonly attribute SVGAnimatedLength y;
-    readonly attribute SVGAnimatedLength width;
-    readonly attribute SVGAnimatedLength height;
-    attribute DOMString contentScriptType;
-    attribute DOMString contentStyleType;
-    [NewObject] readonly attribute SVGRect viewport;
-    readonly attribute unrestricted float pixelUnitToMillimeterX;
-    readonly attribute unrestricted float pixelUnitToMillimeterY;
-    readonly attribute unrestricted float screenPixelToMillimeterX;
-    readonly attribute unrestricted float screenPixelToMillimeterY;
-    readonly attribute boolean useCurrentView;
-    readonly attribute SVGViewSpec currentView;
-    attribute unrestricted float currentScale;
-    readonly attribute SVGPoint currentTranslate;
+    [SameObject] readonly attribute SVGAnimatedLength x;
+    [SameObject] readonly attribute SVGAnimatedLength y;
+    [SameObject] readonly attribute SVGAnimatedLength width;
+    [SameObject] readonly attribute SVGAnimatedLength height;
 
-    unsigned long suspendRedraw(optional unsigned long maxWaitMilliseconds = 0);
-    void unsuspendRedraw(optional unsigned long suspendHandleId = 0);
-    void unsuspendRedrawAll();
-    void forceRedraw();
-    void pauseAnimations();
-    void unpauseAnimations();
-    boolean animationsPaused();
-    unrestricted float getCurrentTime();
-    void setCurrentTime(optional unrestricted float seconds = NaN);
-
-    // FIXME: referenceElement should not be optional.
-    NodeList getIntersectionList(SVGRect rect, optional SVGElement? referenceElement = null);
+    attribute float currentScale;
+    [SameObject] readonly attribute SVGPoint currentTranslate;
 
-    // FIXME: referenceElement should not be optional.
-    NodeList getEnclosureList(SVGRect rect, optional SVGElement? referenceElement = null);
+    readonly attribute boolean useCurrentView;
+    readonly attribute SVGViewSpec currentView;
 
-    boolean checkIntersection(SVGElement? element, SVGRect rect); // element should not be nullable.
-    boolean checkEnclosure(SVGElement? element, SVGRect rect); // element should not be nullable.
+    NodeList getIntersectionList(SVGRect rect, SVGElement? referenceElement);
+    NodeList getEnclosureList(SVGRect rect, SVGElement? referenceElement);
+    boolean checkIntersection(SVGElement element, SVGRect rect);
+    boolean checkEnclosure(SVGElement element, SVGRect rect);
 
     void deselectAll();
 
     [NewObject] SVGNumber createSVGNumber();
     [NewObject] SVGLength createSVGLength();
     [NewObject] SVGAngle createSVGAngle();
     [NewObject] SVGPoint createSVGPoint();
     [NewObject] SVGMatrix createSVGMatrix();
     [NewObject] SVGRect createSVGRect();
     [NewObject] SVGTransform createSVGTransform();
-    [NewObject] SVGTransform createSVGTransformFromMatrix(SVGMatrix matrix);
+    [NewObject] SVGTransform createSVGTransformFromMatrix(optional DOMMatrix2DInit matrix);
 
     Element getElementById([RequiresExistingAtomString] DOMString elementId);
+
+    // SVG animations extensions
+    // https://svgwg.org/specs/animations/#InterfaceSVGSVGElement
+    void pauseAnimations();
+    void unpauseAnimations();
+    boolean animationsPaused();
+    unrestricted float getCurrentTime();
+    void setCurrentTime(optional unrestricted float seconds = NaN);
+
+    // Deprecated SVG redrawing
+    unsigned long suspendRedraw(optional unsigned long maxWaitMilliseconds = 0);
+    void unsuspendRedraw(optional unsigned long suspendHandleId = 0);
+    void unsuspendRedrawAll();
+    void forceRedraw();
 };
 
-SVGSVGElement implements SVGExternalResourcesRequired;
 SVGSVGElement implements SVGFitToViewBox;
 SVGSVGElement implements SVGZoomAndPan;
