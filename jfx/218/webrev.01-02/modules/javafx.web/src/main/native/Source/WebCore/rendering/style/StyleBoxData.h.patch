diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/style/StyleBoxData.h b/modules/javafx.web/src/main/native/Source/WebCore/rendering/style/StyleBoxData.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/style/StyleBoxData.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/style/StyleBoxData.h
@@ -29,11 +29,13 @@
 #include <wtf/RefCounted.h>
 #include <wtf/Ref.h>
 
 namespace WebCore {
 
+DECLARE_ALLOCATOR_WITH_HEAP_IDENTIFIER(StyleBoxData);
 class StyleBoxData : public RefCounted<StyleBoxData> {
+    WTF_MAKE_FAST_ALLOCATED_WITH_HEAP_IDENTIFIER(StyleBoxData);
 public:
     static Ref<StyleBoxData> create() { return adoptRef(*new StyleBoxData); }
     Ref<StyleBoxData> copy() const;
 
     bool operator==(const StyleBoxData& o) const;
@@ -51,12 +53,15 @@
     const Length& maxWidth() const { return m_maxWidth; }
     const Length& maxHeight() const { return m_maxHeight; }
 
     const Length& verticalAlign() const { return m_verticalAlign; }
 
-    int zIndex() const { return m_zIndex; }
-    bool hasAutoZIndex() const { return m_hasAutoZIndex; }
+    int specifiedZIndex() const { return m_specifiedZIndex; }
+    bool hasAutoSpecifiedZIndex() const { return m_hasAutoSpecifiedZIndex; }
+
+    int usedZIndex() const { return m_usedZIndex; }
+    bool hasAutoUsedZIndex() const { return m_hasAutoUsedZIndex; }
 
     BoxSizing boxSizing() const { return static_cast<BoxSizing>(m_boxSizing); }
 #if ENABLE(CSS_BOX_DECORATION_BREAK)
     BoxDecorationBreak boxDecorationBreak() const { return static_cast<BoxDecorationBreak>(m_boxDecorationBreak); }
 #endif
@@ -76,12 +81,14 @@
     Length m_minHeight;
     Length m_maxHeight;
 
     Length m_verticalAlign;
 
-    int m_zIndex;
-    unsigned m_hasAutoZIndex : 1;
+    int m_specifiedZIndex;
+    int m_usedZIndex;
+    unsigned m_hasAutoSpecifiedZIndex : 1;
+    unsigned m_hasAutoUsedZIndex : 1;
     unsigned m_boxSizing : 1; // BoxSizing
 #if ENABLE(CSS_BOX_DECORATION_BREAK)
     unsigned m_boxDecorationBreak : 1; // BoxDecorationBreak
 #endif
 };
