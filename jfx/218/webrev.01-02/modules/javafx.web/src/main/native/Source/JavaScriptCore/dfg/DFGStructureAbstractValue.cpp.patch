diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGStructureAbstractValue.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGStructureAbstractValue.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGStructureAbstractValue.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGStructureAbstractValue.cpp
@@ -30,20 +30,20 @@
 
 #include "DFGGraph.h"
 
 namespace JSC { namespace DFG {
 
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
 void StructureAbstractValue::assertIsRegistered(Graph& graph) const
 {
     if (isTop())
         return;
 
     for (unsigned i = size(); i--;)
         graph.assertIsRegistered(at(i).get());
 }
-#endif // !ASSERT_DISABLED
+#endif // ASSERT_ENABLED
 
 void StructureAbstractValue::clobber()
 {
     // The premise of this approach to clobbering is that anytime we introduce
     // a watchable structure into an abstract value, we watchpoint it. You can assert
