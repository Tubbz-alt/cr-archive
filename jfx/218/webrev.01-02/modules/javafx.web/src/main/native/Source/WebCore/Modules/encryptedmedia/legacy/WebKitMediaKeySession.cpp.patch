diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/encryptedmedia/legacy/WebKitMediaKeySession.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/encryptedmedia/legacy/WebKitMediaKeySession.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/encryptedmedia/legacy/WebKitMediaKeySession.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/encryptedmedia/legacy/WebKitMediaKeySession.cpp
@@ -27,10 +27,11 @@
 #include "WebKitMediaKeySession.h"
 
 #if ENABLE(LEGACY_ENCRYPTED_MEDIA)
 
 #include "Document.h"
+#include "EventLoop.h"
 #include "EventNames.h"
 #include "Page.h"
 #include "SecurityOriginData.h"
 #include "Settings.h"
 #include "WebKitMediaKeyError.h"
@@ -52,11 +53,10 @@
 
 WebKitMediaKeySession::WebKitMediaKeySession(ScriptExecutionContext& context, WebKitMediaKeys& keys, const String& keySystem)
     : ActiveDOMObject(&context)
     , m_keys(&keys)
     , m_keySystem(keySystem)
-    , m_asyncEventQueue(*this)
     , m_session(keys.cdm().createSession(*this))
     , m_keyRequestTimer(*this, &WebKitMediaKeySession::keyRequestTimerFired)
     , m_addKeyTimer(*this, &WebKitMediaKeySession::addKeyTimerFired)
 {
     if (m_session)
@@ -65,12 +65,10 @@
 
 WebKitMediaKeySession::~WebKitMediaKeySession()
 {
     if (m_session)
         m_session->setClient(nullptr);
-
-    m_asyncEventQueue.cancelAllEvents();
 }
 
 void WebKitMediaKeySession::close()
 {
     if (m_session) {
@@ -181,11 +179,11 @@
 
         // 2.7. If did store key is true, queue a task to fire a simple event named keyadded at the MediaKeySession object.
         if (didStoreKey) {
             auto keyaddedEvent = Event::create(eventNames().webkitkeyaddedEvent, Event::CanBubble::No, Event::IsCancelable::No);
             keyaddedEvent->setTarget(this);
-            m_asyncEventQueue.enqueueEvent(WTFMove(keyaddedEvent));
+            queueTaskToDispatchEvent(*this, TaskSource::Networking, WTFMove(keyaddedEvent));
 
             ASSERT(m_keys);
             m_keys->keyAdded();
         }
 
@@ -205,20 +203,20 @@
 
 void WebKitMediaKeySession::sendMessage(Uint8Array* message, String destinationURL)
 {
     auto event = WebKitMediaKeyMessageEvent::create(eventNames().webkitkeymessageEvent, message, destinationURL);
     event->setTarget(this);
-    m_asyncEventQueue.enqueueEvent(WTFMove(event));
+    queueTaskToDispatchEvent(*this, TaskSource::Networking, WTFMove(event));
 }
 
 void WebKitMediaKeySession::sendError(MediaKeyErrorCode errorCode, uint32_t systemCode)
 {
     m_error = WebKitMediaKeyError::create(errorCode, systemCode);
 
     auto keyerrorEvent = Event::create(eventNames().webkitkeyerrorEvent, Event::CanBubble::No, Event::IsCancelable::No);
     keyerrorEvent->setTarget(this);
-    m_asyncEventQueue.enqueueEvent(WTFMove(keyerrorEvent));
+    queueTaskToDispatchEvent(*this, TaskSource::Networking, WTFMove(keyerrorEvent));
 }
 
 String WebKitMediaKeySession::mediaKeysStorageDirectory() const
 {
     auto* document = downcast<Document>(scriptExecutionContext());
@@ -236,38 +234,21 @@
     return FileSystem::pathByAppendingComponent(storageDirectory, document->securityOrigin().data().databaseIdentifier());
 }
 
 bool WebKitMediaKeySession::hasPendingActivity() const
 {
-    return (m_keys && m_session) || m_asyncEventQueue.hasPendingEvents();
-}
-
-void WebKitMediaKeySession::suspend(ReasonForSuspension)
-{
-    ASSERT_NOT_REACHED();
-}
-
-void WebKitMediaKeySession::resume()
-{
-    ASSERT_NOT_REACHED();
+    return (m_keys && m_session) || ActiveDOMObject::hasPendingActivity();
 }
 
 void WebKitMediaKeySession::stop()
 {
-    m_asyncEventQueue.close();
     close();
 }
 
 const char* WebKitMediaKeySession::activeDOMObjectName() const
 {
     return "WebKitMediaKeySession";
 }
 
-bool WebKitMediaKeySession::canSuspendForDocumentSuspension() const
-{
-    // FIXME: We should try and do better here.
-    return false;
-}
-
 }
 
 #endif
