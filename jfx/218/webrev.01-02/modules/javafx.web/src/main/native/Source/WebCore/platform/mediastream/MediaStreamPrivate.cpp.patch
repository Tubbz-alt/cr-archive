diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/mediastream/MediaStreamPrivate.cpp b/modules/javafx.web/src/main/native/Source/WebCore/platform/mediastream/MediaStreamPrivate.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/mediastream/MediaStreamPrivate.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/mediastream/MediaStreamPrivate.cpp
@@ -89,20 +89,23 @@
         track->removeObserver(*this);
 }
 
 void MediaStreamPrivate::addObserver(MediaStreamPrivate::Observer& observer)
 {
+    RELEASE_ASSERT(isMainThread());
     m_observers.add(&observer);
 }
 
 void MediaStreamPrivate::removeObserver(MediaStreamPrivate::Observer& observer)
 {
+    RELEASE_ASSERT(isMainThread());
     m_observers.remove(&observer);
 }
 
 void MediaStreamPrivate::forEachObserver(const WTF::Function<void(Observer&)>& apply) const
 {
+    RELEASE_ASSERT(isMainThread());
     for (auto* observer : copyToVector(m_observers)) {
         if (!m_observers.contains(observer))
             continue;
         apply(*observer);
     }
@@ -200,38 +203,20 @@
 }
 
 bool MediaStreamPrivate::hasVideo() const
 {
     for (auto& track : m_trackSet.values()) {
-        if (track->type() == RealtimeMediaSource::Type::Video && track->enabled() && !track->ended())
+        if (track->type() == RealtimeMediaSource::Type::Video && track->isActive())
             return true;
     }
     return false;
 }
 
 bool MediaStreamPrivate::hasAudio() const
 {
     for (auto& track : m_trackSet.values()) {
-        if (track->type() == RealtimeMediaSource::Type::Audio && track->enabled() && !track->ended())
-            return true;
-    }
-    return false;
-}
-
-bool MediaStreamPrivate::hasCaptureVideoSource() const
-{
-    for (auto& track : m_trackSet.values()) {
-        if (track->type() == RealtimeMediaSource::Type::Video && track->isCaptureTrack())
-            return true;
-    }
-    return false;
-}
-
-bool MediaStreamPrivate::hasCaptureAudioSource() const
-{
-    for (auto& track : m_trackSet.values()) {
-        if (track->type() == RealtimeMediaSource::Type::Audio && track->isCaptureTrack())
+        if (track->type() == RealtimeMediaSource::Type::Audio && track->isActive())
             return true;
     }
     return false;
 }
 
@@ -280,13 +265,11 @@
 #if RELEASE_LOG_DISABLED
     UNUSED_PARAM(track);
 #endif
 
     ALWAYS_LOG(LOGIDENTIFIER, track.logIdentifier(), " ", track.muted());
-    scheduleDeferredTask([this] {
-        characteristicsChanged();
-    });
+    characteristicsChanged();
 }
 
 void MediaStreamPrivate::trackSettingsChanged(MediaStreamTrackPrivate&)
 {
     characteristicsChanged();
@@ -299,49 +282,32 @@
 #endif
 
     ALWAYS_LOG(LOGIDENTIFIER, track.logIdentifier(), " ", track.enabled());
     updateActiveVideoTrack();
 
-    scheduleDeferredTask([this] {
-        characteristicsChanged();
-    });
+    characteristicsChanged();
 }
 
 void MediaStreamPrivate::trackStarted(MediaStreamTrackPrivate& track)
 {
 #if RELEASE_LOG_DISABLED
     UNUSED_PARAM(track);
 #endif
 
     ALWAYS_LOG(LOGIDENTIFIER, track.logIdentifier());
-    scheduleDeferredTask([this] {
-        characteristicsChanged();
-    });
+    characteristicsChanged();
 }
 
 void MediaStreamPrivate::trackEnded(MediaStreamTrackPrivate& track)
 {
 #if RELEASE_LOG_DISABLED
     UNUSED_PARAM(track);
 #endif
 
     ALWAYS_LOG(LOGIDENTIFIER, track.logIdentifier());
-    scheduleDeferredTask([this] {
-        updateActiveState(NotifyClientOption::Notify);
-        characteristicsChanged();
-    });
-}
-
-void MediaStreamPrivate::scheduleDeferredTask(Function<void ()>&& function)
-{
-    ASSERT(function);
-    callOnMainThread([weakThis = makeWeakPtr(*this), function = WTFMove(function)] {
-        if (!weakThis)
-            return;
-
-        function();
-    });
+    updateActiveState(NotifyClientOption::Notify);
+    characteristicsChanged();
 }
 
 void MediaStreamPrivate::monitorOrientation(OrientationNotifier& notifier)
 {
     for (auto& track : m_trackSet.values()) {
