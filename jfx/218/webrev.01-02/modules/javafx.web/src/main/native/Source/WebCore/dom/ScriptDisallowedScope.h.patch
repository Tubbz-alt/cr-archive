diff a/modules/javafx.web/src/main/native/Source/WebCore/dom/ScriptDisallowedScope.h b/modules/javafx.web/src/main/native/Source/WebCore/dom/ScriptDisallowedScope.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/dom/ScriptDisallowedScope.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/dom/ScriptDisallowedScope.h
@@ -82,11 +82,11 @@
 
         // Don't enable this assertion in release since it's O(n).
         // Release asserts in canExecuteScript should be sufficient for security defense purposes.
         static bool isEventDispatchAllowedInSubtree(Node& node)
         {
-#if !ASSERT_DISABLED || ENABLE(SECURITY_ASSERTIONS)
+#if ASSERT_ENABLED || ENABLE(SECURITY_ASSERTIONS)
             return isScriptAllowed() || EventAllowedScope::isAllowedNode(node);
 #else
             UNUSED_PARAM(node);
             return true;
 #endif
@@ -107,11 +107,11 @@
             return !s_count;
 #endif
         }
     };
 
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     class EventAllowedScope {
     public:
         explicit EventAllowedScope(ContainerNode& userAgentContentRoot)
             : m_eventAllowedTreeRoot(userAgentContentRoot)
             , m_previousScope(s_currentScope)
@@ -138,17 +138,17 @@
         Ref<ContainerNode> m_eventAllowedTreeRoot;
 
         EventAllowedScope* m_previousScope;
         static EventAllowedScope* s_currentScope;
     };
-#else
+#else // not ASSERT_ENABLED
     class EventAllowedScope {
     public:
         explicit EventAllowedScope(ContainerNode&) { }
         static bool isAllowedNode(Node&) { return true; }
     };
-#endif
+#endif // not ASSERT_ENABLED
 
     // FIXME: Remove this class once the sync layout inside SVGImage::draw is removed,
     // CachedSVGFont::ensureCustomFontData no longer synchronously creates a document during style resolution,
     // and refactored the code in RenderFrameBase::performLayoutWithFlattening.
     class DisableAssertionsInScope {
