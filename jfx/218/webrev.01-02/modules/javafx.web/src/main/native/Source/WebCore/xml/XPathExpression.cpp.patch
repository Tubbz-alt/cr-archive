diff a/modules/javafx.web/src/main/native/Source/WebCore/xml/XPathExpression.cpp b/modules/javafx.web/src/main/native/Source/WebCore/xml/XPathExpression.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/xml/XPathExpression.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/xml/XPathExpression.cpp
@@ -52,21 +52,21 @@
 }
 
 XPathExpression::~XPathExpression() = default;
 
 // FIXME: Why does this take an XPathResult that it ignores?
-ExceptionOr<Ref<XPathResult>> XPathExpression::evaluate(Node* contextNode, unsigned short type, XPathResult*)
+ExceptionOr<Ref<XPathResult>> XPathExpression::evaluate(Node& contextNode, unsigned short type, XPathResult*)
 {
     if (!isValidContextNode(contextNode))
         return Exception { NotSupportedError };
 
     EvaluationContext& evaluationContext = Expression::evaluationContext();
-    evaluationContext.node = contextNode;
+    evaluationContext.node = &contextNode;
     evaluationContext.size = 1;
     evaluationContext.position = 1;
     evaluationContext.hadTypeConversionError = false;
-    auto result = XPathResult::create(contextNode->document(), m_topExpression->evaluate());
+    auto result = XPathResult::create(contextNode.document(), m_topExpression->evaluate());
     evaluationContext.node = nullptr; // Do not hold a reference to the context node, as this may prevent the whole document from being destroyed in time.
 
     if (evaluationContext.hadTypeConversionError)
         return Exception { SyntaxError };
 
