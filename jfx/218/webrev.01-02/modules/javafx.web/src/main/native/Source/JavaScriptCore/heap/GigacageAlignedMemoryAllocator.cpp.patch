diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/GigacageAlignedMemoryAllocator.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/GigacageAlignedMemoryAllocator.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/GigacageAlignedMemoryAllocator.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/GigacageAlignedMemoryAllocator.cpp
@@ -28,44 +28,67 @@
 
 namespace JSC {
 
 GigacageAlignedMemoryAllocator::GigacageAlignedMemoryAllocator(Gigacage::Kind kind)
     : m_kind(kind)
+#if ENABLE(MALLOC_HEAP_BREAKDOWN)
+    , m_heap(makeString("WebKit GigacageAlignedMemoryAllocator ", Gigacage::name(m_kind)).utf8().data())
+#endif
 {
 }
 
 GigacageAlignedMemoryAllocator::~GigacageAlignedMemoryAllocator()
 {
 }
 
 void* GigacageAlignedMemoryAllocator::tryAllocateAlignedMemory(size_t alignment, size_t size)
 {
+#if ENABLE(MALLOC_HEAP_BREAKDOWN)
+    return m_heap.memalign(alignment, size, true);
+#else
     return Gigacage::tryAlignedMalloc(m_kind, alignment, size);
+#endif
 }
 
 void GigacageAlignedMemoryAllocator::freeAlignedMemory(void* basePtr)
 {
+#if ENABLE(MALLOC_HEAP_BREAKDOWN)
+    return m_heap.free(basePtr);
+#else
     Gigacage::alignedFree(m_kind, basePtr);
+#endif
 }
 
 void GigacageAlignedMemoryAllocator::dump(PrintStream& out) const
 {
     out.print(Gigacage::name(m_kind), "Gigacage");
 }
 
 void* GigacageAlignedMemoryAllocator::tryAllocateMemory(size_t size)
 {
+#if ENABLE(MALLOC_HEAP_BREAKDOWN)
+    return m_heap.malloc(size);
+#else
     return Gigacage::tryMalloc(m_kind, size);
+#endif
 }
 
 void GigacageAlignedMemoryAllocator::freeMemory(void* pointer)
 {
+#if ENABLE(MALLOC_HEAP_BREAKDOWN)
+    m_heap.free(pointer);
+#else
     Gigacage::free(m_kind, pointer);
+#endif
 }
 
 void* GigacageAlignedMemoryAllocator::tryReallocateMemory(void* pointer, size_t size)
 {
+#if ENABLE(MALLOC_HEAP_BREAKDOWN)
+    return m_heap.realloc(pointer, size);
+#else
     return Gigacage::tryRealloc(m_kind, pointer, size);
+#endif
 }
 
 } // namespace JSC
 
