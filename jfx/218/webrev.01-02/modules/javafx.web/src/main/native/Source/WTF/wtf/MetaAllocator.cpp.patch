diff a/modules/javafx.web/src/main/native/Source/WTF/wtf/MetaAllocator.cpp b/modules/javafx.web/src/main/native/Source/WTF/wtf/MetaAllocator.cpp
--- a/modules/javafx.web/src/main/native/Source/WTF/wtf/MetaAllocator.cpp
+++ b/modules/javafx.web/src/main/native/Source/WTF/wtf/MetaAllocator.cpp
@@ -29,14 +29,20 @@
 #include "config.h"
 #include <wtf/MetaAllocator.h>
 
 #include <wtf/DataLog.h>
 #include <wtf/FastMalloc.h>
+#include <wtf/NeverDestroyed.h>
 #include <wtf/ProcessID.h>
 
 namespace WTF {
 
+DEFINE_ALLOCATOR_WITH_HEAP_IDENTIFIER(MetaAllocatorHandle);
+
+DECLARE_ALLOCATOR_WITH_HEAP_IDENTIFIER(MetaAllocatorFreeSpace);
+DEFINE_ALLOCATOR_WITH_HEAP_IDENTIFIER(MetaAllocatorFreeSpace);
+
 MetaAllocator::~MetaAllocator()
 {
     for (FreeSpaceNode* node = m_freeSpaceSizeMap.first(); node;) {
         FreeSpaceNode* next = node->successor();
         m_freeSpaceSizeMap.remove(node);
@@ -470,19 +476,19 @@
 MetaAllocator::FreeSpaceNode* MetaAllocator::allocFreeSpaceNode()
 {
 #ifndef NDEBUG
     m_mallocBalance++;
 #endif
-    return new (NotNull, fastMalloc(sizeof(FreeSpaceNode))) FreeSpaceNode();
+    return new (NotNull, MetaAllocatorFreeSpaceMalloc::malloc(sizeof(FreeSpaceNode))) FreeSpaceNode();
 }
 
 void MetaAllocator::freeFreeSpaceNode(FreeSpaceNode* node)
 {
 #ifndef NDEBUG
     m_mallocBalance--;
 #endif
-    fastFree(node);
+    MetaAllocatorFreeSpaceMalloc::free(node);
 }
 
 #if ENABLE(META_ALLOCATOR_PROFILE)
 void MetaAllocator::dumpProfile()
 {
