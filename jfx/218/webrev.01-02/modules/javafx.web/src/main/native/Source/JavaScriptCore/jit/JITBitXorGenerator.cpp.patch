diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/JITBitXorGenerator.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/JITBitXorGenerator.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/JITBitXorGenerator.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/jit/JITBitXorGenerator.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2015 Apple Inc. All rights reserved.
+ * Copyright (C) 2015-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -44,11 +44,11 @@
         m_slowPathJumpList.append(jit.branchIfNotInt32(var));
 
         jit.moveValueRegs(var, m_result);
 #if USE(JSVALUE64)
         jit.xor32(CCallHelpers::Imm32(constOpr.asConstInt32()), m_result.payloadGPR());
-        jit.or64(GPRInfo::tagTypeNumberRegister, m_result.payloadGPR());
+        jit.or64(GPRInfo::numberTagRegister, m_result.payloadGPR());
 #else
         jit.xor32(CCallHelpers::Imm32(constOpr.asConstInt32()), m_result.payloadGPR());
 #endif
 
     } else {
@@ -59,11 +59,11 @@
         m_slowPathJumpList.append(jit.branchIfNotInt32(m_right));
 
         jit.moveValueRegs(m_left, m_result);
 #if USE(JSVALUE64)
         jit.xor64(m_right.payloadGPR(), m_result.payloadGPR());
-        jit.or64(GPRInfo::tagTypeNumberRegister, m_result.payloadGPR());
+        jit.or64(GPRInfo::numberTagRegister, m_result.payloadGPR());
 #else
         jit.xor32(m_right.payloadGPR(), m_result.payloadGPR());
 #endif
     }
 }
