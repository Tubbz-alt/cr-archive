diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/svg/SVGRootInlineBox.cpp b/modules/javafx.web/src/main/native/Source/WebCore/rendering/svg/SVGRootInlineBox.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/svg/SVGRootInlineBox.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/svg/SVGRootInlineBox.cpp
@@ -188,18 +188,18 @@
     setLineTopBottomPositions(0, boundingRect.height(), 0, boundingRect.height());
 }
 
 InlineBox* SVGRootInlineBox::closestLeafChildForPosition(const LayoutPoint& point)
 {
-    InlineBox* firstLeaf = firstLeafChild();
-    InlineBox* lastLeaf = lastLeafChild();
+    InlineBox* firstLeaf = firstLeafDescendant();
+    InlineBox* lastLeaf = lastLeafDescendant();
     if (firstLeaf == lastLeaf)
         return firstLeaf;
 
     // FIXME: Check for vertical text!
     InlineBox* closestLeaf = nullptr;
-    for (InlineBox* leaf = firstLeaf; leaf; leaf = leaf->nextLeafChild()) {
+    for (InlineBox* leaf = firstLeaf; leaf; leaf = leaf->nextLeafOnLine()) {
         if (!leaf->isSVGInlineTextBox())
             continue;
         if (point.y() < leaf->y())
             continue;
         if (point.y() > leaf->y() + leaf->virtualLogicalHeight())
@@ -213,11 +213,11 @@
     return closestLeaf ? closestLeaf : lastLeaf;
 }
 
 bool SVGRootInlineBox::nodeAtPoint(const HitTestRequest& request, HitTestResult& result, const HitTestLocation& locationInContainer, const LayoutPoint& accumulatedOffset, LayoutUnit lineTop, LayoutUnit lineBottom, HitTestAction hitTestAction)
 {
-    for (InlineBox* leaf = firstLeafChild(); leaf; leaf = leaf->nextLeafChild()) {
+    for (InlineBox* leaf = firstLeafDescendant(); leaf; leaf = leaf->nextLeafOnLine()) {
         if (!leaf->isSVGInlineTextBox())
             continue;
         if (leaf->nodeAtPoint(request, result, locationInContainer, accumulatedOffset, lineTop, lineBottom, hitTestAction))
             return true;
     }
