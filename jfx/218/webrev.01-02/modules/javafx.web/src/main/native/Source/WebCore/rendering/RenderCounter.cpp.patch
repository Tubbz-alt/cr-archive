diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderCounter.cpp b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderCounter.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderCounter.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderCounter.cpp
@@ -73,21 +73,41 @@
     if (renderer.isPseudoElement())
         return renderer.generatingElement();
     return renderer.element() ? renderer.element()->parentElement() : nullptr;
 }
 
+static Element* previousSiblingOrParentElement(const Element& element)
+{
+    if (auto* previous = ElementTraversal::pseudoAwarePreviousSibling(element)) {
+        while (previous && !previous->renderer())
+            previous = ElementTraversal::pseudoAwarePreviousSibling(*previous);
+
+        if (previous)
+            return previous;
+    }
+
+    if (is<PseudoElement>(element)) {
+        auto* hostElement = downcast<PseudoElement>(element).hostElement();
+        ASSERT(hostElement);
+        if (hostElement->renderer())
+            return hostElement;
+        return previousSiblingOrParentElement(*hostElement);
+    }
+
+    auto* parent = element.parentElement();
+    if (parent && !parent->renderer())
+        parent = previousSiblingOrParentElement(*parent);
+    return parent;
+}
+
 // This function processes the renderer tree in the order of the DOM tree
 // including pseudo elements as defined in CSS 2.1.
 static RenderElement* previousSiblingOrParent(const RenderElement& renderer)
 {
     ASSERT(renderer.element());
-    Element* previous = ElementTraversal::pseudoAwarePreviousSibling(*renderer.element());
-    while (previous && !previous->renderer())
-        previous = ElementTraversal::pseudoAwarePreviousSibling(*previous);
-    if (previous)
-        return previous->renderer();
-    previous = parentOrPseudoHostElement(renderer);
+
+    auto* previous = previousSiblingOrParentElement(*renderer.element());
     return previous ? previous->renderer() : nullptr;
 }
 
 static inline bool areRenderersElementsSiblings(const RenderElement& first, const RenderElement& second)
 {
