diff a/modules/javafx.web/src/main/native/Source/WebCore/html/canvas/OESVertexArrayObject.cpp b/modules/javafx.web/src/main/native/Source/WebCore/html/canvas/OESVertexArrayObject.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/html/canvas/OESVertexArrayObject.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/html/canvas/OESVertexArrayObject.cpp
@@ -26,11 +26,11 @@
 #include "config.h"
 #include "OESVertexArrayObject.h"
 
 #if ENABLE(WEBGL)
 
-#include "Extensions3D.h"
+#include "ExtensionsGL.h"
 #include "WebGLRenderingContext.h"
 
 namespace WebCore {
 
 OESVertexArrayObject::OESVertexArrayObject(WebGLRenderingContextBase& context)
@@ -59,30 +59,30 @@
         return;
 
     if (!arrayObject->isDefaultObject() && arrayObject == static_cast<WebGLRenderingContext&>(m_context).m_boundVertexArrayObject)
         static_cast<WebGLRenderingContext&>(m_context).setBoundVertexArrayObject(nullptr);
 
-    arrayObject->deleteObject(m_context.graphicsContext3D());
+    arrayObject->deleteObject(m_context.graphicsContextGL());
 }
 
-GC3Dboolean OESVertexArrayObject::isVertexArrayOES(WebGLVertexArrayObjectOES* arrayObject)
+GCGLboolean OESVertexArrayObject::isVertexArrayOES(WebGLVertexArrayObjectOES* arrayObject)
 {
     return arrayObject && !m_context.isContextLost() && arrayObject->hasEverBeenBound()
-        && m_context.graphicsContext3D()->getExtensions().isVertexArrayOES(arrayObject->object());
+        && m_context.graphicsContextGL()->getExtensions().isVertexArrayOES(arrayObject->object());
 }
 
 void OESVertexArrayObject::bindVertexArrayOES(WebGLVertexArrayObjectOES* arrayObject)
 {
     if (m_context.isContextLost())
         return;
 
     if (arrayObject && (arrayObject->isDeleted() || !arrayObject->validate(nullptr, context()))) {
-        m_context.graphicsContext3D()->synthesizeGLError(GraphicsContext3D::INVALID_OPERATION);
+        m_context.graphicsContextGL()->synthesizeGLError(GraphicsContextGL::INVALID_OPERATION);
         return;
     }
 
-    auto& extensions = m_context.graphicsContext3D()->getExtensions();
+    auto& extensions = m_context.graphicsContextGL()->getExtensions();
     auto& context = downcast<WebGLRenderingContext>(m_context);
     if (arrayObject && !arrayObject->isDefaultObject() && arrayObject->object()) {
         extensions.bindVertexArrayOES(arrayObject->object());
         arrayObject->setHasEverBeenBound();
         context.setBoundVertexArrayObject(arrayObject);
