diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/CallData.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/CallData.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/CallData.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/CallData.h
@@ -31,13 +31,13 @@
 #include "NativeFunction.h"
 #include <wtf/NakedPtr.h>
 
 namespace JSC {
 
+class CallFrame;
 class ArgList;
 class Exception;
-class ExecState;
 class FunctionExecutable;
 class JSObject;
 class JSScope;
 
 enum class CallType : unsigned {
@@ -63,15 +63,15 @@
     Microtask,
     Other
 };
 
 // Convenience wrapper so you don't need to deal with CallData and CallType unless you are going to use them.
-JS_EXPORT_PRIVATE JSValue call(ExecState*, JSValue functionObject, const ArgList&, const char* errorMessage);
-JS_EXPORT_PRIVATE JSValue call(ExecState*, JSValue functionObject, JSValue thisValue, const ArgList&, const char* errorMessage);
+JS_EXPORT_PRIVATE JSValue call(JSGlobalObject*, JSValue functionObject, const ArgList&, const char* errorMessage);
+JS_EXPORT_PRIVATE JSValue call(JSGlobalObject*, JSValue functionObject, JSValue thisValue, const ArgList&, const char* errorMessage);
 
-JS_EXPORT_PRIVATE JSValue call(ExecState*, JSValue functionObject, CallType, const CallData&, JSValue thisValue, const ArgList&);
-JS_EXPORT_PRIVATE JSValue call(ExecState*, JSValue functionObject, CallType, const CallData&, JSValue thisValue, const ArgList&, NakedPtr<Exception>& returnedException);
+JS_EXPORT_PRIVATE JSValue call(JSGlobalObject*, JSValue functionObject, CallType, const CallData&, JSValue thisValue, const ArgList&);
+JS_EXPORT_PRIVATE JSValue call(JSGlobalObject*, JSValue functionObject, CallType, const CallData&, JSValue thisValue, const ArgList&, NakedPtr<Exception>& returnedException);
 
-JS_EXPORT_PRIVATE JSValue profiledCall(ExecState*, ProfilingReason, JSValue functionObject, CallType, const CallData&, JSValue thisValue, const ArgList&);
-JS_EXPORT_PRIVATE JSValue profiledCall(ExecState*, ProfilingReason, JSValue functionObject, CallType, const CallData&, JSValue thisValue, const ArgList&, NakedPtr<Exception>& returnedException);
+JS_EXPORT_PRIVATE JSValue profiledCall(JSGlobalObject*, ProfilingReason, JSValue functionObject, CallType, const CallData&, JSValue thisValue, const ArgList&);
+JS_EXPORT_PRIVATE JSValue profiledCall(JSGlobalObject*, ProfilingReason, JSValue functionObject, CallType, const CallData&, JSValue thisValue, const ArgList&, NakedPtr<Exception>& returnedException);
 
 } // namespace JSC
