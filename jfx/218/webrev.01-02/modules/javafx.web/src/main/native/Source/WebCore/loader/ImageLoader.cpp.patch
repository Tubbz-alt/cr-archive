diff a/modules/javafx.web/src/main/native/Source/WebCore/loader/ImageLoader.cpp b/modules/javafx.web/src/main/native/Source/WebCore/loader/ImageLoader.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/loader/ImageLoader.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/loader/ImageLoader.cpp
@@ -36,20 +36,21 @@
 #include "FrameLoader.h"
 #include "HTMLNames.h"
 #include "HTMLObjectElement.h"
 #include "HTMLParserIdioms.h"
 #include "InspectorInstrumentation.h"
+#include "JSDOMPromiseDeferred.h"
 #include "Page.h"
 #include "RenderImage.h"
 #include "RenderSVGImage.h"
 #include <wtf/NeverDestroyed.h>
 
 #if ENABLE(VIDEO)
 #include "RenderVideo.h"
 #endif
 
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
 // ImageLoader objects are allocated as members of other objects, so generic pointer check would always fail.
 namespace WTF {
 
 template<> struct ValueCheck<WebCore::ImageLoader*> {
     typedef WebCore::ImageLoader* TraitType;
@@ -59,12 +60,12 @@
             return;
         ValueCheck<WebCore::Element*>::checkConsistency(&p->element());
     }
 };
 
-}
-#endif
+} // namespace WTF
+#endif // ASSERT_ENABLED
 
 namespace WebCore {
 
 static ImageEventSender& beforeLoadEventSender()
 {
@@ -182,11 +183,11 @@
         auto crossOriginAttribute = element().attributeWithoutSynchronization(HTMLNames::crossoriginAttr);
 
         ResourceRequest resourceRequest(document.completeURL(sourceURI(attr)));
         resourceRequest.setInspectorInitiatorNodeIdentifier(InspectorInstrumentation::identifierForNode(m_element));
 
-        auto request = createPotentialAccessControlRequest(WTFMove(resourceRequest), document, crossOriginAttribute, WTFMove(options));
+        auto request = createPotentialAccessControlRequest(WTFMove(resourceRequest), WTFMove(options), document, crossOriginAttribute);
         request.setInitiator(element());
 
         if (m_loadManually) {
             bool autoLoadOtherImages = document.cachedResourceLoader().autoLoadImages();
             document.cachedResourceLoader().setAutoLoadImages(false);
