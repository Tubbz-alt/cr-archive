diff a/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSNodeCustom.h b/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSNodeCustom.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSNodeCustom.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSNodeCustom.h
@@ -44,24 +44,24 @@
 } // namespace JSCastingHelpers
 } // namespace JSC
 
 namespace WebCore {
 
-WEBCORE_EXPORT JSC::JSValue createWrapper(JSC::ExecState*, JSDOMGlobalObject*, Ref<Node>&&);
+WEBCORE_EXPORT JSC::JSValue createWrapper(JSC::JSGlobalObject*, JSDOMGlobalObject*, Ref<Node>&&);
 WEBCORE_EXPORT JSC::JSObject* getOutOfLineCachedWrapper(JSDOMGlobalObject*, Node&);
 
-inline JSC::JSValue toJS(JSC::ExecState* exec, JSDOMGlobalObject* globalObject, Node& node)
+inline JSC::JSValue toJS(JSC::JSGlobalObject* lexicalGlobalObject, JSDOMGlobalObject* globalObject, Node& node)
 {
     if (LIKELY(globalObject->worldIsNormal())) {
         if (auto* wrapper = node.wrapper())
             return wrapper;
     } else {
         if (auto* wrapper = getOutOfLineCachedWrapper(globalObject, node))
             return wrapper;
     }
 
-    return createWrapper(exec, globalObject, node);
+    return createWrapper(lexicalGlobalObject, globalObject, node);
 }
 
 // In the C++ DOM, a node tree survives as long as there is a reference to its
 // root. In the JavaScript DOM, a node tree survives as long as there is a
 // reference to any node in the tree. To model the JavaScript DOM on top of
@@ -86,11 +86,11 @@
 inline void* root(Node& node)
 {
     return root(&node);
 }
 
-ALWAYS_INLINE JSC::JSValue JSNode::nodeType(JSC::ExecState&) const
+ALWAYS_INLINE JSC::JSValue JSNode::nodeType(JSC::JSGlobalObject&) const
 {
     return JSC::jsNumber(static_cast<uint8_t>(type()) & JSNodeTypeMask);
 }
 
 } // namespace WebCore
