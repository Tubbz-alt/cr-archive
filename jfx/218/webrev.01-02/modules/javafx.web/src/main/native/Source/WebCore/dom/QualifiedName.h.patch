diff a/modules/javafx.web/src/main/native/Source/WebCore/dom/QualifiedName.h b/modules/javafx.web/src/main/native/Source/WebCore/dom/QualifiedName.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/dom/QualifiedName.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/dom/QualifiedName.h
@@ -30,14 +30,18 @@
     StringImpl* m_prefix;
     StringImpl* m_localName;
     StringImpl* m_namespace;
 };
 
+DECLARE_ALLOCATOR_WITH_HEAP_IDENTIFIER(QualifiedName);
+DECLARE_ALLOCATOR_WITH_HEAP_IDENTIFIER(QualifiedNameQualifiedNameImpl);
+
 class QualifiedName {
-    WTF_MAKE_FAST_ALLOCATED;
+    WTF_MAKE_STRUCT_FAST_ALLOCATED_WITH_HEAP_IDENTIFIER(QualifiedName);
 public:
     class QualifiedNameImpl : public RefCounted<QualifiedNameImpl> {
+        WTF_MAKE_STRUCT_FAST_ALLOCATED_WITH_HEAP_IDENTIFIER(QualifiedNameQualifiedNameImpl);
     public:
         static Ref<QualifiedNameImpl> create(const AtomString& prefix, const AtomString& localName, const AtomString& namespaceURI)
         {
             return adoptRef(*new QualifiedNameImpl(prefix, localName, namespaceURI));
         }
@@ -98,11 +102,11 @@
 
     // Init routine for globals
     WEBCORE_EXPORT static void init();
 
 private:
-    static QualifiedNameImpl* hashTableDeletedValue() { return RefPtr<QualifiedNameImpl>::hashTableDeletedValue(); }
+    static QualifiedNameImpl* hashTableDeletedValue() { return RefPtr<QualifiedNameImpl>::PtrTraits::hashTableDeletedValue(); }
 
     RefPtr<QualifiedNameImpl> m_impl;
 };
 
 extern LazyNeverDestroyed<const QualifiedName> anyName;
