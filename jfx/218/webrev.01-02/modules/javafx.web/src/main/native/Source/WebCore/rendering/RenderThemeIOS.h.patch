diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderThemeIOS.h b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderThemeIOS.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderThemeIOS.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderThemeIOS.h
@@ -25,10 +25,11 @@
 
 #pragma once
 
 #if PLATFORM(IOS_FAMILY)
 
+#include "CSSValueKey.h"
 #include "RenderThemeCocoa.h"
 
 #if USE(SYSTEM_PREVIEW)
 #if HAVE(IOSURFACE)
 #include "IOSurface.h"
@@ -57,40 +58,47 @@
 
 #if USE(SYSTEM_PREVIEW)
     void paintSystemPreviewBadge(Image&, const PaintInfo&, const FloatRect&) override;
 #endif
 
+    using CSSValueToSystemColorMap = HashMap<CSSValueKey, Color>;
+
+    WEBCORE_EXPORT static const CSSValueToSystemColorMap& cssValueToSystemColorMap();
+    WEBCORE_EXPORT static void setCSSValueToSystemColorMap(CSSValueToSystemColorMap&&);
+
+    WEBCORE_EXPORT static void setFocusRingColor(const Color&);
+
 protected:
     LengthBox popupInternalPaddingBox(const RenderStyle&) const override;
 
     FontCascadeDescription& cachedSystemFontDescription(CSSValueID systemFontID) const override;
     void updateCachedSystemFontDescription(CSSValueID, FontCascadeDescription&) const override;
     int baselinePosition(const RenderBox&) const override;
 
-    bool isControlStyled(const RenderStyle&, const BorderData&, const FillLayer& background, const Color& backgroundColor) const override;
+    bool isControlStyled(const RenderStyle&, const RenderStyle& userAgentStyle) const override;
 
     // Methods for each appearance value.
-    void adjustCheckboxStyle(StyleResolver&, RenderStyle&, const Element*) const override;
+    void adjustCheckboxStyle(RenderStyle&, const Element*) const override;
     bool paintCheckboxDecorations(const RenderObject&, const PaintInfo&, const IntRect&) override;
 
-    void adjustRadioStyle(StyleResolver&, RenderStyle&, const Element*) const override;
+    void adjustRadioStyle(RenderStyle&, const Element*) const override;
     bool paintRadioDecorations(const RenderObject&, const PaintInfo&, const IntRect&) override;
 
-    void adjustButtonStyle(StyleResolver&, RenderStyle&, const Element*) const override;
+    void adjustButtonStyle(RenderStyle&, const Element*) const override;
     bool paintButtonDecorations(const RenderObject&, const PaintInfo&, const IntRect&) override;
     bool paintPushButtonDecorations(const RenderObject&, const PaintInfo&, const IntRect&) override;
     void setButtonSize(RenderStyle&) const override;
 
     bool paintFileUploadIconDecorations(const RenderObject& inputRenderer, const RenderObject& buttonRenderer, const PaintInfo&, const IntRect&, Icon*, FileUploadDecorations) override;
 
     bool paintTextFieldDecorations(const RenderObject&, const PaintInfo&, const FloatRect&) override;
     bool paintTextAreaDecorations(const RenderObject&, const PaintInfo&, const FloatRect&) override;
 
-    void adjustMenuListButtonStyle(StyleResolver&, RenderStyle&, const Element*) const override;
+    void adjustMenuListButtonStyle(RenderStyle&, const Element*) const override;
     bool paintMenuListButtonDecorations(const RenderBox&, const PaintInfo&, const FloatRect&) override;
 
-    void adjustSliderTrackStyle(StyleResolver&, RenderStyle&, const Element*) const override;
+    void adjustSliderTrackStyle(RenderStyle&, const Element*) const override;
     bool paintSliderTrack(const RenderObject&, const PaintInfo&, const IntRect&) override;
 
     void adjustSliderThumbSize(RenderStyle&, const Element*) const override;
     bool paintSliderThumbDecorations(const RenderObject&, const PaintInfo&, const IntRect&) override;
 
@@ -104,11 +112,11 @@
 #if ENABLE(DATALIST_ELEMENT)
     IntSize sliderTickSize() const override;
     int sliderTickOffsetFromTrackCenter() const override;
 #endif
 
-    void adjustSearchFieldStyle(StyleResolver&, RenderStyle&, const Element*) const override;
+    void adjustSearchFieldStyle(RenderStyle&, const Element*) const override;
     bool paintSearchFieldDecorations(const RenderObject&, const PaintInfo&, const IntRect&) override;
 
     bool supportsFocusRing(const RenderStyle&) const final;
 
     Color platformActiveSelectionBackgroundColor(OptionSet<StyleColor::Options>) const override;
