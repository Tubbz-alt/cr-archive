diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/entriesapi/DOMFileSystem.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/entriesapi/DOMFileSystem.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/entriesapi/DOMFileSystem.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/entriesapi/DOMFileSystem.cpp
@@ -331,21 +331,21 @@
             }
         });
     });
 }
 
-void DOMFileSystem::getFile(ScriptExecutionContext& context, FileSystemFileEntry& fileEntry, GetFileCallback&& completionCallback)
+void DOMFileSystem::getFile(FileSystemFileEntry& fileEntry, GetFileCallback&& completionCallback)
 {
     auto virtualPath = fileEntry.virtualPath();
     auto fullPath = evaluatePath(virtualPath);
-    m_workQueue->dispatch([context = makeRef(context), fullPath = crossThreadCopy(fullPath), virtualPath = crossThreadCopy(virtualPath), completionCallback = WTFMove(completionCallback)]() mutable {
+    m_workQueue->dispatch([fullPath = crossThreadCopy(fullPath), virtualPath = crossThreadCopy(virtualPath), completionCallback = WTFMove(completionCallback)]() mutable {
         auto validatedVirtualPath = validatePathIsExpectedType(fullPath, WTFMove(virtualPath), FileMetadata::Type::File);
-        callOnMainThread([context = WTFMove(context), fullPath = crossThreadCopy(fullPath), validatedVirtualPath = crossThreadCopy(validatedVirtualPath), completionCallback = WTFMove(completionCallback)]() mutable {
+        callOnMainThread([fullPath = crossThreadCopy(fullPath), validatedVirtualPath = crossThreadCopy(validatedVirtualPath), completionCallback = WTFMove(completionCallback)]() mutable {
             if (validatedVirtualPath.hasException())
                 completionCallback(validatedVirtualPath.releaseException());
             else
-                completionCallback(File::create(context->sessionID(), fullPath));
+                completionCallback(File::create(fullPath));
         });
     });
 }
 
 } // namespace WebCore
