diff a/modules/javafx.web/src/main/native/Source/WebCore/page/TextIndicator.cpp b/modules/javafx.web/src/main/native/Source/WebCore/page/TextIndicator.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/page/TextIndicator.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/page/TextIndicator.cpp
@@ -289,10 +289,20 @@
         hasOnlyLegibleTextColors = textColorIsLegibleAgainstBackgroundColor(Color::black, backgroundColor);
 
     return !hasOnlyLegibleTextColors || textColors.isEmpty();
 }
 
+static bool containsOnlyWhiteSpaceText(const Range& range)
+{
+    auto* stop = range.pastLastNode();
+    for (auto* node = range.firstNode(); node && node != stop; node = NodeTraversal::next(*node)) {
+        if (!is<RenderText>(node->renderer()))
+            return false;
+    }
+    return plainTextReplacingNoBreakSpace(&range).stripWhiteSpace().isEmpty();
+}
+
 static bool initializeIndicator(TextIndicatorData& data, Frame& frame, const Range& range, FloatSize margin, bool indicatesCurrentSelection)
 {
     if (auto* document = frame.document())
         document->updateLayoutIgnorePendingStylesheets();
 
@@ -310,11 +320,18 @@
     if (indicatesCurrentSelection && !(data.options & TextIndicatorOptionIncludeMarginIfRangeMatchesSelection))
         margin = FloatSize();
 
     FrameSelection::TextRectangleHeight textRectHeight = (data.options & TextIndicatorOptionTightlyFitContent) ? FrameSelection::TextRectangleHeight::TextHeight : FrameSelection::TextRectangleHeight::SelectionHeight;
 
-    if ((data.options & TextIndicatorOptionUseBoundingRectAndPaintAllContentForComplexRanges) && (hasNonInlineOrReplacedElements(range) || treatRangeAsComplexDueToIllegibleTextColors))
+    bool useBoundingRectAndPaintAllContentForComplexRanges = data.options & TextIndicatorOptionUseBoundingRectAndPaintAllContentForComplexRanges;
+    if (useBoundingRectAndPaintAllContentForComplexRanges && containsOnlyWhiteSpaceText(range)) {
+        auto commonAncestorContainer = makeRefPtr(range.commonAncestorContainer());
+        if (auto* containerRenderer = commonAncestorContainer->renderer()) {
+            data.options |= TextIndicatorOptionPaintAllContent;
+            textRects.append(containerRenderer->absoluteBoundingBoxRect());
+        }
+    } else if (useBoundingRectAndPaintAllContentForComplexRanges && (treatRangeAsComplexDueToIllegibleTextColors || hasNonInlineOrReplacedElements(range)))
         data.options |= TextIndicatorOptionPaintAllContent;
 #if PLATFORM(IOS_FAMILY)
     else if (data.options & TextIndicatorOptionUseSelectionRectForSizing)
         getSelectionRectsForRange(textRects, range);
 #endif
