diff a/modules/javafx.web/src/main/native/Source/WebCore/inspector/InspectorController.h b/modules/javafx.web/src/main/native/Source/WebCore/inspector/InspectorController.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/inspector/InspectorController.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/inspector/InspectorController.h
@@ -65,11 +65,11 @@
 class InspectorController final : public Inspector::InspectorEnvironment {
     WTF_MAKE_NONCOPYABLE(InspectorController);
     WTF_MAKE_FAST_ALLOCATED;
 public:
     InspectorController(Page&, InspectorClient*);
-    virtual ~InspectorController();
+    ~InspectorController() override;
 
     void inspectedPageDestroyed();
 
     bool enabled() const;
     Page& inspectedPage() const;
@@ -99,11 +99,11 @@
 
     WEBCORE_EXPORT void willComposite(Frame&);
     WEBCORE_EXPORT void didComposite(Frame&);
 
     bool isUnderTest() const { return m_isUnderTest; }
-    WEBCORE_EXPORT void setIsUnderTest(bool);
+    void setIsUnderTest(bool isUnderTest) { m_isUnderTest = isUnderTest; }
     WEBCORE_EXPORT void evaluateForTestInFrontend(const String& script);
 
     InspectorClient* inspectorClient() const { return m_inspectorClient; }
     InspectorFrontendClient* inspectorFrontendClient() const { return m_inspectorFrontendClient; }
 
@@ -111,11 +111,11 @@
     InspectorDOMAgent& ensureDOMAgent();
     WEBCORE_EXPORT InspectorPageAgent& ensurePageAgent();
 
     // InspectorEnvironment
     bool developerExtrasEnabled() const override;
-    bool canAccessInspectedScriptState(JSC::ExecState*) const override;
+    bool canAccessInspectedScriptState(JSC::JSGlobalObject*) const override;
     Inspector::InspectorFunctionCallHandler functionCallHandler() const override;
     Inspector::InspectorEvaluateHandler evaluateHandler() const override;
     void frontendInitialized() override;
     Ref<WTF::Stopwatch> executionStopwatch() override;
     PageScriptDebugServer& scriptDebugServer() override;
