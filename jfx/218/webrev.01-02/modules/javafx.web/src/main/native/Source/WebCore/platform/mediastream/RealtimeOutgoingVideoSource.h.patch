diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/mediastream/RealtimeOutgoingVideoSource.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/mediastream/RealtimeOutgoingVideoSource.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/mediastream/RealtimeOutgoingVideoSource.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/mediastream/RealtimeOutgoingVideoSource.h
@@ -34,11 +34,11 @@
 #include "MediaStreamTrackPrivate.h"
 #include <Timer.h>
 
 ALLOW_UNUSED_PARAMETERS_BEGIN
 
-#include <webrtc/api/mediastreaminterface.h>
+#include <webrtc/api/media_stream_interface.h>
 #include <webrtc/common_video/include/i420_buffer_pool.h>
 
 ALLOW_UNUSED_PARAMETERS_END
 
 #include <wtf/LoggerHelper.h>
@@ -57,12 +57,13 @@
 {
 public:
     static Ref<RealtimeOutgoingVideoSource> create(Ref<MediaStreamTrackPrivate>&& videoSource);
     ~RealtimeOutgoingVideoSource();
 
+    void start() { observeSource(); }
     void stop();
-    bool setSource(Ref<MediaStreamTrackPrivate>&&);
+    void setSource(Ref<MediaStreamTrackPrivate>&&);
     MediaStreamTrackPrivate& source() const { return m_videoSource.get(); }
 
     void AddRef() const final { ref(); }
     rtc::RefCountReleaseStatus Release() const final
     {
@@ -126,11 +127,10 @@
     void trackSettingsChanged(MediaStreamTrackPrivate&) final { initializeFromSource(); }
     void sampleBufferUpdated(MediaStreamTrackPrivate&, MediaSample&) override { }
     void trackEnded(MediaStreamTrackPrivate&) final { }
 
     Ref<MediaStreamTrackPrivate> m_videoSource;
-    Optional<RealtimeMediaSourceSettings> m_initialSettings;
     Timer m_blackFrameTimer;
     rtc::scoped_refptr<webrtc::VideoFrameBuffer> m_blackFrame;
 
     mutable RecursiveLock m_sinksLock;
     HashSet<rtc::VideoSinkInterface<webrtc::VideoFrame>*> m_sinks;
