diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/libwebrtc/LibWebRTCUtils.cpp b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/libwebrtc/LibWebRTCUtils.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/libwebrtc/LibWebRTCUtils.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediastream/libwebrtc/LibWebRTCUtils.cpp
@@ -32,12 +32,12 @@
 #include "RTCRtpSendParameters.h"
 #include <wtf/text/WTFString.h>
 
 ALLOW_UNUSED_PARAMETERS_BEGIN
 
-#include <webrtc/api/rtpparameters.h>
-#include <webrtc/api/rtptransceiverinterface.h>
+#include <webrtc/api/rtp_parameters.h>
+#include <webrtc/api/rtp_transceiver_interface.h>
 
 ALLOW_UNUSED_PARAMETERS_END
 
 namespace WebCore {
 
@@ -231,8 +231,35 @@
     for (auto& stream : init.streams)
         rtcInit.stream_ids.push_back(stream->id().utf8().data());
     return rtcInit;
 }
 
+ExceptionCode toExceptionCode(webrtc::RTCErrorType type)
+{
+    switch (type) {
+    case webrtc::RTCErrorType::INVALID_PARAMETER:
+        return InvalidAccessError;
+    case webrtc::RTCErrorType::INVALID_RANGE:
+        return RangeError;
+    case webrtc::RTCErrorType::SYNTAX_ERROR:
+        return SyntaxError;
+    case webrtc::RTCErrorType::INVALID_STATE:
+        return InvalidStateError;
+    case webrtc::RTCErrorType::INVALID_MODIFICATION:
+        return InvalidModificationError;
+    case webrtc::RTCErrorType::NETWORK_ERROR:
+        return NetworkError;
+    default:
+        return OperationError;
+    }
+}
+
+Exception toException(const webrtc::RTCError& error)
+{
+    ASSERT(!error.ok());
+
+    return Exception { toExceptionCode(error.type()), error.message() };
+}
+
 } // namespace WebCore
 
 #endif // USE(LIBWEBRTC)
