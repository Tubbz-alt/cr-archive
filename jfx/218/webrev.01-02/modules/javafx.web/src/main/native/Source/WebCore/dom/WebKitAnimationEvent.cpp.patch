diff a/modules/javafx.web/src/main/native/Source/WebCore/dom/WebKitAnimationEvent.cpp b/modules/javafx.web/src/main/native/Source/WebCore/dom/WebKitAnimationEvent.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/dom/WebKitAnimationEvent.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/dom/WebKitAnimationEvent.cpp
@@ -24,23 +24,29 @@
  */
 
 #include "config.h"
 #include "WebKitAnimationEvent.h"
 
+#include <wtf/IsoMallocInlines.h>
+
 namespace WebCore {
 
+WTF_MAKE_ISO_ALLOCATED_IMPL(WebKitAnimationEvent);
+
 WebKitAnimationEvent::WebKitAnimationEvent(const AtomString& type, const Init& initializer, IsTrusted isTrusted)
     : Event(type, initializer, isTrusted)
     , m_animationName(initializer.animationName)
     , m_elapsedTime(initializer.elapsedTime)
+    , m_pseudoElement(initializer.pseudoElement)
 {
 }
 
-WebKitAnimationEvent::WebKitAnimationEvent(const AtomString& type, const String& animationName, double elapsedTime)
+WebKitAnimationEvent::WebKitAnimationEvent(const AtomString& type, const String& animationName, double elapsedTime, const String& pseudoElement)
     : Event(type, CanBubble::Yes, IsCancelable::Yes)
     , m_animationName(animationName)
     , m_elapsedTime(elapsedTime)
+    , m_pseudoElement(pseudoElement)
 {
 }
 
 WebKitAnimationEvent::~WebKitAnimationEvent() = default;
 
@@ -52,10 +58,15 @@
 double WebKitAnimationEvent::elapsedTime() const
 {
     return m_elapsedTime;
 }
 
+const String& WebKitAnimationEvent::pseudoElement() const
+{
+    return m_pseudoElement;
+}
+
 EventInterface WebKitAnimationEvent::eventInterface() const
 {
     return WebKitAnimationEventInterfaceType;
 }
 
