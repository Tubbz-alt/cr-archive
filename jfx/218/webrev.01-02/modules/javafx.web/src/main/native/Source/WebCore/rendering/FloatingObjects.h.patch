diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/FloatingObjects.h b/modules/javafx.web/src/main/native/Source/WebCore/rendering/FloatingObjects.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/FloatingObjects.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/FloatingObjects.h
@@ -21,20 +21,22 @@
  * Boston, MA 02110-1301, USA.
  */
 
 #pragma once
 
-#include "PODIntervalTree.h"
 #include "RootInlineBox.h"
 #include <wtf/ListHashSet.h>
 #include <wtf/WeakPtr.h>
 
 namespace WebCore {
 
 class RenderBlockFlow;
 class RenderBox;
 
+template<typename, typename> class PODInterval;
+template<typename, typename> class PODIntervalTree;
+
 class FloatingObject {
     WTF_MAKE_NONCOPYABLE(FloatingObject); WTF_MAKE_FAST_ALLOCATED;
 public:
     // Note that Type uses bits so you can use FloatLeftRight as a mask to query for both left and right.
     enum Type { FloatLeft = 1, FloatRight = 2, FloatLeftRight = 3 };
@@ -70,11 +72,11 @@
     void setFrameRect(const LayoutRect& frameRect) { ASSERT(!isInPlacedTree()); m_frameRect = frameRect; }
 
     LayoutUnit paginationStrut() const { return m_paginationStrut; }
     void setPaginationStrut(LayoutUnit strut) { m_paginationStrut = strut; }
 
-#ifndef NDEBUG
+#if ASSERT_ENABLED
     bool isInPlacedTree() const { return m_isInPlacedTree; }
     void setIsInPlacedTree(bool value) { m_isInPlacedTree = value; }
 #endif
 
     bool shouldPaint() const { return m_shouldPaint; }
@@ -93,12 +95,10 @@
         return LayoutSize(m_frameRect.location().x() + m_marginOffset.width(), m_frameRect.location().y() + m_marginOffset.height());
     }
     LayoutSize marginOffset() const { ASSERT(isPlaced()); return m_marginOffset; }
     LayoutSize translationOffsetToAncestor() const;
 
-    String debugString() const;
-
 private:
     WeakPtr<RenderBox> m_renderer;
     WeakPtr<RootInlineBox> m_originatingLine;
     LayoutRect m_frameRect;
     LayoutUnit m_paginationStrut;
@@ -106,11 +106,11 @@
 
     unsigned m_type : 2; // Type (left or right aligned)
     unsigned m_shouldPaint : 1;
     unsigned m_isDescendant : 1;
     unsigned m_isPlaced : 1;
-#ifndef NDEBUG
+#if ASSERT_ENABLED
     unsigned m_isInPlacedTree : 1;
 #endif
 };
 
 // FIXME: This could be simplified if we made it inherit from PtrHash<std::unique_ptr<FloatingObject>> and
@@ -185,19 +185,10 @@
     unsigned m_rightObjectsCount;
     bool m_horizontalWritingMode;
     WeakPtr<const RenderBlockFlow> m_renderer;
 };
 
-} // namespace WebCore
-
 #ifndef NDEBUG
-
-namespace WTF {
-
-// This helper is used by PODIntervalTree for debugging purposes.
-template<> struct ValueToString<WebCore::FloatingObject*> {
-    static String string(const WebCore::FloatingObject* floatingObject) { return floatingObject->debugString(); }
-};
-
-} // namespace WTF
-
+TextStream& operator<<(TextStream&, const FloatingObject&);
 #endif
+
+} // namespace WebCore
