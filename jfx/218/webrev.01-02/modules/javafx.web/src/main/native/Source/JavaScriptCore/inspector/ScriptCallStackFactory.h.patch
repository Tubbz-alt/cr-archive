diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/ScriptCallStackFactory.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/ScriptCallStackFactory.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/ScriptCallStackFactory.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/ScriptCallStackFactory.h
@@ -33,21 +33,22 @@
 
 #include "ScriptCallStack.h"
 #include <wtf/Forward.h>
 
 namespace JSC {
+class CallFrame;
 class Exception;
-class ExecState;
+class JSGlobalObject;
 class JSValue;
 }
 
 namespace Inspector {
 
 class ScriptArguments;
 
 // FIXME: The subtle differences between these should be eliminated.
-JS_EXPORT_PRIVATE Ref<ScriptCallStack> createScriptCallStack(JSC::ExecState*, size_t maxStackSize = ScriptCallStack::maxCallStackSizeToCapture);
-JS_EXPORT_PRIVATE Ref<ScriptCallStack> createScriptCallStackForConsole(JSC::ExecState*, size_t maxStackSize = ScriptCallStack::maxCallStackSizeToCapture);
-JS_EXPORT_PRIVATE Ref<ScriptCallStack> createScriptCallStackFromException(JSC::ExecState*, JSC::Exception*, size_t maxStackSize = ScriptCallStack::maxCallStackSizeToCapture);
-JS_EXPORT_PRIVATE Ref<ScriptArguments> createScriptArguments(JSC::ExecState*, unsigned skipArgumentCount);
+JS_EXPORT_PRIVATE Ref<ScriptCallStack> createScriptCallStack(JSC::JSGlobalObject*, size_t maxStackSize = ScriptCallStack::maxCallStackSizeToCapture);
+JS_EXPORT_PRIVATE Ref<ScriptCallStack> createScriptCallStackForConsole(JSC::JSGlobalObject*, size_t maxStackSize = ScriptCallStack::maxCallStackSizeToCapture);
+JS_EXPORT_PRIVATE Ref<ScriptCallStack> createScriptCallStackFromException(JSC::JSGlobalObject*, JSC::Exception*, size_t maxStackSize = ScriptCallStack::maxCallStackSizeToCapture);
+JS_EXPORT_PRIVATE Ref<ScriptArguments> createScriptArguments(JSC::JSGlobalObject*, JSC::CallFrame*, unsigned skipArgumentCount);
 
 } // namespace Inspector
