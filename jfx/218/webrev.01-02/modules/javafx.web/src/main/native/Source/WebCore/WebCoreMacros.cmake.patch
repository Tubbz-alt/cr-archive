diff a/modules/javafx.web/src/main/native/Source/WebCore/WebCoreMacros.cmake b/modules/javafx.web/src/main/native/Source/WebCore/WebCoreMacros.cmake
--- a/modules/javafx.web/src/main/native/Source/WebCore/WebCoreMacros.cmake
+++ b/modules/javafx.web/src/main/native/Source/WebCore/WebCoreMacros.cmake
@@ -62,10 +62,11 @@
     set(multiValueArgs INPUT_FILES IDL_INCLUDES PP_EXTRA_OUTPUT PP_EXTRA_ARGS)
     cmake_parse_arguments(arg "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
     set(binding_generator ${WEBCORE_DIR}/bindings/scripts/generate-bindings-all.pl)
     set(idl_attributes_file ${WEBCORE_DIR}/bindings/scripts/IDLAttributes.json)
     set(idl_files_list ${CMAKE_CURRENT_BINARY_DIR}/idl_files_${target}.tmp)
+    set(idl_include_list ${CMAKE_CURRENT_BINARY_DIR}/idl_include_${target}.tmp)
     set(_supplemental_dependency)
 
     set(content)
     foreach (f ${arg_INPUT_FILES})
         if (NOT IS_ABSOLUTE ${f})
@@ -78,44 +79,31 @@
     set(args
         --defines ${arg_FEATURES}
         --generator ${arg_GENERATOR}
         --outputDir ${arg_DESTINATION}
         --idlFilesList ${idl_files_list}
+        --includeDirsList ${idl_include_list}
         --preprocessor "${CODE_GENERATOR_PREPROCESSOR}"
         --idlAttributesFile ${idl_attributes_file}
     )
     if (arg_SUPPLEMENTAL_DEPFILE)
         list(APPEND args --supplementalDependencyFile ${arg_SUPPLEMENTAL_DEPFILE})
     endif ()
     ProcessorCount(PROCESSOR_COUNT)
     if (PROCESSOR_COUNT)
         list(APPEND args --numOfJobs ${PROCESSOR_COUNT})
     endif ()
-
-    # https://support.microsoft.com/en-in/help/830473/command-prompt-cmd-exe-command-line-string-limitation
-    # pass --include dir list to tmp file instead of multiple argument
-    if (WIN32 AND PORT STREQUAL "Java")
-        set(include_dir_list ${CMAKE_CURRENT_BINARY_DIR}/include_dir_${target}.tmp)
-        set(includeDirectories)
-        foreach (i IN LISTS arg_IDL_INCLUDES)
-            if (IS_ABSOLUTE ${i})
-                set(includeDirectories "${includeDirectories}${i}\n")
-            else ()
-                set(includeDirectories "${includeDirectories}${CMAKE_CURRENT_SOURCE_DIR}/${i}\n")
-            endif ()
-        endforeach ()
-        file(WRITE ${include_dir_list} ${includeDirectories})
-        list(APPEND args --includeDirList ${include_dir_list})
-    else ()
-            foreach (i IN LISTS arg_IDL_INCLUDES)
-            if (IS_ABSOLUTE ${i})
-                list(APPEND args --include ${i})
-            else ()
-                list(APPEND args --include ${CMAKE_CURRENT_SOURCE_DIR}/${i})
-            endif ()
-        endforeach ()
-    endif ()
+    set(include_dir)
+    foreach (i IN LISTS arg_IDL_INCLUDES)
+        if (IS_ABSOLUTE ${i})
+            set(f ${i})
+        else ()
+            set(f ${CMAKE_CURRENT_SOURCE_DIR}/${i})
+        endif ()
+        set(include_dir "${include_dir}${f}\n")
+    endforeach ()
+    file(WRITE ${idl_include_list} ${include_dir})
 
     foreach (i IN LISTS arg_PP_EXTRA_OUTPUT)
         list(APPEND args --ppExtraOutput ${i})
     endforeach ()
     foreach (i IN LISTS arg_PP_EXTRA_ARGS)
