diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSPromiseConstructor.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSPromiseConstructor.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSPromiseConstructor.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSPromiseConstructor.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2013, 2016 Apple Inc. All rights reserved.
+ * Copyright (C) 2013-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -23,33 +23,33 @@
  * THE POSSIBILITY OF SUCH DAMAGE.
  */
 
 #pragma once
 
-#include "InternalFunction.h"
+#include "JSFunction.h"
 
 namespace JSC {
 
 class JSPromise;
 class JSPromisePrototype;
 class GetterSetter;
 
-class JSPromiseConstructor : public InternalFunction {
+class JSPromiseConstructor : public JSFunction {
 public:
-    typedef InternalFunction Base;
-    static const unsigned StructureFlags = Base::StructureFlags | HasStaticPropertyTable;
+    using Base = JSFunction;
+    static constexpr unsigned StructureFlags = Base::StructureFlags | HasStaticPropertyTable;
 
     static JSPromiseConstructor* create(VM&, Structure*, JSPromisePrototype*, GetterSetter* speciesSymbol);
     static Structure* createStructure(VM&, JSGlobalObject*, JSValue);
 
     DECLARE_INFO;
 
 protected:
-    JSPromiseConstructor(VM&, Structure*);
-    JSPromiseConstructor(VM&, Structure*, NativeFunction, NativeFunction);
+    JSPromiseConstructor(VM&, FunctionExecutable*, JSGlobalObject*, Structure*);
     void finishCreation(VM&, JSPromisePrototype*, GetterSetter*);
 
 private:
     void addOwnInternalSlots(VM&, JSGlobalObject*);
 };
+static_assert(sizeof(JSPromiseConstructor) == sizeof(JSFunction), "Allocate JSPromiseConstructor in JSFunction IsoSubspace");
 
 } // namespace JSC
