diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GLContext.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GLContext.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GLContext.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GLContext.h
@@ -18,15 +18,20 @@
  */
 
 #ifndef GLContext_h
 #define GLContext_h
 
-#include "GraphicsContext3D.h"
 #include "IntSize.h"
 #include "PlatformDisplay.h"
 #include <wtf/Noncopyable.h>
 
+#if USE(LIBEPOXY)
+#include <epoxy/gl.h>
+#elif USE(OPENGL_ES)
+#include <GLES2/gl2.h>
+#endif
+
 #if USE(EGL) && !PLATFORM(GTK)
 #if PLATFORM(WPE)
 // FIXME: For now default to the GBM EGL platform, but this should really be
 // somehow deducible from the build configuration.
 #define __GBM__ 1
@@ -39,10 +44,12 @@
 
 #if USE(CAIRO)
 typedef struct _cairo_device cairo_device_t;
 #endif
 
+typedef void* PlatformGraphicsContextGL;
+
 namespace WebCore {
 
 class IntSize;
 
 class GLContext {
@@ -69,12 +76,12 @@
 
 #if USE(CAIRO)
     virtual cairo_device_t* cairoDevice() = 0;
 #endif
 
-#if ENABLE(GRAPHICS_CONTEXT_3D)
-    virtual PlatformGraphicsContext3D platformContext() = 0;
+#if ENABLE(GRAPHICS_CONTEXT_GL)
+    virtual PlatformGraphicsContextGL platformContext() = 0;
 #endif
 
 #if PLATFORM(X11)
 private:
     static void addActiveContext(GLContext*);
