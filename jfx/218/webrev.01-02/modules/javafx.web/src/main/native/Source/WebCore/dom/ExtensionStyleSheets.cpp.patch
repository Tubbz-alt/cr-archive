diff a/modules/javafx.web/src/main/native/Source/WebCore/dom/ExtensionStyleSheets.cpp b/modules/javafx.web/src/main/native/Source/WebCore/dom/ExtensionStyleSheets.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/dom/ExtensionStyleSheets.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/dom/ExtensionStyleSheets.cpp
@@ -115,13 +115,15 @@
 
 void ExtensionStyleSheets::updateInjectedStyleSheetCache() const
 {
     if (m_injectedStyleSheetCacheValid)
         return;
+
     m_injectedStyleSheetCacheValid = true;
     m_injectedUserStyleSheets.clear();
     m_injectedAuthorStyleSheets.clear();
+    m_injectedStyleSheetToSource.clear();
 
     Page* owningPage = m_document.page();
     if (!owningPage)
         return;
 
@@ -132,10 +134,12 @@
         if (!UserContentURLPattern::matchesPatterns(m_document.url(), userStyleSheet.whitelist(), userStyleSheet.blacklist()))
             return;
 
         auto sheet = createExtensionsStyleSheet(const_cast<Document&>(m_document), userStyleSheet.url(), userStyleSheet.source(), userStyleSheet.level());
 
+        m_injectedStyleSheetToSource.set(sheet.copyRef(), userStyleSheet.source());
+
         if (userStyleSheet.level() == UserStyleUserLevel)
             m_injectedUserStyleSheets.append(WTFMove(sheet));
         else
             m_injectedAuthorStyleSheets.append(WTFMove(sheet));
     });
@@ -187,10 +191,15 @@
     m_document.styleScope().didChangeStyleSheetEnvironment();
 
 }
 #endif // ENABLE(CONTENT_EXTENSIONS)
 
+String ExtensionStyleSheets::contentForInjectedStyleSheet(const RefPtr<CSSStyleSheet>& styleSheet) const
+{
+    return m_injectedStyleSheetToSource.get(styleSheet);
+}
+
 void ExtensionStyleSheets::detachFromDocument()
 {
     if (m_pageUserSheet)
         m_pageUserSheet->detachFromDocument();
     for (auto& sheet : m_injectedUserStyleSheets)
