diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/shared/IDBObjectStoreInfo.h b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/shared/IDBObjectStoreInfo.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/shared/IDBObjectStoreInfo.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/indexeddb/shared/IDBObjectStoreInfo.h
@@ -41,17 +41,16 @@
 
     uint64_t identifier() const { return m_identifier; }
     const String& name() const { return m_name; }
     const Optional<IDBKeyPath>& keyPath() const { return m_keyPath; }
     bool autoIncrement() const { return m_autoIncrement; }
-    uint64_t maxIndexID() const { return m_maxIndexID; }
 
     void rename(const String& newName) { m_name = newName; }
 
-    IDBObjectStoreInfo isolatedCopy() const;
+    WEBCORE_EXPORT IDBObjectStoreInfo isolatedCopy() const;
 
-    IDBIndexInfo createNewIndex(const String& name, IDBKeyPath&&, bool unique, bool multiEntry);
+    IDBIndexInfo createNewIndex(uint64_t indexID, const String& name, IDBKeyPath&&, bool unique, bool multiEntry);
     void addExistingIndex(const IDBIndexInfo&);
     bool hasIndex(const String& name) const;
     bool hasIndex(uint64_t indexIdentifier) const;
     IDBIndexInfo* infoForExistingIndex(const String& name);
     IDBIndexInfo* infoForExistingIndex(uint64_t identifier);
@@ -73,19 +72,18 @@
 private:
     uint64_t m_identifier { 0 };
     String m_name;
     Optional<IDBKeyPath> m_keyPath;
     bool m_autoIncrement { false };
-    uint64_t m_maxIndexID { 0 };
 
     HashMap<uint64_t, IDBIndexInfo> m_indexMap;
 };
 
 template<class Encoder>
 void IDBObjectStoreInfo::encode(Encoder& encoder) const
 {
-    encoder << m_identifier << m_name << m_keyPath << m_autoIncrement << m_maxIndexID << m_indexMap;
+    encoder << m_identifier << m_name << m_keyPath << m_autoIncrement << m_indexMap;
 }
 
 template<class Decoder>
 bool IDBObjectStoreInfo::decode(Decoder& decoder, IDBObjectStoreInfo& info)
 {
@@ -99,13 +97,10 @@
         return false;
 
     if (!decoder.decode(info.m_autoIncrement))
         return false;
 
-    if (!decoder.decode(info.m_maxIndexID))
-        return false;
-
     if (!decoder.decode(info.m_indexMap))
         return false;
 
     return true;
 }
