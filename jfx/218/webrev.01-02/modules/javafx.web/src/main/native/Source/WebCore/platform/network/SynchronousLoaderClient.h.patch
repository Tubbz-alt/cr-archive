diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/network/SynchronousLoaderClient.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/network/SynchronousLoaderClient.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/network/SynchronousLoaderClient.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/network/SynchronousLoaderClient.h
@@ -28,22 +28,38 @@
 #include "ResourceError.h"
 #include "ResourceHandleClient.h"
 #include "ResourceResponse.h"
 #include <wtf/Function.h>
 #include <wtf/MessageQueue.h>
+#include <wtf/ThreadSafeRefCounted.h>
 
 namespace WebCore {
 
+class SynchronousLoaderMessageQueue : public ThreadSafeRefCounted<SynchronousLoaderMessageQueue> {
+public:
+    static Ref<SynchronousLoaderMessageQueue> create() { return adoptRef(*new SynchronousLoaderMessageQueue); }
+
+    void append(std::unique_ptr<Function<void()>>&& task) { m_queue.append(WTFMove(task)); }
+    void kill() { m_queue.kill(); }
+    bool killed() const { return m_queue.killed(); }
+    std::unique_ptr<Function<void()>> waitForMessage() { return m_queue.waitForMessage(); }
+
+private:
+    SynchronousLoaderMessageQueue() = default;
+    MessageQueue<Function<void()>> m_queue;
+};
+
 class SynchronousLoaderClient final : public ResourceHandleClient {
 public:
+    SynchronousLoaderClient();
     virtual ~SynchronousLoaderClient();
 
     void setAllowStoredCredentials(bool allow) { m_allowStoredCredentials = allow; }
     const ResourceResponse& response() const { return m_response; }
     Vector<char>& mutableData() { return m_data; }
     const ResourceError& error() const { return m_error; }
-    MessageQueue<Function<void()>>& messageQueue() { return m_messageQueue; }
+    SynchronousLoaderMessageQueue& messageQueue() { return m_messageQueue.get(); }
 
     WEBCORE_EXPORT static ResourceError platformBadResponseError();
 
 private:
     void willSendRequestAsync(ResourceHandle*, ResourceRequest&&, ResourceResponse&&, CompletionHandler<void(ResourceRequest&&)>&&) override;
@@ -59,8 +75,8 @@
 
     bool m_allowStoredCredentials { false };
     ResourceResponse m_response;
     Vector<char> m_data;
     ResourceError m_error;
-    MessageQueue<Function<void()>> m_messageQueue;
+    Ref<SynchronousLoaderMessageQueue> m_messageQueue;
 };
 }
