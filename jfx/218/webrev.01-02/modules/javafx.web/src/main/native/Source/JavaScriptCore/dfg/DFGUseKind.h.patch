diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGUseKind.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGUseKind.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGUseKind.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGUseKind.h
@@ -53,10 +53,11 @@
     CellOrOtherUse,
     ObjectUse,
     ArrayUse,
     FunctionUse,
     FinalObjectUse,
+    PromiseObjectUse,
     RegExpObjectUse,
     ProxyObjectUse,
     DerivedArrayUse,
     ObjectOrOtherUse,
     StringIdentUse,
@@ -64,10 +65,11 @@
     StringOrOtherUse,
     KnownStringUse,
     KnownPrimitiveUse, // This bizarre type arises for op_strcat, which has a bytecode guarantee that it will only see primitives (i.e. not objects).
     SymbolUse,
     BigIntUse,
+    DateObjectUse,
     MapObjectUse,
     SetObjectUse,
     WeakMapObjectUse,
     WeakSetObjectUse,
     DataViewObjectUse,
@@ -150,10 +152,14 @@
         return SpecHeapTop & ~SpecObject;
     case SymbolUse:
         return SpecSymbol;
     case BigIntUse:
         return SpecBigInt;
+    case PromiseObjectUse:
+        return SpecPromiseObject;
+    case DateObjectUse:
+        return SpecDateObject;
     case MapObjectUse:
         return SpecMapObject;
     case SetObjectUse:
         return SpecSetObject;
     case WeakMapObjectUse:
@@ -246,19 +252,21 @@
     case ObjectUse:
     case ArrayUse:
     case FunctionUse:
     case FinalObjectUse:
     case RegExpObjectUse:
+    case PromiseObjectUse:
     case ProxyObjectUse:
     case DerivedArrayUse:
     case StringIdentUse:
     case StringUse:
     case KnownStringUse:
     case SymbolUse:
     case BigIntUse:
     case StringObjectUse:
     case StringOrStringObjectUse:
+    case DateObjectUse:
     case MapObjectUse:
     case SetObjectUse:
     case WeakMapObjectUse:
     case WeakSetObjectUse:
     case DataViewObjectUse:
