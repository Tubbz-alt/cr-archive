diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGAtTailAbstractState.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGAtTailAbstractState.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGAtTailAbstractState.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/dfg/DFGAtTailAbstractState.h
@@ -137,12 +137,11 @@
         makeHeapTopForNode(edge.node());
     }
 
     unsigned numberOfArguments() const { return m_block->valuesAtTail.numberOfArguments(); }
     unsigned numberOfLocals() const { return m_block->valuesAtTail.numberOfLocals(); }
-    AbstractValue& operand(int operand) { return m_block->valuesAtTail.operand(operand); }
-    AbstractValue& operand(VirtualRegister operand) { return m_block->valuesAtTail.operand(operand); }
+    AbstractValue& operand(Operand operand) { return m_block->valuesAtTail.operand(operand); }
     AbstractValue& local(size_t index) { return m_block->valuesAtTail.local(index); }
     AbstractValue& argument(size_t index) { return m_block->valuesAtTail.argument(index); }
 
     void clobberStructures()
     {
@@ -163,11 +162,11 @@
     void setClobberState(AbstractInterpreterClobberState) { }
     void mergeClobberState(AbstractInterpreterClobberState) { }
     void setStructureClobberState(StructureClobberState state) { RELEASE_ASSERT(state == m_block->cfaStructureClobberStateAtTail); }
     void setIsValid(bool isValid) { m_block->cfaDidFinish = isValid; }
     void setBranchDirection(BranchDirection) { }
-    void setFoundConstants(bool) { }
+    void setShouldTryConstantFolding(bool) { }
 
     void trustEdgeProofs() { m_trustEdgeProofs = true; }
     void dontTrustEdgeProofs() { m_trustEdgeProofs = false; }
     void setProofStatus(Edge& edge, ProofStatus status)
     {
