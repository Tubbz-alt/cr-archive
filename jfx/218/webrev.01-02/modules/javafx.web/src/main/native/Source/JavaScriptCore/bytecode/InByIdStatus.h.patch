diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/InByIdStatus.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/InByIdStatus.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/InByIdStatus.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/bytecode/InByIdStatus.h
@@ -37,11 +37,11 @@
 
 class AccessCase;
 class CodeBlock;
 class StructureStubInfo;
 
-class InByIdStatus {
+class InByIdStatus final {
     WTF_MAKE_FAST_ALLOCATED;
 public:
     enum State {
         // It's uncached so we have no information.
         NoInformation,
@@ -78,12 +78,12 @@
             return;
         }
         RELEASE_ASSERT_NOT_REACHED();
     }
 
-    static InByIdStatus computeFor(CodeBlock*, ICStatusMap&, unsigned bytecodeIndex, UniquedStringImpl* uid);
-    static InByIdStatus computeFor(CodeBlock*, ICStatusMap&, unsigned bytecodeIndex, UniquedStringImpl* uid, ExitFlag);
+    static InByIdStatus computeFor(CodeBlock*, ICStatusMap&, BytecodeIndex, UniquedStringImpl* uid);
+    static InByIdStatus computeFor(CodeBlock*, ICStatusMap&, BytecodeIndex, UniquedStringImpl* uid, ExitFlag);
     static InByIdStatus computeFor(CodeBlock* baselineBlock, ICStatusMap& baselineMap, ICStatusContextStack& contextStack, CodeOrigin, UniquedStringImpl* uid);
 
 #if ENABLE(DFG_JIT)
     static InByIdStatus computeForStubInfo(const ConcurrentJSLocker&, CodeBlock* baselineBlock, StructureStubInfo*, CodeOrigin, UniquedStringImpl* uid);
 #endif
@@ -111,11 +111,11 @@
 
     void dump(PrintStream&) const;
 
 private:
 #if ENABLE(DFG_JIT)
-    static InByIdStatus computeForStubInfoWithoutExitSiteFeedback(const ConcurrentJSLocker&, StructureStubInfo*, UniquedStringImpl* uid);
+    static InByIdStatus computeForStubInfoWithoutExitSiteFeedback(const ConcurrentJSLocker&, VM&, StructureStubInfo*, UniquedStringImpl* uid);
 #endif
     bool appendVariant(const InByIdVariant&);
 
     State m_state { NoInformation };
     Vector<InByIdVariant, 1> m_variants;
