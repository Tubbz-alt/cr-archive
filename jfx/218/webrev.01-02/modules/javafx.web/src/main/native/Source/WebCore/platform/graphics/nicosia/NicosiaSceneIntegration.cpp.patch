diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/nicosia/NicosiaSceneIntegration.cpp b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/nicosia/NicosiaSceneIntegration.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/nicosia/NicosiaSceneIntegration.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/nicosia/NicosiaSceneIntegration.cpp
@@ -27,14 +27,18 @@
  */
 
 #include "config.h"
 #include "NicosiaSceneIntegration.h"
 
+#include "NicosiaPlatformLayer.h"
+#include "NicosiaScene.h"
+
 namespace Nicosia {
 
-SceneIntegration::SceneIntegration(Client& client)
+SceneIntegration::SceneIntegration(Scene& scene, Client& client)
 {
+    m_client.scene = makeRef(scene);
     m_client.object = &client;
 }
 
 SceneIntegration::~SceneIntegration()
 {
@@ -48,10 +52,11 @@
 }
 
 void SceneIntegration::invalidate()
 {
     LockHolder locker(m_client.lock);
+    m_client.scene = nullptr;
     m_client.object = nullptr;
 }
 
 void SceneIntegration::requestUpdate()
 {
@@ -73,10 +78,20 @@
 {
 }
 
 SceneIntegration::UpdateScope::~UpdateScope()
 {
+    if (!m_sceneIntegration->m_client.scene)
+        return;
+
+    m_sceneIntegration->m_client.scene->accessState(
+        [](Nicosia::Scene::State& state)
+        {
+            for (auto& compositionLayer : state.layers)
+                compositionLayer->flushState([](auto&) { });
+        });
+
     auto& sceneIntegrationObj = m_sceneIntegration.get();
     if (sceneIntegrationObj.m_client.object)
         sceneIntegrationObj.m_client.object->requestUpdate();
 }
 
