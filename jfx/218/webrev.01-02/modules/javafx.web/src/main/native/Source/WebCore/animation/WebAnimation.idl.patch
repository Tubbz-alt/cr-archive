diff a/modules/javafx.web/src/main/native/Source/WebCore/animation/WebAnimation.idl b/modules/javafx.web/src/main/native/Source/WebCore/animation/WebAnimation.idl
--- a/modules/javafx.web/src/main/native/Source/WebCore/animation/WebAnimation.idl
+++ b/modules/javafx.web/src/main/native/Source/WebCore/animation/WebAnimation.idl
@@ -28,31 +28,41 @@
     "running",
     "paused",
     "finished"
 };
 
+enum AnimationReplaceState {
+    "active",
+    "removed",
+    "persisted"
+};
+
 [
     ActiveDOMObject,
     EnabledAtRuntime=WebAnimations,
     InterfaceName=Animation,
     CustomConstructor(),
     CustomToJSObject
 ] interface WebAnimation : EventTarget {
     attribute DOMString id;
     attribute AnimationEffect? effect;
-    attribute AnimationTimeline? timeline;
+    [RuntimeConditionallyReadWrite=WebAnimationsMutableTimelines] attribute AnimationTimeline? timeline;
     attribute double? startTime;
     [MayThrowException, ImplementedAs=bindingsCurrentTime] attribute double? currentTime;
     attribute double playbackRate;
     [ImplementedAs=bindingsPlayState] readonly attribute AnimationPlayState playState;
+    [ImplementedAs=bindingsReplaceState] readonly attribute AnimationReplaceState replaceState;
     [ImplementedAs=bindingsPending] readonly attribute boolean pending;
     attribute EventHandler onfinish;
     attribute EventHandler oncancel;
+    attribute EventHandler onremove;
     [ImplementedAs=bindingsReady] readonly attribute Promise<WebAnimation> ready;
     [ImplementedAs=bindingsFinished] readonly attribute Promise<WebAnimation> finished;
     void cancel();
     [MayThrowException] void finish();
     [MayThrowException, ImplementedAs=bindingsPlay] void play();
     [MayThrowException, ImplementedAs=bindingsPause] void pause();
     void updatePlaybackRate(double playbackRate);
     [MayThrowException] void reverse();
+    void persist();
+    [MayThrowException] void commitStyles();
 };
