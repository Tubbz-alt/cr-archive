diff a/modules/javafx.web/src/main/native/Source/WTF/wtf/MainThread.cpp b/modules/javafx.web/src/main/native/Source/WTF/wtf/MainThread.cpp
--- a/modules/javafx.web/src/main/native/Source/WTF/wtf/MainThread.cpp
+++ b/modules/javafx.web/src/main/native/Source/WTF/wtf/MainThread.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2007-2017 Apple Inc. All rights reserved.
+ * Copyright (C) 2007-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  *
@@ -59,39 +59,19 @@
         initializeThreading();
         initializeMainThreadPlatform();
     });
 }
 
-#if PLATFORM(COCOA)
 #if !USE(WEB_THREAD)
-void initializeMainThreadToProcessMainThread()
-{
-    std::call_once(initializeKey, [] {
-        initializeThreading();
-        initializeMainThreadToProcessMainThreadPlatform();
-    });
-}
-#else
-void initializeWebThread()
-{
-    static std::once_flag initializeKey;
-    std::call_once(initializeKey, [] {
-        initializeWebThreadPlatform();
-    });
-}
-#endif // !USE(WEB_THREAD)
-#endif // PLATFORM(COCOA)
-
-#if !USE(WEB_THREAD)
-bool canAccessThreadLocalDataForThread(Thread& thread)
+bool canCurrentThreadAccessThreadLocalData(Thread& thread)
 {
     return &thread == &Thread::current();
 }
 #endif
 
 // 0.1 sec delays in UI is approximate threshold when they become noticeable. Have a limit that's half of that.
-static const auto maxRunLoopSuspensionTime = 50_ms;
+static constexpr auto maxRunLoopSuspensionTime = 50_ms;
 
 void dispatchFunctionsFromMainThread()
 {
     ASSERT(isMainThread());
 
