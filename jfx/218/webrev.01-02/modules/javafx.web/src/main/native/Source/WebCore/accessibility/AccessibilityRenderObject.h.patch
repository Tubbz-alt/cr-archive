diff a/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilityRenderObject.h b/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilityRenderObject.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilityRenderObject.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/accessibility/AccessibilityRenderObject.h
@@ -104,11 +104,11 @@
     bool supportsARIAOwns() const override;
     bool isPresentationalChildOfAriaRole() const override;
     bool ariaRoleHasPresentationalChildren() const override;
 
     // Should be called on the root accessibility object to kick off a hit test.
-    AccessibilityObjectInterface* accessibilityHitTest(const IntPoint&) const override;
+    AXCoreObject* accessibilityHitTest(const IntPoint&) const override;
 
     Element* anchorElement() const override;
 
     LayoutRect boundingBoxRect() const override;
     LayoutRect elementRect() const override;
@@ -132,12 +132,12 @@
     String helpText() const override;
     String textUnderElement(AccessibilityTextUnderElementMode = AccessibilityTextUnderElementMode()) const override;
     String text() const override;
     int textLength() const override;
     String selectedText() const override;
-    const AtomString& accessKey() const override;
-    virtual const String& actionVerb() const;
+    String accessKey() const override;
+    String actionVerb() const override;
     Widget* widget() const override;
     Widget* widgetForAttachmentView() const override;
     virtual void getDocumentLinks(AccessibilityChildrenVector&);
     FrameView* documentFrameView() const override;
 
@@ -148,11 +148,10 @@
     void setSelectedTextRange(const PlainTextRange&) override;
     void setValue(const String&) override;
     void setSelectedRows(AccessibilityChildrenVector&) override;
     AccessibilityOrientation orientation() const override;
 
-    void detach(AccessibilityDetachmentType, AXObjectCache*) override;
     void textChanged() override;
     void addChildren() override;
     bool canHaveChildren() const override;
     bool canHaveSelectedChildren() const override;
     void selectedChildren(AccessibilityChildrenVector&) override;
@@ -201,10 +200,11 @@
     String passwordFieldValue() const override;
     void titleElementText(Vector<AccessibilityText>&) const override;
 
 protected:
     explicit AccessibilityRenderObject(RenderObject*);
+    void detachRemoteParts(AccessibilityDetachmentType) override;
     ScrollableArea* getScrollableAreaIfScrollable() const override;
     void scrollTo(const IntPoint&) const override;
 
     bool isDetached() const override { return !m_renderer; }
 
@@ -233,26 +233,26 @@
     Path elementPath() const override;
 
     bool isTabItemSelected() const;
     LayoutRect checkboxOrRadioRect() const;
     void addRadioButtonGroupMembers(AccessibilityChildrenVector& linkedUIElements) const;
-    void addRadioButtonGroupChildren(AccessibilityObject*, AccessibilityChildrenVector&) const;
+    void addRadioButtonGroupChildren(AXCoreObject*, AccessibilityChildrenVector&) const;
     AccessibilityObject* internalLinkElement() const;
-    AccessibilityObject* accessibilityImageMapHitTest(HTMLAreaElement*, const IntPoint&) const;
+    AXCoreObject* accessibilityImageMapHitTest(HTMLAreaElement*, const IntPoint&) const;
     AccessibilityObject* accessibilityParentForImageMap(HTMLMapElement*) const;
-    AccessibilityObjectInterface* elementAccessibilityHitTest(const IntPoint&) const override;
+    AXCoreObject* elementAccessibilityHitTest(const IntPoint&) const override;
 
     bool renderObjectIsObservable(RenderObject&) const;
     RenderObject* renderParentObject() const;
     bool isDescendantOfElementType(const QualifiedName& tagName) const;
     bool isDescendantOfElementType(const HashSet<QualifiedName>&) const;
 
     bool isSVGImage() const;
     void detachRemoteSVGRoot();
     enum CreationChoice { Create, Retrieve };
     AccessibilitySVGRoot* remoteSVGRootElement(CreationChoice createIfNecessary) const;
-    AccessibilityObjectInterface* remoteSVGElementHitTest(const IntPoint&) const;
+    AXCoreObject* remoteSVGElementHitTest(const IntPoint&) const;
     void offsetBoundingBoxForRemoteSVGElement(LayoutRect&) const;
     bool supportsPath() const override;
 
     void addHiddenChildren();
     void addTextFieldChildren();
