diff a/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSExecStateInstrumentation.h b/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSExecStateInstrumentation.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSExecStateInstrumentation.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSExecStateInstrumentation.h
@@ -31,32 +31,33 @@
 #include <JavaScriptCore/FunctionExecutable.h>
 
 namespace WebCore {
 
 template<typename Type, Type jsType, class DataType>
-inline InspectorInstrumentationCookie JSExecState::instrumentFunctionInternal(ScriptExecutionContext* context, Type callType, const DataType& callData)
+inline void JSExecState::instrumentFunctionInternal(ScriptExecutionContext* context, Type callType, const DataType& callData)
 {
     if (!InspectorInstrumentation::timelineAgentTracking(context))
-        return InspectorInstrumentationCookie();
+        return;
+
     String resourceName;
     int lineNumber = 1;
     int columnNumber = 1;
     if (callType == jsType) {
         resourceName = callData.js.functionExecutable->sourceURL();
         lineNumber = callData.js.functionExecutable->firstLine();
         columnNumber = callData.js.functionExecutable->startColumn();
     } else
         resourceName = "undefined";
-    return InspectorInstrumentation::willCallFunction(context, resourceName, lineNumber, columnNumber);
+    InspectorInstrumentation::willCallFunction(context, resourceName, lineNumber, columnNumber);
 }
 
-inline InspectorInstrumentationCookie JSExecState::instrumentFunctionCall(ScriptExecutionContext* context, JSC::CallType type, const JSC::CallData& data)
+inline void JSExecState::instrumentFunctionCall(ScriptExecutionContext* context, JSC::CallType type, const JSC::CallData& data)
 {
-    return instrumentFunctionInternal<JSC::CallType, JSC::CallType::JS, JSC::CallData>(context, type, data);
+    instrumentFunctionInternal<JSC::CallType, JSC::CallType::JS, JSC::CallData>(context, type, data);
 }
 
-inline InspectorInstrumentationCookie JSExecState::instrumentFunctionConstruct(ScriptExecutionContext* context, JSC::ConstructType type, const JSC::ConstructData& data)
+inline void JSExecState::instrumentFunctionConstruct(ScriptExecutionContext* context, JSC::ConstructType type, const JSC::ConstructData& data)
 {
-    return instrumentFunctionInternal<JSC::ConstructType, JSC::ConstructType::JS, JSC::ConstructData>(context, type, data);
+    instrumentFunctionInternal<JSC::ConstructType, JSC::ConstructType::JS, JSC::ConstructData>(context, type, data);
 }
 
 } // namespace WebCore
