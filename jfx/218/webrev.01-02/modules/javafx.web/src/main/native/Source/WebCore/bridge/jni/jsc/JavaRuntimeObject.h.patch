diff a/modules/javafx.web/src/main/native/Source/WebCore/bridge/jni/jsc/JavaRuntimeObject.h b/modules/javafx.web/src/main/native/Source/WebCore/bridge/jni/jsc/JavaRuntimeObject.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/bridge/jni/jsc/JavaRuntimeObject.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/bridge/jni/jsc/JavaRuntimeObject.h
@@ -35,17 +35,17 @@
 
 class JavaRuntimeObject : public RuntimeObject {
 public:
     typedef RuntimeObject Base;
 
-    static JavaRuntimeObject* create(ExecState* exec, JSGlobalObject* globalObject, RefPtr<JavaInstance> javaInstance)
+    static JavaRuntimeObject* create(JSGlobalObject* globalObject, RefPtr<JavaInstance> javaInstance)
     {
         VM& vm = globalObject->vm();
         // FIXME: deprecatedGetDOMStructure uses the prototype off of the wrong global object
         // We need to pass in the right global object for "i".
-        Structure* domStructure = WebCore::deprecatedGetDOMStructure<JavaRuntimeObject>(exec);
-        JavaRuntimeObject* object = new (NotNull, allocateCell<JavaRuntimeObject>(vm.heap)) JavaRuntimeObject(exec, globalObject, domStructure, javaInstance);
+        Structure* domStructure = WebCore::deprecatedGetDOMStructure<JavaRuntimeObject>(globalObject);
+        JavaRuntimeObject* object = new (NotNull, allocateCell<JavaRuntimeObject>(vm.heap)) JavaRuntimeObject(globalObject, domStructure, javaInstance);
         object->finishCreation(globalObject);
         return object;
     }
 
     JavaInstance* getInternalJavaInstance() const;
@@ -56,11 +56,11 @@
     {
         return Structure::create(globalData, globalObject, prototype, TypeInfo(ObjectType, StructureFlags), &s_info);
     }
 
 private:
-    JavaRuntimeObject(ExecState*, JSGlobalObject*, Structure*, RefPtr<JavaInstance>);
+    JavaRuntimeObject(JSGlobalObject*, Structure*, RefPtr<JavaInstance>);
     void finishCreation(JSGlobalObject*);
 };
 
 }  // namespace Bindings
 }  // namespace JSC
