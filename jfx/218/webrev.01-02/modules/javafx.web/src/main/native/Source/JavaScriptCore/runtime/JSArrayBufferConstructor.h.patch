diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSArrayBufferConstructor.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSArrayBufferConstructor.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSArrayBufferConstructor.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/JSArrayBufferConstructor.h
@@ -40,11 +40,11 @@
 
 protected:
     JSGenericArrayBufferConstructor(VM&, Structure*);
     void finishCreation(VM&, JSArrayBufferPrototype*, GetterSetter* speciesSymbol);
 
-    static EncodedJSValue JSC_HOST_CALL constructArrayBuffer(ExecState*);
+    static EncodedJSValue JSC_HOST_CALL constructArrayBuffer(JSGlobalObject*, CallFrame*);
 
 public:
     static JSGenericArrayBufferConstructor* create(VM& vm, Structure* structure, JSArrayBufferPrototype* prototype, GetterSetter* speciesSymbol)
     {
         JSGenericArrayBufferConstructor* result =
@@ -59,9 +59,9 @@
     static const ClassInfo* info();
 };
 
 using JSArrayBufferConstructor = JSGenericArrayBufferConstructor<ArrayBufferSharingMode::Default>;
 using JSSharedArrayBufferConstructor = JSGenericArrayBufferConstructor<ArrayBufferSharingMode::Shared>;
-static_assert(sizeof(JSArrayBufferConstructor::Base) == sizeof(JSArrayBufferConstructor), "");
-static_assert(sizeof(JSSharedArrayBufferConstructor::Base) == sizeof(JSSharedArrayBufferConstructor), "");
+STATIC_ASSERT_ISO_SUBSPACE_SHARABLE(JSArrayBufferConstructor, InternalFunction);
+STATIC_ASSERT_ISO_SUBSPACE_SHARABLE(JSSharedArrayBufferConstructor, InternalFunction);
 
 } // namespace JSC
