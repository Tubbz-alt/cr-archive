diff a/modules/javafx.web/src/main/native/Source/WebCore/svg/animation/SVGSMILElement.h b/modules/javafx.web/src/main/native/Source/WebCore/svg/animation/SVGSMILElement.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/svg/animation/SVGSMILElement.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/svg/animation/SVGSMILElement.h
@@ -80,11 +80,11 @@
     SMILTime intervalEnd() const { return m_intervalEnd; }
     SMILTime previousIntervalBegin() const { return m_previousIntervalBegin; }
     SMILTime simpleDuration() const;
 
     void seekToIntervalCorrespondingToTime(SMILTime elapsed);
-    bool progress(SMILTime elapsed, SVGSMILElement* resultsElement, bool seekToTime);
+    bool progress(SMILTime elapsed, SVGSMILElement& firstAnimation, bool seekToTime);
     SMILTime nextProgressTime() const;
 
     void reset();
 
     static SMILTime parseClockValue(const String&);
@@ -96,12 +96,12 @@
 
     unsigned documentOrderIndex() const { return m_documentOrderIndex; }
     void setDocumentOrderIndex(unsigned index) { m_documentOrderIndex = index; }
 
     virtual bool isAdditive() const = 0;
-    virtual void resetAnimatedType() = 0;
-    virtual void clearAnimatedType(SVGElement* targetElement) = 0;
+    virtual void startAnimation() = 0;
+    virtual void stopAnimation(SVGElement* targetElement) = 0;
     virtual void applyResultsToTarget() = 0;
 
     void connectConditions();
     bool hasConditionsConnected() const { return m_conditionsConnected; }
 
@@ -127,11 +127,11 @@
 
     void clearTarget() override;
 
     virtual void startedActiveInterval() = 0;
     void endedActiveInterval();
-    virtual void updateAnimation(float percent, unsigned repeat, SVGSMILElement* resultElement) = 0;
+    virtual void updateAnimation(float percent, unsigned repeat) = 0;
 
     static bool isSupportedAttribute(const QualifiedName&);
     QualifiedName constructAttributeName() const;
     void updateAttributeName();
 
