diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/InjectedScriptHost.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/InjectedScriptHost.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/InjectedScriptHost.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/inspector/InjectedScriptHost.h
@@ -35,15 +35,15 @@
 class JS_EXPORT_PRIVATE InjectedScriptHost : public RefCounted<InjectedScriptHost> {
 public:
     static Ref<InjectedScriptHost> create() { return adoptRef(*new InjectedScriptHost); }
     virtual ~InjectedScriptHost();
 
-    virtual JSC::JSValue subtype(JSC::ExecState*, JSC::JSValue) { return JSC::jsUndefined(); }
-    virtual JSC::JSValue getInternalProperties(JSC::VM&, JSC::ExecState*, JSC::JSValue) { return { }; }
+    virtual JSC::JSValue subtype(JSC::JSGlobalObject*, JSC::JSValue) { return JSC::jsUndefined(); }
+    virtual JSC::JSValue getInternalProperties(JSC::VM&, JSC::JSGlobalObject*, JSC::JSValue) { return { }; }
     virtual bool isHTMLAllCollection(JSC::VM&, JSC::JSValue) { return false; }
 
-    JSC::JSValue wrapper(JSC::ExecState*, JSC::JSGlobalObject*);
+    JSC::JSValue wrapper(JSC::JSGlobalObject*);
     void clearAllWrappers();
 
     void setSavedResultAlias(const Optional<String>& alias) { m_savedResultAlias = alias; }
     const Optional<String>& savedResultAlias() const { return m_savedResultAlias; }
 
