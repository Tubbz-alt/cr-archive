diff a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderBlock.h b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderBlock.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderBlock.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/rendering/RenderBlock.h
@@ -297,11 +297,11 @@
     LayoutUnit logicalLeftSelectionOffset(RenderBlock& rootBlock, LayoutUnit position, const LogicalSelectionOffsetCaches&);
     LayoutUnit logicalRightSelectionOffset(RenderBlock& rootBlock, LayoutUnit position, const LogicalSelectionOffsetCaches&);
 
     LayoutUnit computeStartPositionDeltaForChildAvoidingFloats(const RenderBox& child, LayoutUnit childMarginStart, RenderFragmentContainer* = 0);
 
-#ifndef NDEBUG
+#if ASSERT_ENABLED
     void checkPositionedObjectsNeedLayout();
 #endif
 
     void updateHitTestResult(HitTestResult&, const LayoutPoint&) override;
 
@@ -314,10 +314,12 @@
     void resetEnclosingFragmentedFlowAndChildInfoIncludingDescendants(RenderFragmentedFlow* = nullptr) final;
 
     Optional<LayoutUnit> availableLogicalHeightForPercentageComputation() const;
     bool hasDefiniteLogicalHeight() const;
 
+    virtual bool shouldResetChildLogicalHeightBeforeLayout(const RenderBox&) const { return false; }
+
 protected:
     RenderFragmentedFlow* locateEnclosingFragmentedFlow() const override;
     void willBeDestroyed() override;
 
     void layout() override;
@@ -489,10 +491,12 @@
 
     RenderFragmentedFlow* updateCachedEnclosingFragmentedFlow(RenderFragmentedFlow*) const;
 
     void removePositionedObjectsIfNeeded(const RenderStyle& oldStyle, const RenderStyle& newStyle);
 
+    void absoluteQuadsIgnoringContinuation(const FloatRect&, Vector<FloatQuad>&, bool* wasFixed) const override;
+
 private:
     bool hasRareData() const;
 
 protected:
     void dirtyForLayoutFromPercentageHeightDescendants();
