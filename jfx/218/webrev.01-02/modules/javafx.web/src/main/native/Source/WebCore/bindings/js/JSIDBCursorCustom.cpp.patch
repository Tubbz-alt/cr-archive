diff a/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSIDBCursorCustom.cpp b/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSIDBCursorCustom.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSIDBCursorCustom.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/bindings/js/JSIDBCursorCustom.cpp
@@ -34,21 +34,21 @@
 
 
 namespace WebCore {
 using namespace JSC;
 
-JSC::JSValue JSIDBCursor::key(JSC::ExecState& state) const
+JSC::JSValue JSIDBCursor::key(JSC::JSGlobalObject& lexicalGlobalObject) const
 {
-    return cachedPropertyValue(state, *this, wrapped().keyWrapper(), [&] {
-        return toJS(state, *state.lexicalGlobalObject(), wrapped().key());
+    return cachedPropertyValue(lexicalGlobalObject, *this, wrapped().keyWrapper(), [&] {
+        return toJS(lexicalGlobalObject, lexicalGlobalObject, wrapped().key());
     });
 }
 
-JSC::JSValue JSIDBCursor::primaryKey(JSC::ExecState& state) const
+JSC::JSValue JSIDBCursor::primaryKey(JSC::JSGlobalObject& lexicalGlobalObject) const
 {
-    return cachedPropertyValue(state, *this, wrapped().primaryKeyWrapper(), [&] {
-        return toJS(state, *state.lexicalGlobalObject(), wrapped().primaryKey());
+    return cachedPropertyValue(lexicalGlobalObject, *this, wrapped().primaryKeyWrapper(), [&] {
+        return toJS(lexicalGlobalObject, lexicalGlobalObject, wrapped().primaryKey());
     });
 }
 
 void JSIDBCursor::visitAdditionalChildren(SlotVisitor& visitor)
 {
@@ -57,20 +57,20 @@
         visitor.addOpaqueRoot(request);
     cursor.keyWrapper().visit(visitor);
     cursor.primaryKeyWrapper().visit(visitor);
 }
 
-JSValue toJSNewlyCreated(JSC::ExecState*, JSDOMGlobalObject* globalObject, Ref<IDBCursor>&& cursor)
+JSValue toJSNewlyCreated(JSC::JSGlobalObject*, JSDOMGlobalObject* globalObject, Ref<IDBCursor>&& cursor)
 {
     if (is<IDBCursorWithValue>(cursor))
         return createWrapper<IDBCursorWithValue>(globalObject, WTFMove(cursor));
     return createWrapper<IDBCursor>(globalObject, WTFMove(cursor));
 }
 
-JSValue toJS(JSC::ExecState* state, JSDOMGlobalObject* globalObject, IDBCursor& cursor)
+JSValue toJS(JSC::JSGlobalObject* lexicalGlobalObject, JSDOMGlobalObject* globalObject, IDBCursor& cursor)
 {
-    return wrap(state, globalObject, cursor);
+    return wrap(lexicalGlobalObject, globalObject, cursor);
 }
 
 } // namespace WebCore
 
 #endif // ENABLE(INDEXED_DATABASE)
