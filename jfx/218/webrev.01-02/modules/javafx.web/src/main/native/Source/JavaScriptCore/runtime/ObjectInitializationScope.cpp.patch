diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ObjectInitializationScope.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ObjectInitializationScope.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ObjectInitializationScope.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ObjectInitializationScope.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2017-2018 Apple Inc. All rights reserved.
+ * Copyright (C) 2017-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -40,10 +40,11 @@
 {
 }
 
 ObjectInitializationScope::~ObjectInitializationScope()
 {
+    m_vm.heap.mutatorFence();
     if (!m_object)
         return;
     verifyPropertiesAreInitialized(m_object);
 }
 
@@ -101,11 +102,11 @@
 #endif
     };
 
     for (int64_t i = 0; i < static_cast<int64_t>(structure->outOfLineCapacity()); i++) {
         // We rely on properties past the last offset be zero for concurrent GC.
-        if (i + firstOutOfLineOffset > structure->lastOffset())
+        if (i + firstOutOfLineOffset > structure->maxOffset())
             ASSERT(isSafeEmptyValueForGCScanning(butterfly->propertyStorage()[-i - 1].get()));
         else if (isScribbledValue(butterfly->propertyStorage()[-i - 1].get())) {
             dataLogLn("Found scribbled property at i = ", -i - 1);
             ASSERT_NOT_REACHED();
         }
