diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/texmap/TextureMapperGC3DPlatformLayer.h b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/texmap/TextureMapperGC3DPlatformLayer.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/texmap/TextureMapperGC3DPlatformLayer.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/texmap/TextureMapperGC3DPlatformLayer.h
@@ -17,13 +17,13 @@
  *  Boston, MA 02110-1301 USA
  */
 
 #pragma once
 
-#if ENABLE(GRAPHICS_CONTEXT_3D) && USE(TEXTURE_MAPPER) && !USE(NICOSIA)
+#if ENABLE(GRAPHICS_CONTEXT_GL) && USE(TEXTURE_MAPPER) && !USE(NICOSIA)
 
-#include "GraphicsContext3D.h"
+#include "GraphicsContextGLOpenGL.h"
 #include "PlatformLayer.h"
 #include "TextureMapperPlatformLayer.h"
 #include "TextureMapperPlatformLayerProxyProvider.h"
 
 namespace WebCore {
@@ -32,30 +32,30 @@
 class TextureMapperPlatformLayerProxy;
 
 class TextureMapperGC3DPlatformLayer : public PlatformLayer {
     WTF_MAKE_FAST_ALLOCATED;
 public:
-    TextureMapperGC3DPlatformLayer(GraphicsContext3D&, GraphicsContext3D::RenderStyle);
+    TextureMapperGC3DPlatformLayer(GraphicsContextGLOpenGL&, GraphicsContextGLOpenGL::Destination);
     virtual ~TextureMapperGC3DPlatformLayer();
 
     bool makeContextCurrent();
-    PlatformGraphicsContext3D platformContext();
+    PlatformGraphicsContextGL platformContext() const;
 
 #if USE(COORDINATED_GRAPHICS)
     RefPtr<TextureMapperPlatformLayerProxy> proxy() const override;
     void swapBuffersIfNeeded() override;
 #else
     virtual void paintToTextureMapper(TextureMapper&, const FloatRect& target, const TransformationMatrix&, float opacity);
 #endif
 
 private:
-    GraphicsContext3D& m_context;
+    GraphicsContextGLOpenGL& m_context;
     std::unique_ptr<GLContext> m_glContext;
 
 #if USE(COORDINATED_GRAPHICS)
     RefPtr<TextureMapperPlatformLayerProxy> m_platformLayerProxy;
 #endif
 };
 
 } // namespace WebCore
 
-#endif // ENABLE(GRAPHICS_CONTEXT_3D) && USE(TEXTURE_MAPPER)
+#endif // ENABLE(GRAPHICS_CONTEXT_GL) && USE(TEXTURE_MAPPER)
