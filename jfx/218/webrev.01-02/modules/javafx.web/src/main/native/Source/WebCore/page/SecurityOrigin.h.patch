diff a/modules/javafx.web/src/main/native/Source/WebCore/page/SecurityOrigin.h b/modules/javafx.web/src/main/native/Source/WebCore/page/SecurityOrigin.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/page/SecurityOrigin.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/page/SecurityOrigin.h
@@ -86,10 +86,12 @@
     const String& protocol() const { return m_data.protocol; }
     const String& host() const { return m_data.host; }
     const String& domain() const { return m_domain; }
     Optional<uint16_t> port() const { return m_data.port; }
 
+    static bool shouldIgnoreHost(const URL&);
+
     // Returns true if a given URL is secure, based either directly on its
     // own protocol, or, when relevant, on the protocol of its "inner URL"
     // Protocols like blob: and filesystem: fall into this latter category.
     static bool isSecure(const URL&);
 
@@ -209,11 +211,11 @@
     WEBCORE_EXPORT bool isMatchingRegistrableDomainSuffix(const String&, bool treatIPAddressAsDomain = false) const;
 
     bool isPotentiallyTrustworthy() const { return m_isPotentiallyTrustworthy; }
     void setIsPotentiallyTrustworthy(bool value) { m_isPotentiallyTrustworthy = value; }
 
-    static bool isLocalHostOrLoopbackIPAddress(StringView);
+    WEBCORE_EXPORT static bool isLocalHostOrLoopbackIPAddress(StringView);
 
     const SecurityOriginData& data() const { return m_data; }
 
     template<class Encoder> void encode(Encoder&) const;
     template<class Decoder> static RefPtr<SecurityOrigin> decode(Decoder&);
