diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/B3MemoryValue.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/B3MemoryValue.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/B3MemoryValue.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/B3MemoryValue.cpp
@@ -79,11 +79,11 @@
     : Value(CheckedOpcode, kind, type, One, origin, pointer)
     , m_offset(offset)
     , m_range(range)
     , m_fenceRange(fenceRange)
 {
-    if (!ASSERT_DISABLED) {
+    if (ASSERT_ENABLED) {
         switch (kind.opcode()) {
         case Load:
             break;
         case Load8Z:
         case Load8S:
@@ -104,11 +104,11 @@
 
 // Use this form for loads where the return type is implied.
 MemoryValue::MemoryValue(MemoryValue::MemoryValueLoadImplied, Kind kind, Origin origin, Value* pointer, MemoryValue::OffsetType offset, HeapRange range, HeapRange fenceRange)
     : MemoryValue(kind, Int32, origin, pointer, offset, range, fenceRange)
 {
-    if (!ASSERT_DISABLED) {
+    if (ASSERT_ENABLED) {
         switch (kind.opcode()) {
         case Load8Z:
         case Load8S:
         case Load16Z:
         case Load16S:
