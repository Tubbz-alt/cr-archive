diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/assembler/MacroAssemblerARM64E.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/assembler/MacroAssemblerARM64E.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/assembler/MacroAssemblerARM64E.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/assembler/MacroAssemblerARM64E.h
@@ -105,11 +105,11 @@
     ALWAYS_INLINE void removeArrayPtrTag(RegisterID target)
     {
         m_assembler.xpacd(target);
     }
 
-    static const RegisterID InvalidGPR  = static_cast<RegisterID>(-1);
+    static constexpr RegisterID InvalidGPR  = static_cast<RegisterID>(-1);
 
     enum class CallSignatureType {
         CFunctionCall,
         OtherCall
     };
@@ -186,10 +186,17 @@
         ASSERT(tag != dataTempRegister);
         load64(address, getCachedDataTempRegisterIDAndInvalidate());
         return call(dataTempRegister, tag);
     }
 
+    ALWAYS_INLINE void callOperation(const FunctionPtr<OperationPtrTag> operation)
+    {
+        auto tmp = getCachedDataTempRegisterIDAndInvalidate();
+        move(TrustedImmPtr(operation.executableAddress()), tmp);
+        call(tmp, OperationPtrTag);
+    }
+
     ALWAYS_INLINE Jump jump() { return MacroAssemblerARM64::jump(); }
 
     void farJump(RegisterID target, PtrTag tag)
     {
         if (tag == NoPtrTag)
