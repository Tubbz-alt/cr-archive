diff a/modules/javafx.web/src/main/native/Source/WebCore/dom/AnimationEvent.cpp b/modules/javafx.web/src/main/native/Source/WebCore/dom/AnimationEvent.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/dom/AnimationEvent.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/dom/AnimationEvent.cpp
@@ -24,23 +24,29 @@
  */
 
 #include "config.h"
 #include "AnimationEvent.h"
 
+#include <wtf/IsoMallocInlines.h>
+
 namespace WebCore {
 
+WTF_MAKE_ISO_ALLOCATED_IMPL(AnimationEvent);
+
 AnimationEvent::AnimationEvent(const AtomString& type, const Init& initializer, IsTrusted isTrusted)
-    : Event(type, initializer, isTrusted)
+    : AnimationEventBase(type, initializer, isTrusted)
     , m_animationName(initializer.animationName)
     , m_elapsedTime(initializer.elapsedTime)
+    , m_pseudoElement(initializer.pseudoElement)
 {
 }
 
-AnimationEvent::AnimationEvent(const AtomString& type, const String& animationName, double elapsedTime)
-    : Event(type, CanBubble::Yes, IsCancelable::No)
+AnimationEvent::AnimationEvent(const AtomString& type, const String& animationName, double elapsedTime, const String& pseudoElement, Optional<Seconds> timelineTime, WebAnimation* animation)
+    : AnimationEventBase(type, animation, timelineTime)
     , m_animationName(animationName)
     , m_elapsedTime(elapsedTime)
+    , m_pseudoElement(pseudoElement)
 {
 }
 
 AnimationEvent::~AnimationEvent() = default;
 
@@ -52,10 +58,15 @@
 double AnimationEvent::elapsedTime() const
 {
     return m_elapsedTime;
 }
 
+const String& AnimationEvent::pseudoElement() const
+{
+    return m_pseudoElement;
+}
+
 EventInterface AnimationEvent::eventInterface() const
 {
     return AnimationEventInterfaceType;
 }
 
