diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/air/AirArg.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/air/AirArg.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/air/AirArg.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/b3/air/AirArg.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2015-2017 Apple Inc. All rights reserved.
+ * Copyright (C) 2015-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -33,11 +33,11 @@
 #include "B3Type.h"
 #include "B3Value.h"
 #include "B3Width.h"
 #include <wtf/Optional.h>
 
-#if ASSERT_DISABLED
+#if !ASSERT_ENABLED
 IGNORE_RETURN_TYPE_WARNINGS_BEGIN
 #endif
 
 namespace JSC { namespace B3 {
 
@@ -1465,11 +1465,11 @@
 };
 
 struct ArgHash {
     static unsigned hash(const Arg& key) { return key.hash(); }
     static bool equal(const Arg& a, const Arg& b) { return a == b; }
-    static const bool safeToCompareToEmptyOrDeleted = true;
+    static constexpr bool safeToCompareToEmptyOrDeleted = true;
 };
 
 } } } // namespace JSC::B3::Air
 
 namespace WTF {
@@ -1487,15 +1487,15 @@
 };
 
 template<typename T> struct HashTraits;
 template<> struct HashTraits<JSC::B3::Air::Arg> : SimpleClassHashTraits<JSC::B3::Air::Arg> {
     // Because m_scale is 1 in the empty value.
-    static const bool emptyValueIsZero = false;
+    static constexpr bool emptyValueIsZero = false;
 };
 
 } // namespace WTF
 
-#if ASSERT_DISABLED
+#if !ASSERT_ENABLED
 IGNORE_RETURN_TYPE_WARNINGS_END
 #endif
 
 #endif // ENABLE(B3_JIT)
