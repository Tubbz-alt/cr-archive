diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/Subspace.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/Subspace.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/Subspace.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/heap/Subspace.cpp
@@ -29,10 +29,11 @@
 #include "AlignedMemoryAllocator.h"
 #include "BlockDirectoryInlines.h"
 #include "HeapCellType.h"
 #include "JSCInlines.h"
 #include "MarkedBlockInlines.h"
+#include "MarkedSpaceInlines.h"
 #include "ParallelSourceAdapter.h"
 #include "PreventCollectionScope.h"
 #include "SubspaceInlines.h"
 
 namespace JSC {
@@ -47,11 +48,11 @@
 {
     m_heapCellType = heapCellType;
     m_alignedMemoryAllocator = alignedMemoryAllocator;
     m_directoryForEmptyAllocation = m_alignedMemoryAllocator->firstDirectory();
 
-    Heap& heap = *m_space.heap();
+    Heap& heap = m_space.heap();
     heap.objectSpace().m_subspaces.append(this);
     m_alignedMemoryAllocator->registerSubspace(this);
 }
 
 Subspace::~Subspace()
@@ -122,23 +123,23 @@
                 return nullptr;
             return directory->parallelNotEmptyBlockSource();
         });
 }
 
-void Subspace::sweep()
+void Subspace::sweepBlocks()
 {
     forEachDirectory(
         [&] (BlockDirectory& directory) {
             directory.sweep();
         });
 }
 
-void Subspace::didResizeBits(size_t)
+void Subspace::didResizeBits(unsigned)
 {
 }
 
-void Subspace::didRemoveBlock(size_t)
+void Subspace::didRemoveBlock(unsigned)
 {
 }
 
 void Subspace::didBeginSweepingToFreeList(MarkedBlock::Handle*)
 {
