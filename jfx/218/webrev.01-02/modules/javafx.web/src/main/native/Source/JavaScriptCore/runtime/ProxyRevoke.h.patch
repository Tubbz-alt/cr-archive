diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ProxyRevoke.h b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ProxyRevoke.h
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ProxyRevoke.h
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/ProxyRevoke.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2016 Apple Inc. All Rights Reserved.
+ * Copyright (C) 2016-2019 Apple Inc. All Rights Reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -32,11 +32,11 @@
 class ProxyObject;
 
 class ProxyRevoke final : public InternalFunction {
 public:
     typedef InternalFunction Base;
-    static const unsigned StructureFlags = Base::StructureFlags;
+    static constexpr unsigned StructureFlags = Base::StructureFlags;
 
     template<typename CellType, SubspaceAccess mode>
     static IsoSubspace* subspaceFor(VM& vm)
     {
         return vm.proxyRevokeSpace<mode>();
@@ -49,11 +49,11 @@
     static Structure* createStructure(VM& vm, JSGlobalObject* globalObject, JSValue prototype)
     {
         return Structure::create(vm, globalObject, prototype, TypeInfo(InternalFunctionType, StructureFlags), info());
     }
 
-    void finishCreation(VM&, const char* name, ProxyObject*);
+    void finishCreation(VM&, ProxyObject*);
     static void visitChildren(JSCell*, SlotVisitor&);
     JSValue proxy() { return m_proxy.get(); }
     void setProxyToNull(VM& vm) { return m_proxy.set(vm, this, jsNull()); }
 
 private:
