diff a/modules/javafx.web/src/main/native/Source/WebCore/dom/ElementDescendantIterator.h b/modules/javafx.web/src/main/native/Source/WebCore/dom/ElementDescendantIterator.h
--- a/modules/javafx.web/src/main/native/Source/WebCore/dom/ElementDescendantIterator.h
+++ b/modules/javafx.web/src/main/native/Source/WebCore/dom/ElementDescendantIterator.h
@@ -50,11 +50,11 @@
 
 private:
     Element* m_current;
     Vector<Element*, 16> m_ancestorSiblingStack;
 
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     ElementIteratorAssertions m_assertions;
 #endif
 };
 
 class ElementDescendantConstIterator {
@@ -74,11 +74,11 @@
 
 private:
     const Element* m_current;
     Vector<Element*, 16> m_ancestorSiblingStack;
 
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     ElementIteratorAssertions m_assertions;
 #endif
 };
 
 class ElementDescendantIteratorAdapter {
@@ -113,20 +113,20 @@
 {
 }
 
 inline ElementDescendantIterator::ElementDescendantIterator(Element* current)
     : m_current(current)
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     , m_assertions(current)
 #endif
 {
     m_ancestorSiblingStack.uncheckedAppend(nullptr);
 }
 
 inline void ElementDescendantIterator::dropAssertions()
 {
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     m_assertions.clear();
 #endif
 }
 
 ALWAYS_INLINE ElementDescendantIterator& ElementDescendantIterator::operator++()
@@ -149,11 +149,11 @@
         return *this;
     }
 
     m_current = m_ancestorSiblingStack.takeLast();
 
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     // Drop the assertion when the iterator reaches the end.
     if (!m_current)
         m_assertions.dropEventDispatchAssertion();
 #endif
 
@@ -183,11 +183,11 @@
     if (deepestSibling != previousSibling)
         m_ancestorSiblingStack.append(m_current);
 
     m_current = deepestSibling;
 
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     // Drop the assertion when the iterator reaches the end.
     if (!m_current)
         m_assertions.dropEventDispatchAssertion();
 #endif
 
@@ -226,20 +226,20 @@
 {
 }
 
 inline ElementDescendantConstIterator::ElementDescendantConstIterator(const Element* current)
     : m_current(current)
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     , m_assertions(current)
 #endif
 {
     m_ancestorSiblingStack.uncheckedAppend(nullptr);
 }
 
 inline void ElementDescendantConstIterator::dropAssertions()
 {
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     m_assertions.clear();
 #endif
 }
 
 ALWAYS_INLINE ElementDescendantConstIterator& ElementDescendantConstIterator::operator++()
@@ -262,11 +262,11 @@
         return *this;
     }
 
     m_current = m_ancestorSiblingStack.takeLast();
 
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     // Drop the assertion when the iterator reaches the end.
     if (!m_current)
         m_assertions.dropEventDispatchAssertion();
 #endif
 
