diff a/modules/javafx.web/src/main/native/Source/WebCore/page/DOMWindow.idl b/modules/javafx.web/src/main/native/Source/WebCore/page/DOMWindow.idl
--- a/modules/javafx.web/src/main/native/Source/WebCore/page/DOMWindow.idl
+++ b/modules/javafx.web/src/main/native/Source/WebCore/page/DOMWindow.idl
@@ -45,11 +45,12 @@
     IsImmutablePrototypeExoticObjectOnPrototype,
     JSCustomMarkFunction,
     JSCustomToNativeObject,
     JSLegacyParent=JSDOMWindowBase,
     LegacyUnenumerableNamedProperties,
-    PrimaryGlobal,
+    Global=Window,
+    Exposed=Window,
 ] interface DOMWindow : EventTarget {
     // The current browsing context.
     [DoNotCheckSecurity, Unforgeable, CustomGetter] readonly attribute WindowProxy window;
     [Replaceable, DoNotCheckSecurityOnGetter, CustomGetter] readonly attribute WindowProxy self;
     [Unforgeable] readonly attribute Document document;
@@ -84,18 +85,22 @@
     readonly attribute DOMApplicationCache applicationCache;
 
     // User prompts.
     void alert();
     void alert(DOMString message);
-    boolean confirm(optional DOMString message = "");
+    [ImplementedAs=confirmForBindings]boolean confirm(optional DOMString message = "");
     DOMString? prompt(optional DOMString message = "", optional DOMString defaultValue = "");
     void print();
 
     long requestAnimationFrame(RequestAnimationFrameCallback callback); // FIXME: Should return an unsigned long.
     void cancelAnimationFrame(long handle); // FIXME: handle should be an unsigned long.
 
-    [CallWith=ExecState&IncumbentWindow, DoNotCheckSecurity, ForwardDeclareInHeader, MayThrowException] void postMessage(any message, USVString targetOrigin, optional sequence<object> transfer = []);
+    [EnabledBySetting=requestIdleCallback] unsigned long requestIdleCallback(IdleRequestCallback callback, optional IdleRequestOptions options);
+    [EnabledBySetting=requestIdleCallback] void cancelIdleCallback(unsigned long handle);
+
+    [CallWith=GlobalObject&IncumbentWindow, DoNotCheckSecurity, ForwardDeclareInHeader, MayThrowException] void postMessage(any message, USVString targetOrigin, optional sequence<object> transfer = []);
+    [CallWith=GlobalObject&IncumbentWindow, DoNotCheckSecurity, ForwardDeclareInHeader, MayThrowException] void postMessage(any message, optional WindowPostMessageOptions options);
 
     // Obsolete members, still part of the HTML specification (https://html.spec.whatwg.org/#Window-partial).
     void captureEvents(); // Not implemented. Also not in modern standards. Empty function may help compatibility with legacy content.
     void releaseEvents(); // Not implemented. Also not in modern standards. Empty function may help compatibility with legacy content.
 
@@ -199,10 +204,16 @@
     [NotEnumerable, ImplementedAs=onwebkitAnimationIteration] attribute EventHandler onwebkitanimationiteration;
     [NotEnumerable, ImplementedAs=onwebkitAnimationStart] attribute EventHandler onwebkitanimationstart;
     [NotEnumerable, ImplementedAs=onwebkitTransitionEnd] attribute EventHandler onwebkittransitionend;
 };
 
+[
+    ImplementedAs=WindowPostMessageOptions
+] dictionary WindowPostMessageOptions : PostMessageOptions {
+  USVString targetOrigin = "/";
+};
+
 DOMWindow implements GlobalCrypto;
 DOMWindow implements GlobalEventHandlers;
 DOMWindow implements GlobalPerformance;
 DOMWindow implements WindowEventHandlers;
 DOMWindow implements WindowOrWorkerGlobalScope;
