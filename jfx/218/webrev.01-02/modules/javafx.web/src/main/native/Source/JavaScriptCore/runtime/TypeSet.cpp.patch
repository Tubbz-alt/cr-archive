diff a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/TypeSet.cpp b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/TypeSet.cpp
--- a/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/TypeSet.cpp
+++ b/modules/javafx.web/src/main/native/Source/JavaScriptCore/runtime/TypeSet.cpp
@@ -495,13 +495,13 @@
     RefPtr<StructureShape> currentShape(this);
 
     while (currentShape) {
         auto fields = JSON::ArrayOf<String>::create();
         auto optionalFields = JSON::ArrayOf<String>::create();
-        for (auto field : currentShape->m_fields)
+        for (const auto& field : currentShape->m_fields)
             fields->addItem(field.get());
-        for (auto field : currentShape->m_optionalFields)
+        for (const auto& field : currentShape->m_optionalFields)
             optionalFields->addItem(field.get());
 
         currentObject->setFields(&fields.get());
         currentObject->setOptionalFields(&optionalFields.get());
         currentObject->setConstructorName(currentShape->m_constructorName);
@@ -536,27 +536,27 @@
 Ref<StructureShape> StructureShape::merge(Ref<StructureShape>&& a, Ref<StructureShape>&& b)
 {
     ASSERT(a->hasSamePrototypeChain(b.get()));
 
     auto merged = StructureShape::create();
-    for (auto field : a->m_fields) {
+    for (const auto& field : a->m_fields) {
         if (b->m_fields.contains(field))
             merged->m_fields.add(field);
         else
             merged->m_optionalFields.add(field);
     }
 
-    for (auto field : b->m_fields) {
+    for (const auto& field : b->m_fields) {
         if (!merged->m_fields.contains(field)) {
             auto addResult = merged->m_optionalFields.add(field);
             ASSERT_UNUSED(addResult, addResult.isNewEntry);
         }
     }
 
-    for (auto field : a->m_optionalFields)
+    for (const auto& field : a->m_optionalFields)
         merged->m_optionalFields.add(field);
-    for (auto field : b->m_optionalFields)
+    for (const auto& field : b->m_optionalFields)
         merged->m_optionalFields.add(field);
 
     ASSERT(a->m_constructorName == b->m_constructorName);
     merged->setConstructorName(a->m_constructorName);
 
