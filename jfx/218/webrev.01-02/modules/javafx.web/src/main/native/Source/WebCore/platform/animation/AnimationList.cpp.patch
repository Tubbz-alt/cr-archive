diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/animation/AnimationList.cpp b/modules/javafx.web/src/main/native/Source/WebCore/platform/animation/AnimationList.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/animation/AnimationList.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/animation/AnimationList.cpp
@@ -20,20 +20,25 @@
  */
 
 #include "config.h"
 #include "AnimationList.h"
 
+#include <wtf/text/TextStream.h>
+
 namespace WebCore {
 
 #define FILL_UNSET_PROPERTY(test, propGet, propSet) \
 for (i = 0; i < size() && animation(i).test(); ++i) { } \
 if (i) { \
     for (size_t j = 0; i < size(); ++i, ++j) \
         animation(i).propSet(animation(j).propGet()); \
 }
 
+AnimationList::AnimationList() = default;
+
 AnimationList::AnimationList(const AnimationList& other)
+    : RefCounted()
 {
     m_animations.reserveInitialCapacity(other.size());
     for (auto& animation : other.m_animations)
         m_animations.uncheckedAppend(Animation::create(animation.get()));
 }
@@ -61,6 +66,18 @@
             return false;
     }
     return true;
 }
 
+TextStream& operator<<(TextStream& ts, const AnimationList& animationList)
+{
+    ts << "[";
+    for (size_t i = 0; i < animationList.size(); ++i) {
+        if (i > 0)
+            ts << ", ";
+        ts << animationList.animation(i);
+    }
+    ts << "]";
+    return ts;
+}
+
 } // namespace WebCore
