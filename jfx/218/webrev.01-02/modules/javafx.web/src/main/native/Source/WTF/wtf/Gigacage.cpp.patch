diff a/modules/javafx.web/src/main/native/Source/WTF/wtf/Gigacage.cpp b/modules/javafx.web/src/main/native/Source/WTF/wtf/Gigacage.cpp
--- a/modules/javafx.web/src/main/native/Source/WTF/wtf/Gigacage.cpp
+++ b/modules/javafx.web/src/main/native/Source/WTF/wtf/Gigacage.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2017 Apple Inc. All rights reserved.
+ * Copyright (C) 2017-2019 Apple Inc. All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
  * 1. Redistributions of source code must retain the above copyright
@@ -32,12 +32,10 @@
 
 #if defined(USE_SYSTEM_MALLOC) && USE_SYSTEM_MALLOC
 
 namespace Gigacage {
 
-alignas(void*) char g_gigacageBasePtrs[gigacageBasePtrsSize];
-
 void* tryMalloc(Kind, size_t size)
 {
     return FastMalloc::tryMalloc(size);
 }
 
@@ -49,11 +47,11 @@
 void* tryAllocateZeroedVirtualPages(Kind, size_t requestedSize)
 {
     size_t size = roundUpToMultipleOf(WTF::pageSize(), requestedSize);
     RELEASE_ASSERT(size >= requestedSize);
     void* result = OSAllocator::reserveAndCommit(size);
-#if !ASSERT_DISABLED
+#if ASSERT_ENABLED
     if (result) {
         for (size_t i = 0; i < size / sizeof(uintptr_t); ++i)
             ASSERT(static_cast<uintptr_t*>(result)[i] == 0);
     }
 #endif
