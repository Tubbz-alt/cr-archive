diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GraphicsLayer.cpp b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GraphicsLayer.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GraphicsLayer.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/GraphicsLayer.cpp
@@ -197,10 +197,15 @@
 void GraphicsLayer::clearClient()
 {
     m_client = &EmptyGraphicsLayerClient::singleton();
 }
 
+String GraphicsLayer::debugName() const
+{
+    return name();
+}
+
 void GraphicsLayer::setClient(GraphicsLayerClient& client)
 {
     m_client = &client;
 }
 
@@ -506,11 +511,11 @@
     context.translate(-offset);
 
     FloatRect clipRect(clip);
     clipRect.move(offset);
 
-    client().paintContents(this, context, m_paintingPhase, clipRect, layerPaintBehavior);
+    client().paintContents(this, context, clipRect, layerPaintBehavior);
 }
 
 FloatRect GraphicsLayer::adjustCoverageRectForMovement(const FloatRect& coverageRect, const FloatRect& previousVisibleRect, const FloatRect& currentVisibleRect)
 {
     // If the old visible rect is empty, we have no information about how the visible area is changing
@@ -891,11 +896,11 @@
     if (m_opacity != 1)
         ts << indent << "(opacity " << m_opacity << ")\n";
 
 #if ENABLE(CSS_COMPOSITING)
     if (m_blendMode != BlendMode::Normal)
-        ts << indent << "(blendMode " << compositeOperatorName(CompositeSourceOver, m_blendMode) << ")\n";
+        ts << indent << "(blendMode " << compositeOperatorName(CompositeOperator::SourceOver, m_blendMode) << ")\n";
 #endif
 
     if (type() == Type::Normal && tiledBacking())
         ts << indent << "(usingTiledLayer 1)\n";
 
