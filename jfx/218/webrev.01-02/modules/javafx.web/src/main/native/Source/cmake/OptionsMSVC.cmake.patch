diff a/modules/javafx.web/src/main/native/Source/cmake/OptionsMSVC.cmake b/modules/javafx.web/src/main/native/Source/cmake/OptionsMSVC.cmake
--- a/modules/javafx.web/src/main/native/Source/cmake/OptionsMSVC.cmake
+++ b/modules/javafx.web/src/main/native/Source/cmake/OptionsMSVC.cmake
@@ -5,15 +5,17 @@
     /wd4481 /wd4503 /wd4505 /wd4510 /wd4512 /wd4530 /wd4610 /wd4611 /wd4646
     /wd4702 /wd4706 /wd4722 /wd4800 /wd4819 /wd4951 /wd4952 /wd4996 /wd6011
     /wd6031 /wd6211 /wd6246 /wd6255 /wd6387
 )
 
-# Create pdb files for debugging purposes, also for Release builds
-add_compile_options(/Zi /GS)
+if (NOT WTF_CPU_X86)
+    # Create pdb files for debugging purposes, also for Release builds
+    add_compile_options(/Zi /GS)
 
-set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /DEBUG /OPT:ICF /OPT:REF")
-set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /DEBUG /OPT:ICF /OPT:REF")
+    set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /DEBUG /OPT:ICF /OPT:REF")
+    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /DEBUG /OPT:ICF /OPT:REF")
+endif ()
 
 # We do not use exceptions
 add_definitions(-D_HAS_EXCEPTIONS=0)
 add_compile_options(/EHa- /EHc- /EHs- /fp:except-)
 
@@ -27,10 +29,16 @@
 endif ()
 
 # Specify the source code encoding
 add_compile_options(/utf-8 /validate-charset)
 
+# Enable the new lambda processor for better C++ conformance with /std:c++17
+# TODO : Enable it after Upgrade to VS2019
+# if (NOT COMPILER_IS_CLANG_CL)
+#    add_compile_options(/experimental:newLambdaProcessor)
+# endif ()
+
 if (${CMAKE_BUILD_TYPE} MATCHES "Debug")
     set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /OPT:NOREF /OPT:NOICF")
     set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /OPT:NOREF /OPT:NOICF")
 
     # To debug linking time issues, uncomment the following three lines:
