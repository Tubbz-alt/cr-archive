diff a/modules/javafx.controls/src/main/java/javafx/scene/control/skin/TabPaneSkin.java b/modules/javafx.controls/src/main/java/javafx/scene/control/skin/TabPaneSkin.java
--- a/modules/javafx.controls/src/main/java/javafx/scene/control/skin/TabPaneSkin.java
+++ b/modules/javafx.controls/src/main/java/javafx/scene/control/skin/TabPaneSkin.java
@@ -577,11 +577,10 @@
 
     private void initializeTabListener() {
         getSkinnable().getTabs().addListener((ListChangeListener<Tab>) c -> {
             List<Tab> tabsToRemove = new ArrayList<>();
             List<Tab> tabsToAdd = new ArrayList<>();
-            int insertPos = -1;
 
             while (c.next()) {
                 if (c.wasPermutated()) {
                     if (dragState != DragState.REORDER) {
                         TabPane tabPane = getSkinnable();
@@ -617,11 +616,10 @@
                 if (c.wasRemoved()) {
                     tabsToRemove.addAll(c.getRemoved());
                 }
                 if (c.wasAdded()) {
                     tabsToAdd.addAll(c.getAddedSubList());
-                    insertPos = c.getFrom();
                 }
             }
 
             // now only remove the tabs that are not in the tabsToAdd list
             tabsToRemove.removeAll(tabsToAdd);
@@ -645,11 +643,13 @@
                             headersToMove.add(new Pair(tabIndex, tabHeader));
                         }
                     }
                 }
 
-                addTabs(tabsToAdd, insertPos == -1 ? tabContentRegions.size() : insertPos);
+                if (!tabsToAdd.isEmpty()) {
+                    addTabs(tabsToAdd, getSkinnable().getTabs().indexOf(tabsToAdd.get(0)));
+                }
                 for (Pair<Integer, TabHeaderSkin> move : headersToMove) {
                     tabHeaderArea.moveTab(move.getKey(), move.getValue());
                 }
             }
 
@@ -989,12 +989,14 @@
                 headersRegion.getChildren().remove(tabHeaderSkin);
             }
         }
 
         private void moveTab(int moveToIndex, TabHeaderSkin tabHeaderSkin) {
-            headersRegion.getChildren().remove(tabHeaderSkin);
-            headersRegion.getChildren().add(moveToIndex, tabHeaderSkin);
+            if (moveToIndex != headersRegion.getChildren().indexOf(tabHeaderSkin)) {
+                headersRegion.getChildren().remove(tabHeaderSkin);
+                headersRegion.getChildren().add(moveToIndex, tabHeaderSkin);
+            }
         }
 
         private TabHeaderSkin getTabHeaderSkin(Tab tab) {
             for (Node child: headersRegion.getChildren()) {
                 TabHeaderSkin tabHeaderSkin = (TabHeaderSkin)child;
@@ -2285,6 +2287,11 @@
 
     // For testing purpose.
     ContextMenu test_getTabsMenu() {
         return tabHeaderArea.controlButtons.popup;
     }
+
+    void test_disableAnimations() {
+        closeTabAnimation.set(TabAnimation.NONE);
+        openTabAnimation.set(TabAnimation.NONE);
+    }
 }
