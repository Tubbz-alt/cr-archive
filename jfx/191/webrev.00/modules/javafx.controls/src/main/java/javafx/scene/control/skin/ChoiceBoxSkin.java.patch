diff a/modules/javafx.controls/src/main/java/javafx/scene/control/skin/ChoiceBoxSkin.java b/modules/javafx.controls/src/main/java/javafx/scene/control/skin/ChoiceBoxSkin.java
--- a/modules/javafx.controls/src/main/java/javafx/scene/control/skin/ChoiceBoxSkin.java
+++ b/modules/javafx.controls/src/main/java/javafx/scene/control/skin/ChoiceBoxSkin.java
@@ -183,17 +183,18 @@
         registerChangeListener(control.itemsProperty(), e -> {
             updateChoiceBoxItems();
             updatePopupItems();
             updateSelectionModel();
             updateSelection();
-            if(selectionModel != null && selectionModel.getSelectedIndex() == -1) {
-                label.setText(""); // clear label text when selectedIndex is -1
-            }
         });
         registerChangeListener(control.converterProperty(), e -> {
             updateChoiceBoxItems();
             updatePopupItems();
+            updateLabelText();
+        });
+        registerChangeListener(control.valueProperty(), e -> {
+            updateLabelText();
         });
     }
 
 
 
@@ -321,13 +322,23 @@
 
         updatePopupItems();
 
         updateSelectionModel();
         updateSelection();
-        if(selectionModel != null && selectionModel.getSelectedIndex() == -1) {
-            label.setText(""); // clear label text when selectedIndex is -1
+        updateLabelText();
+    }
+
+    private void updateLabelText() {
+        T value = getSkinnable().getValue();
+        label.setText(getDisplayText(value));
+    }
+
+    private String getDisplayText(T value) {
+        if (getSkinnable().getConverter() != null) {
+            return getSkinnable().getConverter().toString(value);
         }
+        return value == null ? "" : value.toString();
     }
 
     private void updateChoiceBoxItems() {
         if (choiceBoxItems != null) {
             choiceBoxItems.removeListener(weakChoiceBoxItemsListener);
@@ -354,13 +365,11 @@
             // We translate the Separator into a SeparatorMenuItem...
             popupItem = new SeparatorMenuItem();
         } else if (o instanceof SeparatorMenuItem) {
             popupItem = (SeparatorMenuItem) o;
         } else {
-            StringConverter<T> c = getSkinnable().getConverter();
-            String displayString = (c == null) ? ((o == null) ? "" : o.toString()) :  c.toString(o);
-            final RadioMenuItem item = new RadioMenuItem(displayString);
+            final RadioMenuItem item = new RadioMenuItem(getDisplayText(o));
             item.setId("choice-box-menu-item");
             item.setToggleGroup(toggleGroup);
             item.setOnAction(e -> {
                 if (selectionModel == null) return;
                 int index = getSkinnable().getItems().indexOf(o);
@@ -399,15 +408,15 @@
     };
 
     private void updateSelection() {
         if (selectionModel == null || selectionModel.isEmpty()) {
             toggleGroup.selectToggle(null);
-            label.setText("");
-        } else {
+         } else {
             int selectedIndex = selectionModel.getSelectedIndex();
             if (selectedIndex == -1 || selectedIndex > popup.getItems().size()) {
-                label.setText(""); // clear label text
+                // FIXME: when do we get here?
+                // and if, shouldn't we unselect the toggles?
                 return;
             }
             if (selectedIndex < popup.getItems().size()) {
                 MenuItem selectedItem = popup.getItems().get(selectedIndex);
                 if (selectedItem instanceof RadioMenuItem) {
@@ -415,11 +424,9 @@
                 } else {
                     // need to unselect toggles if selectionModel allows a Separator/MenuItem
                     // to be selected
                     toggleGroup.selectToggle(null);
                 }
-                // update the label
-                label.setText(popup.getItems().get(selectedIndex).getText());
             }
         }
     }
 }
