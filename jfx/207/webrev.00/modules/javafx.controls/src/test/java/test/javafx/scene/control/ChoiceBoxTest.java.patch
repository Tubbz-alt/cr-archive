diff a/modules/javafx.controls/src/test/java/test/javafx/scene/control/ChoiceBoxTest.java b/modules/javafx.controls/src/test/java/test/javafx/scene/control/ChoiceBoxTest.java
--- a/modules/javafx.controls/src/test/java/test/javafx/scene/control/ChoiceBoxTest.java
+++ b/modules/javafx.controls/src/test/java/test/javafx/scene/control/ChoiceBoxTest.java
@@ -340,20 +340,24 @@
         assertEquals(0, box.getSelectionModel().getSelectedIndex());
         assertEquals("Orange", box.getSelectionModel().getSelectedItem());
         assertEquals("Orange", box.getValue());
     }
 
-    @Test public void ensureValueIsUpdatedByCorrectSelectionModelWhenSelectionModelIsChanged() {
+    @Test
+    public void ensureValueIsUpdatedByCorrectSelectionModelWhenSelectionModelIsChanged() {
         box.getItems().addAll("Apple", "Orange", "Banana");
         SelectionModel sm1 = box.getSelectionModel();
         sm1.select(1);
         assertEquals("Orange", box.getValue());
         SingleSelectionModel sm2 = ChoiceBoxShim.<String>get_ChoiceBoxSelectionModel(box);
         box.setSelectionModel(sm2);
 
         sm1.select(2);  // value should not change as we are using old SM
-        assertEquals("Orange", box.getValue());
+        // was: incorrect test assumption
+        // - setting the new model (with null selected item) changed the value to null
+        // assertEquals("Orange", box.getValue());
+        assertEquals(sm2.getSelectedItem(), box.getValue());
 
         sm2.select(0);  // value should change, as we are using new SM
         assertEquals("Apple", box.getValue());
     }
 
