diff a/modules/javafx.controls/src/test/java/test/javafx/scene/control/ChoiceBoxSelectionTest.java b/modules/javafx.controls/src/test/java/test/javafx/scene/control/ChoiceBoxSelectionTest.java
--- a/modules/javafx.controls/src/test/java/test/javafx/scene/control/ChoiceBoxSelectionTest.java
+++ b/modules/javafx.controls/src/test/java/test/javafx/scene/control/ChoiceBoxSelectionTest.java
@@ -31,14 +31,17 @@
 import org.junit.Before;
 import org.junit.Test;
 
 import static org.junit.Assert.*;
 
+import javafx.beans.property.SimpleStringProperty;
+import javafx.beans.property.StringProperty;
 import javafx.collections.FXCollections;
 import javafx.scene.Node;
 import javafx.scene.Scene;
 import javafx.scene.control.ChoiceBox;
+import javafx.scene.control.ChoiceBoxShim;
 import javafx.scene.control.ContextMenu;
 import javafx.scene.control.Control;
 import javafx.scene.control.MenuItem;
 import javafx.scene.control.RadioMenuItem;
 import javafx.scene.control.Separator;
@@ -312,10 +315,45 @@
         box.setValue(uncontained);
         box.getSelectionModel().clearSelection();
         assertEquals(uncontained, box.getValue());
     }
 
+    //------------- tests for JDK-8242001
+
+    /**
+     * Testing JDK-8242001: box value not updated on replacing selection model.
+     *
+     * Happens if replacing.selectedItem == null
+     *
+     */
+    @Test
+    public void testSyncedContainedValueReplaceSMEmpty() {
+        box.setValue(box.getItems().get(1));
+        SingleSelectionModel<String> replaceSM = ChoiceBoxShim.get_ChoiceBoxSelectionModel(box);
+        assertNull(replaceSM.getSelectedItem());
+        box.setSelectionModel(replaceSM);
+        assertEquals(replaceSM.getSelectedItem(), box.getValue());
+    }
+
+    @Test
+    public void testSyncedUncontainedValueReplaceSMEmpty() {
+        box.setValue(uncontained);
+        SingleSelectionModel<String> replaceSM = ChoiceBoxShim.get_ChoiceBoxSelectionModel(box);
+        assertNull(replaceSM.getSelectedItem());
+        box.setSelectionModel(replaceSM);
+        assertEquals(replaceSM.getSelectedItem(), box.getValue());
+    }
+
+    @Test
+    public void testSyncedBoundValueReplaceSMEmpty() {
+        StringProperty valueSource = new SimpleStringProperty("stickyValue");
+        box.valueProperty().bind(valueSource);
+        SingleSelectionModel<String> replaceSM = ChoiceBoxShim.get_ChoiceBoxSelectionModel(box);
+        assertNull(replaceSM.getSelectedItem());
+        box.setSelectionModel(replaceSM);
+        assertEquals(valueSource.get(), box.getValue());
+    }
 
     //----------- setup and sanity test for initial state
 
     @Test
     public void testSetupState() {
