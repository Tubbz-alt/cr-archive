diff a/modules/javafx.graphics/src/test/java/test/com/sun/javafx/css/StyleManagerTest.java b/modules/javafx.graphics/src/test/java/test/com/sun/javafx/css/StyleManagerTest.java
--- a/modules/javafx.graphics/src/test/java/test/com/sun/javafx/css/StyleManagerTest.java
+++ b/modules/javafx.graphics/src/test/java/test/com/sun/javafx/css/StyleManagerTest.java
@@ -39,10 +39,11 @@
 import javafx.scene.SubScene;
 import javafx.scene.layout.Pane;
 import javafx.scene.paint.Color;
 import javafx.scene.paint.Paint;
 import javafx.scene.shape.Rectangle;
+import org.junit.AfterClass;
 import org.junit.Before;
 import org.junit.Test;
 
 import java.net.URL;
 import java.util.ArrayList;
@@ -60,20 +61,29 @@
 public class StyleManagerTest {
 
     public StyleManagerTest() {
     }
 
-    @Before
-    public void setUp() {
+    private static void resetStyleManager() {
         StyleManagerShim sm = StyleManagerShim.getInstance();
         sm.userAgentStylesheetContainers_clear();
         sm.platformUserAgentStylesheetContainers_clear();
         sm.stylesheetContainerMap_clear();
         sm.cacheContainerMap_clear();
         sm.set_hasDefaultUserAgentStylesheet(false);
     }
 
+    @Before
+    public void setUp() {
+        resetStyleManager();
+    }
+
+    @AfterClass
+    public static void cleanupOnce() {
+        resetStyleManager();
+    }
+
     @Test
     public void testMethod_getInstance() {
         Scene scene = new Scene(new Group());
         StyleManagerShim sm = StyleManagerShim.getInstance();
         assertNotNull(sm);
diff a/modules/javafx.graphics/src/test/java/test/javafx/css/Node_cssStateTransition_Test.java b/modules/javafx.graphics/src/test/java/test/javafx/css/Node_cssStateTransition_Test.java
--- a/modules/javafx.graphics/src/test/java/test/javafx/css/Node_cssStateTransition_Test.java
+++ b/modules/javafx.graphics/src/test/java/test/javafx/css/Node_cssStateTransition_Test.java
@@ -39,28 +39,38 @@
 import javafx.scene.paint.Color;
 import javafx.scene.paint.Paint;
 import javafx.scene.shape.Rectangle;
 import static org.junit.Assert.*;
 
+import org.junit.AfterClass;
 import org.junit.Before;
 import org.junit.Test;
 
 public class Node_cssStateTransition_Test {
 
     public Node_cssStateTransition_Test() {
     }
 
-    @Before
-    public void setUp() {
+    private static void resetStyleManager() {
         StyleManager sm = StyleManager.getInstance();
         sm.userAgentStylesheetContainers.clear();
         sm.platformUserAgentStylesheetContainers.clear();
         sm.stylesheetContainerMap.clear();
         sm.cacheContainerMap.clear();
         sm.hasDefaultUserAgentStylesheet = false;
     }
 
+    @Before
+    public void setUp() {
+        resetStyleManager();
+    }
+
+    @AfterClass
+    public static void cleanupOnce() {
+        resetStyleManager();
+    }
+
     @Test
     public void testPropertiesResetOnStyleclassChange() {
 
         Rectangle rect = new Rectangle(50,50);
         Paint defaultFill = rect.getFill();
diff a/modules/javafx.graphics/src/test/java/test/javafx/scene/CssStyleHelperTest.java b/modules/javafx.graphics/src/test/java/test/javafx/scene/CssStyleHelperTest.java
--- a/modules/javafx.graphics/src/test/java/test/javafx/scene/CssStyleHelperTest.java
+++ b/modules/javafx.graphics/src/test/java/test/javafx/scene/CssStyleHelperTest.java
@@ -38,32 +38,41 @@
 import javafx.scene.text.Text;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertNull;
 import static org.junit.Assert.assertTrue;
+import org.junit.AfterClass;
 import org.junit.Before;
 import org.junit.Test;
 
 public class CssStyleHelperTest {
 
     private Scene scene;
     private Stage stage;
     private StackPane root;
 
+    private static void resetStyleManager() {
+        StyleManager sm = StyleManager.getInstance();
+        sm.userAgentStylesheetContainers.clear();
+        sm.platformUserAgentStylesheetContainers.clear();
+        sm.stylesheetContainerMap.clear();
+        sm.cacheContainerMap.clear();
+        sm.hasDefaultUserAgentStylesheet = false;
+    }
+
     @Before
     public void setup() {
         root = new StackPane();
         scene = new Scene(root);
         stage = new Stage();
         stage.setScene(scene);
+        resetStyleManager();
+    }
 
-        StyleManager sm = StyleManager.getInstance();
-        sm.userAgentStylesheetContainers.clear();
-        sm.platformUserAgentStylesheetContainers.clear();
-        sm.stylesheetContainerMap.clear();
-        sm.cacheContainerMap.clear();
-        sm.hasDefaultUserAgentStylesheet = false;
+    @AfterClass
+    public static void cleanupOnce() {
+        resetStyleManager();
     }
 
     @Test
     public void movingNodeToDifferentBranchGetsNewFontStyleTest() throws IOException {
         Stylesheet stylesheet = null;
