diff a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
--- a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
+++ b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
@@ -971,32 +971,41 @@
         gtk_window_unmaximize(GTK_WINDOW(gtk_widget));
     }
 }
 
 void WindowContext::set_bounds(int x, int y, bool xSet, bool ySet, int w, int h, int cw, int ch) {
+    // this will tell if adjustments are needed - that's because GTK does not have full window size
+    // values, just content values. Frame extents (window decorations) are handled by the window manager.
+    geometry.needs_ajustment = (w > 0 || h > 0) || geometry.needs_ajustment;
+
     // newW / newH always content sizes compatible with GTK+
     // if window has no decoration, adjustments will be ZERO
     // this will always be content size
-    int newW = w > 0 ? w - geometry.adjust_w : cw;
-    int newH = h > 0 ? h - geometry.adjust_h : ch;
+    int newW, newH;
+    if (w > 0) {
+        newW = w - geometry.adjust_w;
+        geometry.current_w = w;
+    } else {
+        newW = cw;
+    }
+
+    if (h > 0) {
+        newH = h - geometry.adjust_h;
+        geometry.current_h = h;
+    } else {
+        newH = ch;
+    }
 
     gboolean size_changed = FALSE;
     gboolean pos_changed = FALSE;
 
-    // this will tell if adjustments are needed - that's because GTK does not have full window size
-    // values, just content values. Frame extents (window decorations) are handled by the window manager.
-    geometry.needs_ajustment = (w > 0 || h > 0) || geometry.needs_ajustment;
-
     if (newW > 0 && newH > 0) {
         size_changed = TRUE;
 
         // content size
         geometry.current_cw = newW;
         geometry.current_ch = newH;
-        // window total size (with decorations)
-        geometry.current_w = newW + geometry.adjust_w;
-        geometry.current_h = newH + geometry.adjust_h;
 
         if (visible_received) {
             // call apply_geometry() to let gtk_window_resize succeed, because it's bound to
             // geometry constraints
             apply_geometry();
@@ -1243,11 +1252,10 @@
     }
 
     GdkGeometry gdk_geometry;
     gdk_geometry.win_gravity = GDK_GRAVITY_NORTH_WEST;
 
-
     if ((!geometry.resizable || !geometry.enabled) && !(is_maximized || is_fullscreen)) {
         // not resizeable
         int w = geometry.current_cw > 0
                 ? geometry.current_cw
                 : geometry.current_w - geometry.adjust_w;
diff a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h
--- a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h
+++ b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h
@@ -86,12 +86,12 @@
                        maxh(-1),
                        needs_ajustment(false) {}
 
     int current_x; // current position X
     int current_y; // current position Y
-    int current_w; // current window width
-    int current_h; // current window height
+    int current_w; // current window width, adjusted
+    int current_h; // current window height, adjusted
     int current_cw; // current content (view) width
     int current_ch; // current content (view) height
 
     // Used to ajust window sizes because gtk doest not account frame extents as part
     // of the window size and JavaFx does.
