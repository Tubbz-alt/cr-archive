diff a/modules/javafx.graphics/src/main/native-glass/gtk_new/GlassApplication.cpp b/modules/javafx.graphics/src/main/native-glass/gtk_new/GlassApplication.cpp
--- a/modules/javafx.graphics/src/main/native-glass/gtk_new/GlassApplication.cpp
+++ b/modules/javafx.graphics/src/main/native-glass/gtk_new/GlassApplication.cpp
@@ -105,13 +105,16 @@
 
     OverrideUIScale = uiScale;
     gtk_verbose = verbose;
 
     env->ExceptionClear();
-    init_threads();
 
+#if !GTK_CHECK_VERSION(3, 6, 0)
+    init_threads();
     gdk_threads_enter();
+#endif
+
     gtk_init(NULL, NULL);
 
     return JNI_TRUE;
 }
 
@@ -198,11 +201,15 @@
     // restore the X handler.
 
     // Disable X error handling
 #ifndef VERBOSE
     if (!noErrorTrap) {
+#if GTK_CHECK_VERSION(3, 0, 0)
+        gdk_x11_display_error_trap_push(gdk_display_get_default());
+#else
         gdk_error_trap_push();
+#endif
     }
 #endif
 
     gtk_main();
 
@@ -218,11 +225,13 @@
     //     if (!noErrorTrap) {
     //         gdk_error_trap_pop();
     //     }
     // #endif
 
+#if !GTK_CHECK_VERSION(3, 6, 0)
     gdk_threads_leave();
+#endif
 
 }
 
 /*
  * Class:     com_sun_glass_ui_gtk_GtkApplication
@@ -382,12 +391,11 @@
 JNIEXPORT jboolean JNICALL Java_com_sun_glass_ui_gtk_GtkApplication__1supportsTransparentWindows
   (JNIEnv * env, jobject obj) {
     (void)env;
     (void)obj;
 
-    return gdk_display_supports_composite(gdk_display_get_default())
-            && gdk_screen_is_composited(gdk_screen_get_default());
+    return gdk_screen_is_composited(gdk_screen_get_default());
 }
 
 } // extern "C"
 
 bool is_window_enabled_for_event(GdkWindow * window, WindowContext *ctx, gint event_type) {
