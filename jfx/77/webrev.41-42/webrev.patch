diff a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
--- a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
+++ b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
@@ -410,10 +410,15 @@
     geometry.current_w = w;
     geometry.current_h = h;
     geometry.current_cw = gtk_w;
     geometry.current_ch = gtk_h;
 
+    if (!is_fullscreen && !is_maximized) {
+        geometry.last_cw = gtk_w;
+        geometry.last_ch = gtk_h;
+    }
+
     size_position_notify(size_changed, pos_changed);
 }
 
 void WindowContext::process_destroy() {
     if (owner) {
@@ -965,10 +970,11 @@
     if (maximize) {
         // enable the functionality
         GdkWMFunction wmf = (GdkWMFunction)(gdk_windowManagerFunctions | GDK_FUNC_MAXIMIZE);
         gdk_window_set_functions(gdk_window, wmf);
 
+        ensure_window_size();
         gtk_window_maximize(GTK_WINDOW(gtk_widget));
     } else {
         gtk_window_unmaximize(GTK_WINDOW(gtk_widget));
     }
 }
@@ -1003,10 +1009,12 @@
         size_changed = TRUE;
 
         // content size
         geometry.current_cw = newW;
         geometry.current_ch = newH;
+        geometry.last_cw = newW;
+        geometry.last_ch = newH;
 
         if (visible_received) {
             // call apply_geometry() to let gtk_window_resize succeed, because it's bound to
             // geometry constraints
             apply_geometry();
@@ -1170,28 +1178,17 @@
 }
 
 void WindowContext::enter_fullscreen() {
     is_fullscreen = TRUE;
 
-// workaround gtk+ bug
-#if !GTK_CHECK_VERSION(3, 22, 0)
-    // this is content size
-    geometry.unfullscreen_w = geometry.current_cw;
-    geometry.unfullscreen_h = geometry.current_ch;
-#endif
-
+    ensure_window_size();
     gtk_window_fullscreen(GTK_WINDOW(gtk_widget));
 }
 
 void WindowContext::exit_fullscreen() {
     is_fullscreen = FALSE;
     gtk_window_unfullscreen(GTK_WINDOW(gtk_widget));
-
-// It was a Gtk+ that got fixed
-#if !GTK_CHECK_VERSION(3, 22, 0)
-    set_bounds(0, 0, false, false, -1, -1, geometry.unfullscreen_w, geometry.unfullscreen_h);
-#endif
 }
 
 // Applied to a temporary full screen window to prevent sending events to Java
 void WindowContext::detach_from_java() {
     if (jview) {
@@ -1226,10 +1223,26 @@
     glass_window_apply_shape_mask(gtk_widget_get_window(gtk_widget), data, width, height);
 }
 
 ///////////////////////// PRIVATE
 
+// this is to work-around past gtk+ bug
+void WindowContext::ensure_window_size() {
+#if !GTK_CHECK_VERSION(3, 22, 30)
+    gint w, h;
+#ifdef GLASS_GTK3
+    gdk_window_get_geometry(gdk_window, NULL, NULL, &w, &h);
+#else
+    gdk_window_get_geometry(gdk_window, NULL, NULL, &w, &h, NULL);
+#endif
+    if ((geometry.last_cw > 0 && geometry.last_ch > 0)
+        && (geometry.last_cw != w || geometry.last_ch != h)) {
+        gdk_window_resize(gdk_window, geometry.last_cw, geometry.last_ch);
+    }
+#endif
+}
+
 // This function calculate the deltas between window and window + decoration (titlebar, borders).
 // It's used when the window manager does not support the _NET_FRAME_EXTENTS extension or when
 // it's not received on time.
 void WindowContext::calculate_adjustments() {
     if (frame_type != TITLED || geometry.frame_extents_received) {
diff a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h
--- a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h
+++ b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h
@@ -69,10 +69,12 @@
                        current_y(0),
                        current_w(0),
                        current_h(0),
                        current_cw(0),
                        current_ch(0),
+                       last_cw(0),
+                       last_ch(0),
                        adjust_w(0),
                        adjust_h(0),
                        view_x(0),
                        view_y(0),
                        frame_extents_received(false),
@@ -90,16 +92,12 @@
     int current_y; // current position Y
     int current_w; // current window width, adjusted
     int current_h; // current window height, adjusted
     int current_cw; // current content (view) width
     int current_ch; // current content (view) height
-
-// workaround gtk+ bug
-#if !GTK_CHECK_VERSION(3, 22, 0)
-    int unfullscreen_w;
-    int unfullscreen_h;
-#endif
+    int last_cw; // not subjected to fullscreen / maximize
+    int last_ch;
 
     // Used to ajust window sizes because gtk doest not account frame extents as part
     // of the window size and JavaFx does.
     int adjust_w;
     int adjust_h;
@@ -243,10 +241,11 @@
 protected:
     void applyShapeMask(void *, uint width, uint height);
 
 private:
     bool im_filter_keypress(GdkEventKey*);
+    void ensure_window_size();
     void calculate_adjustments();
     void apply_geometry();
     bool get_frame_extents_property(int *, int *, int *, int *);
     void activate_window();
     void size_position_notify(bool, bool);
