diff a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/gtk/GtkApplication.java b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/gtk/GtkApplication.java
--- a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/gtk/GtkApplication.java
+++ b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/gtk/GtkApplication.java
@@ -153,14 +153,19 @@
                 } else if ("2".equals(v) || v.startsWith("2.")) {
                     ret = 2;
                 }
                 return ret;
             }) : forcedGtkVersion;
+
+        boolean gtkNew = AccessController.doPrivileged((PrivilegedAction<Boolean>) () ->
+                Boolean.getBoolean("jdk.gtk.new"));
+
         boolean gtkVersionVerbose =
                 AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> {
             return Boolean.getBoolean("jdk.gtk.verbose");
         });
+
         if (PrismSettings.allowHiDPIScaling) {
             overrideUIScale = AccessController.doPrivileged((PrivilegedAction<Float>) () ->
                     getFloat("glass.gtk.uiScale", -1.0f, "Forcing UI scaling factor: "));
         } else {
             overrideUIScale = -1.0f;
@@ -174,22 +179,27 @@
             } else if (libraryToLoad == QUERY_USE_CURRENT) {
                 if (gtkVersionVerbose) {
                     System.out.println("Glass GTK library to load is already loaded");
                 }
             } else if (libraryToLoad == QUERY_LOAD_GTK2) {
+                String libName = (gtkNew) ? "glassgtkn2" : "glassgtk2";
                 if (gtkVersionVerbose) {
-                    System.out.println("Glass GTK library to load is glassgtk2");
+                    System.out.println(String.format("Glass GTK library to load is %s", libName));
                 }
-                NativeLibLoader.loadLibrary("glassgtk2");
+
+                NativeLibLoader.loadLibrary(libName);
             } else if (libraryToLoad == QUERY_LOAD_GTK3) {
+                String libName = (gtkNew) ? "glassgtkn3" : "glassgtk3";
                 if (gtkVersionVerbose) {
-                    System.out.println("Glass GTK library to load is glassgtk3");
+                    System.out.println(String.format("Glass GTK library to load is %s", libName));
                 }
-                NativeLibLoader.loadLibrary("glassgtk3");
+
+                NativeLibLoader.loadLibrary(libName);
             } else {
                 throw new UnsupportedOperationException("Internal Error");
             }
+
             return null;
         });
 
         int version = _initGTK(gtkVersion, gtkVersionVerbose, overrideUIScale);
 
@@ -211,11 +221,11 @@
     @Native private static final int QUERY_ERROR = -2;
     @Native private static final int QUERY_NO_DISPLAY = -1;
     @Native private static final int QUERY_USE_CURRENT = 1;
     @Native private static final int QUERY_LOAD_GTK2 = 2;
     @Native private static final int QUERY_LOAD_GTK3 = 3;
-    /*
+        /*
      * check the system and return an indication of which library to load
      *  return values are the QUERY_ constants
      */
     private static native int _queryLibrary(int version, boolean verbose);
 
