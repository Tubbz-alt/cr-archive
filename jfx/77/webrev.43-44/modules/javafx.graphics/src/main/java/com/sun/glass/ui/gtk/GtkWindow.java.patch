diff a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/gtk/GtkWindow.java b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/gtk/GtkWindow.java
--- a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/gtk/GtkWindow.java
+++ b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/gtk/GtkWindow.java
@@ -30,10 +30,11 @@
 import com.sun.glass.ui.Screen;
 import com.sun.glass.ui.View;
 import com.sun.glass.ui.Window;
 
 class GtkWindow extends Window {
+    private static boolean USE_NEW_GTK_IMPL = Boolean.getBoolean("jdk.gtk.new");
 
     public GtkWindow(Window owner, Screen screen, int styleMask) {
         super(owner, screen, styleMask);
     }
 
@@ -198,12 +199,28 @@
 
     @Override
     protected void _setBounds(long ptr, int x, int y, boolean xSet, boolean ySet, int w, int h, int cw, int ch, float xGravity, float yGravity) {
         _setGravity(ptr, xGravity, yGravity);
         setBoundsImpl(ptr, x, y, xSet, ySet, w, h, cw, ch);
+
+        if (!USE_NEW_GTK_IMPL) {
+            if ((w <= 0) && (cw > 0) || (h <= 0) && (ch > 0)) {
+                final int[] extarr = new int[4];
+                getFrameExtents(ptr, extarr);
+
+                // TODO: ((w <= 0) && (cw <= 0)) || ((h <= 0) && (ch <= 0))
+                notifyResize(WindowEvent.RESIZE,
+                        ((w <= 0) && (cw > 0)) ? cw + extarr[0] + extarr[1]
+                                : w,
+                        ((h <= 0) && (ch > 0)) ? ch + extarr[2] + extarr[3]
+                                : h);
+            }
+        }
     }
 
+    private native void getFrameExtents(long ptr, int[] extarr);
+
     @Override
     protected void _requestInput(long ptr, String text, int type, double width, double height,
                                     double Mxx, double Mxy, double Mxz, double Mxt,
                                     double Myx, double Myy, double Myz, double Myt,
                                     double Mzx, double Mzy, double Mzz, double Mzt) {
