diff a/buildSrc/linux.gradle b/buildSrc/linux.gradle
--- a/buildSrc/linux.gradle
+++ b/buildSrc/linux.gradle
@@ -207,20 +207,25 @@
 
 def compiler = IS_COMPILE_PARFAIT ? "parfait-gcc" : "${toolchainDir}gcc";
 def linker = IS_STATIC_BUILD ? "ar" : IS_COMPILE_PARFAIT ? "parfait-g++" : "${toolchainDir}g++";
 
 LINUX.glass = [:]
-LINUX.glass.variants = ["glass", "glassgtk2", "glassgtk3"]
+LINUX.glass.variants = ["glass", "glassgtk2", "glassgtk3", "glassgtkn2", "glassgtkn3"]
 
 FileTree ft_gtk_launcher = fileTree("${project(":graphics").projectDir}/src/main/native-glass/gtk/") {
     include("**/launcher.c")
 }
 
 FileTree ft_gtk = fileTree("${project(":graphics").projectDir}/src/main/native-glass/gtk/") {
     exclude("**/launcher.c")
 }
 
+FileTree ft_gtkn = fileTree("${project(":graphics").projectDir}/src/main/native-glass/gtk_new/") {
+    exclude("**/launcher.c")
+}
+
+
 LINUX.glass.glass = [:]
 LINUX.glass.glass.nativeSource = ft_gtk_launcher.getFiles()
 LINUX.glass.glass.compiler = compiler
 LINUX.glass.glass.ccFlags = [ccFlags, "-Werror"].flatten()
 LINUX.glass.glass.linker = linker
@@ -245,10 +250,30 @@
         [ccFlags, gtk3CCFlags, "-Werror"].flatten()
 LINUX.glass.glassgtk3.linker = linker
 LINUX.glass.glassgtk3.linkFlags = IS_STATIC_BUILD ? linkFlags : [linkFlags, gtk3LinkFlags].flatten()
 LINUX.glass.glassgtk3.lib = "glassgtk3"
 
+LINUX.glass.glassgtkn2 = [:]
+LINUX.glass.glassgtkn2.nativeSource =  ft_gtkn.getFiles()
+LINUX.glass.glassgtkn2.compiler = compiler
+LINUX.glass.glassgtkn2.ccFlags = IS_STATIC_BUILD ?
+        ["-fno-threadsafe-statics", ccFlags, gtk2CCFlags].flatten() :
+        [ccFlags, gtk2CCFlags, "-Werror"].flatten()
+LINUX.glass.glassgtkn2.linker = linker
+LINUX.glass.glassgtkn2.linkFlags = IS_STATIC_BUILD ? linkFlags : [linkFlags, gtk2LinkFlags].flatten()
+LINUX.glass.glassgtkn2.lib = "glassgtkn2"
+
+LINUX.glass.glassgtkn3 = [:]
+LINUX.glass.glassgtkn3.nativeSource =  ft_gtkn.getFiles()
+LINUX.glass.glassgtkn3.compiler = compiler
+LINUX.glass.glassgtkn3.ccFlags = IS_STATIC_BUILD ?
+        ["-fno-threadsafe-statics", ccFlags, gtk3CCFlags].flatten() :
+        [ccFlags, gtk3CCFlags, "-Werror"].flatten()
+LINUX.glass.glassgtkn3.linker = linker
+LINUX.glass.glassgtkn3.linkFlags = IS_STATIC_BUILD ? linkFlags : [linkFlags, gtk3LinkFlags].flatten()
+LINUX.glass.glassgtkn3.lib = "glassgtkn3"
+
 LINUX.decora = [:]
 LINUX.decora.compiler = compiler
 LINUX.decora.ccFlags = [ccFlags, "-ffast-math"].flatten()
 LINUX.decora.linker = linker
 LINUX.decora.linkFlags = [linkFlags].flatten()
