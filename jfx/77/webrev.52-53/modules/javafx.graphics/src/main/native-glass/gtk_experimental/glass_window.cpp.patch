diff a/modules/javafx.graphics/src/main/native-glass/gtk_experimental/glass_window.cpp b/modules/javafx.graphics/src/main/native-glass/gtk_experimental/glass_window.cpp
--- a/modules/javafx.graphics/src/main/native-glass/gtk_experimental/glass_window.cpp
+++ b/modules/javafx.graphics/src/main/native-glass/gtk_experimental/glass_window.cpp
@@ -239,19 +239,14 @@
 
     connect_signals(gtk_widget, this);
 }
 
 void WindowContext::paint(void *data, jint width, jint height) {
-#if GTK_CHECK_VERSION(3, 0, 0)
+#ifdef GLASS_GTK3
     cairo_region_t *region = gdk_window_get_clip_region(gdk_window);
-#if GTK_CHECK_VERSION(3, 22, 0)
-    GdkDrawingContext *dcontext = gdk_window_begin_draw_frame(gdk_window, region);
-    cairo_t *context = gdk_drawing_context_get_cairo_context(dcontext);
-#else
     gdk_window_begin_paint_region(gdk_window, region);
     cairo_t* context = gdk_cairo_create(gdk_window);
-#endif
 #else
     cairo_t *context = gdk_cairo_create(gdk_window);
 #endif
 
     if (bg_color.is_set) {
@@ -271,19 +266,14 @@
 
     applyShapeMask(data, width, height);
     cairo_set_operator(context, CAIRO_OPERATOR_SOURCE);
     cairo_paint(context);
 
-#if GTK_CHECK_VERSION(3, 0, 0)
-#if GTK_CHECK_VERSION(3, 22, 0)
-    gdk_window_end_draw_frame(gdk_window, dcontext);
-    cairo_region_destroy(region);
-#else
+#ifdef GLASS_GTK3
     gdk_window_end_paint(gdk_window);
     cairo_region_destroy(region);
     cairo_destroy(context);
-#endif
 #else
     cairo_destroy(context);
 #endif
 
     cairo_surface_destroy(cairo_surface);
@@ -1224,22 +1214,20 @@
 
 ///////////////////////// PRIVATE
 
 // this is to work-around past gtk+ bug
 void WindowContext::ensure_window_size() {
-#if !GTK_CHECK_VERSION(3, 22, 30)
     gint w, h;
 #ifdef GLASS_GTK3
     gdk_window_get_geometry(gdk_window, NULL, NULL, &w, &h);
 #else
     gdk_window_get_geometry(gdk_window, NULL, NULL, &w, &h, NULL);
 #endif
     if ((geometry.last_cw > 0 && geometry.last_ch > 0)
         && (geometry.last_cw != w || geometry.last_ch != h)) {
         gdk_window_resize(gdk_window, geometry.last_cw, geometry.last_ch);
     }
-#endif
 }
 
 // This function calculate the deltas between window and window + decoration (titlebar, borders).
 // It's used when the window manager does not support the _NET_FRAME_EXTENTS extension or when
 // it's not received on time.
@@ -1422,20 +1410,10 @@
     }
 
     ungrab_mouse_drag_focus();
 
 #ifdef GLASS_GTK3
-#if GTK_CHECK_VERSION(3, 20, 0)
-    if (event != NULL) {
-        grab_pointer = gdk_event_get_seat(event);
-    } else {
-        grab_pointer = gdk_display_get_default_seat(gtk_widget_get_display(gtk_widget));
-    }
-
-    GdkGrabStatus status = gdk_seat_grab((GdkSeat *) grab_pointer, gdk_w,
-                                          GDK_SEAT_CAPABILITY_POINTER, owner_events, cursor, NULL, NULL, NULL);
-#else
     if (event != NULL) {
         grab_pointer = gdk_event_get_device (event);
     } else {
         grab_pointer = gdk_device_manager_get_client_pointer(gdk_display_get_device_manager(gtk_widget_get_display(gtk_widget)));
     }
@@ -1448,11 +1426,10 @@
                                                           | GDK_BUTTON1_MOTION_MASK
                                                           | GDK_BUTTON2_MOTION_MASK
                                                           | GDK_BUTTON3_MOTION_MASK
                                                           | GDK_BUTTON_PRESS_MASK
                                                           | GDK_BUTTON_RELEASE_MASK), cursor, GDK_CURRENT_TIME);
-#endif
 #else
     GdkGrabStatus status = gdk_pointer_grab(gdk_w, owner_events,
                                                 (GdkEventMask)
                                                       (GDK_POINTER_MOTION_MASK
                                                           | GDK_POINTER_MOTION_HINT_MASK
@@ -1472,15 +1449,11 @@
     if (!grab_pointer) {
         return;
     }
 
 #ifdef GLASS_GTK3
-#if GTK_CHECK_VERSION(3, 20, 0)
-    gdk_seat_ungrab((GdkSeat *) grab_pointer);
-#else
     gdk_device_ungrab((GdkDevice *) grab_pointer, GDK_CURRENT_TIME);
-#endif
 #else
     gdk_pointer_ungrab(GDK_CURRENT_TIME);
 #endif
     grab_pointer = NULL;
     WindowContext::sm_mouse_drag_window = NULL;
