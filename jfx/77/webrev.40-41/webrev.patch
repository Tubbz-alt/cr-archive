diff a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
--- a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
+++ b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
@@ -1169,16 +1169,29 @@
     }
 }
 
 void WindowContext::enter_fullscreen() {
     is_fullscreen = TRUE;
+
+// workaround gtk+ bug
+#if !GTK_CHECK_VERSION(3, 22, 0)
+    // this is content size
+    geometry.unfullscreen_w = geometry.current_cw;
+    geometry.unfullscreen_h = geometry.current_ch;
+#endif
+
     gtk_window_fullscreen(GTK_WINDOW(gtk_widget));
 }
 
 void WindowContext::exit_fullscreen() {
     is_fullscreen = FALSE;
     gtk_window_unfullscreen(GTK_WINDOW(gtk_widget));
+
+// It was a Gtk+ that got fixed
+#if !GTK_CHECK_VERSION(3, 22, 0)
+    set_bounds(0, 0, false, false, -1, -1, geometry.unfullscreen_w, geometry.unfullscreen_h);
+#endif
 }
 
 // Applied to a temporary full screen window to prevent sending events to Java
 void WindowContext::detach_from_java() {
     if (jview) {
diff a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h
--- a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h
+++ b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h
@@ -91,10 +91,16 @@
     int current_w; // current window width, adjusted
     int current_h; // current window height, adjusted
     int current_cw; // current content (view) width
     int current_ch; // current content (view) height
 
+// workaround gtk+ bug
+#if !GTK_CHECK_VERSION(3, 22, 0)
+    int unfullscreen_w;
+    int unfullscreen_h;
+#endif
+
     // Used to ajust window sizes because gtk doest not account frame extents as part
     // of the window size and JavaFx does.
     int adjust_w;
     int adjust_h;
 
