diff a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/gtk/GtkApplication.java b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/gtk/GtkApplication.java
--- a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/gtk/GtkApplication.java
+++ b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/gtk/GtkApplication.java
@@ -154,12 +154,12 @@
                     ret = 2;
                 }
                 return ret;
             }) : forcedGtkVersion;
 
-        boolean gtkNew = AccessController.doPrivileged((PrivilegedAction<Boolean>) () ->
-                Boolean.getBoolean("jdk.gtk.new"));
+        boolean gtkExperimental = AccessController.doPrivileged((PrivilegedAction<Boolean>) () ->
+                Boolean.getBoolean("javafx.gtk.experimental"));
 
         boolean gtkVersionVerbose =
                 AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> {
             return Boolean.getBoolean("jdk.gtk.verbose");
         });
@@ -179,18 +179,18 @@
             } else if (libraryToLoad == QUERY_USE_CURRENT) {
                 if (gtkVersionVerbose) {
                     System.out.println("Glass GTK library to load is already loaded");
                 }
             } else if (libraryToLoad == QUERY_LOAD_GTK2) {
-                String libName = (gtkNew) ? "glassgtkn2" : "glassgtk2";
+                String libName = (gtkExperimental) ? "glassgtk2_exp" : "glassgtk2";
                 if (gtkVersionVerbose) {
                     System.out.println(String.format("Glass GTK library to load is %s", libName));
                 }
 
                 NativeLibLoader.loadLibrary(libName);
             } else if (libraryToLoad == QUERY_LOAD_GTK3) {
-                String libName = (gtkNew) ? "glassgtkn3" : "glassgtk3";
+                String libName = (gtkExperimental) ? "glassgtk3_exp" : "glassgtk3";
                 if (gtkVersionVerbose) {
                     System.out.println(String.format("Glass GTK library to load is %s", libName));
                 }
 
                 NativeLibLoader.loadLibrary(libName);
