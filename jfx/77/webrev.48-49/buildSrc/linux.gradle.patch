diff a/buildSrc/linux.gradle b/buildSrc/linux.gradle
--- a/buildSrc/linux.gradle
+++ b/buildSrc/linux.gradle
@@ -79,11 +79,11 @@
     toolchainDir = ""
 }
 
 def gtk2CCFlags = [ "-Wno-deprecated-declarations" ];
 def gtk3CCFlags = [ "-Wno-deprecated-declarations" ];
-def gtkn3CCFlags = [ ];
+def gtk3expCCFlags = [ ];
 def gtk2LinkFlags = [ ];
 def gtk3LinkFlags = [ ];
 
 // Create $buildDir/linux_tools.properties file and load props from it
 setupTools("linux_gtk2",
@@ -134,11 +134,11 @@
     { properties ->
         def cflagsGTK3 = properties.getProperty("cflagsGTK3")
         def libsGTK3 = properties.getProperty("libsGTK3")
         if (cflagsGTK3 && libsGTK3) {
             gtk3CCFlags.addAll(cflagsGTK3.split(" "))
-            gtkn3CCFlags.addAll(cflagsGTK3.split(" "))
+            gtk3expCCFlags.addAll(cflagsGTK3.split(" "))
             gtk3LinkFlags.addAll(libsGTK3.split(" "))
         } else {
             throw new IllegalStateException("GTK3 development packages not found. If GTK3 packages are installed, please remove the build directory and try again.")
         }
     }
@@ -209,21 +209,21 @@
 
 def compiler = IS_COMPILE_PARFAIT ? "parfait-gcc" : "${toolchainDir}gcc";
 def linker = IS_STATIC_BUILD ? "ar" : IS_COMPILE_PARFAIT ? "parfait-g++" : "${toolchainDir}g++";
 
 LINUX.glass = [:]
-LINUX.glass.variants = ["glass", "glassgtk2", "glassgtk3", "glassgtkn2", "glassgtkn3"]
+LINUX.glass.variants = ["glass", "glassgtk2", "glassgtk3", "glassgtk2_exp", "glassgtk3_exp"]
 
 FileTree ft_gtk_launcher = fileTree("${project(":graphics").projectDir}/src/main/native-glass/gtk/") {
     include("**/launcher.c")
 }
 
 FileTree ft_gtk = fileTree("${project(":graphics").projectDir}/src/main/native-glass/gtk/") {
     exclude("**/launcher.c")
 }
 
-FileTree ft_gtkn = fileTree("${project(":graphics").projectDir}/src/main/native-glass/gtk_new/") {
+FileTree ft_gtkexp = fileTree("${project(":graphics").projectDir}/src/main/native-glass/gtk_experimental/") {
     exclude("**/launcher.c")
 }
 
 
 LINUX.glass.glass = [:]
@@ -252,29 +252,29 @@
         [ccFlags, gtk3CCFlags, "-Werror"].flatten()
 LINUX.glass.glassgtk3.linker = linker
 LINUX.glass.glassgtk3.linkFlags = IS_STATIC_BUILD ? linkFlags : [linkFlags, gtk3LinkFlags].flatten()
 LINUX.glass.glassgtk3.lib = "glassgtk3"
 
-LINUX.glass.glassgtkn2 = [:]
-LINUX.glass.glassgtkn2.nativeSource =  ft_gtkn.getFiles()
-LINUX.glass.glassgtkn2.compiler = compiler
-LINUX.glass.glassgtkn2.ccFlags = IS_STATIC_BUILD ?
+LINUX.glass.glassgtk2_exp = [:]
+LINUX.glass.glassgtk2_exp.nativeSource =  ft_gtkexp.getFiles()
+LINUX.glass.glassgtk2_exp.compiler = compiler
+LINUX.glass.glassgtk2_exp.ccFlags = IS_STATIC_BUILD ?
         ["-fno-threadsafe-statics", ccFlags, gtk2CCFlags].flatten() :
         [ccFlags, gtk2CCFlags, "-Werror"].flatten()
-LINUX.glass.glassgtkn2.linker = linker
-LINUX.glass.glassgtkn2.linkFlags = IS_STATIC_BUILD ? linkFlags : [linkFlags, gtk2LinkFlags].flatten()
-LINUX.glass.glassgtkn2.lib = "glassgtkn2"
-
-LINUX.glass.glassgtkn3 = [:]
-LINUX.glass.glassgtkn3.nativeSource =  ft_gtkn.getFiles()
-LINUX.glass.glassgtkn3.compiler = compiler
-LINUX.glass.glassgtkn3.ccFlags = IS_STATIC_BUILD ?
-        ["-fno-threadsafe-statics", ccFlags, gtkn3CCFlags].flatten() :
-        [ccFlags, gtkn3CCFlags, "-Werror"].flatten()
-LINUX.glass.glassgtkn3.linker = linker
-LINUX.glass.glassgtkn3.linkFlags = IS_STATIC_BUILD ? linkFlags : [linkFlags, gtk3LinkFlags].flatten()
-LINUX.glass.glassgtkn3.lib = "glassgtkn3"
+LINUX.glass.glassgtk2_exp.linker = linker
+LINUX.glass.glassgtk2_exp.linkFlags = IS_STATIC_BUILD ? linkFlags : [linkFlags, gtk2LinkFlags].flatten()
+LINUX.glass.glassgtk2_exp.lib = "glassgtk2_exp"
+
+LINUX.glass.glassgtk3_exp = [:]
+LINUX.glass.glassgtk3_exp.nativeSource =  ft_gtkexp.getFiles()
+LINUX.glass.glassgtk3_exp.compiler = compiler
+LINUX.glass.glassgtk3_exp.ccFlags = IS_STATIC_BUILD ?
+        ["-fno-threadsafe-statics", ccFlags, gtk3expCCFlags].flatten() :
+        [ccFlags, gtk3expCCFlags, "-Werror"].flatten()
+LINUX.glass.glassgtk3_exp.linker = linker
+LINUX.glass.glassgtk3_exp.linkFlags = IS_STATIC_BUILD ? linkFlags : [linkFlags, gtk3LinkFlags].flatten()
+LINUX.glass.glassgtk3_exp.lib = "glassgtk3_exp"
 
 LINUX.decora = [:]
 LINUX.decora.compiler = compiler
 LINUX.decora.ccFlags = [ccFlags, "-ffast-math"].flatten()
 LINUX.decora.linker = linker
