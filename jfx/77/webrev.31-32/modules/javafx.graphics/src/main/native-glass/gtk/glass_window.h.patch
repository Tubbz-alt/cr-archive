diff a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h
--- a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h
+++ b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.h
@@ -62,22 +62,10 @@
     float green;
     float blue;
     bool is_set;
 };
 
-struct CachedExtents {
-    int adjust_w;
-    int adjust_h;
-
-    // The position of the view relative to the window
-    int view_x;
-    int view_y;
-};
-
-static CachedExtents normal_extents = {0, 0, 0, 0};
-static CachedExtents utility_extents = {0, 0, 0, 0};
-
 struct WindowGeometry {
     WindowGeometry() : current_x(0),
                        current_y(0),
                        current_w(0),
                        current_h(0),
@@ -85,10 +73,11 @@
                        current_ch(0),
                        adjust_w(0),
                        adjust_h(0),
                        view_x(0),
                        view_y(0),
+                       frame_extents_supported(false),
                        frame_extents_received(false),
                        gravity_x(1.00),
                        gravity_y(1.00),
                        enabled(true),
                        resizable(true),
@@ -112,10 +101,11 @@
 
     // The position of the view relative to the window
     int view_x;
     int view_y;
 
+    bool frame_extents_supported;
     // If WM supports _NET_REQUEST_FRAME_EXTENTS and it was received
     bool frame_extents_received;
 
     // Currently not used
     float gravity_x;
@@ -250,11 +240,10 @@
     void applyShapeMask(void *, uint width, uint height);
 
 private:
     bool im_filter_keypress(GdkEventKey*);
     void calculate_adjustments();
-    void save_cached_extents();
     void apply_geometry();
     bool get_frame_extents_property(int *, int *, int *, int *);
     void activate_window();
     void size_position_notify(bool, bool);
     void update_ontop_tree(bool);
