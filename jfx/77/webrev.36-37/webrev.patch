diff a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
--- a/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
+++ b/modules/javafx.graphics/src/main/native-glass/gtk/glass_window.cpp
@@ -973,10 +973,11 @@
 }
 
 void WindowContext::set_bounds(int x, int y, bool xSet, bool ySet, int w, int h, int cw, int ch) {
     // newW / newH always content sizes compatible with GTK+
     // if window has no decoration, adjustments will be ZERO
+    // this will always be content size
     int newW = w > 0 ? w - geometry.adjust_w : cw;
     int newH = h > 0 ? h - geometry.adjust_h : ch;
 
     gboolean size_changed = FALSE;
     gboolean pos_changed = FALSE;
@@ -986,18 +987,20 @@
     geometry.needs_ajustment = (w > 0 || h > 0) || geometry.needs_ajustment;
 
     if (newW > 0 && newH > 0) {
         size_changed = TRUE;
 
+        // content size
         geometry.current_cw = newW;
         geometry.current_ch = newH;
+        // window total size (with decorations)
         geometry.current_w = newW + geometry.adjust_w;
         geometry.current_h = newH + geometry.adjust_h;
 
         if (visible_received) {
-            // update constraints if not resized by the user interface so it will
-            // let gtk_window_resize succeed, because it's bound to geometry constraints
+            // call apply_geometry() to let gtk_window_resize succeed, because it's bound to
+            // geometry constraints
             apply_geometry();
             gtk_window_resize(GTK_WINDOW(gtk_widget), newW, newH);
         } else {
             gtk_window_set_default_size(GTK_WINDOW(gtk_widget), newW, newH);
         }
@@ -1240,36 +1243,34 @@
     }
 
     GdkGeometry gdk_geometry;
     gdk_geometry.win_gravity = GDK_GRAVITY_NORTH_WEST;
 
-    // if window size was never set, adjustments are not needed
-    int adjust_w = (geometry.needs_ajustment) ? geometry.adjust_w : 0;
-    int adjust_h = (geometry.needs_ajustment) ? geometry.adjust_h : 0;
 
     if ((!geometry.resizable || !geometry.enabled) && !(is_maximized || is_fullscreen)) {
         // not resizeable
-        int w = (geometry.current_w - adjust_w) > 0
-                ? geometry.current_w - adjust_w
-                : geometry.current_cw;
+        int w = geometry.current_cw > 0
+                ? geometry.current_cw
+                : geometry.current_w - geometry.adjust_w;
 
-        int h = (geometry.current_h - adjust_h) > 0
-                ? geometry.current_h - adjust_h
-                : geometry.current_ch;
+        int h = geometry.current_ch > 0
+                ? geometry.current_ch
+                : geometry.current_h - geometry.adjust_h;
 
         gdk_geometry.min_width = gdk_geometry.max_width = w;
         gdk_geometry.min_height = gdk_geometry.max_height = h;
     } else {
-        gdk_geometry.min_width = (geometry.minw - adjust_w) > 0
-                                 ? geometry.minw - adjust_w : 1;
-        gdk_geometry.min_height = (geometry.minh - adjust_h) > 0
-                                  ? geometry.minh - adjust_h : 1;
-
-        gdk_geometry.max_width = (geometry.maxw - adjust_w > 0)
-                                 ? geometry.maxw - adjust_w : G_MAXINT;
-        gdk_geometry.max_height = (geometry.maxh - adjust_h > 0)
-                                  ? geometry.maxh - adjust_h : G_MAXINT;
+        //min/max width/height always whole window size (with decors)
+        gdk_geometry.min_width = (geometry.minw - geometry.adjust_w) > 0
+                                 ? geometry.minw - geometry.adjust_w : 1;
+        gdk_geometry.min_height = (geometry.minh - geometry.adjust_h) > 0
+                                  ? geometry.minh - geometry.adjust_h : 1;
+
+        gdk_geometry.max_width = (geometry.maxw - geometry.adjust_w > 0)
+                                 ? geometry.maxw - geometry.adjust_w : G_MAXINT;
+        gdk_geometry.max_height = (geometry.maxh - geometry.adjust_h > 0)
+                                  ? geometry.maxh - geometry.adjust_h : G_MAXINT;
     }
 
     gtk_window_set_geometry_hints(GTK_WINDOW(gtk_widget), NULL, &gdk_geometry,
                                   (GdkWindowHints)(GDK_HINT_MIN_SIZE | GDK_HINT_MAX_SIZE | GDK_HINT_WIN_GRAVITY));
 }
