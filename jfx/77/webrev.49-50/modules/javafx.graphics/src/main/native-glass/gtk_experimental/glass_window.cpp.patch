diff a/modules/javafx.graphics/src/main/native-glass/gtk_experimental/glass_window.cpp b/modules/javafx.graphics/src/main/native-glass/gtk_experimental/glass_window.cpp
--- a/modules/javafx.graphics/src/main/native-glass/gtk_experimental/glass_window.cpp
+++ b/modules/javafx.graphics/src/main/native-glass/gtk_experimental/glass_window.cpp
@@ -987,25 +987,16 @@
     // values, just content values. Frame extents (window decorations) are handled by the window manager.
     geometry.needs_ajustment = (w > 0 || h > 0) || geometry.needs_ajustment;
 
     // newW / newH always content sizes compatible with GTK+
     // if window has no decoration, adjustments will be ZERO
-    // this will always be content size
     int newW, newH;
-    if (w > 0) {
-        newW = w - geometry.adjust_w;
-        geometry.current_w = newW;
-    } else {
-        newW = cw;
-    }
+    newW = (w > 0) ? w - geometry.adjust_w : cw;
+    newH = (h > 0) ? h - geometry.adjust_h : ch;
 
-    if (h > 0) {
-        newH = h - geometry.adjust_h;
-        geometry.current_h = newH;
-    } else {
-        newH = ch;
-    }
+    geometry.current_w = newW;
+    geometry.current_h = newH;
 
     gboolean size_changed = FALSE;
     gboolean pos_changed = FALSE;
 
     if (newW > 0 && newH > 0) {
@@ -1033,10 +1024,12 @@
 
         if (newX != geometry.current_x || newY != geometry.current_y) {
             pos_changed = TRUE;
             geometry.current_x = newX;
             geometry.current_y = newY;
+
+            g_print("move: %d, %d\n", newX, newY);
             gtk_window_move(GTK_WINDOW(gtk_widget), newX, newY);
         }
     }
 
     size_position_notify(size_changed, pos_changed);
