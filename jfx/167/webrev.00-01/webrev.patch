diff a/modules/javafx.controls/src/main/java/javafx/scene/control/ToggleButton.java b/modules/javafx.controls/src/main/java/javafx/scene/control/ToggleButton.java
--- a/modules/javafx.controls/src/main/java/javafx/scene/control/ToggleButton.java
+++ b/modules/javafx.controls/src/main/java/javafx/scene/control/ToggleButton.java
@@ -191,21 +191,18 @@
      * {@code ToggleButton} can only be in one group at any one time. If the
      * group is changed, then the button is removed from the old group prior to
      * being added to the new group.
      */
     private ObjectProperty<ToggleGroup> toggleGroup;
-    @Override
     public final void setToggleGroup(ToggleGroup value) {
         toggleGroupProperty().set(value);
     }
 
-    @Override
     public final ToggleGroup getToggleGroup() {
         return toggleGroup == null ? null : toggleGroup.get();
     }
 
-    @Override
     public final ObjectProperty<ToggleGroup> toggleGroupProperty() {
         if (toggleGroup == null) {
             toggleGroup = new ObjectPropertyBase<ToggleGroup>() {
                 private ToggleGroup old;
                 private ChangeListener<Toggle> listener = (o, oV, nV) ->
diff a/modules/javafx.controls/src/main/java/javafx/scene/control/ToggleGroup.java b/modules/javafx.controls/src/main/java/javafx/scene/control/ToggleGroup.java
--- a/modules/javafx.controls/src/main/java/javafx/scene/control/ToggleGroup.java
+++ b/modules/javafx.controls/src/main/java/javafx/scene/control/ToggleGroup.java
@@ -69,11 +69,11 @@
     }
 
     private final ObservableList<Toggle> toggles = new VetoableListDecorator<Toggle>(new TrackableObservableList<Toggle>() {
         @Override protected void onChanged(Change<Toggle> c) {
             while (c.next()) {
-                List<Toggle> addedToggles = c.getAddedSubList();
+                final List<Toggle> addedToggles = c.getAddedSubList();
 
                 // Look through the removed toggles.
                 for (Toggle t : c.getRemoved()) {
                     // If any of them was the one and only selected toggle,
                     // then we will clear the selected toggle property.
diff a/modules/javafx.controls/src/test/java/test/javafx/scene/control/ToggleButtonTest.java b/modules/javafx.controls/src/test/java/test/javafx/scene/control/ToggleButtonTest.java
--- a/modules/javafx.controls/src/test/java/test/javafx/scene/control/ToggleButtonTest.java
+++ b/modules/javafx.controls/src/test/java/test/javafx/scene/control/ToggleButtonTest.java
@@ -265,10 +265,10 @@
                 break;
             }
             try {
                 Thread.sleep(500);
             } catch (InterruptedException e) {
-               System.err.println("InterruptedException occurred during Thread.sleep()");
+                fail("InterruptedException occurred during Thread.sleep()");
             }
         }
     }
 }
