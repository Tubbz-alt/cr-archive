diff a/modules/javafx.web/src/main/native/Source/WTF/wtf/win/ThreadingWin.cpp b/modules/javafx.web/src/main/native/Source/WTF/wtf/win/ThreadingWin.cpp
--- a/modules/javafx.web/src/main/native/Source/WTF/wtf/win/ThreadingWin.cpp
+++ b/modules/javafx.web/src/main/native/Source/WTF/wtf/win/ThreadingWin.cpp
@@ -153,12 +153,19 @@
     return 0;
 }
 
 bool Thread::establishHandle(NewThreadContext* data)
 {
+    size_t stackSize = 0;
+#if PLATFORM(JAVA) && USE(JSVALUE32_64)
+    stackSize = 1024 * 1024;
+#endif
+
     unsigned threadIdentifier = 0;
-    HANDLE threadHandle = reinterpret_cast<HANDLE>(_beginthreadex(0, 0, wtfThreadEntryPoint, data, 0, &threadIdentifier));
+    unsigned initFlag = stackSize ? STACK_SIZE_PARAM_IS_A_RESERVATION : 0;
+
+    HANDLE threadHandle = reinterpret_cast<HANDLE>(_beginthreadex(0, stackSize, wtfThreadEntryPoint, data, initFlag, &threadIdentifier));
     if (!threadHandle) {
         LOG_ERROR("Failed to create thread at entry point %p with data %p: %ld", wtfThreadEntryPoint, data, errno);
         return false;
     }
     establishPlatformSpecificHandle(threadHandle, threadIdentifier);
