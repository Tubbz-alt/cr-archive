diff a/modules/javafx.graphics/src/main/native-glass/mac/GlassDialogs.m b/modules/javafx.graphics/src/main/native-glass/mac/GlassDialogs.m
--- a/modules/javafx.graphics/src/main/native-glass/mac/GlassDialogs.m
+++ b/modules/javafx.graphics/src/main/native-glass/mac/GlassDialogs.m
@@ -36,88 +36,10 @@
     #define LOG(MSG, ...)
 #else
     #define LOG(MSG, ...) GLASS_LOG(MSG, ## __VA_ARGS__);
 #endif
 
-static BOOL doPerformKeyEquivalent(NSEvent* theEvent, NSWindow* panel)
-{
-    NSResponder* responder = [panel firstResponder];
-    if ([responder isKindOfClass:[NSText class]])
-    {
-        NSText* text = (NSText*)responder;
-        if ([theEvent type] == NSKeyDown
-            && ([theEvent modifierFlags] & NSDeviceIndependentModifierFlagsMask) == NSCommandKeyMask)
-        {
-            NSRange range = [text selectedRange];
-            BOOL hasSelectedText = range.length > 0;
-            if ([theEvent keyCode] == 7 && hasSelectedText) // Cmd + X - Cut
-            {
-                [text cut:panel];
-                return true;
-            }
-            if ([theEvent keyCode] == 8 && hasSelectedText) // Cmd + C - Copy
-            {
-                [text copy:panel];
-                return true;
-            }
-            if ([theEvent keyCode] == 9) // Cmd + V - Paste
-            {
-                [text paste:panel];
-                return true;
-            }
-        }
-    }
-    return false;
-}
-
-/*
- * Function to determine whether or not to use raw NSPanel classes
- * (either NSSavePanel or NSOpenPanel).
- *
- * Return: YES if we need to use the raw NSPanel classes; NO if we
- * can use the Glass subclasses
- */
-static BOOL useNSPanel()
-{
-    // As of macOS 10.15 all file dialogs are out of process, so we
-    // effectively can't subclass them.
-    if (@available(macOS 10.15, *)) {
-        return YES;
-    } else {
-        return [GlassApplication isSandboxed];
-    }
-}
-
-@interface GlassSavePanel : NSSavePanel
-@end
-
-@implementation GlassSavePanel
-
-- (BOOL)performKeyEquivalent:(NSEvent *)theEvent
-{
-    if (doPerformKeyEquivalent(theEvent, self)) {
-        return true;
-    }
-    return [super performKeyEquivalent:theEvent];
-}
-@end
-
-@interface GlassOpenPanel : NSOpenPanel
-@end
-
-@implementation GlassOpenPanel
-
-- (BOOL)performKeyEquivalent:(NSEvent *)theEvent
-{
-    if (doPerformKeyEquivalent(theEvent, self)) {
-        return true;
-    }
-    return [super performKeyEquivalent:theEvent];
-}
-@end
-
-
 #pragma mark --- Dispatcher
 
 @interface DialogDispatcher : NSObject
 {
     NSSavePanel *panel;
@@ -501,11 +423,11 @@
     jobject result = NULL;
 
     GLASS_ASSERT_MAIN_JAVA_THREAD(env);
     GLASS_POOL_ENTER;
     {
-        NSOpenPanel *panel = useNSPanel() ? [NSOpenPanel openPanel] : [GlassOpenPanel openPanel];
+        NSOpenPanel *panel = [NSOpenPanel openPanel];
         [panel setAllowsMultipleSelection:(jMultipleMode==JNI_TRUE)];
         [panel setTitle:[GlassHelper nsStringWithJavaString:jTitle withEnv:env]];
         NSString *folder = [GlassHelper nsStringWithJavaString:jFolder withEnv:env];
         if ([folder length] > 0)
         {
@@ -577,11 +499,11 @@
     jobject result = NULL;
 
     GLASS_ASSERT_MAIN_JAVA_THREAD(env);
     GLASS_POOL_ENTER;
     {
-        NSSavePanel *panel = useNSPanel() ? [NSSavePanel savePanel] : [GlassSavePanel savePanel];
+        NSSavePanel *panel = [NSSavePanel savePanel];
         [panel setTitle:[GlassHelper nsStringWithJavaString:jTitle withEnv:env]];
         NSString *folder = [GlassHelper nsStringWithJavaString:jFolder withEnv:env];
         if ([folder length] > 0)
         {
             [panel setDirectoryURL:[NSURL fileURLWithPath:folder isDirectory:YES]];
@@ -649,11 +571,11 @@
     jobject chosen = NULL;
 
     GLASS_ASSERT_MAIN_JAVA_THREAD(env);
     GLASS_POOL_ENTER;
     {
-        NSOpenPanel *panel = useNSPanel() ? [NSOpenPanel openPanel] : [GlassOpenPanel openPanel];
+        NSOpenPanel *panel = [NSOpenPanel openPanel];
         [panel setTitle:[GlassHelper nsStringWithJavaString:jTitle withEnv:env]];
         NSString *folder = [GlassHelper nsStringWithJavaString:jFolder withEnv:env];
         if ([folder length] > 0)
         {
             [panel setDirectoryURL:[NSURL fileURLWithPath:folder isDirectory:YES]];
