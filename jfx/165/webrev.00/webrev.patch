diff a/modules/javafx.graphics/src/main/native-prism-es2/ios/IOSGLContext.c b/modules/javafx.graphics/src/main/native-prism-es2/ios/IOSGLContext.c
--- a/modules/javafx.graphics/src/main/native-prism-es2/ios/IOSGLContext.c
+++ b/modules/javafx.graphics/src/main/native-prism-es2/ios/IOSGLContext.c
@@ -287,7 +287,7 @@
         return;
     }
     interval = (vSyncNeeded) ? 1 : 0;
     ctxInfo->state.vSyncEnabled = vSyncNeeded;
     setSwapInterval(ctxInfo->context, interval);
-    fprintf(stderr, "setSwapInterval(%d)\n", interval);
+    // fprintf(stderr, "setSwapInterval(%d)\n", interval);
 }
diff a/modules/javafx.graphics/src/main/native-prism-es2/ios/IOSWindowSystemInterface.m b/modules/javafx.graphics/src/main/native-prism-es2/ios/IOSWindowSystemInterface.m
--- a/modules/javafx.graphics/src/main/native-prism-es2/ios/IOSWindowSystemInterface.m
+++ b/modules/javafx.graphics/src/main/native-prism-es2/ios/IOSWindowSystemInterface.m
@@ -80,21 +80,21 @@
 
     return JNI_FALSE;
 }
 
 jboolean deleteContext(void *context) {
-    fprintf(stderr, "IOSWindowSystemInterface : deleteContext unimp\n");
+    // fprintf(stderr, "IOSWindowSystemInterface : deleteContext unimp\n");
     return JNI_FALSE;
 }
 
 jboolean flushBuffer(void *context) {
     [[EAGLContext currentContext] presentRenderbuffer:GL_RENDERBUFFER];
     return JNI_FALSE;
 }
 
 void setSwapInterval(void *context, int interval) {
-    fprintf(stderr, "IOSWindowSystemInterface : setSwapInterval unimp\n");
+    // fprintf(stderr, "IOSWindowSystemInterface : setSwapInterval unimp\n");
 }
 
 
 #import <mach-o/dyld.h>
 #import <stdlib.h>
