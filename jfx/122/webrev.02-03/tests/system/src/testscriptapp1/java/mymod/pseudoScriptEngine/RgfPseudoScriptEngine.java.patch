diff a/tests/system/src/testscriptapp1/java/mymod/pseudoScriptEngine/RgfPseudoScriptEngine.java b/tests/system/src/testscriptapp1/java/mymod/pseudoScriptEngine/RgfPseudoScriptEngine.java
--- a/tests/system/src/testscriptapp1/java/mymod/pseudoScriptEngine/RgfPseudoScriptEngine.java
+++ b/tests/system/src/testscriptapp1/java/mymod/pseudoScriptEngine/RgfPseudoScriptEngine.java
@@ -41,12 +41,11 @@
 import java.io.BufferedReader;
 import java.io.IOException;
 
 import java.time.Instant;
 
-public class RgfPseudoScriptEngine extends AbstractScriptEngine
-{
+public class RgfPseudoScriptEngine extends AbstractScriptEngine {
     static final boolean bDebug = false; // true;
 
     /** Allows to log and access the ScriptEngine instances with their evalDataList. */
     static final ArrayList<RgfPseudoScriptEngine> enginesUsed = new ArrayList();
     public static ArrayList<RgfPseudoScriptEngine> getEnginesUsed() {
@@ -83,12 +82,12 @@
 
 
     public Object eval(String script, ScriptContext context) {
         if (bDebug) System.err.print("[debug: " + this + ".eval(String,ScriptContext), ScriptContext=" + context + "]");
 
-            // create copies of the Bindings for later inspection as they may
-            // get reused and changed on each eval() invocation
+        // create copies of the Bindings for later inspection as they may
+        // get reused and changed on each eval() invocation
         TreeMap<Integer,TreeMap> bindings = new TreeMap();
         for (Integer scope : context.getScopes()) {
             Bindings binding = context.getBindings(scope);
             bindings.put(scope, binding == null ? new TreeMap<String,Object>() : new TreeMap<String,Object>(binding));
         }
