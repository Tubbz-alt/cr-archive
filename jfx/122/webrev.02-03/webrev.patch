diff a/tests/system/src/testscriptapp1/java/mymod/myapp1/FXMLScriptDeployment.java b/tests/system/src/testscriptapp1/java/mymod/myapp1/FXMLScriptDeployment.java
--- a/tests/system/src/testscriptapp1/java/mymod/myapp1/FXMLScriptDeployment.java
+++ b/tests/system/src/testscriptapp1/java/mymod/myapp1/FXMLScriptDeployment.java
@@ -99,16 +99,16 @@
              scene = new Scene(rootNode);
              btn = (Button) scene.lookup("#idButton");
         }
         catch (Exception ioe) {
             ioe.printStackTrace();
-            System.exit(-1);
+            System.exit(ERROR_UNEXPECTED_EXCEPTION);
         }
             // fire three events on the button
         btn.fire();
         btn.fireEvent(new ActionEvent());
-        btn.fireEvent(new MouseEvent( MouseEvent.MOUSE_CLICKED,
+        btn.fireEvent(new MouseEvent(MouseEvent.MOUSE_CLICKED,
                                        0,       // double x,
                                        0,       // double y,
                                        0,       // double screenX,
                                        0,       // double screenY,
                                        MouseButton.PRIMARY,         // MouseButton button,
@@ -180,11 +180,11 @@
             TreeMap<String,Object> globalBindings = scopes.get(200);
 
             Object obj = null;
             Button btn = null;
 
-                // global Bindings
+            // global Bindings
             Util.assertExists(IDROOT + " in global scope Bindings", globalBindings.containsKey(IDROOT));
             obj = globalBindings.get(IDROOT);
             Util.assertType(IDROOT, AnchorPane.class, obj);
 
             Util.assertExists(LOCATION + " in global scope Bindings", globalBindings.containsKey(LOCATION));
@@ -203,11 +203,11 @@
                 obj = globalBindings.get(IDBUTTON);
                 Util.assertType(IDBUTTON, Button.class, obj);
                 btn = (Button) obj;
             }
 
-                // engine Bindings
+            // engine Bindings
             Util.assertExists(FILENAME + " in engine scope Bindings", engineBindings.containsKey(FILENAME));
             if (invocation < 7) {  // no event objects, no arguments
                 Util.assertNotExists(ARGV + " in engine scope Bindings", engineBindings.containsKey(ARGV));
                 Util.assertNotExists(EVENT + " in engine scope Bindings", engineBindings.containsKey(EVENT));
             }
@@ -223,12 +223,11 @@
                 if (invocation == 9) {
                     Util.assertType(EVENT, MouseEvent.class, obj);
                     MouseEvent ev = (MouseEvent) obj;
                     Util.assertSame("MouseEvent.getSource() == btn", ev.getSource(), btn);
                     Util.assertSame("MouseEvent.MOUSE_CLICKED", MouseEvent.MOUSE_CLICKED, ev.getEventType());
-                }
-                else {
+                } else {
                     Util.assertType(EVENT, ActionEvent.class, obj);
                     ActionEvent ev = (ActionEvent) obj;
                     Util.assertSame("ActionEvent.getSource() == btn", ev.getSource(), btn);
                 }
             }
diff a/tests/system/src/testscriptapp1/java/mymod/pseudoScriptEngine/InvocationInfos.java b/tests/system/src/testscriptapp1/java/mymod/pseudoScriptEngine/InvocationInfos.java
--- a/tests/system/src/testscriptapp1/java/mymod/pseudoScriptEngine/InvocationInfos.java
+++ b/tests/system/src/testscriptapp1/java/mymod/pseudoScriptEngine/InvocationInfos.java
@@ -48,13 +48,14 @@
             Bindings binding = context.getBindings(scope);
             bindings.put(scope, binding == null ? new TreeMap<String,Object>() : new TreeMap<String,Object>(binding));
         }
     }
 
-    /** Creates and returns a string having all information formatted to ease debugging.
+    /** 
+     * Creates and returns a string having all information formatted to ease debugging.
      * @return string formatted to ease debugging
-    */
+     */
     public String toDebugFormat(String indentation) {
         StringBuilder sb = new StringBuilder();
         String indent = (indentation == null ? "\t\t" : indentation);
         sb.append(indent).append("at:     [").append(dateTime.toString()).append("]\n");
         sb.append(indent).append("script: [").append(script)             .append("]\n");
diff a/tests/system/src/testscriptapp1/java/mymod/pseudoScriptEngine/RgfPseudoScriptEngine.java b/tests/system/src/testscriptapp1/java/mymod/pseudoScriptEngine/RgfPseudoScriptEngine.java
--- a/tests/system/src/testscriptapp1/java/mymod/pseudoScriptEngine/RgfPseudoScriptEngine.java
+++ b/tests/system/src/testscriptapp1/java/mymod/pseudoScriptEngine/RgfPseudoScriptEngine.java
@@ -41,12 +41,11 @@
 import java.io.BufferedReader;
 import java.io.IOException;
 
 import java.time.Instant;
 
-public class RgfPseudoScriptEngine extends AbstractScriptEngine
-{
+public class RgfPseudoScriptEngine extends AbstractScriptEngine {
     static final boolean bDebug = false; // true;
 
     /** Allows to log and access the ScriptEngine instances with their evalDataList. */
     static final ArrayList<RgfPseudoScriptEngine> enginesUsed = new ArrayList();
     public static ArrayList<RgfPseudoScriptEngine> getEnginesUsed() {
@@ -83,12 +82,12 @@
 
 
     public Object eval(String script, ScriptContext context) {
         if (bDebug) System.err.print("[debug: " + this + ".eval(String,ScriptContext), ScriptContext=" + context + "]");
 
-            // create copies of the Bindings for later inspection as they may
-            // get reused and changed on each eval() invocation
+        // create copies of the Bindings for later inspection as they may
+        // get reused and changed on each eval() invocation
         TreeMap<Integer,TreeMap> bindings = new TreeMap();
         for (Integer scope : context.getScopes()) {
             Bindings binding = context.getBindings(scope);
             bindings.put(scope, binding == null ? new TreeMap<String,Object>() : new TreeMap<String,Object>(binding));
         }
diff a/tests/system/src/testscriptapp1/resources/mymod/META-INF/services/javax.script.ScriptEngineFactory b/tests/system/src/testscriptapp1/resources/mymod/META-INF/services/javax.script.ScriptEngineFactory
--- a/tests/system/src/testscriptapp1/resources/mymod/META-INF/services/javax.script.ScriptEngineFactory
+++ b/tests/system/src/testscriptapp1/resources/mymod/META-INF/services/javax.script.ScriptEngineFactory
@@ -1,2 +1,2 @@
-pseudoScriptEngine.RgfPseudoScriptEngineFactory
-
+pseudoScriptEngine.RgfPseudoScriptEngineFactory
+
diff a/tests/system/src/testscriptapp1/resources/mymod/myapp1/demo_01_bottomscript.rpsl b/tests/system/src/testscriptapp1/resources/mymod/myapp1/demo_01_bottomscript.rpsl
--- a/tests/system/src/testscriptapp1/resources/mymod/myapp1/demo_01_bottomscript.rpsl
+++ b/tests/system/src/testscriptapp1/resources/mymod/myapp1/demo_01_bottomscript.rpsl
@@ -1,1 +1,1 @@
-demo_01_bottomscript.rpsl file - pseudo script in external file, starts with the filename
+demo_01_bottomscript.rpsl file - pseudo script in external file, starts with the filename
diff a/tests/system/src/testscriptapp1/resources/mymod/myapp1/demo_01_middlescript.rpsl b/tests/system/src/testscriptapp1/resources/mymod/myapp1/demo_01_middlescript.rpsl
--- a/tests/system/src/testscriptapp1/resources/mymod/myapp1/demo_01_middlescript.rpsl
+++ b/tests/system/src/testscriptapp1/resources/mymod/myapp1/demo_01_middlescript.rpsl
@@ -1,1 +1,1 @@
-demo_01_middlescript.rpsl file - pseudo script in external file, starts with the filename
+demo_01_middlescript.rpsl file - pseudo script in external file, starts with the filename
diff a/tests/system/src/testscriptapp1/resources/mymod/myapp1/demo_01_topscript.rpsl b/tests/system/src/testscriptapp1/resources/mymod/myapp1/demo_01_topscript.rpsl
--- a/tests/system/src/testscriptapp1/resources/mymod/myapp1/demo_01_topscript.rpsl
+++ b/tests/system/src/testscriptapp1/resources/mymod/myapp1/demo_01_topscript.rpsl
@@ -1,1 +1,1 @@
-demo_01_topscript.rpsl file - pseudo script in external file, starts with the filename
+demo_01_topscript.rpsl file - pseudo script in external file, starts with the filename
