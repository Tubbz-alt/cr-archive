diff a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/EPDScreen.java b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/EPDScreen.java
--- a/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/EPDScreen.java
+++ b/modules/javafx.graphics/src/main/java/com/sun/glass/ui/monocle/EPDScreen.java
@@ -58,11 +58,11 @@
      */
     private static final String FB_PATH_DEFAULT = "/dev/fb0";
 
     /**
      * The density of this screen in pixels per inch. For now, the value is
-     * hard-coded to the density of a 6-inch display panel with 800 Ã— 600 px at
+     * hard-coded to the density of a 6-inch display panel with 800 x 600 px at
      * 167 ppi.
      */
     private static final int DPI = 167;
 
     /**
@@ -97,10 +97,12 @@
             fbDevice.init();
 
             width = fbDevice.getWidth();
             height = fbDevice.getHeight();
             bitDepth = fbDevice.getBitDepth();
+            logger.fine("Native screen geometry: {0} px x {1} px x {2} bpp",
+                    width, height, bitDepth);
 
             /*
              * If the Linux frame buffer is configured for 32-bit color, compose
              * the pixels directly into it. Otherwise, compose the pixels into
              * an off-screen buffer and write them to the frame buffer when
@@ -110,12 +112,16 @@
              * be able to write directly into the frame buffer, displaying one
              * while updating the other. The Snapshot update mode of an e-paper
              * display, though, allows us to reuse the same frame buffer region
              * immediately after sending an update.
              */
+            ByteBuffer mapping = null;
             if (bitDepth == Integer.SIZE) {
-                fbMapping = fbDevice.getMappedBuffer();
+                mapping = fbDevice.getMappedBuffer();
+            }
+            if (mapping != null) {
+                fbMapping = mapping;
                 fbChannel = null;
             } else {
                 Path path = FileSystems.getDefault().getPath(fbPath);
                 fbChannel = FileChannel.open(path, StandardOpenOption.WRITE);
                 fbMapping = null;
