diff a/modules/javafx.controls/src/main/java/com/sun/javafx/scene/control/behavior/ListViewBehavior.java b/modules/javafx.controls/src/main/java/com/sun/javafx/scene/control/behavior/ListViewBehavior.java
--- a/modules/javafx.controls/src/main/java/com/sun/javafx/scene/control/behavior/ListViewBehavior.java
+++ b/modules/javafx.controls/src/main/java/com/sun/javafx/scene/control/behavior/ListViewBehavior.java
@@ -76,11 +76,11 @@
 
         // create a map for listView-specific mappings
         listViewInputMap = createInputMap();
 
         // add focus traversal mappings
-        addDefaultMapping(listViewInputMap, FocusTraversalInputMap.getFocusTraversalMappings());
+        addDefaultMapping(listViewInputMap, FocusTraversalInputMap.getModifierArrowKeyMappings());
         addDefaultMapping(listViewInputMap,
             new KeyMapping(HOME, e -> selectFirstRow()),
             new KeyMapping(END, e -> selectLastRow()),
             new KeyMapping(new KeyBinding(HOME).shift(), e -> selectAllToFirstRow()),
             new KeyMapping(new KeyBinding(END).shift(), e -> selectAllToLastRow()),
@@ -96,11 +96,10 @@
             new KeyMapping(ENTER, e -> activate()),
             new KeyMapping(SPACE, e -> activate()),
             new KeyMapping(F2, e -> activate()),
             new KeyMapping(ESCAPE, e -> cancelEdit()),
 
-            new KeyMapping(new KeyBinding(A).shortcut(), e -> selectAll()),
             new KeyMapping(new KeyBinding(HOME).shortcut(), e -> focusFirstRow()),
             new KeyMapping(new KeyBinding(END).shortcut(), e -> focusLastRow()),
             new KeyMapping(new KeyBinding(PAGE_UP).shortcut(), e -> focusPageUp()),
             new KeyMapping(new KeyBinding(PAGE_DOWN).shortcut(), e -> focusPageDown()),
 
@@ -195,10 +194,17 @@
         if (Utils.isTwoLevelFocus()) {
             tlFocus = new TwoLevelFocusListBehavior(control); // needs to be last.
         }
     }
 
+    public void updateSelectionModeKeyMapping(SelectionMode selectionMode) {
+        if (selectionMode.equals(SelectionMode.SINGLE)) {
+            removeMapping(new KeyBinding(A).shortcut());
+        } else {
+            addDefaultMapping(listViewInputMap, new KeyMapping(new KeyBinding(A).shortcut(), e -> selectAll()));
+        }
+    }
 
 
     /***************************************************************************
      *                                                                         *
      * Implementation of BehaviorBase API                                      *
