diff a/modules/javafx.graphics/src/main/native-glass/mac/GlassViewDelegate.h b/modules/javafx.graphics/src/main/native-glass/mac/GlassViewDelegate.h
--- a/modules/javafx.graphics/src/main/native-glass/mac/GlassViewDelegate.h
+++ b/modules/javafx.graphics/src/main/native-glass/mac/GlassViewDelegate.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2011, 2016, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2011, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -29,10 +29,18 @@
 #import "GlassHostView.h"
 #import "GlassFullscreenWindow.h"
 #import "GlassDragSource.h"
 #import "GlassAccessible.h"
 
+// Bit mask for tracking gesture begin / end
+typedef enum GestureMaskType {
+    GESTURE_MASK_SCROLL  = 1 << 0,
+    GESTURE_MASK_SWIPE   = 1 << 1,
+    GESTURE_MASK_ROTATE  = 1 << 2,
+    GESTURE_MASK_MAGNIFY = 1 << 3,
+} GestureMaskType;
+
 // helper class that implements the custom GlassView functionality
 @interface GlassViewDelegate : NSObject <GlassDragSourceDelegate>
 {
     NSView                  *nsView;
 
@@ -49,10 +57,11 @@
     BOOL                    mouseIsDown;
     BOOL                    mouseIsOver;
     int                     mouseDownMask; // bit 0 - left, 1 - right, 2 - other button
 
     BOOL                    gestureInProgress;
+    GestureMaskType         gesturesBeganMask;
 
     NSEvent                 *lastEvent;
 
     // The last processed key event
     NSEvent                 *s_lastKeyEvent;
@@ -82,10 +91,14 @@
 - (void)sendJavaKeyEvent:(NSEvent *)event isDown:(BOOL)isDown;
 - (void)sendJavaModifierKeyEvent:(NSEvent *)theEvent;
 - (void)sendJavaGestureEvent:(NSEvent *)theEvent type:(int)type;
 - (void)sendJavaGestureBeginEvent:(NSEvent *)theEvent;
 - (void)sendJavaGestureEndEvent:(NSEvent *)theEvent;
+- (void)doRotateWithEvent:(NSEvent *)theEvent;
+- (void)doSwipeWithEvent:(NSEvent *)theEvent;
+- (void)doMagnifyWithEvent:(NSEvent *)theEvent;
+- (void)doScrollWheel:(NSEvent *)theEvent;
 
 - (NSDragOperation)sendJavaDndEvent:(id <NSDraggingInfo>)info type:(jint)type;
 
 - (NSDragOperation)draggingSourceOperationMaskForLocal:(BOOL)isLocal;
 - (void)startDrag:(NSDragOperation)operation;
