diff a/modules/javafx.controls/src/test/java/test/javafx/scene/control/TableViewHorizontalArrowsTest.java b/modules/javafx.controls/src/test/java/test/javafx/scene/control/TableViewHorizontalArrowsTest.java
--- a/modules/javafx.controls/src/test/java/test/javafx/scene/control/TableViewHorizontalArrowsTest.java
+++ b/modules/javafx.controls/src/test/java/test/javafx/scene/control/TableViewHorizontalArrowsTest.java
@@ -113,13 +113,14 @@
         stageLoader.dispose();
     }
 
     // ---------------- Helper methods -------------------------
     /**
-     * Toggles the nodeOrientation of tableView.
+     * Toggles the parameter nodeOrientation and
+     * sets the tableView's orientation to the new toggled value
      */
-    private void changeNodeOrientation() {
+    private void toggleNodeOrientation() {
         orientation = (orientation == NodeOrientation.LEFT_TO_RIGHT?
             NodeOrientation.RIGHT_TO_LEFT : NodeOrientation.LEFT_TO_RIGHT);
         tableView.setNodeOrientation(orientation);
     }
 
@@ -198,48 +199,39 @@
         assertFalse("previous cell must not be selected", sm.isSelected(0, col3));
         TablePosition<?, ?> focusedCell = fm.getFocusedCell();
         assertEquals("focused cell must moved to prev", col3, focusedCell.getTableColumn());
     }
 
-
-    // Note : Any test that changs NodeOrientation must restore it back at the end of it
     @Test
     public void testChangeOrientationSimpleForwardSelect() {
         sm.select(0, col0);
         forward();
         assertTrue(sm.isSelected(0, col1));
         assertFalse(sm.isSelected(0, col0));
 
-        changeNodeOrientation();
+        toggleNodeOrientation();
 
         // Now, test that the forward select respects change in NodeOrientation
         forward();
 
         assertFalse(sm.isSelected(0, col1));
         assertTrue(sm.isSelected(0, col2));
-
-        // Restore Node orientation
-        changeNodeOrientation();
     }
 
-    // Note : Any test that changs NodeOrientation must restore it back at the end of it
     @Test
     public void testChangeOrientationSimpleBackwardSelect() {
         sm.select(0, col4);
         backward();
         assertTrue(sm.isSelected(0, col3));
         assertFalse(sm.isSelected(0, col4));
 
-        changeNodeOrientation();
+        toggleNodeOrientation();
 
         // Now, test that the backward select respects change in NodeOrientation
         backward();
         assertFalse(sm.isSelected(0, col3));
         assertTrue(sm.isSelected(0, col2));
-
-        // Restore Node orientation
-        changeNodeOrientation();
     }
 
     @Test public void testShiftBackwardWhenAtFirstCol() {
         sm.select(0, col0);
         backward(KeyModifier.SHIFT);
