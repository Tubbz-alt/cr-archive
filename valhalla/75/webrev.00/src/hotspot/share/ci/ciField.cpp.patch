diff a/src/hotspot/share/ci/ciField.cpp b/src/hotspot/share/ci/ciField.cpp
--- a/src/hotspot/share/ci/ciField.cpp
+++ b/src/hotspot/share/ci/ciField.cpp
@@ -227,11 +227,12 @@
   _offset = offset;
   // Copy remaining fields
   _name = field->_name;
   _signature = field->_signature;
   _type = field->_type;
-  _is_constant = field->_is_constant;
+  // Trust final flattened fields
+  _is_constant = is_final;
   _known_to_link_with_put = field->_known_to_link_with_put;
   _known_to_link_with_get = field->_known_to_link_with_get;
   _constant_value = field->_constant_value;
   assert(!field->is_flattened(), "field must not be flattened");
   _is_flattened = false;
@@ -252,10 +253,13 @@
   // Trust hidden classes and VM unsafe anonymous classes. They are created via
   // Lookup.defineHiddenClass or the private jdk.internal.misc.Unsafe API and
   // can't be serialized, so there is no hacking of finals going on with them.
   if (holder->is_hidden() || holder->is_unsafe_anonymous())
     return true;
+  // Trust final fields in inline type buffers
+  if (holder->is_valuetype())
+    return true;
   // Trust final fields in all boxed classes
   if (holder->is_box_klass())
     return true;
   // Trust final fields in String
   if (holder->name() == ciSymbol::java_lang_String())
