diff a/src/hotspot/share/opto/subtypenode.cpp b/src/hotspot/share/opto/subtypenode.cpp
--- a/src/hotspot/share/opto/subtypenode.cpp
+++ b/src/hotspot/share/opto/subtypenode.cpp
@@ -74,10 +74,16 @@
     } else {
       // Neither class subtypes the other: they are unrelated and this
       // type check is known to fail.
       unrelated_classes = true;
     }
+    // Ignore exactness of constant supertype (the type of the corresponding object may be non-exact).
+    const TypeKlassPtr* casted_sup = super_t->is_klassptr()->cast_to_exactness(false)->is_klassptr();
+    if (sub_t->is_ptr()->flat_array() && (!casted_sup->can_be_value_type() || (superk->is_valuetype() && !superk->flatten_array()))) {
+      // Subtype is flattened in arrays but supertype is not. Must be unrelated.
+      unrelated_classes = true;
+    }
     if (unrelated_classes) {
       TypePtr::PTR jp = sub_t->is_ptr()->join_ptr(super_t->is_ptr()->_ptr);
       if (jp != TypePtr::Null && jp != TypePtr::BotPTR) {
         return TypeInt::CC_GT;
       }
