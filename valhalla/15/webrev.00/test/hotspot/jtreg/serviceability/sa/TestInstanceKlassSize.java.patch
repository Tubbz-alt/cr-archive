diff a/test/hotspot/jtreg/serviceability/sa/TestInstanceKlassSize.java b/test/hotspot/jtreg/serviceability/sa/TestInstanceKlassSize.java
--- a/test/hotspot/jtreg/serviceability/sa/TestInstanceKlassSize.java
+++ b/test/hotspot/jtreg/serviceability/sa/TestInstanceKlassSize.java
@@ -28,25 +28,26 @@
 
 import java.util.ArrayList;
 import java.util.List;
 import java.util.stream.Collectors;
 
+import jdk.test.lib.apps.LingeredApp;
+import jdk.test.lib.Asserts;
 import jdk.test.lib.JDKToolLauncher;
 import jdk.test.lib.Platform;
 import jdk.test.lib.process.ProcessTools;
 import jdk.test.lib.process.OutputAnalyzer;
+import jdk.test.lib.SA.SATestUtils;
 import jdk.test.lib.Utils;
-import jdk.test.lib.apps.LingeredApp;
-import jdk.test.lib.Asserts;
 
 import java.io.*;
 import java.util.*;
 
 /**
  * @test
  * @library /test/lib
- * @requires vm.hasSAandCanAttach
+ * @requires vm.hasSA
  * @modules java.base/jdk.internal.misc
  *          jdk.hotspot.agent/sun.jvm.hotspot
  *          jdk.hotspot.agent/sun.jvm.hotspot.utilities
  *          jdk.hotspot.agent/sun.jvm.hotspot.oops
  *          jdk.hotspot.agent/sun.jvm.hotspot.debugger
@@ -95,10 +96,11 @@
                 Long.toString(app.getPid())
             };
 
             ProcessBuilder processBuilder = ProcessTools
                                             .createJavaProcessBuilder(toolArgs);
+            SATestUtils.addPrivilegesIfNeeded(processBuilder);
             output = ProcessTools.executeProcess(processBuilder);
             System.out.println(output.getOutput());
             output.shouldHaveExitValue(0);
 
             // Check whether the size matches with value from VM.
@@ -146,11 +148,11 @@
         }
         agent.detach();
     }
 
     public static void main(String[] args) throws Exception {
-
+        SATestUtils.skipIfCannotAttach(); // throws SkippedException if attach not expected to work.
         if (args == null || args.length == 0) {
             System.out.println ("No args run. Starting with args now.");
             startMeWithArgs();
         } else {
             SAInstanceKlassSize(Integer.parseInt(args[0]), SAInstanceKlassNames);
