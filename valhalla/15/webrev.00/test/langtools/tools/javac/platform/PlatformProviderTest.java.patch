diff a/test/langtools/tools/javac/platform/PlatformProviderTest.java b/test/langtools/tools/javac/platform/PlatformProviderTest.java
--- a/test/langtools/tools/javac/platform/PlatformProviderTest.java
+++ b/test/langtools/tools/javac/platform/PlatformProviderTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2015, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2015, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -44,10 +44,11 @@
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
+import java.util.stream.Collectors;
 
 import javax.annotation.processing.AbstractProcessor;
 import javax.annotation.processing.Processor;
 import javax.annotation.processing.RoundEnvironment;
 import javax.annotation.processing.SupportedAnnotationTypes;
@@ -115,11 +116,11 @@
                               "process: {testAPKey=testAPValue}",
                               "PlatformProviderTestSource.java:4:49: compiler.warn.raw.class.use: java.util.ArrayList, java.util.ArrayList<E>",
                               "compiler.misc.count.warn",
                               "close");
         List<String> actualOutput = result.getOutputLines(Task.OutputKind.STDERR);
-        result.writeAll();
+        actualOutput = actualOutput.stream().filter(s->!s.matches("^Picked up .*JAVA.*OPTIONS:.*")).collect(Collectors.toList());
         if (!expectedOutput.equals(actualOutput)) {
             throw new AssertionError(  "Expected output: " + expectedOutput +
                                      "; actual output: " + actualOutput);
         }
         result.writeAll();
@@ -142,16 +143,12 @@
                 Arrays.asList("getSupportedPlatformNames",
                               "getPlatform(fail, )",
                               "error: release version fail not supported",
                               "javac.msg.usage");
         List<String> actualOutput = result.getOutputLines(Task.OutputKind.STDERR);
-        result.writeAll();
-        if (!expectedOutput.equals(actualOutput)) {
-            throw new AssertionError(  "Expected output: " + expectedOutput +
-                                     "; actual output: " + actualOutput);
-        }
-        result.writeAll();
+        actualOutput = actualOutput.stream().filter(s->!s.matches("^Picked up .*JAVA.*OPTIONS:.*")).collect(Collectors.toList());
+        tb.checkEqual(expectedOutput, actualOutput);
     }
 
     @Override
     public Iterable<String> getSupportedPlatformNames() {
         System.err.println("getSupportedPlatformNames");
