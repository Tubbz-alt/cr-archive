diff a/test/langtools/jdk/javadoc/doclet/testMetadata/TestMetadata.java b/test/langtools/jdk/javadoc/doclet/testMetadata/TestMetadata.java
--- a/test/langtools/jdk/javadoc/doclet/testMetadata/TestMetadata.java
+++ b/test/langtools/jdk/javadoc/doclet/testMetadata/TestMetadata.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2019, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -21,11 +21,11 @@
  * questions.
  */
 
 /*
  * @test
- * @bug 8218998 8219946 8219060
+ * @bug 8218998 8219946 8219060 8241190
  * @summary Add metadata to generated API documentation files
  * @library /tools/lib ../../lib
  * @modules jdk.javadoc/jdk.javadoc.internal.tool
  * @modules jdk.compiler/com.sun.tools.javac.api
  *          jdk.compiler/com.sun.tools.javac.main
@@ -135,31 +135,31 @@
     }
 
     final Pattern nl = Pattern.compile("[\\r\\n]+");
     final Pattern bodyPattern = Pattern.compile("<body [^>]*class=\"([^\"]+)\"");
     final Set<String> allBodyClasses = Set.of(
-        "all-classes-index",
-        "all-packages-index",
-        "class-declaration",
-        "class-use",
-        "constants-summary",
-        "deprecated-list",
-        "doc-file",
-        "help",
-        "index-redirect",
-        "module-declaration",
-        "module-index",
-        "package-declaration",
-        "package-index",
-        "package-tree",
-        "package-use",
-        "serialized-form",
-        "single-index",
-        "source",
-        "split-index",
-        "system-properties",
-        "tree"
+        "all-classes-index-page",
+        "all-packages-index-page",
+        "class-declaration-page",
+        "class-use-page",
+        "constants-summary-page",
+        "deprecated-list-page",
+        "doc-file-page",
+        "help-page",
+        "index-redirect-page",
+        "module-declaration-page",
+        "module-index-page",
+        "package-declaration-page",
+        "package-index-page",
+        "package-tree-page",
+        "package-use-page",
+        "serialized-form-page",
+        "single-index-page",
+        "source-page",
+        "split-index-page",
+        "system-properties-page",
+        "tree-page"
     );
 
     void checkBodyClasses() throws IOException {
         Path outputDirPath = outputDir.toPath();
         for (Path p : tb.findFiles(".html", outputDirPath)) {
@@ -384,11 +384,11 @@
     Path genSource(Source s) throws IOException {
         Path src = Path.of("src-" + s);
         switch (s) {
             case PACKAGES:
                 tb.writeJavaFiles(src,
-                    "/** Package pA. */ package pA;",
+                    "/** Package pA. {@systemProperty exampleProperty} */ package pA;",
                     "/** Class pA.CA. */ package pA; public class CA { }",
                     "/** Anno pA.Anno, */ package pA; public @interface Anno { }",
                     "/** Serializable pA.Ser, */ package pA; public class Ser implements java.io.Serializable { }",
                     "/** Package pB. */ package pB;",
                     "/** Class pB.CB. */ package pB; public class CB { }");
@@ -411,6 +411,5 @@
         }
 
         return src;
     }
 }
-
