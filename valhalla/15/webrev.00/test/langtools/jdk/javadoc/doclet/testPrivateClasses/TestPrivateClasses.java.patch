diff a/test/langtools/jdk/javadoc/doclet/testPrivateClasses/TestPrivateClasses.java b/test/langtools/jdk/javadoc/doclet/testPrivateClasses/TestPrivateClasses.java
--- a/test/langtools/jdk/javadoc/doclet/testPrivateClasses/TestPrivateClasses.java
+++ b/test/langtools/jdk/javadoc/doclet/testPrivateClasses/TestPrivateClasses.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -68,15 +68,15 @@
                 // private class does not show up in tree
                 "<div class=\"inheritance\" title=\"Inheritance Tree\">java.lang.Object\n"
                 + "<div class=\"inheritance\">pkg.PublicChild</div>\n"
                 + "</div>",
                 // Method is documented as though it is declared in the inheriting method.
-                "<div class=\"memberSignature\"><span class=\"modifiers\">public</span>&nbsp;"
-                + "<span class=\"returnType\">void</span>&nbsp;<span class=\"memberName\">"
-                + "methodInheritedFromParent</span>&#8203;(<span class=\"arguments\">int&nbsp;p1)</span>\n"
+                "<div class=\"member-signature\"><span class=\"modifiers\">public</span>&nbsp;"
+                + "<span class=\"return-type\">void</span>&nbsp;<span class=\"member-name\">"
+                + "methodInheritedFromParent</span>&#8203;(<span class=\"parameters\">int&nbsp;p1)</span>\n"
                 + "                               throws <span class=\"exceptions\">java.lang.Exception</span></div>",
-                "<dl>\n"
+                "<dl class=\"notes\">\n"
                 + "<dt>All Implemented Interfaces:</dt>\n"
                 + "<dd><code><a href=\"PublicInterface.html\" title=\"interface in pkg\">"
                 + "PublicInterface</a></code></dd>\n"
                 + "</dl>");
 
@@ -91,16 +91,16 @@
                 "PrivateParent",
                 "PrivateInterface");
 
         checkOutput("pkg/PublicChild.html", false,
                 // Should not document comments from private inherited interfaces
-                "<td class=\"colLast\"><code><span class=\"memberNameLink\">"
+                "<td class=\"col-last\"><code><span class=\"member-name-link\">"
                 + "<a href=\"#methodInterface(int)\">"
                 + "methodInterface</a></span>&#8203;(int&nbsp;p1)</code>\n"
                 + "<div class=\"block\">Comment from interface.</div>\n</td>",
                 // and similarly one more
-                "<td class=\"colLast\"><code><span class=\"memberNameLink\">"
+                "<td class=\"col-last\"><code><span class=\"member-name-link\">"
                 + "<a href=\"#methodInterface2(int)\">"
                 + "methodInterface2</a></span>&#8203;(int&nbsp;p1)</code>\n"
                 + "<div class=\"block\">Comment from interface.</div>\n</td>"
         );
 
@@ -110,11 +110,11 @@
                 + "fieldInheritedFromInterface</a>",
                 // Method inheritance from non-public superinterface.
                 "<a href=\"#methodInterface(int)\">"
                 + "methodInterface</a>",
                 //Make sure implemented interfaces from private superclass are inherited
-                "<dl>\n"
+                "<dl class=\"notes\">\n"
                 + "<dt>All Known Implementing Classes:</dt>\n"
                 + "<dd><code><a href=\"PublicChild.html\" title=\"class in pkg\">"
                 + "PublicChild</a></code></dd>\n"
                 + "</dl>");
 
@@ -129,11 +129,11 @@
                 "This comment should get copied to the implementing class");
 
         checkOutput("pkg2/C.html", false,
                 //Do not inherit private interface method with generic parameters.
                 //This method has been implemented.
-                "<span class=\"memberNameLink\"><a href=\"I.html#hello(T)\">hello</a></span>");
+                "<span class=\"member-name-link\"><a href=\"I.html#hello(T)\">hello</a></span>");
 
         checkOutput("constant-values.html", false,
                 // Make inherited constant are documented correctly.
                 "PrivateInterface");
     }
@@ -158,33 +158,33 @@
                 + "<a href=\"PrivateParent.html\" title=\"class in pkg\">"
                 + "PrivateParent</a>",
                 "<a href=\"PrivateParent.html#methodInheritedFromParent(int)\">"
                 + "methodInheritedFromParent</a>",
                 // Should document that a method overrides method from private class.
-                "<dt><span class=\"overrideSpecifyLabel\">Overrides:</span></dt>\n"
-                + "<dd><code><a href=\"PrivateParent.html#methodOverridenFromParent(char%5B%5D,int,T,V,java.util.List)\">"
-                + "methodOverridenFromParent</a></code>&nbsp;in class&nbsp;<code>"
+                "<dt>Overrides:</dt>\n"
+                + "<dd><code><a href=\"PrivateParent.html#methodOverriddenFromParent(char%5B%5D,int,T,V,java.util.List)\">"
+                + "methodOverriddenFromParent</a></code>&nbsp;in class&nbsp;<code>"
                 + "<a href=\"PrivateParent.html\" title=\"class in pkg\">"
                 + "PrivateParent</a></code></dd>",
                 // Should document that a method is specified by private interface.
-                "<dt><span class=\"overrideSpecifyLabel\">Specified by:</span></dt>\n"
+                "<dt>Specified by:</dt>\n"
                 + "<dd><code><a href=\"PrivateInterface.html#methodInterface(int)\">"
                 + "methodInterface</a></code>&nbsp;in interface&nbsp;<code>"
                 + "<a href=\"PrivateInterface.html\" title=\"interface in pkg\">"
                 + "PrivateInterface</a></code></dd>",
                 // Should mention that any documentation was copied.
                 "Description copied from",
                 // Extend documented private classes or interfaces
                 "extends",
-                "<dl>\n"
+                "<dl class=\"notes\">\n"
                 + "<dt>All Implemented Interfaces:</dt>\n"
                 + "<dd><code><a href=\"PrivateInterface.html\" title=\"interface in pkg\">"
                 + "PrivateInterface</a></code>, "
                 + "<code><a href=\"PublicInterface.html\" title=\"interface in pkg\">"
                 + "PublicInterface</a></code></dd>\n"
                 + "</dl>",
-                "<pre>public class <span class=\"typeNameLabel\">PublicChild</span>");
+                "<pre>public class <span class=\"type-name-label\">PublicChild</span>");
 
         checkOutput("pkg/PublicInterface.html", true,
                 // Field inheritence from non-public superinterface.
                 "Fields inherited from interface&nbsp;pkg."
                 + "<a href=\"PrivateInterface.html\" title=\"interface in pkg\">"
@@ -197,11 +197,11 @@
                 + "PrivateInterface</a>",
                 // Extend documented private classes or interfaces
                 "extends",
                 "All Superinterfaces",
                 //Make sure implemented interfaces from private superclass are inherited
-                "<dl>\n"
+                "<dl class=\"notes\">\n"
                 + "<dt>All Known Implementing Classes:</dt>\n"
                 + "<dd><code><a href=\"PrivateParent.html\" title=\"class in pkg\">"
                 + "PrivateParent</a></code>, "
                 + "<code><a href=\"PublicChild.html\" title=\"class in pkg\">PublicChild"
                 + "</a></code></dd>\n"
@@ -213,22 +213,22 @@
         );
 
         checkOutput("pkg2/C.html", true,
                 //Since private flag is used, we can document that private interface method
                 //with generic parameters has been implemented.
-                "<span class=\"descfrmTypeLabel\">Description copied from interface:&nbsp;<code>"
+                "<span class=\"descfrm-type-label\">Description copied from interface:&nbsp;<code>"
                 + "<a href=\"I.html#hello(T)\">I</a></code></span>",
-                "<dt><span class=\"overrideSpecifyLabel\">Specified by:</span></dt>\n"
+                "<dt>Specified by:</dt>\n"
                 + "<dd><code><a href=\"I.html#hello(T)\">hello</a></code>"
                 + "&nbsp;in interface&nbsp;<code>"
                 + "<a href=\"I.html\" title=\"interface in pkg2\">I</a>"
                 + "&lt;java.lang.String&gt;</code></dd>");
 
         checkOutput("pkg/PrivateParent.html", true,
                 //Make sure when no modifier appear in the class signature, the
                 //signature is displayed correctly without extra space at the beginning.
-                "<pre>class <span class=\"typeNameLabel\">PrivateParent</span>");
+                "<pre>class <span class=\"type-name-label\">PrivateParent</span>");
 
         checkOutput("pkg/PrivateParent.html", false,
-                "<pre> class <span class=\"typeNameLabel\">PrivateParent</span>");
+                "<pre> class <span class=\"type-name-label\">PrivateParent</span>");
     }
 }
