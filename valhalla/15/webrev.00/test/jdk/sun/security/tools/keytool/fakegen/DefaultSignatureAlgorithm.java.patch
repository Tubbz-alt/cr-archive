diff a/test/jdk/sun/security/tools/keytool/fakegen/DefaultSignatureAlgorithm.java b/test/jdk/sun/security/tools/keytool/fakegen/DefaultSignatureAlgorithm.java
--- a/test/jdk/sun/security/tools/keytool/fakegen/DefaultSignatureAlgorithm.java
+++ b/test/jdk/sun/security/tools/keytool/fakegen/DefaultSignatureAlgorithm.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2019, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -85,16 +85,17 @@
         Asserts.assertEQ(cert.getSigAlgName(), expectedSigAlg);
     }
 
     static OutputAnalyzer genkeypair(String alias, String options)
             throws Exception {
-        String patchArg = "-J--patch-module=java.base="
+        String patchArg = "-J-Djdk.sunec.disableNative=false " +
+                "-J--patch-module=java.base="
                 + System.getProperty("test.classes")
                 + File.separator + "patches" + File.separator + "java.base"
                 + " -J--patch-module=jdk.crypto.ec="
                 + System.getProperty("test.classes")
-                + File.separator + "patches" + File.separator + "jdk.crypto.ec";;
+                + File.separator + "patches" + File.separator + "jdk.crypto.ec";
         return kt(patchArg + " -genkeypair -alias " + alias
                 + " -dname CN=" + alias + " " + options);
     }
 
     static OutputAnalyzer kt(String cmd)
