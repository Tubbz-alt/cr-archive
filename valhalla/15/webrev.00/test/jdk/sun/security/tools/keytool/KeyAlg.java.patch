diff a/test/jdk/sun/security/tools/keytool/KeyAlg.java b/test/jdk/sun/security/tools/keytool/KeyAlg.java
--- a/test/jdk/sun/security/tools/keytool/KeyAlg.java
+++ b/test/jdk/sun/security/tools/keytool/KeyAlg.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2014, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2014, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -39,11 +39,13 @@
         keytool("-gencert -alias ca -rfc -sigalg SHA1withECDSA"
                 + " -infile user.req -outfile user.crt");
         keytool("-printcert -file user.crt")
                 .shouldMatch("Signature algorithm name:.*SHA1withECDSA")
                 .shouldMatch("Subject Public Key Algorithm:.*1024.*RSA");
-        keytool("-genkeypair -alias e -dname CN=e -keyalg EC -groupname brainpoolP256r1")
+        keytool("-genkeypair -alias e -dname CN=e " +
+                "-J-Djdk.sunec.disableNative=false -keyalg EC " +
+                        "-groupname brainpoolP256r1")
                 .shouldContain("Generating 256 bit EC (brainpoolP256r1) key pair");
         keytool("-genkeypair -alias f -dname CN=f -keyalg EC")
                 .shouldContain("Generating 256 bit EC (secp256r1) key pair");
         keytool("-genkeypair -alias g -dname CN=g -keyalg EC -keysize 384")
                 .shouldContain("Generating 384 bit EC (secp384r1) key pair");
