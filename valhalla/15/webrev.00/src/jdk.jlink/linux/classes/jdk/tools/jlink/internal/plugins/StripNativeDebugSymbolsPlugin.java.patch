diff a/src/jdk.jlink/linux/classes/jdk/tools/jlink/internal/plugins/StripNativeDebugSymbolsPlugin.java b/src/jdk.jlink/linux/classes/jdk/tools/jlink/internal/plugins/StripNativeDebugSymbolsPlugin.java
--- a/src/jdk.jlink/linux/classes/jdk/tools/jlink/internal/plugins/StripNativeDebugSymbolsPlugin.java
+++ b/src/jdk.jlink/linux/classes/jdk/tools/jlink/internal/plugins/StripNativeDebugSymbolsPlugin.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2019, Red Hat, Inc.
+ * Copyright (c) 2019, 2020, Red Hat, Inc.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -22,10 +22,11 @@
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */
 package jdk.tools.jlink.internal.plugins;
 
+import java.io.InputStream;
 import java.io.IOException;
 import java.lang.ProcessBuilder.Redirect;
 import java.nio.file.FileVisitResult;
 import java.nio.file.Files;
 import java.nio.file.InvalidPathException;
@@ -311,11 +312,14 @@
                 String relativeFileName = resPath.getFileName().toString();
                 tempDir = Files.createTempDirectory(NAME + relativeFileName);
                 Path resourceFileBinary = tempDir.resolve(relativeFileName);
                 String relativeDbgFileName = relativeFileName + "." + debugExt;
 
-                Files.write(resourceFileBinary, resource.contentBytes());
+                try (InputStream in = resource.content()) {
+                    Files.copy(in, resourceFileBinary);
+                }
+
                 Path resourceFileDebugSymbols;
                 if (includeDebug) {
                     resourceFileDebugSymbols = tempDir.resolve(Paths.get(relativeDbgFileName));
                     String debugEntryPath = resource.path() + "." + debugExt;
                     byte[] debugInfoBytes = createDebugSymbolsFile(resourceFileBinary,
