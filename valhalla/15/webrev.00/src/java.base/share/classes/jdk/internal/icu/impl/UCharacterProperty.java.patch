diff a/src/java.base/share/classes/jdk/internal/icu/impl/UCharacterProperty.java b/src/java.base/share/classes/jdk/internal/icu/impl/UCharacterProperty.java
--- a/src/java.base/share/classes/jdk/internal/icu/impl/UCharacterProperty.java
+++ b/src/java.base/share/classes/jdk/internal/icu/impl/UCharacterProperty.java
@@ -65,22 +65,22 @@
      * public singleton instance
      */
     public static final UCharacterProperty INSTANCE;
 
     /**
-    * Trie data
-    */
+     * Trie data
+     */
     public Trie2_16 m_trie_;
 
     /**
-    * Unicode version
-    */
+     * Unicode version
+     */
     public VersionInfo m_unicodeVersion_;
 
     /**
-    * Character type mask
-    */
+     * Character type mask
+     */
     public static final int TYPE_MASK = 0x1F;
 
     // uprops.h enum UPropertySource --------------------------------------- ***
 
     /** From uchar.c/uprops.icu main trie */
@@ -95,14 +95,14 @@
     public static final int SRC_NFKC=9;
 
     // public methods ----------------------------------------------------
 
     /**
-    * Gets the main property value for code point ch.
-    * @param ch code point whose property value is to be retrieved
-    * @return property value of code point
-    */
+     * Gets the main property value for code point ch.
+     * @param ch code point whose property value is to be retrieved
+     * @return property value of code point
+     */
     public final int getProperty(int ch)
     {
         return m_trie_.get(ch);
     }
 
@@ -226,17 +226,17 @@
         }
         return 0; // undefined
     }
 
     /**
-    * Forms a supplementary code point from the argument character<br>
-    * Note this is for internal use hence no checks for the validity of the
-    * surrogate characters are done
-    * @param lead lead surrogate character
-    * @param trail trailing surrogate character
-    * @return code point of the supplementary character
-    */
+     * Forms a supplementary code point from the argument character<br>
+     * Note this is for internal use hence no checks for the validity of the
+     * surrogate characters are done
+     * @param lead lead surrogate character
+     * @param trail trailing surrogate character
+     * @return code point of the supplementary character
+     */
     public static int getRawSupplementary(char lead, char trail)
     {
         return (lead << LEAD_SURROGATE_SHIFT_) + trail + SURROGATE_OFFSET_;
     }
 
@@ -316,25 +316,25 @@
     public char[] m_scriptExtensions_;
 
     // private variables -------------------------------------------------
 
     /**
-    * Default name of the datafile
-    */
+     * Default name of the datafile
+     */
     @SuppressWarnings("deprecation")
     private static final String DATA_FILE_NAME_ =
             "/jdk/internal/icu/impl/data/icudt" +
             VersionInfo.ICU_DATA_VERSION_PATH +
             "/uprops.icu";
 
     /**
-    * Shift value for lead surrogate to form a supplementary character.
-    */
+     * Shift value for lead surrogate to form a supplementary character.
+     */
     private static final int LEAD_SURROGATE_SHIFT_ = 10;
     /**
-    * Offset to add to combined surrogate pair to avoid masking.
-    */
+     * Offset to add to combined surrogate pair to avoid masking.
+     */
     private static final int SURROGATE_OFFSET_ =
                            UTF16.SUPPLEMENTARY_MIN_VALUE -
                            (UTF16.SURROGATE_MIN_VALUE <<
                            LEAD_SURROGATE_SHIFT_) -
                            UTF16.TRAIL_SURROGATE_MIN_VALUE;
