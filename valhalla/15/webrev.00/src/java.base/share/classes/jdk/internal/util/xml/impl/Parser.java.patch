diff a/src/java.base/share/classes/jdk/internal/util/xml/impl/Parser.java b/src/java.base/share/classes/jdk/internal/util/xml/impl/Parser.java
--- a/src/java.base/share/classes/jdk/internal/util/xml/impl/Parser.java
+++ b/src/java.base/share/classes/jdk/internal/util/xml/impl/Parser.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2012, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2012, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -2989,11 +2989,11 @@
      * @exception IOException
      */
     private Reader utf16(InputStream is)
             throws Exception {
         if (mChIdx != 0) {
-            //The bom method has read ONE byte into the buffer.
+            // The bom method has read ONE byte into the buffer.
             byte b0 = (byte)mChars[0];
             if (b0 == 0x00 || b0 == 0x3C) {
                 int b1 = is.read();
                 int b2 = is.read();
                 int b3 = is.read();
@@ -3006,13 +3006,13 @@
                     // UTF-16, little-endian, no BOM
                     mChars[0] = (char)(b0);
                     mChars[mChIdx++] = (char)(b2);
                     return new ReaderUTF16(is, 'l');
                 } else {
-                    /**not every InputStream supports reset, so we have to remember
+                    /* not every InputStream supports reset, so we have to remember
                      * the state for further parsing
-                    **/
+                     */
                     mChars[0] = (char)(b0);
                     mChars[mChIdx++] = (char)(b1);
                     mChars[mChIdx++] = (char)(b2);
                     mChars[mChIdx++] = (char)(b3);
                 }
