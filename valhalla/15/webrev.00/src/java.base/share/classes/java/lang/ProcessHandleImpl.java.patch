diff a/src/java.base/share/classes/java/lang/ProcessHandleImpl.java b/src/java.base/share/classes/java/lang/ProcessHandleImpl.java
--- a/src/java.base/share/classes/java/lang/ProcessHandleImpl.java
+++ b/src/java.base/share/classes/java/lang/ProcessHandleImpl.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2014, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2014, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -317,11 +317,11 @@
      * @param pid if {@code pid} equals zero, then all known processes are returned;
      *      otherwise only direct child process pids are returned
      * @param pids an allocated long array to receive the pids
      * @param ppids an allocated long array to receive the parent pids; may be null
      * @param starttimes an allocated long array to receive the child start times; may be null
-     * @return if greater than or equals to zero is the number of pids in the array;
+     * @return if greater than or equal to zero is the number of pids in the array;
      *      if greater than the length of the arrays, the arrays are too small
      */
     private static native int getProcessPids0(long pid, long[] pids,
                                               long[] ppids, long[] starttimes);
 
@@ -338,18 +338,18 @@
         }
         return destroy0(pid, startTime, force);
     }
 
     /**
-      * Signal the process to terminate.
-      * The process is signaled only if its start time matches the known start time.
-      *
-      * @param pid  process id to kill
-      * @param startTime the start time of the process
-      * @param forcibly true to forcibly terminate (SIGKILL vs SIGTERM)
-      * @return true if the process was signaled without error; false otherwise
-      */
+     * Signal the process to terminate.
+     * The process is signaled only if its start time matches the known start time.
+     *
+     * @param pid  process id to kill
+     * @param startTime the start time of the process
+     * @param forcibly true to forcibly terminate (SIGKILL vs SIGTERM)
+     * @return true if the process was signaled without error; false otherwise
+     */
     private static native boolean destroy0(long pid, long startTime, boolean forcibly);
 
     @Override
     public boolean destroy() {
         return destroyProcess(false);
