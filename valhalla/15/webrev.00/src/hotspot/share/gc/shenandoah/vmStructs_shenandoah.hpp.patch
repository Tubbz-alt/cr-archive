diff a/src/hotspot/share/gc/shenandoah/vmStructs_shenandoah.hpp b/src/hotspot/share/gc/shenandoah/vmStructs_shenandoah.hpp
--- a/src/hotspot/share/gc/shenandoah/vmStructs_shenandoah.hpp
+++ b/src/hotspot/share/gc/shenandoah/vmStructs_shenandoah.hpp
@@ -35,11 +35,14 @@
   volatile_nonstatic_field(ShenandoahHeap, _used,                  size_t)                            \
   volatile_nonstatic_field(ShenandoahHeap, _committed,             size_t)                            \
   static_field(ShenandoahHeapRegion, RegionSizeBytes,              size_t)                            \
   static_field(ShenandoahHeapRegion, RegionSizeBytesShift,         size_t)                            \
   nonstatic_field(ShenandoahHeapRegion, _state,                    ShenandoahHeapRegion::RegionState) \
-  nonstatic_field(ShenandoahHeapRegion, _region_number,            size_t)                            \
+  nonstatic_field(ShenandoahHeapRegion, _region_number,            size_t const)                      \
+  nonstatic_field(ShenandoahHeapRegion, _bottom,                   HeapWord* const)                   \
+  nonstatic_field(ShenandoahHeapRegion, _top,                      HeapWord*)                         \
+  nonstatic_field(ShenandoahHeapRegion, _end,                      HeapWord* const)                   \
 
 #define VM_INT_CONSTANTS_SHENANDOAH(declare_constant, declare_constant_with_value) \
   declare_constant(ShenandoahHeapRegion::_empty_uncommitted)                       \
   declare_constant(ShenandoahHeapRegion::_empty_committed)                         \
   declare_constant(ShenandoahHeapRegion::_regular)                                 \
@@ -53,11 +56,11 @@
 
 #define VM_TYPES_SHENANDOAH(declare_type,                                     \
                             declare_toplevel_type,                            \
                             declare_integer_type)                             \
   declare_type(ShenandoahHeap, CollectedHeap)                                 \
-  declare_type(ShenandoahHeapRegion, ContiguousSpace)                         \
+  declare_toplevel_type(ShenandoahHeapRegion)                                 \
   declare_toplevel_type(ShenandoahHeap*)                                      \
   declare_toplevel_type(ShenandoahHeapRegion*)                                \
   declare_toplevel_type(ShenandoahHeapRegion::RegionState)                    \
 
 #endif // SHARE_GC_SHENANDOAH_VMSTRUCTS_SHENANDOAH_HPP
