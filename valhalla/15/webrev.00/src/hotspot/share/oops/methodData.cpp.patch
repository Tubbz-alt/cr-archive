diff a/src/hotspot/share/oops/methodData.cpp b/src/hotspot/share/oops/methodData.cpp
--- a/src/hotspot/share/oops/methodData.cpp
+++ b/src/hotspot/share/oops/methodData.cpp
@@ -407,32 +407,10 @@
       clear_row(row);
     }
   }
 }
 
-#if INCLUDE_JVMCI
-void VirtualCallData::clean_weak_klass_links(bool always_clean) {
-  ReceiverTypeData::clean_weak_klass_links(always_clean);
-  for (uint row = 0; row < method_row_limit(); row++) {
-    Method* p = method(row);
-    if (p != NULL && (always_clean || !p->method_holder()->is_loader_alive())) {
-      clear_method_row(row);
-    }
-  }
-}
-
-void VirtualCallData::clean_weak_method_links() {
-  ReceiverTypeData::clean_weak_method_links();
-  for (uint row = 0; row < method_row_limit(); row++) {
-    Method* p = method(row);
-    if (p != NULL && p->is_old()) {
-      clear_method_row(row);
-    }
-  }
-}
-#endif // INCLUDE_JVMCI
-
 void ReceiverTypeData::print_receiver_data_on(outputStream* st) const {
   uint row;
   int entries = 0;
   for (row = 0; row < row_limit(); row++) {
     if (receiver(row) != NULL)  entries++;
@@ -459,39 +437,13 @@
 void ReceiverTypeData::print_data_on(outputStream* st, const char* extra) const {
   print_shared(st, "ReceiverTypeData", extra);
   print_receiver_data_on(st);
 }
 
-#if INCLUDE_JVMCI
-void VirtualCallData::print_method_data_on(outputStream* st) const {
-  uint row;
-  int entries = 0;
-  for (row = 0; row < method_row_limit(); row++) {
-    if (method(row) != NULL) entries++;
-  }
-  tab(st);
-  st->print_cr("method_entries(%u)", entries);
-  int total = count();
-  for (row = 0; row < method_row_limit(); row++) {
-    if (method(row) != NULL) {
-      total += method_count(row);
-    }
-  }
-  for (row = 0; row < method_row_limit(); row++) {
-    if (method(row) != NULL) {
-      tab(st);
-      method(row)->print_value_on(st);
-      st->print_cr("(%u %4.2f)", method_count(row), (float) method_count(row) / (float) total);
-    }
-  }
-}
-#endif // INCLUDE_JVMCI
-
 void VirtualCallData::print_data_on(outputStream* st, const char* extra) const {
   print_shared(st, "VirtualCallData", extra);
   print_receiver_data_on(st);
-  print_method_data_on(st);
 }
 
 // ==================================================================
 // RetData
 //
