diff a/src/demo/share/jfc/SwingSet2/LayoutControlPanel.java b/src/demo/share/jfc/SwingSet2/LayoutControlPanel.java
--- a/src/demo/share/jfc/SwingSet2/LayoutControlPanel.java
+++ b/src/demo/share/jfc/SwingSet2/LayoutControlPanel.java
@@ -102,11 +102,11 @@
         labelAlignment = new DirectionPanel(true, "C", new LabelAlignmentListener());
 
         // Make sure the controls' text position and label alignment match
         // the initial value of the associated direction panel.
         for(int i = 0; i < demo.getCurrentControls().size(); i++) {
-            Component c = (Component) demo.getCurrentControls().elementAt(i);
+            Component c = demo.getCurrentControls().elementAt(i);
             setPosition(c, RIGHT, CENTER);
             setAlignment(c,CENTER,CENTER);
         }
 
         l = new JLabel(demo.getString("LayoutControlPanel.textposition_label"));
@@ -171,11 +171,11 @@
             } else if(rb.getText().equals("Relative") && rb.isSelected()) {
                 absolutePositions = false;
             }
 
             for(int i = 0; i < demo.getCurrentControls().size(); i++) {
-                Component c = (Component) demo.getCurrentControls().elementAt(i);
+                Component c = demo.getCurrentControls().elementAt(i);
                 int hPos, vPos, hAlign, vAlign;
                 if( c instanceof AbstractButton ) {
                    hPos = ((AbstractButton)c).getHorizontalTextPosition();
                    vPos = ((AbstractButton)c).getVerticalTextPosition();
                    hAlign = ((AbstractButton)c).getHorizontalAlignment();
@@ -226,11 +226,11 @@
                     hPos = CENTER; vPos = BOTTOM;
             } else /*if(cmd.equals("SE"))*/ {
                     hPos = RIGHT; vPos = BOTTOM;
             }
             for(int i = 0; i < demo.getCurrentControls().size(); i++) {
-                Component c = (Component) demo.getCurrentControls().elementAt(i);
+                Component c = demo.getCurrentControls().elementAt(i);
                 setPosition(c, hPos, vPos);
             }
             demo.invalidate();
             demo.validate();
             demo.repaint();
@@ -265,11 +265,11 @@
                     hPos = CENTER; vPos = BOTTOM;
             } else /*if(cmd.equals("SE"))*/ {
                     hPos = RIGHT; vPos = BOTTOM;
             }
             for(int i = 0; i < demo.getCurrentControls().size(); i++) {
-                Component c = (Component) demo.getCurrentControls().elementAt(i);
+                Component c = demo.getCurrentControls().elementAt(i);
                 setAlignment(c,hPos,vPos);
                 c.invalidate();
             }
             demo.invalidate();
             demo.validate();
