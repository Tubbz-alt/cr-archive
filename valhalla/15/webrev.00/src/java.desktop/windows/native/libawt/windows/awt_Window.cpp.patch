diff a/src/java.desktop/windows/native/libawt/windows/awt_Window.cpp b/src/java.desktop/windows/native/libawt/windows/awt_Window.cpp
--- a/src/java.desktop/windows/native/libawt/windows/awt_Window.cpp
+++ b/src/java.desktop/windows/native/libawt/windows/awt_Window.cpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1996, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1996, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -2532,12 +2532,12 @@
             // enforce tresholds before sending the event
             // Fix for 4459064 : do not enforce thresholds for embedded frames
             if (!p->IsEmbeddedFrame())
             {
                 jobject peer = p->GetPeer(env);
-                int minWidth = ::GetSystemMetrics(SM_CXMIN);
-                int minHeight = ::GetSystemMetrics(SM_CYMIN);
+                int minWidth = p->ScaleDownX(::GetSystemMetrics(SM_CXMIN));
+                int minHeight = p->ScaleDownY(::GetSystemMetrics(SM_CYMIN));
                 if (w < minWidth)
                 {
                     env->SetIntField(target, AwtComponent::widthID,
                         w = minWidth);
                     env->SetIntField(peer, AwtWindow::sysWID,
@@ -3824,11 +3824,11 @@
     OpacityStruct *os = new OpacityStruct;
     os->window = env->NewGlobalRef(self);
     os->iOpacity = iOpacity;
 
     AwtToolkit::GetInstance().SyncCall(AwtWindow::_SetOpacity, os);
-    // global refs and mds are deleted in _SetMinSize
+    // global refs and mds are deleted in _SetOpacity
 
     CATCH_BAD_ALLOC;
 }
 
 /*
@@ -3845,11 +3845,11 @@
     OpaqueStruct *os = new OpaqueStruct;
     os->window = env->NewGlobalRef(self);
     os->isOpaque = isOpaque;
 
     AwtToolkit::GetInstance().SyncCall(AwtWindow::_SetOpaque, os);
-    // global refs and mds are deleted in _SetMinSize
+    // global refs and mds are deleted in _SetOpaque
 
     CATCH_BAD_ALLOC;
 }
 
 /*
