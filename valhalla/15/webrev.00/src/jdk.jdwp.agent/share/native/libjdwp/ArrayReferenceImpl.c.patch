diff a/src/jdk.jdwp.agent/share/native/libjdwp/ArrayReferenceImpl.c b/src/jdk.jdwp.agent/share/native/libjdwp/ArrayReferenceImpl.c
--- a/src/jdk.jdwp.agent/share/native/libjdwp/ArrayReferenceImpl.c
+++ b/src/jdk.jdwp.agent/share/native/libjdwp/ArrayReferenceImpl.c
@@ -411,10 +411,13 @@
 static jdwpError
 readLongComponents(JNIEnv *env, PacketInputStream *in,
                    jarray array, int index, int length)
 {
     int i;
+#if defined (_WIN32) && defined (_MSC_VER)
+    __declspec(align(8))
+#endif
     jlong component;
 
     for (i = 0; (i < length) && !inStream_error(in); i++) {
         component = inStream_readLong(in);
         JNI_FUNC_PTR(env,SetLongArrayRegion)(env, array, index + i, 1, &component);
@@ -439,10 +442,13 @@
 static jdwpError
 readDoubleComponents(JNIEnv *env, PacketInputStream *in,
                    jarray array, int index, int length)
 {
     int i;
+#if defined (_WIN32) && defined (_MSC_VER)
+    __declspec(align(8))
+#endif
     jdouble component;
 
     for (i = 0; (i < length) && !inStream_error(in); i++) {
         component = inStream_readDouble(in);
         JNI_FUNC_PTR(env,SetDoubleArrayRegion)(env, array, index + i, 1, &component);
@@ -522,11 +528,11 @@
         componentSignature = &signature[1];
 
         switch (componentSignature[0]) {
             case JDWP_TAG(OBJECT):
             case JDWP_TAG(ARRAY):
-	    case JDWP_TAG(INLINE_OBJECT):
+            case JDWP_TAG(INLINE_OBJECT):
                 serror = readObjectComponents(env, in, array, index, length);
                 break;
 
             case JDWP_TAG(BYTE):
                 serror = readByteComponents(env, in, array, index, length);
