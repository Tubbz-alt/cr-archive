diff a/src/hotspot/share/oops/arrayStorageProperties.hpp b/src/hotspot/share/oops/arrayStorageProperties.hpp
--- a/src/hotspot/share/oops/arrayStorageProperties.hpp
+++ b/src/hotspot/share/oops/arrayStorageProperties.hpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2019, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -49,30 +49,21 @@
   ArrayStorageProperties() : _flags(empty_value) {};
   ArrayStorageProperties(uint8_t flags): _flags(flags) {};
 
   bool is_empty() const { return _flags == empty_value; }
 
-  void clear_flattened()    { clear_flags_bits(flattened_value); }
-
   bool is_flattened() const { return test_flags_bit(flattened_bit); }
-  void set_flattened()      { set_flags_bits(flattened_value); }
 
   bool is_null_free() const { return test_flags_bit(null_free_bit); }
-  void set_null_free()      { set_flags_bits(null_free_value); }
 
   uint8_t value() const { return _flags; }
   template <typename T> T encode(int shift) const { return static_cast<T>(_flags) << shift; }
 
   // Well-known constants...
   static const ArrayStorageProperties empty;
-  static const ArrayStorageProperties flattened;
   static const ArrayStorageProperties null_free;
   static const ArrayStorageProperties flattened_and_null_free;
 
-  static ArrayStorageProperties for_signature(Symbol* sig) {
-    return (sig->is_Q_array_signature() || sig->is_Q_signature()) ?
-      ArrayStorageProperties::flattened_and_null_free : ArrayStorageProperties::empty;
-  }
 };
 
 
 #endif //SHARE_OOPS_ARRAYSTORAGEPROPERTIES_HPP
