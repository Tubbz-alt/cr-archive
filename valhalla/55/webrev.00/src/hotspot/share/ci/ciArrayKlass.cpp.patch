diff a/src/hotspot/share/ci/ciArrayKlass.cpp b/src/hotspot/share/ci/ciArrayKlass.cpp
--- a/src/hotspot/share/ci/ciArrayKlass.cpp
+++ b/src/hotspot/share/ci/ciArrayKlass.cpp
@@ -99,28 +99,24 @@
 
 // ------------------------------------------------------------------
 // ciArrayKlass::base_element_type
 //
 // What type is obtained when this array is indexed as many times as possible?
-ciArrayKlass* ciArrayKlass::make(ciType* element_type, bool never_null) {
+ciArrayKlass* ciArrayKlass::make(ciType* element_type) {
   if (element_type->is_primitive_type()) {
     return ciTypeArrayKlass::make(element_type->basic_type());
-  } else if (element_type->is_valuetype() && element_type->as_value_klass()->flatten_array() && never_null) {
+  } else if (element_type->is_valuetype() && element_type->as_value_klass()->flatten_array()) {
     return ciValueArrayKlass::make(element_type->as_klass());
   } else {
-    return ciObjArrayKlass::make(element_type->as_klass(), never_null);
+    return ciObjArrayKlass::make(element_type->as_klass());
   }
 }
 
 int ciArrayKlass::array_header_in_bytes() {
   return get_ArrayKlass()->array_header_in_bytes();
 }
 
-ArrayStorageProperties ciArrayKlass::storage_properties() {
-  return get_ArrayKlass()->storage_properties();
-}
-
 ciInstance* ciArrayKlass::component_mirror_instance() const {
   GUARDED_VM_ENTRY(
     oop component_mirror = ArrayKlass::cast(get_Klass())->component_mirror();
     return CURRENT_ENV->get_instance(component_mirror);
   )
