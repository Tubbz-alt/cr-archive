diff a/src/hotspot/share/ci/ciInstanceKlass.cpp b/src/hotspot/share/ci/ciInstanceKlass.cpp
--- a/src/hotspot/share/ci/ciInstanceKlass.cpp
+++ b/src/hotspot/share/ci/ciInstanceKlass.cpp
@@ -678,11 +678,11 @@
       is_valuetype() || // Known to be a value klass
       // Non-exact j.l.Object or interface klass
       ((is_java_lang_Object() || is_interface()) && !is_exact)) {
     return true;
   }
-  if (is_abstract() && !has_nonstatic_fields()) {
+  if (is_abstract() && !is_exact && !has_nonstatic_fields()) {
     // TODO Factor out and re-use similar code from the ClassFileParser
     // An abstract class can only be implemented by a value type if it has no instance
     // fields, no synchronized instance methods and an empty, no-arg constructor.
     VM_ENTRY_MARK;
     Array<Method*>* methods = get_instanceKlass()->methods();
