diff a/src/hotspot/share/opto/type.hpp b/src/hotspot/share/opto/type.hpp
--- a/src/hotspot/share/opto/type.hpp
+++ b/src/hotspot/share/opto/type.hpp
@@ -1148,14 +1148,10 @@
   virtual int  hash() const;             // Type specific hashing
 
   ciSymbol*  _name;        // class name
   bool _flat_array;
 
-  bool meet_flat_array(bool other_flat_array) const {
-    return (_flat_array && other_flat_array) ? true : false;
-  }
-
  public:
   ciSymbol* name()         const { return _name; }
 
   bool  is_loaded() const { return _klass->is_loaded(); }
 
@@ -1194,11 +1190,11 @@
   const Type* get_const_boxed_value() const;
 
   // If this is a java.lang.Class constant, return the type for it or NULL.
   // Pass to Type::get_const_type to turn it to a type, which will usually
   // be a TypeInstPtr, but may also be a TypeInt::INT for int.class, etc.
-  ciType* java_mirror_type(bool* is_indirect_type = NULL) const;
+  ciType* java_mirror_type() const;
 
   virtual const Type *cast_to_ptr_type(PTR ptr) const;
 
   virtual const Type *cast_to_exactness(bool klass_is_exact) const;
 
