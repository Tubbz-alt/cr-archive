diff a/src/hotspot/share/classfile/javaClasses.cpp b/src/hotspot/share/classfile/javaClasses.cpp
--- a/src/hotspot/share/classfile/javaClasses.cpp
+++ b/src/hotspot/share/classfile/javaClasses.cpp
@@ -1069,10 +1069,12 @@
         assert(super->access_flags().is_abstract(), "must be an abstract class");
         oop ref_type_oop = super->java_mirror();
         // set the reference projection type
         set_ref_type_mirror(mirror(), ref_type_oop);
 
+        assert(oopDesc::is_oop(ref_type_oop), "Sanity check");
+
         // set the value and reference projection types
         set_val_type_mirror(ref_type_oop, mirror());
         set_ref_type_mirror(ref_type_oop, ref_type_oop);
       }
     }
@@ -1126,10 +1128,11 @@
         _m()->short_field_put(fd->offset(), 0);
         break;
       case T_BOOLEAN:
         _m()->bool_field_put(fd->offset(), false);
         break;
+      case T_VALUETYPE:
       case T_ARRAY:
       case T_OBJECT: {
         // It might be useful to cache the String field, but
         // for now just clear out any reference field
         oop o = _m()->obj_field(fd->offset());
