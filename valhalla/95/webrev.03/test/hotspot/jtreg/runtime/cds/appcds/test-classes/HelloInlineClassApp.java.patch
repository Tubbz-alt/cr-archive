diff a/test/hotspot/jtreg/runtime/cds/appcds/test-classes/HelloInlineClassApp.java b/test/hotspot/jtreg/runtime/cds/appcds/test-classes/HelloInlineClassApp.java
--- a/test/hotspot/jtreg/runtime/cds/appcds/test-classes/HelloInlineClassApp.java
+++ b/test/hotspot/jtreg/runtime/cds/appcds/test-classes/HelloInlineClassApp.java
@@ -46,10 +46,18 @@
         Point add(Point p1, int x2, int y2, Point p3) {
             return new Point(x + p1.x + x2 + p3.x, y + p1.y + y2 + p3.y);
         }
     }
 
+    static inline class Rectangle {
+        Point p0 = new Point(0,0);
+        Point p1 = new Point(1,1);
+    }
+
+    Point point;
+    static Rectangle rectangle;
+
     public static void main(String[] args) throws Exception {
         Point p = new Point(0, 123);
         System.out.println("Point = " + p);
         String req = "(0, 123)";
         if (!p.toString().equals(req)) {
@@ -83,7 +91,17 @@
 
         if (p.x != expectedX || p.y != expectedY) {
             throw new RuntimeException("Expected (" + expectedX + ", " + expectedY + " but got " + p);
         }
 
+        Point pzero = new Point(0,0);
+        if (HelloInlineClassApp.rectangle.p0 != pzero || HelloInlineClassApp.rectangle.p1 != pzero) {
+            throw new RuntimeException("Static field rectangle not as expected");
+        }
+
+        HelloInlineClassApp app = new HelloInlineClassApp();
+        if (app.point != pzero) {
+            throw new RuntimeException("Non-static field point not as expected");
+        }
+
     }
 }
