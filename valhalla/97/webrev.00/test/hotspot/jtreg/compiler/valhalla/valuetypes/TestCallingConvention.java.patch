diff a/test/hotspot/jtreg/compiler/valhalla/valuetypes/TestCallingConvention.java b/test/hotspot/jtreg/compiler/valhalla/valuetypes/TestCallingConvention.java
--- a/test/hotspot/jtreg/compiler/valhalla/valuetypes/TestCallingConvention.java
+++ b/test/hotspot/jtreg/compiler/valhalla/valuetypes/TestCallingConvention.java
@@ -31,11 +31,11 @@
 /*
  * @test
  * @summary Test value type calling convention optimizations
  * @library /testlibrary /test/lib /compiler/whitebox /
  * @requires (os.simpleArch == "x64" | os.simpleArch == "aarch64")
- * @compile TestCallingConvention.java
+ * @compile -XDallowEmptyValues TestCallingConvention.java
  * @run driver ClassFileInstaller sun.hotspot.WhiteBox jdk.test.lib.Platform
  * @run main/othervm/timeout=300 -Xbootclasspath/a:. -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions
  *                               -XX:+UnlockExperimentalVMOptions -XX:+WhiteBoxAPI
  *                               compiler.valhalla.valuetypes.ValueTypeTest
  *                               compiler.valhalla.valuetypes.TestCallingConvention
@@ -784,6 +784,19 @@
     public void test37_verifier(boolean warmup) throws Throwable {
         Test37Value vt = new Test37Value();
         int res = test37(vt);
         Asserts.assertEQ(res, rI);
     }
+
+    // Test passing/returning an empty inline type
+    @Test(failOn = ALLOC + LOAD + STORE + TRAP)
+    public MyValueEmpty test38(MyValueEmpty vt) {
+        return vt.copy(vt);
+    }
+
+    @DontCompile
+    public void test38_verifier(boolean warmup) {
+        MyValueEmpty vt = new MyValueEmpty();
+        MyValueEmpty res = test38(vt);
+        Asserts.assertEQ(res, vt);
+    }
 }
