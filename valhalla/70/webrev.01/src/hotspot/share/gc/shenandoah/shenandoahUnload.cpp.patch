diff a/src/hotspot/share/gc/shenandoah/shenandoahUnload.cpp b/src/hotspot/share/gc/shenandoah/shenandoahUnload.cpp
--- a/src/hotspot/share/gc/shenandoah/shenandoahUnload.cpp
+++ b/src/hotspot/share/gc/shenandoah/shenandoahUnload.cpp
@@ -134,16 +134,10 @@
   assert(ShenandoahConcurrentRoots::can_do_concurrent_class_unloading(), "Sanity");
   CodeCache::increment_unloading_cycle();
   DependencyContext::cleaning_start();
 }
 
-class ShenandoahUnloadRendezvousClosure : public HandshakeClosure {
-public:
-  ShenandoahUnloadRendezvousClosure() : HandshakeClosure("ShenandoahUnloadRendezvous") {}
-  void do_thread(Thread* thread) {}
-};
-
 void ShenandoahUnload::unload() {
   ShenandoahHeap* heap = ShenandoahHeap::heap();
   assert(ShenandoahConcurrentRoots::can_do_concurrent_class_unloading(), "Filtered by caller");
   assert(heap->is_concurrent_weak_root_in_progress(), "Filtered by caller");
 
@@ -173,11 +167,11 @@
   }
 
   // Make sure stale metadata and nmethods are no longer observable
   {
     ShenandoahTimingsTracker t(ShenandoahPhaseTimings::conc_class_unload_rendezvous);
-    ShenandoahUnloadRendezvousClosure cl;
+    ShenandoahRendezvousClosure cl;
     Handshake::execute(&cl);
   }
 
   // Purge stale metadata and nmethods that were unlinked
   {
