diff a/src/hotspot/share/classfile/classLoaderStats.hpp b/src/hotspot/share/classfile/classLoaderStats.hpp
--- a/src/hotspot/share/classfile/classLoaderStats.hpp
+++ b/src/hotspot/share/classfile/classLoaderStats.hpp
@@ -100,15 +100,24 @@
   static bool oop_equals(oop const& s1, oop const& s2) {
     return s1 == s2;
   }
 
   static unsigned oop_hash(oop const& s1) {
-    unsigned hash = (unsigned)((uintptr_t)&s1);
-    return hash ^ (hash >> LogMinObjAlignment);
+    // Robert Jenkins 1996 & Thomas Wang 1997
+    // http://web.archive.org/web/20071223173210/http://www.concentric.net/~Ttwang/tech/inthash.htm
+    uintptr_t tmp = cast_from_oop<uintptr_t>(s1);
+    unsigned hash = (unsigned)tmp;
+    hash = ~hash + (hash << 15);
+    hash = hash ^ (hash >> 12);
+    hash = hash + (hash << 2);
+    hash = hash ^ (hash >> 4);
+    hash = hash * 2057;
+    hash = hash ^ (hash >> 16);
+    return hash;
   }
 
-  typedef ResourceHashtable<oop, ClassLoaderStats*,
+  typedef ResourceHashtable<oop, ClassLoaderStats,
       ClassLoaderStatsClosure::oop_hash, ClassLoaderStatsClosure::oop_equals> StatsTable;
 
   outputStream* _out;
   StatsTable* _stats;
   uintx   _total_loaders;
@@ -125,11 +134,11 @@
     _total_chunk_sz(0),
     _total_block_sz(0) {
   }
 
   virtual void do_cld(ClassLoaderData* cld);
-  virtual bool do_entry(oop const& key, ClassLoaderStats* const& cls);
+  virtual bool do_entry(oop const& key, ClassLoaderStats const& cls);
   void print();
 
 private:
   void addEmptyParents(oop cl);
 };
