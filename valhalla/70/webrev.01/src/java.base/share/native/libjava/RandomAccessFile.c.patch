diff a/src/java.base/share/native/libjava/RandomAccessFile.c b/src/java.base/share/native/libjava/RandomAccessFile.c
--- a/src/java.base/share/native/libjava/RandomAccessFile.c
+++ b/src/java.base/share/native/libjava/RandomAccessFile.c
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1997, 2015, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1997, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -92,11 +92,11 @@
 JNIEXPORT jlong JNICALL
 Java_java_io_RandomAccessFile_getFilePointer(JNIEnv *env, jobject this) {
     FD fd;
     jlong ret;
 
-    fd = GET_FD(this, raf_fd);
+    fd = getFD(env, this, raf_fd);
     if (fd == -1) {
         JNU_ThrowIOException(env, "Stream Closed");
         return -1;
     }
     if ((ret = IO_Lseek(fd, 0L, SEEK_CUR)) == -1) {
@@ -109,11 +109,11 @@
 Java_java_io_RandomAccessFile_length(JNIEnv *env, jobject this) {
 
     FD fd;
     jlong length = jlong_zero;
 
-    fd = GET_FD(this, raf_fd);
+    fd = getFD(env, this, raf_fd);
     if (fd == -1) {
         JNU_ThrowIOException(env, "Stream Closed");
         return -1;
     }
     if ((length = IO_GetLength(fd)) == -1) {
@@ -126,11 +126,11 @@
 Java_java_io_RandomAccessFile_seek0(JNIEnv *env,
                     jobject this, jlong pos) {
 
     FD fd;
 
-    fd = GET_FD(this, raf_fd);
+    fd = getFD(env, this, raf_fd);
     if (fd == -1) {
         JNU_ThrowIOException(env, "Stream Closed");
         return;
     }
     if (pos < jlong_zero) {
@@ -145,11 +145,11 @@
                                         jlong newLength)
 {
     FD fd;
     jlong cur;
 
-    fd = GET_FD(this, raf_fd);
+    fd = getFD(env, this, raf_fd);
     if (fd == -1) {
         JNU_ThrowIOException(env, "Stream Closed");
         return;
     }
     if ((cur = IO_Lseek(fd, 0L, SEEK_CUR)) == -1) goto fail;
