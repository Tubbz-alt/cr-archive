diff a/src/java.base/share/classes/sun/security/rsa/PSSParameters.java b/src/java.base/share/classes/sun/security/rsa/PSSParameters.java
--- a/src/java.base/share/classes/sun/security/rsa/PSSParameters.java
+++ b/src/java.base/share/classes/sun/security/rsa/PSSParameters.java
@@ -97,11 +97,11 @@
                 mdName = AlgorithmId.parse
                     (d.data.getDerValue()).getName();
             } else if (d.isContextSpecific((byte) 0x01)) {
                 // mgf algid
                 AlgorithmId val = AlgorithmId.parse(d.data.getDerValue());
-                if (!val.getOID().equals(AlgorithmId.mgf1_oid)) {
+                if (!val.getOID().equals(AlgorithmId.MGF1_oid)) {
                     throw new IOException("Only MGF1 mgf is supported");
                 }
                 AlgorithmId params = AlgorithmId.parse(
                     new DerValue(val.getEncodedParams()));
                 String mgfDigestName = params.getName();
@@ -240,11 +240,11 @@
                     mgf1Spec.getDigestAlgorithm() + " impl not found");
         }
 
         if (!mgfDigestId.getOID().equals(AlgorithmId.SHA_oid)) {
             tmp2 = new DerOutputStream();
-            tmp2.putOID(AlgorithmId.mgf1_oid);
+            tmp2.putOID(AlgorithmId.MGF1_oid);
             mgfDigestId.encode(tmp2);
             tmp3 = new DerOutputStream();
             tmp3.write(DerValue.tag_Sequence, tmp2);
             tmp.write(DerValue.createTag(DerValue.TAG_CONTEXT, true, (byte) 1),
                     tmp3);
