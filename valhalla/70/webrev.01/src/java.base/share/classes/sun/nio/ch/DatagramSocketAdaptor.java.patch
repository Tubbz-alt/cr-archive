diff a/src/java.base/share/classes/sun/nio/ch/DatagramSocketAdaptor.java b/src/java.base/share/classes/sun/nio/ch/DatagramSocketAdaptor.java
--- a/src/java.base/share/classes/sun/nio/ch/DatagramSocketAdaptor.java
+++ b/src/java.base/share/classes/sun/nio/ch/DatagramSocketAdaptor.java
@@ -72,11 +72,11 @@
 
     // Timeout "option" value for receives
     private volatile int timeout;
 
     private DatagramSocketAdaptor(DatagramChannelImpl dc) throws IOException {
-        super(/*SocketAddress*/null);
+        super(/*SocketAddress*/ DatagramSockets.NO_DELEGATE);
         this.dc = dc;
     }
 
     static DatagramSocket create(DatagramChannelImpl dc) {
         try {
@@ -767,6 +767,26 @@
             } catch (Throwable e) {
                 throw new InternalError(e);
             }
         }
     }
+
+    /**
+     * Provides access to the value of the private static DatagramSocket.NO_DELEGATE
+     */
+    private static class DatagramSockets {
+        private static final SocketAddress NO_DELEGATE;
+
+        static {
+            try {
+                PrivilegedExceptionAction<Lookup> pa = () ->
+                        MethodHandles.privateLookupIn(DatagramSocket.class, MethodHandles.lookup());
+                MethodHandles.Lookup l = AccessController.doPrivileged(pa);
+                NO_DELEGATE = (SocketAddress)
+                        l.findStaticVarHandle(DatagramSocket.class, "NO_DELEGATE",
+                                SocketAddress.class).get();
+            } catch (Exception e) {
+                throw new ExceptionInInitializerError(e);
+            }
+        }
+    }
 }
