diff a/src/java.base/share/classes/java/nio/channels/spi/SelectorProvider.java b/src/java.base/share/classes/java/nio/channels/spi/SelectorProvider.java
--- a/src/java.base/share/classes/java/nio/channels/spi/SelectorProvider.java
+++ b/src/java.base/share/classes/java/nio/channels/spi/SelectorProvider.java
@@ -34,10 +34,11 @@
 import java.nio.channels.ServerSocketChannel;
 import java.nio.channels.SocketChannel;
 import java.security.AccessController;
 import java.security.PrivilegedAction;
 import java.util.Iterator;
+import java.util.Objects;
 import java.util.ServiceLoader;
 import java.util.ServiceConfigurationError;
 
 /**
  * Service-provider class for selectors and selectable channels.
@@ -313,6 +314,53 @@
      */
     public Channel inheritedChannel() throws IOException {
         return null;
     }
 
+    /**
+     * Opens a socket channel.
+     *
+     * @implSpec The default implementation of this method first checks that
+     * the given protocol {@code family} is not {@code null},
+     * then throws {@link UnsupportedOperationException}.
+     *
+     * @param   family
+     *          The protocol family
+     *
+     * @return  The new channel
+     *
+     * @throws  UnsupportedOperationException
+     *          If the specified protocol family is not supported
+     * @throws  IOException
+     *          If an I/O error occurs
+     *
+     * @since 15
+     */
+    public SocketChannel openSocketChannel(ProtocolFamily family) throws IOException {
+        Objects.requireNonNull(family);
+        throw new UnsupportedOperationException("Protocol family not supported");
+    }
+
+    /**
+     * Opens a server-socket channel.
+     *
+     * @implSpec The default implementation of this method first checks that
+     * the given protocol {@code family} is not {@code null},
+     * then throws {@link UnsupportedOperationException}.
+     *
+     * @param   family
+     *          The protocol family
+     *
+     * @return  The new channel
+     *
+     * @throws  UnsupportedOperationException
+     *          If the specified protocol family is not supported
+     * @throws  IOException
+     *          If an I/O error occurs
+     *
+     * @since 15
+     */
+    public ServerSocketChannel openServerSocketChannel(ProtocolFamily family) throws IOException {
+        Objects.requireNonNull(family);
+        throw new UnsupportedOperationException("Protocol family not supported");
+    }
 }
