diff a/src/java.base/unix/classes/sun/nio/ch/InheritedChannel.java b/src/java.base/unix/classes/sun/nio/ch/InheritedChannel.java
--- a/src/java.base/unix/classes/sun/nio/ch/InheritedChannel.java
+++ b/src/java.base/unix/classes/sun/nio/ch/InheritedChannel.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2003, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -27,16 +27,17 @@
 
 import java.lang.reflect.Constructor;
 import java.io.FileDescriptor;
 import java.io.IOException;
 import java.net.InetAddress;
+import java.net.Inet6Address;
 import java.net.InetSocketAddress;
+import java.net.ProtocolFamily;
 import java.nio.channels.Channel;
-import java.nio.channels.SocketChannel;
-import java.nio.channels.ServerSocketChannel;
-import java.nio.channels.DatagramChannel;
 import java.nio.channels.spi.SelectorProvider;
+import static java.net.StandardProtocolFamily.INET6;
+import static java.net.StandardProtocolFamily.INET;
 
 class InheritedChannel {
 
     // the "types" of socket returned by soType0
     private static final int UNKNOWN            = -1;
@@ -79,16 +80,20 @@
      * allows us to "detach" the standard streams after closing and ensures
      * that the underlying socket really closes.
      */
     public static class InheritedSocketChannelImpl extends SocketChannelImpl {
 
+        static ProtocolFamily family(InetSocketAddress isa) {
+            return (isa.getAddress() instanceof Inet6Address) ? INET6 : INET;
+        }
+
         InheritedSocketChannelImpl(SelectorProvider sp,
                                    FileDescriptor fd,
                                    InetSocketAddress remote)
             throws IOException
         {
-            super(sp, fd, remote);
+            super(sp, family(remote), fd, remote);
         }
 
         protected void implCloseSelectableChannel() throws IOException {
             super.implCloseSelectableChannel();
             detachIOStreams();
