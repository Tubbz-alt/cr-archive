diff a/src/java.xml/share/classes/com/sun/org/apache/xalan/internal/xsltc/trax/TemplatesImpl.java b/src/java.xml/share/classes/com/sun/org/apache/xalan/internal/xsltc/trax/TemplatesImpl.java
--- a/src/java.xml/share/classes/com/sun/org/apache/xalan/internal/xsltc/trax/TemplatesImpl.java
+++ b/src/java.xml/share/classes/com/sun/org/apache/xalan/internal/xsltc/trax/TemplatesImpl.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2007, 2020, Oracle and/or its affiliates. All rights reserved.
  */
 /*
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
  * this work for additional information regarding copyright ownership.
@@ -66,11 +66,11 @@
 /**
  * @author Morten Jorgensen
  * @author G. Todd Millerj
  * @author Jochen Cordes <Jochen.Cordes@t-online.de>
  * @author Santiago Pericas-Geertsen
- * @LastModified: Nov 2017
+ * @LastModified: May 2020
  */
 public final class TemplatesImpl implements Templates, Serializable {
     static final long serialVersionUID = 673094361519270707L;
     public final static String DESERIALIZE_TRANSLET = "jdk.xml.enableTemplatesImplDeserialization";
 
@@ -293,11 +293,11 @@
      *  This is to fix bugzilla bug 22438
      *  If the user defined class implements URIResolver and Serializable
      *  then we want it to get serialized
      */
     private void writeObject(ObjectOutputStream os)
-        throws IOException, ClassNotFoundException {
+        throws IOException {
         if (_auxClasses != null) {
             //throw with the same message as when Hashtable was used for compatibility.
             throw new NotSerializableException(
                     "com.sun.org.apache.xalan.internal.xsltc.runtime.Hashtable");
         }
