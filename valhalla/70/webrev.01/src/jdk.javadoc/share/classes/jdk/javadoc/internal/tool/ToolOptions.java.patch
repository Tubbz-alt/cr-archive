diff a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/ToolOptions.java b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/ToolOptions.java
--- a/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/ToolOptions.java
+++ b/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/ToolOptions.java
@@ -64,10 +64,11 @@
     // The following are the names of options handled in the first pass of option decoding,
     // in Start.preprocess.
     static final String DOCLET = "-doclet";
     static final String DOCLET_PATH = "-docletpath";
     static final String DUMP_ON_ERROR = "--dump-on-error";
+    static final String AT = "@";
     static final String J = "-J";
     static final String LOCALE = "-locale";
 
     /**
      * Argument for command-line option {@code -breakiterator}.
@@ -585,10 +586,21 @@
                 public void process() {
                     throw new AssertionError("the -J flag should be caught by the launcher.");
                 }
             },
 
+            // This option exists so that it is documented in the command-line help.
+            // It is actually implemented by expanding argv early on during execution,
+            // and can only be used when using the command-line and related interfaces
+            // (i.e. not the javax.tools API).
+            new ToolOption(AT, STANDARD, true) {
+                @Override
+                public void process() {
+                    throw new AssertionError("the @ option is handled separately");
+                }
+            },
+
             new ToolOption("--version", STANDARD) {
                 @Override
                 public void process() throws OptionException {
                     throw new OptionException(OK, showHelper::version);
                 }
@@ -646,10 +658,11 @@
 
         private String getKey(String optionName, String suffix) {
             return "main.opt."
                     + optionName
                         .replaceAll("^-*", "")              // remove leading '-'
+                        .replaceAll("^@", "at")             // handle '@'
                         .replaceAll("[^A-Za-z0-9]+$", "")   // remove trailing non-alphanumeric
                         .replaceAll("[^A-Za-z0-9]", ".")    // replace internal non-alphanumeric
                     + suffix;
         }
     }
