diff a/test/micro/org/openjdk/bench/javax/crypto/full/SignatureBench.java b/test/micro/org/openjdk/bench/javax/crypto/full/SignatureBench.java
--- a/test/micro/org/openjdk/bench/javax/crypto/full/SignatureBench.java
+++ b/test/micro/org/openjdk/bench/javax/crypto/full/SignatureBench.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2015, 2018, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2015, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -55,11 +55,15 @@
     private byte[][] signedData;
     int index;
 
 
     private String getKeyPairGeneratorName() {
-        String tail = algorithm.substring(algorithm.lastIndexOf("with") + 4);
+        int withIndex = algorithm.lastIndexOf("with");
+        if (withIndex < 0) {
+            return algorithm;
+        }
+        String tail = algorithm.substring(withIndex + 4);
         return "ECDSA".equals(tail) ? "EC" : tail;
     }
 
     @Setup()
     public void setup() throws NoSuchAlgorithmException, InvalidKeyException, SignatureException {
@@ -120,6 +124,16 @@
         @Param({"160", "224", "256"})
         private int keyLength;
 
     }
 
+    public static class EdDSA extends SignatureBench {
+
+        @Param({"EdDSA"})
+        private String algorithm;
+
+        @Param({"255", "448"})
+        private int keyLength;
+
+    }
+
 }
