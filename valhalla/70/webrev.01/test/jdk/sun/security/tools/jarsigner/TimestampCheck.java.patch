diff a/test/jdk/sun/security/tools/jarsigner/TimestampCheck.java b/test/jdk/sun/security/tools/jarsigner/TimestampCheck.java
--- a/test/jdk/sun/security/tools/jarsigner/TimestampCheck.java
+++ b/test/jdk/sun/security/tools/jarsigner/TimestampCheck.java
@@ -61,10 +61,11 @@
 import sun.security.x509.X500Name;
 
 /*
  * @test
  * @bug 6543842 6543440 6939248 8009636 8024302 8163304 8169911 8180289 8172404
+ *          8242151
  * @summary checking response of timestamp
  * @modules java.base/sun.security.pkcs
  *          java.base/sun.security.timestamp
  *          java.base/sun.security.x509
  *          java.base/sun.security.util
@@ -132,11 +133,11 @@
             DerValue messageImprint = value.data.getDerValue();
             AlgorithmId aid = AlgorithmId.parse(
                     messageImprint.data.getDerValue());
             System.out.println("# AlgorithmId: " + aid);
 
-            ObjectIdentifier policyId = new ObjectIdentifier(defaultPolicyId);
+            ObjectIdentifier policyId = ObjectIdentifier.of(defaultPolicyId);
             BigInteger nonce = null;
             while (value.data.available() > 0) {
                 DerValue v = value.data.getDerValue();
                 if (v.tag == DerValue.tag_Integer) {
                     nonce = v.getBigInteger();
@@ -156,11 +157,11 @@
             // If path starts with "ts", use the TSA it points to.
             // Otherwise, always use "ts".
             String alias = path.startsWith("ts") ? path : "ts";
 
             if (path.equals("diffpolicy")) {
-                policyId = new ObjectIdentifier(defaultPolicyId);
+                policyId = ObjectIdentifier.of(defaultPolicyId);
             }
 
             DerOutputStream statusInfo = new DerOutputStream();
             statusInfo.putInteger(0);
 
@@ -228,11 +229,11 @@
             Signature sig = Signature.getInstance(sigAlg);
             sig.initSign((PrivateKey)(ks.getKey(
                     alias, "changeit".toCharArray())));
             sig.update(tstInfo.toByteArray());
 
-            ContentInfo contentInfo = new ContentInfo(new ObjectIdentifier(
+            ContentInfo contentInfo = new ContentInfo(ObjectIdentifier.of(
                     "1.2.840.113549.1.9.16.1.4"),
                     new DerValue(tstInfo2.toByteArray()));
 
             System.out.println("# Signing...");
             System.out.println("# " + new X500Name(signer
@@ -443,11 +444,11 @@
                         .shouldMatch("SHA-1.*-tsadigestalg.*will be disabled")
                         .shouldNotContain("is disabled");
                 verify("sha1tsaalg.jar", "-strict")
                         .shouldHaveExitValue(0)
                         .shouldContain("jar verified, with signer errors")
-                        .shouldContain("SHA-1 digest algorithm is considered a security risk")
+                        .shouldContain("SHA-1 timestamp digest algorithm is considered a security risk")
                         .shouldNotContain("is disabled");
 
                 // Disabled algorithms
                 sign("tsdisabled", "-digestalg", "MD5",
                                 "-sigalg", "MD5withRSA", "-tsadigestalg", "MD5")
