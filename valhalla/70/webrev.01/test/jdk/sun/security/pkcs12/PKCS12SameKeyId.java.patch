diff a/test/jdk/sun/security/pkcs12/PKCS12SameKeyId.java b/test/jdk/sun/security/pkcs12/PKCS12SameKeyId.java
--- a/test/jdk/sun/security/pkcs12/PKCS12SameKeyId.java
+++ b/test/jdk/sun/security/pkcs12/PKCS12SameKeyId.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2010, 2013, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2010, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -21,11 +21,11 @@
  * questions.
  */
 
 /*
  * @test
- * @bug 6958026
+ * @bug 6958026 8242151
  * @summary Problem with PKCS12 keystore
  * @modules java.base/sun.security.pkcs
  *          java.base/sun.security.tools.keytool
  *          java.base/sun.security.util
  *          java.base/sun.security.x509
@@ -73,11 +73,11 @@
         // places in PKCS12KeyStore.java
         AlgorithmParameters algParams =
                 AlgorithmParameters.getInstance("PBEWithSHA1AndDESede");
         algParams.init(new PBEParameterSpec("12345678".getBytes(), 1024));
         AlgorithmId algid = new AlgorithmId(
-                new ObjectIdentifier("1.2.840.113549.1.12.1.3"), algParams);
+                ObjectIdentifier.of("1.2.840.113549.1.12.1.3"), algParams);
 
         PBEKeySpec keySpec = new PBEKeySpec(PASSWORD);
         SecretKeyFactory skFac = SecretKeyFactory.getInstance("PBE");
         SecretKey skey = skFac.generateSecret(keySpec);
 
