diff a/src/jdk.compiler/share/classes/com/sun/tools/javac/resources/compiler.properties b/src/jdk.compiler/share/classes/com/sun/tools/javac/resources/compiler.properties
--- a/src/jdk.compiler/share/classes/com/sun/tools/javac/resources/compiler.properties
+++ b/src/jdk.compiler/share/classes/com/sun/tools/javac/resources/compiler.properties
@@ -826,13 +826,10 @@
     modifier {0} not allowed here
 
 compiler.err.intf.not.allowed.here=\
     interface not allowed here
 
-compiler.err.enums.must.be.static=\
-    enum declarations allowed only in static contexts
-
 # 0: symbol, 1: symbol
 compiler.err.name.clash.same.erasure=\
     name clash: {0} and {1} have the same erasure
 
 # 0: name, 1: list of type, 2: symbol, 3: name, 4: list of type, 5: symbol
@@ -3491,13 +3488,10 @@
     canonical
 
 compiler.misc.compact=\
     compact
 
-compiler.misc.canonical.constructor.must.be.public=\
-    canonical constructor must be public
-
 # 0: fragment
 compiler.misc.throws.clause.not.allowed.for.canonical.constructor=\
     throws clause not allowed for {0} constructor
 
 compiler.misc.canonical.with.name.mismatch=\
@@ -3508,15 +3502,19 @@
 
 compiler.misc.canonical.must.not.declare.type.variables=\
     canonical constructor must not declare type variables
 
 compiler.misc.type.must.be.identical.to.corresponding.record.component.type=\
-    type must match that of the corresponding record component\
+    type and arity must match that of the corresponding record component\
 
 compiler.misc.canonical.must.not.contain.explicit.constructor.invocation=\
     canonical constructor must not contain explicit constructor invocation
 
+# 0: set of flag or string
+compiler.misc.canonical.must.not.have.stronger.access=\
+    attempting to assign stronger access privileges; was {0}
+
 # other
 compiler.err.record.cannot.declare.instance.fields=\
     field declaration must be static\n\
     (consider replacing field with record component)
 
@@ -3528,12 +3526,12 @@
     constructor is not canonical, so its first statement must invoke another constructor
 
 compiler.err.instance.initializer.not.allowed.in.records=\
     instance initializers not allowed in records
 
-compiler.err.record.declaration.not.allowed.in.inner.classes=\
-    record declarations not allowed in inner classes
+compiler.err.static.declaration.not.allowed.in.inner.classes=\
+    static declarations not allowed in inner classes
 
 compiler.err.record.header.expected=\
     record header expected
 
 ############################################
