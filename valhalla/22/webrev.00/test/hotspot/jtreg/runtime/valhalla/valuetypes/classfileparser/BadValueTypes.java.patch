diff a/test/hotspot/jtreg/runtime/valhalla/valuetypes/classfileparser/BadValueTypes.java b/test/hotspot/jtreg/runtime/valhalla/valuetypes/classfileparser/BadValueTypes.java
--- a/test/hotspot/jtreg/runtime/valhalla/valuetypes/classfileparser/BadValueTypes.java
+++ b/test/hotspot/jtreg/runtime/valhalla/valuetypes/classfileparser/BadValueTypes.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2018, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2018, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -58,11 +58,11 @@
 
         // Test that inline type instance methods cannot be synchronized.
         runTest("ValueMethodSynch",
                 "Method getInt in class ValueMethodSynch (an inline class) has illegal modifiers");
 
-        runTest("ValueSuperClass", "Value type must have java.lang.Object as superclass");
+        runTest("ValueSuperClass", "Inline type must have java.lang.Object as superclass");
 
         // Test that ClassCircularityError gets detected for instance fields.
         System.out.println("Testing ClassCircularityError for instance fields");
         try {
             Class newClass = Class.forName("Circ");
@@ -79,8 +79,8 @@
             Class newClass = Class.forName("CircStaticB");
         } catch (java.lang.ClassCircularityError e) {
              throw new RuntimeException( "java.lang.ClassCircularityError exception thrown!");
          }
 
-        runTest("ValueCloneable", "Value Types do not support Cloneable");
+        runTest("ValueCloneable", "Inline Types do not support Cloneable");
     }
 }
