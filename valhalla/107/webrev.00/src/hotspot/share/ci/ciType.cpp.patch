diff a/src/hotspot/share/ci/ciType.cpp b/src/hotspot/share/ci/ciType.cpp
--- a/src/hotspot/share/ci/ciType.cpp
+++ b/src/hotspot/share/ci/ciType.cpp
@@ -44,11 +44,11 @@
   assert(basic_type >= T_BOOLEAN && basic_type <= T_CONFLICT, "range check");
   _basic_type = basic_type;
 }
 
 ciType::ciType(Klass* k) : ciMetadata(k) {
-  _basic_type = k->is_array_klass() ? T_ARRAY : (k->is_inline_klass() ? T_VALUETYPE : T_OBJECT);
+  _basic_type = k->is_array_klass() ? T_ARRAY : (k->is_inline_klass() ? T_INLINE_TYPE : T_OBJECT);
 }
 
 
 // ------------------------------------------------------------------
 // ciType::is_subtype_of
@@ -103,11 +103,11 @@
 
 // ------------------------------------------------------------------
 // ciType::box_klass
 //
 ciKlass* ciType::box_klass() {
-  assert(basic_type() != T_VALUETYPE, "value type boxing not yet supported");
+  assert(basic_type() != T_INLINE_TYPE, "value type boxing not yet supported");
   if (!is_primitive_type())  return this->as_klass();  // reference types are "self boxing"
 
   // Void is "boxed" with a null.
   if (basic_type() == T_VOID)  return NULL;
 
