diff a/src/hotspot/share/ci/ciReplay.cpp b/src/hotspot/share/ci/ciReplay.cpp
--- a/src/hotspot/share/ci/ciReplay.cpp
+++ b/src/hotspot/share/ci/ciReplay.cpp
@@ -796,11 +796,11 @@
     ValueTypeFieldInitializer(oop vt, CompileReplay* replay)
   : _vt(vt), _replay(replay) {}
 
     void do_field(fieldDescriptor* fd) {
       BasicType bt = fd->field_type();
-      const char* string_value = bt != T_VALUETYPE ? _replay->parse_escaped_string() : NULL;
+      const char* string_value = bt != T_INLINE_TYPE ? _replay->parse_escaped_string() : NULL;
       switch (bt) {
       case T_BYTE: {
         int value = atoi(string_value);
         _vt->byte_field_put(fd->offset(), value);
         break;
@@ -849,11 +849,11 @@
         Thread* THREAD = Thread::current();
         bool res = _replay->process_staticfield_reference(string_value, _vt, fd, THREAD);
         assert(res, "should succeed for arrays & objects");
         break;
       }
-      case T_VALUETYPE: {
+      case T_INLINE_TYPE: {
         ValueKlass* vk = ValueKlass::cast(fd->field_holder()->get_inline_type_field_klass(fd->index()));
         if (fd->is_inlined()) {
           int field_offset = fd->offset() - vk->first_field_offset();
           oop obj = (oop)(cast_from_oop<address>(_vt) + field_offset);
           ValueTypeFieldInitializer init_fields(obj, _replay);
