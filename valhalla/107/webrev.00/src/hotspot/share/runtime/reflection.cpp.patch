diff a/src/hotspot/share/runtime/reflection.cpp b/src/hotspot/share/runtime/reflection.cpp
--- a/src/hotspot/share/runtime/reflection.cpp
+++ b/src/hotspot/share/runtime/reflection.cpp
@@ -1180,11 +1180,11 @@
   oop return_type_mirror = java_lang_reflect_Method::return_type(method_mirror);
   BasicType rtype;
   if (java_lang_Class::is_primitive(return_type_mirror)) {
     rtype = basic_type_mirror_to_basic_type(return_type_mirror, CHECK_NULL);
   } else if (java_lang_Class::as_Klass(return_type_mirror)->is_inline_klass()) {
-    rtype = T_VALUETYPE;
+    rtype = T_INLINE_TYPE;
   } else {
     rtype = T_OBJECT;
   }
 
   InstanceKlass* klass = InstanceKlass::cast(java_lang_Class::as_Klass(mirror));
@@ -1224,11 +1224,11 @@
     Handle no_receiver; // null instead of receiver
     BasicType rtype;
     if (klass->is_hidden()) {
       rtype = T_OBJECT;
     } else {
-      rtype = T_VALUETYPE;
+      rtype = T_INLINE_TYPE;
     }
     return invoke(klass, method, no_receiver, override, ptypes, rtype, args, false, CHECK_NULL);
   }
 
   // main branch of code creates a non-inline object:
