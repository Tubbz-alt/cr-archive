diff a/test/hotspot/jtreg/serviceability/dcmd/vm/ClassHierarchyTest.java b/test/hotspot/jtreg/serviceability/dcmd/vm/ClassHierarchyTest.java
--- a/test/hotspot/jtreg/serviceability/dcmd/vm/ClassHierarchyTest.java
+++ b/test/hotspot/jtreg/serviceability/dcmd/vm/ClassHierarchyTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2015, 2017, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2015, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -77,14 +77,16 @@
 
     static Pattern expected_lines[] = {
         Pattern.compile("java.lang.Object/null"),
         Pattern.compile("\\|--DcmdBaseClass/0x(\\p{XDigit}*)"),
         Pattern.compile("\\|  implements Intf2/0x(\\p{XDigit}*) \\(declared intf\\)"),
+        Pattern.compile("\\|  implements java.lang.IdentityObject/null \\(declared intf\\)"),
         Pattern.compile("\\|  implements Intf1/0x(\\p{XDigit}*) \\(inherited intf\\)"),
         Pattern.compile("\\|  \\|--DcmdTestClass/0x(\\p{XDigit}*)"),
         Pattern.compile("\\|  \\|  implements Intf1/0x(\\p{XDigit}*) \\(inherited intf\\)"),
-        Pattern.compile("\\|  \\|  implements Intf2/0x(\\p{XDigit}*) \\(inherited intf\\)")
+        Pattern.compile("\\|  \\|  implements Intf2/0x(\\p{XDigit}*) \\(inherited intf\\)"),
+        Pattern.compile("\\|  \\|  implements java.lang.IdentityObject/null \\(inherited intf\\)")
     };
 
     public void run(CommandExecutor executor) throws ClassNotFoundException {
         OutputAnalyzer output;
         Iterator<String> lines;
@@ -138,11 +140,11 @@
             i++;
             if (!m.matches()) {
                 Assert.fail("Failed to match line #" + i + ": " + line);
             }
             // "implements" lines should not be in this output.
-            if (i == 2 || i == 4) i += 2;
+            if (i == 2 || i == 6) i += 3;
         }
         if (lines.hasNext()) {
             String line = lines.next();
             Assert.fail("Unexpected dcmd output: " + line);
         }
@@ -162,11 +164,11 @@
             if (i == 2) {
                 // Fetch the ClassLoader address, which should be the same in
                 // subsequent lines.
                 classLoaderAddr = m.group(1);
                 System.out.println(classLoaderAddr);
-            } else if (i > 2) {
+            } else if (i > 2 && i != 4 && i != 9) {
                 if (!classLoaderAddr.equals(m.group(1))) {
                     Assert.fail("Classloader address didn't match on line #"
                                         + i + ": " + line);
                 }
             }
