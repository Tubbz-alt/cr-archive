diff a/src/hotspot/share/runtime/reflection.cpp b/src/hotspot/share/runtime/reflection.cpp
--- a/src/hotspot/share/runtime/reflection.cpp
+++ b/src/hotspot/share/runtime/reflection.cpp
@@ -901,17 +901,12 @@
   java_lang_reflect_Field::set_slot(rh(), fd->index());
   java_lang_reflect_Field::set_name(rh(), name());
   java_lang_reflect_Field::set_type(rh(), type());
   // Note the ACC_ANNOTATION bit, which is a per-class access flag, is never set here.
   int modifiers = fd->access_flags().as_int() & JVM_RECOGNIZED_FIELD_MODIFIERS;
-  if (fd->is_flattenable()) {
-    modifiers |= JVM_ACC_FIELD_FLATTENABLE;
-    // JVM_ACC_FLATTENABLE should not be set in LWorld.  set_is_flattenable should be re-examined.
-    modifiers &= ~JVM_ACC_FLATTENABLE;
-  }
-  if (fd->is_flattened()) {
-    modifiers |= JVM_ACC_FIELD_FLATTENED;
+  if (fd->is_allocated_inline()) {
+    modifiers |= JVM_ACC_FIELD_ALLOCATED_INLINE;
   }
   java_lang_reflect_Field::set_modifiers(rh(), modifiers);
   java_lang_reflect_Field::set_override(rh(), false);
   if (fd->has_generic_signature()) {
     Symbol*  gs = fd->generic_signature();
