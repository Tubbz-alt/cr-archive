diff a/src/hotspot/share/classfile/javaClasses.cpp b/src/hotspot/share/classfile/javaClasses.cpp
--- a/src/hotspot/share/classfile/javaClasses.cpp
+++ b/src/hotspot/share/classfile/javaClasses.cpp
@@ -4489,11 +4489,11 @@
 int java_lang_reflect_RecordComponent::typeAnnotations_offset;
 int jdk_internal_vm_jni_SubElementSelector::_arrayElementType_offset;
 int jdk_internal_vm_jni_SubElementSelector::_subElementType_offset;
 int jdk_internal_vm_jni_SubElementSelector::_offset_offset;
 int jdk_internal_vm_jni_SubElementSelector::_isFlattened_offset;
-int jdk_internal_vm_jni_SubElementSelector::_isFlattenable_offset;
+int jdk_internal_vm_jni_SubElementSelector::_isInline_offset;
 
 
 
 #define STACKTRACEELEMENT_FIELDS_DO(macro) \
   macro(declaringClassObject_offset,  k, "declaringClassObject", class_signature, false); \
@@ -4800,11 +4800,11 @@
 #define SUBELEMENT_SELECTOR_FIELDS_DO(macro) \
   macro(_arrayElementType_offset,  k, "arrayElementType", class_signature, false); \
   macro(_subElementType_offset,    k, "subElementType",   class_signature, false); \
   macro(_offset_offset,            k, "offset",           int_signature,   false); \
   macro(_isFlattened_offset,       k, "isFlattened",      bool_signature,  false); \
-  macro(_isFlattenable_offset,     k, "isFlattenable",    bool_signature,  false);
+  macro(_isInline_offset,          k, "isInline",    bool_signature,  false);
 
 void jdk_internal_vm_jni_SubElementSelector::compute_offsets() {
   InstanceKlass* k = SystemDictionary::jdk_internal_vm_jni_SubElementSelector_klass();
   SUBELEMENT_SELECTOR_FIELDS_DO(FIELD_COMPUTE_OFFSET);
 }
@@ -4850,16 +4850,16 @@
 
 void jdk_internal_vm_jni_SubElementSelector::setIsFlattened(oop obj, bool b) {
   obj->bool_field_put(_isFlattened_offset, b);
 }
 
-bool jdk_internal_vm_jni_SubElementSelector::getIsFlattenable(oop obj) {
-  return obj->bool_field(_isFlattenable_offset);
+bool jdk_internal_vm_jni_SubElementSelector::getIsInline(oop obj) {
+  return obj->bool_field(_isInline_offset);
 }
 
-void jdk_internal_vm_jni_SubElementSelector::setIsFlattenable(oop obj, bool b) {
-  obj->bool_field_put(_isFlattenable_offset, b);
+void jdk_internal_vm_jni_SubElementSelector::setIsInline(oop obj, bool b) {
+  obj->bool_field_put(_isInline_offset, b);
 }
 
 jbyte java_lang_Byte::value(oop obj) {
    jvalue v;
    java_lang_boxing_object::get_value(obj, &v);
