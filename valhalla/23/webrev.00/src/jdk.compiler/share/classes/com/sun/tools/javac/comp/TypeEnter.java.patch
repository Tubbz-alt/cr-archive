diff a/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/TypeEnter.java b/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/TypeEnter.java
--- a/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/TypeEnter.java
+++ b/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/TypeEnter.java
@@ -686,12 +686,10 @@
             Type supertype;
             JCExpression extending;
             final boolean isValueType = (tree.mods.flags & Flags.VALUE) != 0;
 
             if (tree.extending != null) {
-                if (isValueType)
-                    log.error(tree.pos(), Errors.ValueMayNotExtend);
                 extending = clearTypeParams(tree.extending);
                 supertype = attr.attribBase(extending, baseEnv, true, false, true);
                 if (supertype == syms.recordType) {
                     log.error(tree, Errors.InvalidSupertypeRecord(supertype.tsym));
                 }
@@ -708,11 +706,11 @@
 
             Type interfaceToInject = Type.noType;
             if (injectTopInterfaceTypes) {
                 if (isValueType || types.isValue(supertype)) {
                     interfaceToInject = syms.inlineObjectType;
-                } else if ((sym.flags_field & INTERFACE) == 0) { // skip interfaces and annotations.
+                } else if ((sym.flags_field & (INTERFACE | ABSTRACT)) == 0) { // skip interfaces, abstract classes and annotations.
                     if (sym.fullname != names.java_lang_Object) {
                         interfaceToInject = syms.identityObjectType;
                     }
                 }
             }
