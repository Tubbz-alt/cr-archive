diff a/test/hotspot/jtreg/runtime/valhalla/inlinetypes/InlineTypeDensity.java b/test/hotspot/jtreg/runtime/valhalla/inlinetypes/InlineTypeDensity.java
--- a/test/hotspot/jtreg/runtime/valhalla/inlinetypes/InlineTypeDensity.java
+++ b/test/hotspot/jtreg/runtime/valhalla/inlinetypes/InlineTypeDensity.java
@@ -29,11 +29,11 @@
 
 /**
  * @test InlineTypeDensity
  * @summary Heap density test for InlineTypes
  * @library /test/lib
- * @compile -XDemitQtypes -XDenableValueTypes -XDallowWithFieldOperator InlineTypeDensity.java
+ * @compile -XDallowWithFieldOperator InlineTypeDensity.java
  * @run driver ClassFileInstaller sun.hotspot.WhiteBox
  * @run main/othervm -Xint -XX:FlatArrayElementMaxSize=-1
  *                   -Xbootclasspath/a:. -XX:+UnlockDiagnosticVMOptions
  *                    -XX:+WhiteBoxAPI InlineTypeDensity
  * @run main/othervm -Xcomp -XX:FlatArrayElementMaxSize=-1
@@ -219,16 +219,16 @@
         objectArraySize += (arrayLength *
                 (WHITE_BOX.getObjectSize(objectArray[0]) +
                         WHITE_BOX.getObjectSize(objectArray[0].getDate()) +
                         WHITE_BOX.getObjectSize(objectArray[0].getTime())));
 
-        LocalDateTimeValue[] inlineArray = new LocalDateTimeValue[arrayLength];
+        LocalDateTimeValue[] flatArray = new LocalDateTimeValue[arrayLength];
         // CMH: add "isFlatValueArray" to WhiteBox API, to ensure we are correctly account size
 
-        long inlineArraySize = WHITE_BOX.getObjectSize(inlineArray);
-        System.out.println("Object array and elements: " + objectArraySize + " versus Value Array: " + inlineArraySize);
-        Asserts.assertLessThan(inlineArraySize, objectArraySize, "Inline array accounts for more heap than object array + elements !");
+        long flatArraySize = WHITE_BOX.getObjectSize(flatArray);
+        System.out.println("Object array and elements: " + objectArraySize + " versus Flat Array: " + flatArraySize);
+        Asserts.assertLessThan(flatArraySize, objectArraySize, "Flat array accounts for more heap than object array + elements !");
     }
 
     public void test() {
         ensureArraySizeWin();
     }
