diff a/src/hotspot/share/ci/ciObjectFactory.cpp b/src/hotspot/share/ci/ciObjectFactory.cpp
--- a/src/hotspot/share/ci/ciObjectFactory.cpp
+++ b/src/hotspot/share/ci/ciObjectFactory.cpp
@@ -364,12 +364,12 @@
     objArrayHandle h_oa(THREAD, (objArrayOop)o);
     return new (arena()) ciObjArray(h_oa);
   } else if (o->is_typeArray()) {
     typeArrayHandle h_ta(THREAD, (typeArrayOop)o);
     return new (arena()) ciTypeArray(h_ta);
-  } else if (o->is_valueArray()) {
-    valueArrayHandle h_ta(THREAD, (valueArrayOop)o);
+  } else if (o->is_inlineArray()) {
+    inlineArrayHandle h_ta(THREAD, (inlineArrayOop)o);
     return new (arena()) ciValueArray(h_ta);
   }
 
   // The oop is of some type not supported by the compiler interface.
   ShouldNotReachHere();
@@ -390,11 +390,11 @@
     Klass* k = (Klass*)o;
     if (k->is_inline_klass()) {
       return new (arena()) ciValueKlass(k);
     } else if (k->is_instance_klass()) {
       return new (arena()) ciInstanceKlass(k);
-    } else if (k->is_valueArray_klass()) {
+    } else if (k->is_inlineArray_klass()) {
       return new (arena()) ciValueArrayKlass(k);
     } else if (k->is_objArray_klass()) {
       return new (arena()) ciObjArrayKlass(k);
     } else if (k->is_typeArray_klass()) {
       return new (arena()) ciTypeArrayKlass(k);
