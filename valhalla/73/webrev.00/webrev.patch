diff a/src/hotspot/share/c1/c1_GraphBuilder.cpp b/src/hotspot/share/c1/c1_GraphBuilder.cpp
--- a/src/hotspot/share/c1/c1_GraphBuilder.cpp
+++ b/src/hotspot/share/c1/c1_GraphBuilder.cpp
@@ -2412,12 +2412,12 @@
   apush(append_split(new_instance));
 }
 
 void GraphBuilder::default_value(int klass_index) {
   bool will_link;
-  ciValueKlass* vk = stream()->get_klass(will_link)->as_value_klass();
   if (!stream()->is_unresolved_klass()) {
+    ciValueKlass* vk = stream()->get_klass(will_link)->as_value_klass();
     apush(append(new Constant(new InstanceConstant(vk->default_value_instance()))));
   } else {
     ValueStack* state_before = copy_state_before();
     apush(append_split(new DefaultValue(state_before)));
   }
diff a/test/hotspot/jtreg/compiler/valhalla/valuetypes/TestUnresolvedDefault.java b/test/hotspot/jtreg/compiler/valhalla/valuetypes/TestUnresolvedDefault.java
--- /dev/null
+++ b/test/hotspot/jtreg/compiler/valhalla/valuetypes/TestUnresolvedDefault.java
@@ -0,0 +1,44 @@
+/*
+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * This code is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 only, as
+ * published by the Free Software Foundation.
+ *
+ * This code is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ * version 2 for more details (a copy is included in the LICENSE file that
+ * accompanied this code).
+ *
+ * You should have received a copy of the GNU General Public License version
+ * 2 along with this work; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
+ * or visit www.oracle.com if you need additional information or have any
+ * questions.
+ */
+
+/**
+ * @test
+ * @bug 8247309
+ * @summary Test correct handling of defaultvalue bytecode with unresolved inline class.
+ * @run main/othervm -Xcomp -XX:CompileCommand=compileonly,TestUnresolvedDefault::test TestUnresolvedDefault
+ */
+
+public class TestUnresolvedDefault {
+
+    static inline class UnresolvedInline {
+        int x = 42;
+    }
+
+    static int test() {
+        return UnresolvedInline.default.x;
+    }
+
+    static public void main(String[] args) {
+        test();
+    }
+}
