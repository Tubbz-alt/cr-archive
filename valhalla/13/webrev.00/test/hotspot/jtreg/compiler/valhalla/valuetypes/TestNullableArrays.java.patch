diff a/test/hotspot/jtreg/compiler/valhalla/valuetypes/TestNullableArrays.java b/test/hotspot/jtreg/compiler/valhalla/valuetypes/TestNullableArrays.java
--- a/test/hotspot/jtreg/compiler/valhalla/valuetypes/TestNullableArrays.java
+++ b/test/hotspot/jtreg/compiler/valhalla/valuetypes/TestNullableArrays.java
@@ -1077,11 +1077,11 @@
 
     static boolean compile_and_run_again_if_deoptimized(boolean warmup, String test) {
         if (!warmup) {
             Method m = tests.get(test);
             if (USE_COMPILER &&  !WHITE_BOX.isMethodCompiled(m, false)) {
-                if (!ValueTypeArrayFlatten && !XCOMP) {
+                if (!ValueTypeArrayFlatten && !XCOMP && !STRESS_CC) {
                     throw new RuntimeException("Unexpected deoptimization");
                 }
                 enqueueMethodForCompilation(m, COMP_LEVEL_FULL_OPTIMIZATION);
                 return true;
             }
@@ -1173,11 +1173,11 @@
             Method m = tests.get("TestNullableArrays::test38");
             assertDeoptimizedByC2(m);
             enqueueMethodForCompilation(m, COMP_LEVEL_FULL_OPTIMIZATION);
             test38(src, dst);
             verify(dst, src);
-            if (USE_COMPILER && !WHITE_BOX.isMethodCompiled(m, false) && !XCOMP) {
+            if (USE_COMPILER && !WHITE_BOX.isMethodCompiled(m, false) && !XCOMP && !STRESS_CC) {
                 throw new RuntimeException("unexpected deoptimization");
             }
         }
     }
 
@@ -1222,11 +1222,11 @@
             Method m = tests.get("TestNullableArrays::test40");
             assertDeoptimizedByC2(m);
             enqueueMethodForCompilation(m, COMP_LEVEL_FULL_OPTIMIZATION);
             test40(src, dst);
             verify(dst, src);
-            if (USE_COMPILER && !WHITE_BOX.isMethodCompiled(m, false) && !XCOMP) {
+            if (USE_COMPILER && !WHITE_BOX.isMethodCompiled(m, false) && !XCOMP && !STRESS_CC) {
                 throw new RuntimeException("unexpected deoptimization");
             }
         }
     }
 
@@ -1266,11 +1266,11 @@
         }
         test42(src, dst);
         verify(src, dst);
         if (!warmup) {
             Method m = tests.get("TestNullableArrays::test42");
-            if (USE_COMPILER && !WHITE_BOX.isMethodCompiled(m, false) && !XCOMP) {
+            if (USE_COMPILER && !WHITE_BOX.isMethodCompiled(m, false) && !XCOMP && !STRESS_CC) {
                 throw new RuntimeException("unexpected deoptimization");
             }
         }
     }
 
@@ -1354,11 +1354,11 @@
             Method m = tests.get("TestNullableArrays::test46");
             assertDeoptimizedByC2(m);
             enqueueMethodForCompilation(m, COMP_LEVEL_FULL_OPTIMIZATION);
             test46(src, dst);
             verify(dst, src);
-            if (USE_COMPILER && !WHITE_BOX.isMethodCompiled(m, false) && !XCOMP) {
+            if (USE_COMPILER && !WHITE_BOX.isMethodCompiled(m, false) && !XCOMP && !STRESS_CC) {
                 throw new RuntimeException("unexpected deoptimization");
             }
         }
     }
 
@@ -1401,11 +1401,11 @@
             Method m = tests.get("TestNullableArrays::test48");
             assertDeoptimizedByC2(m);
             enqueueMethodForCompilation(m, COMP_LEVEL_FULL_OPTIMIZATION);
             test48(src, dst);
             verify(dst, src);
-            if (USE_COMPILER && !WHITE_BOX.isMethodCompiled(m, false) && !XCOMP) {
+            if (USE_COMPILER && !WHITE_BOX.isMethodCompiled(m, false) && !XCOMP && !STRESS_CC) {
                 throw new RuntimeException("unexpected deoptimization");
             }
         }
     }
 
@@ -1443,11 +1443,11 @@
         }
         test50(src, dst);
         verify(src, dst);
         if (!warmup) {
             Method m = tests.get("TestNullableArrays::test50");
-            if (USE_COMPILER && !WHITE_BOX.isMethodCompiled(m, false) && !XCOMP) {
+            if (USE_COMPILER && !WHITE_BOX.isMethodCompiled(m, false) && !XCOMP && !STRESS_CC) {
                 throw new RuntimeException("unexpected deoptimization");
             }
         }
     }
 
