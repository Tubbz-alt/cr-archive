diff a/src/hotspot/share/ci/ciMethodType.cpp b/src/hotspot/share/ci/ciMethodType.cpp
--- a/src/hotspot/share/ci/ciMethodType.cpp
+++ b/src/hotspot/share/ci/ciMethodType.cpp
@@ -36,14 +36,13 @@
     Klass* k = java_lang_Class::as_Klass(klass_oop);
     return CURRENT_ENV->get_klass(k);
   }
 }
 
-ciType* ciMethodType::rtype(bool& never_null) const {
+ciType* ciMethodType::rtype() const {
   GUARDED_VM_ENTRY(
     oop rtype = java_lang_invoke_MethodType::rtype(get_oop());
-    never_null = (java_lang_Class::as_Klass(rtype)->is_inline_klass());
     return class_to_citype(rtype);
   )
 }
 
 int ciMethodType::ptype_count() const {
@@ -52,12 +51,11 @@
 
 int ciMethodType::ptype_slot_count() const {
   GUARDED_VM_ENTRY(return java_lang_invoke_MethodType::ptype_slot_count(get_oop());)
 }
 
-ciType* ciMethodType::ptype_at(int index, bool& never_null) const {
+ciType* ciMethodType::ptype_at(int index) const {
   GUARDED_VM_ENTRY(
     oop ptype = java_lang_invoke_MethodType::ptype(get_oop(), index);
-    never_null = (java_lang_Class::as_Klass(ptype)->is_inline_klass());
     return class_to_citype(ptype);
   )
 }
