diff a/src/java.base/share/classes/java/lang/invoke/X-VarHandle.java.template b/src/java.base/share/classes/java/lang/invoke/X-VarHandle.java.template
--- a/src/java.base/share/classes/java/lang/invoke/X-VarHandle.java.template
+++ b/src/java.base/share/classes/java/lang/invoke/X-VarHandle.java.template
@@ -109,11 +109,11 @@
         }
 
 #if[Object]
         @ForceInline
         static Object checkCast(FieldInstanceReadWrite handle, $type$ value) {
-            if (!handle.fieldType.isNullableType())
+            if (handle.fieldType.isInlineClass())
                 Objects.requireNonNull(value);
             return handle.fieldType.cast(value);
         }
 #end[Object]
 
@@ -398,11 +398,11 @@
             super(base, fieldOffset{#if[Object]?, fieldType}, FieldStaticReadWrite.FORM);
         }
 
 #if[Object]
         static Object checkCast(FieldStaticReadWrite handle, $type$ value) {
-            if (!handle.fieldType.isNullableType())
+            if (handle.fieldType.isInlineClass())
                 Objects.requireNonNull(value);
             return handle.fieldType.cast(value);
         }
 #end[Object]
 
@@ -655,11 +655,11 @@
         }
 
 #if[Object]
         @ForceInline
         static Object runtimeTypeCheck(Array handle, Object[] oarray, Object value) {
-            if (!handle.componentType.isNullableType())
+            if (handle.componentType.isInlineClass())
                  Objects.requireNonNull(value);
 
             if (handle.arrayType == oarray.getClass()) {
                 // Fast path: static array type same as argument array type
                 return handle.componentType.cast(value);
