diff a/src/java.base/share/classes/sun/invoke/util/BytecodeDescriptor.java b/src/java.base/share/classes/sun/invoke/util/BytecodeDescriptor.java
--- a/src/java.base/share/classes/sun/invoke/util/BytecodeDescriptor.java
+++ b/src/java.base/share/classes/sun/invoke/util/BytecodeDescriptor.java
@@ -88,12 +88,11 @@
             int begc = i[0], endc = str.indexOf(';', begc);
             if (endc < 0)  return null;
             i[0] = endc+1;
             String name = str.substring(begc, endc).replace('/', '.');
             try {
-                Class<?> clz = Class.forName(name, false, loader);
-                return c == 'Q' ? clz.asPrimaryType() : clz.asIndirectType();
+                return Class.forName(name, false, loader);
             } catch (ClassNotFoundException ex) {
                 throw new TypeNotPresentException(name, ex);
             }
         } else if (c == '[') {
             Class<?> t = parseSig(str, i, end, loader);
@@ -154,13 +153,11 @@
             sb.append(c);
         } else if (t == Object.class) {
             sb.append("Ljava/lang/Object;");
         } else {
             boolean lsemi = (!t.isArray());
-            if (!t.isIndirectType())
-                c = 'Q';
-            if (lsemi)  sb.append(c);
+            if (lsemi)  sb.append(t.isInlineClass() ? 'Q' : 'L');
             sb.append(t.getName().replace('.', '/'));
             if (lsemi)  sb.append(';');
         }
     }
 
