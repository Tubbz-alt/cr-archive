diff a/src/hotspot/share/oops/valueKlass.hpp b/src/hotspot/share/oops/valueKlass.hpp
--- a/src/hotspot/share/oops/valueKlass.hpp
+++ b/src/hotspot/share/oops/valueKlass.hpp
@@ -181,13 +181,12 @@
 
  public:
   // Type testing
   bool is_value_slow() const        { return true; }
 
-  // value_mirror is the primary mirror
-  oop value_mirror() const    { return java_lang_Class::inline_type_mirror(java_mirror()); }
-  oop indirect_mirror() const { return java_lang_Class::indirect_type_mirror(java_mirror()); }
+  // ## Remove this function when its dependencies are removed
+  oop ref_mirror() const { return java_lang_Class::ref_type_mirror(java_mirror()); }
 
   // Casting from Klass*
   static ValueKlass* cast(Klass* k);
 
   // Use this to return the size of an instance in heap words
@@ -299,11 +298,10 @@
     return offset;
   }
 
   void set_default_value(oop val) {
     java_mirror()->obj_field_put(default_value_offset(), val);
-    indirect_mirror()->obj_field_put(default_value_offset(), val);
   }
 
   oop default_value();
   void deallocate_contents(ClassLoaderData* loader_data);
   static void cleanup(ValueKlass* ik) ;
