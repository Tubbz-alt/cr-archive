diff a/src/hotspot/share/runtime/reflection.cpp b/src/hotspot/share/runtime/reflection.cpp
--- a/src/hotspot/share/runtime/reflection.cpp
+++ b/src/hotspot/share/runtime/reflection.cpp
@@ -346,14 +346,14 @@
   } else {
     Klass* k = java_lang_Class::as_Klass(element_mirror);
     if (k->is_array_klass() && ArrayKlass::cast(k)->dimension() >= MAX_DIM) {
       THROW_0(vmSymbols::java_lang_IllegalArgumentException());
     }
-    if (java_lang_Class::is_indirect_type(element_mirror)) {
-      return oopFactory::new_objArray(k, length, THREAD);
-    } else {
+    if (k->is_value()) {
       return oopFactory::new_valueArray(k, length, THREAD);
+    } else {
+      return oopFactory::new_objArray(k, length, THREAD);
     }
   }
 }
 
 
@@ -1184,11 +1184,11 @@
 
   oop return_type_mirror = java_lang_reflect_Method::return_type(method_mirror);
   BasicType rtype;
   if (java_lang_Class::is_primitive(return_type_mirror)) {
     rtype = basic_type_mirror_to_basic_type(return_type_mirror, CHECK_NULL);
-  } else if (java_lang_Class::inline_type_mirror(return_type_mirror) == return_type_mirror) {
+  } else if (java_lang_Class::as_Klass(return_type_mirror)->is_value()) {
     rtype = T_VALUETYPE;
   } else {
     rtype = T_OBJECT;
   }
 
