diff a/test/hotspot/jtreg/runtime/valhalla/valuetypes/testSupers/InlineClassWithBadSupers.jcod b/test/hotspot/jtreg/runtime/valhalla/valuetypes/testSupers/InlineClassWithBadSupers.jcod
--- a/test/hotspot/jtreg/runtime/valhalla/valuetypes/testSupers/InlineClassWithBadSupers.jcod
+++ b/test/hotspot/jtreg/runtime/valhalla/valuetypes/testSupers/InlineClassWithBadSupers.jcod
@@ -37,11 +37,11 @@
 
 // Inline class with a super class that is not abstract.
 class SuperNotAbstract {
   0xCAFEBABE;
   0; // minor version
-  59; // version
+  60; // version
   [51] { // Constant Pool
     ; // first element is empty
     class #2; // #1     at 0x0A
     Utf8 "SuperNotAbstract"; // #2     at 0x0D
     Field #1 #4; // #3     at 0x20
@@ -297,11 +297,11 @@
 
 // Inline class with a super class that has instance fields.
 class SuperHasNonStaticFields {
   0xCAFEBABE;
   0; // minor version
-  59; // version
+  60; // version
   [51] { // Constant Pool
     ; // first element is empty
     class #2; // #1     at 0x0A
     Utf8 "SuperHasNonStaticFields"; // #2     at 0x0D
     Field #1 #4; // #3     at 0x20
@@ -557,11 +557,11 @@
 
 // Inline class with a super class whose super class has a syncronized instance method.
 class SuperHasSynchMethod {
   0xCAFEBABE;
   0; // minor version
-  59; // version
+  60; // version
   [51] { // Constant Pool
     ; // first element is empty
     class #2; // #1     at 0x0A
     Utf8 "SuperHasSynchMethod"; // #2     at 0x0D
     Field #1 #4; // #3     at 0x20
@@ -816,11 +816,11 @@
 
 // Inline class with a super class containing a constructor that has arguments.
 class SuperCtorHasArgs {
   0xCAFEBABE;
   0; // minor version
-  59; // version
+  60; // version
   [51] { // Constant Pool
     ; // first element is empty
     class #2; // #1     at 0x0A
     Utf8 "SuperCtorHasArgs"; // #2     at 0x0D
     Field #1 #4; // #3     at 0x20
@@ -1077,11 +1077,11 @@
 // Inline class with a super class containing a constructor that has a non-empty
 // method body.
 class SuperCtorIsNotEmpty {
   0xCAFEBABE;
   0; // minor version
-  59; // version
+  60; // version
   [51] { // Constant Pool
     ; // first element is empty
     class #2; // #1     at 0x0A
     Utf8 "SuperCtorIsNotEmpty"; // #2     at 0x0D
     Field #1 #4; // #3     at 0x20
@@ -1337,11 +1337,11 @@
 // Inline class that implements java.lang.IdentityObject.  Loading this
 // class should throw an ICCE.
 class InlineImplementsIdentityObject {
   0xCAFEBABE;
   0; // minor version
-  59; // version
+  60; // version
   [53] { // Constant Pool
     ; // first element is empty
     class #2; // #1     at 0x0A
     Utf8 "InlineImplementsIdentityObject"; // #2     at 0x0D
     Field #1 #4; // #3     at 0x28
@@ -1601,11 +1601,11 @@
 // Inline class with a super class that implements java.lang.IdentityObject.
 // Loading this class should throw an ICCE.
 class SuperImplementsIdentityObject {
   0xCAFEBABE;
   0; // minor version
-  59; // version
+  60; // version
   [51] { // Constant Pool
     ; // first element is empty
     class #2; // #1     at 0x0A
     Utf8 "SuperImplementsIdentityObject"; // #2     at 0x0D
     Field #1 #4; // #3     at 0x20
@@ -1861,11 +1861,11 @@
 // Inline class with a super class that implements an interface that extends other
 // interfaces that eventually extend java.lang.IdentityObject
 class SuperIntfImplementsIdentityObject {
   0xCAFEBABE;
   0; // minor version
-  59; // version
+  60; // version
   [51] { // Constant Pool
     ; // first element is empty
     class #2; // #1     at 0x0A
     Utf8 "SuperIntfImplementsIdentityObject"; // #2     at 0x0D
     Field #1 #4; // #3     at 0x20
