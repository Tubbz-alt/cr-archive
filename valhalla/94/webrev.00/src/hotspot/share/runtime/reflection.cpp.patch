diff a/src/hotspot/share/runtime/reflection.cpp b/src/hotspot/share/runtime/reflection.cpp
--- a/src/hotspot/share/runtime/reflection.cpp
+++ b/src/hotspot/share/runtime/reflection.cpp
@@ -1220,11 +1220,17 @@
 
   // Special case for factory methods
   if (!method->signature()->is_void_method_signature()) {
     assert(klass->is_inline_klass(), "inline classes must use factory methods");
     Handle no_receiver; // null instead of receiver
-    return invoke(klass, method, no_receiver, override, ptypes, T_VALUETYPE, args, false, CHECK_NULL);
+    BasicType rtype;
+    if (klass->is_hidden() || klass->is_unsafe_anonymous()) {
+      rtype = T_OBJECT;
+    } else {
+      rtype = T_VALUETYPE;
+    }
+    return invoke(klass, method, no_receiver, override, ptypes, rtype, args, false, CHECK_NULL);
   }
 
   // main branch of code creates a non-inline object:
   assert(!klass->is_inline_klass(), "classic constructors are only for non-inline classes");
   Handle receiver = klass->allocate_instance_handle(CHECK_NULL);
