diff a/src/hotspot/share/utilities/stringUtils.cpp b/src/hotspot/share/utilities/stringUtils.cpp
--- a/src/hotspot/share/utilities/stringUtils.cpp
+++ b/src/hotspot/share/utilities/stringUtils.cpp
@@ -271,11 +271,11 @@
     }
     return ch;  // plain character
   }
 };
 
-static bool class_list_match_sane();
+DEBUG_ONLY(static bool class_list_match_sane();)
 
 bool StringUtils::class_list_match(const char* class_pattern_list,
                                    const char* class_name) {
   assert(class_list_match_sane(), "");
   if (class_pattern_list == NULL || class_name == NULL || class_name[0] == '\0')
@@ -283,21 +283,19 @@
   ClassListMatcher clm;
   return clm.string_match(class_pattern_list, class_name);
 }
 
 #ifdef ASSERT
-static void
-class_list_match_sane(const char* pat, const char* str, bool result = true) {
+static void class_list_match_sane(const char* pat, const char* str, bool result = true) {
   if (result) {
     assert(StringUtils::class_list_match(pat, str), "%s ~ %s", pat, str);
   } else {
     assert(!StringUtils::class_list_match(pat, str), "%s !~ %s", pat, str);
   }
 }
 
-static bool
-class_list_match_sane() {
+static bool class_list_match_sane() {
   static bool done = false;
   if (done)  return true;
   done = true;
   class_list_match_sane("foo", "foo");
   class_list_match_sane("foo,", "foo");
