diff a/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/MemberEnter.java b/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/MemberEnter.java
--- a/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/MemberEnter.java
+++ b/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/MemberEnter.java
@@ -216,11 +216,18 @@
         if (lastParam != null && (lastParam.mods.flags & Flags.VARARGS) != 0)
             m.flags_field |= Flags.VARARGS;
 
         localEnv.info.scope.leave();
         if (chk.checkUnique(tree.pos(), m, enclScope)) {
-        enclScope.enter(m);
+            ClassSymbol refProjection = m.owner.isValue() ? (ClassSymbol) m.owner.referenceProjection() : null;
+            enclScope.enter(m);
+            if (refProjection != null) {
+                MethodSymbol clone = m.clone(refProjection);
+                clone.projection = m;
+                m.projection = clone;
+                refProjection.members_field.enter(clone);
+            }
         }
 
         annotate.annotateLater(tree.mods.annotations, localEnv, m, tree.pos());
         // Visit the signature of the method. Note that
         // TypeAnnotate doesn't descend into the body.
@@ -300,11 +307,18 @@
                 v.setLazyConstValue(initEnv(tree, initEnv), attr, tree);
             }
         }
         if (chk.checkUnique(tree.pos(), v, enclScope)) {
             chk.checkTransparentVar(tree.pos(), v, enclScope);
+            ClassSymbol refProjection =  v.owner.isValue() ? (ClassSymbol) v.owner.referenceProjection() : null;
             enclScope.enter(v);
+            if (refProjection != null) {
+                VarSymbol clone = v.clone(refProjection);
+                clone.projection = v;
+                v.projection = clone;
+                refProjection.members_field.enter(clone);
+            }
         } else if (v.owner.kind == MTH || (v.flags_field & (Flags.PRIVATE | Flags.FINAL | Flags.GENERATED_MEMBER | Flags.RECORD)) != 0) {
             // if this is a parameter or a field obtained from a record component, enter it
             enclScope.enter(v);
         }
 
