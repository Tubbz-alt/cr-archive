diff a/src/hotspot/cpu/x86/macroAssembler_x86.cpp b/src/hotspot/cpu/x86/macroAssembler_x86.cpp
--- a/src/hotspot/cpu/x86/macroAssembler_x86.cpp
+++ b/src/hotspot/cpu/x86/macroAssembler_x86.cpp
@@ -4615,25 +4615,17 @@
   movptr(holder, Address(holder, ConstMethod::constants_offset()));             // ConstantPool*
   movptr(holder, Address(holder, ConstantPool::pool_holder_offset_in_bytes())); // InstanceKlass*
 }
 
 void MacroAssembler::load_klass(Register dst, Register src) {
-  load_metadata(dst, src);
 #ifdef _LP64
   if (UseCompressedClassPointers) {
-    andl(dst, oopDesc::compressed_klass_mask());
+    movl(dst, Address(src, oopDesc::klass_offset_in_bytes()));
     decode_klass_not_null(dst);
   } else
 #endif
-  {
-#ifdef _LP64
-    shlq(dst, oopDesc::storage_props_nof_bits);
-    shrq(dst, oopDesc::storage_props_nof_bits);
-#else
-    andl(dst, oopDesc::wide_klass_mask());
-#endif
-  }
+  movptr(dst, Address(src, oopDesc::klass_offset_in_bytes()));
 }
 
 void MacroAssembler::load_prototype_header(Register dst, Register src) {
   load_klass(dst, src);
   movptr(dst, Address(dst, Klass::prototype_header_offset()));
