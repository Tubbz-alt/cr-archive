diff a/src/hotspot/share/classfile/classFileParser.cpp b/src/hotspot/share/classfile/classFileParser.cpp
--- a/src/hotspot/share/classfile/classFileParser.cpp
+++ b/src/hotspot/share/classfile/classFileParser.cpp
@@ -4994,11 +4994,11 @@
 #endif
 
   // Check if this klass supports the java.lang.Cloneable interface
   if (SystemDictionary::Cloneable_klass_loaded()) {
     if (ik->is_subtype_of(SystemDictionary::Cloneable_klass())) {
-      if (ik->is_value()) {
+      if (ik->is_inline_klass()) {
         Thread *THREAD = Thread::current();
         throwInlineTypeLimitation(THREAD_AND_LOCATION, "Inline Types do not support Cloneable");
         return;
       }
       ik->set_is_cloneable();
@@ -6172,11 +6172,11 @@
       log_info(class, fingerprint)("%s :  expected = " PTR64_FORMAT " actual = " PTR64_FORMAT,
                                  ik->external_name(), aot_fp, _stream->compute_fingerprint());
     }
   }
 
-  if (ik->is_value()) {
+  if (ik->is_inline_klass()) {
     ValueKlass* vk = ValueKlass::cast(ik);
     oop val = ik->allocate_instance(CHECK_NULL);
     vk->set_default_value(val);
   }
 
@@ -6247,11 +6247,11 @@
   ik->set_should_verify_class(_need_verify);
 
   // Not yet: supers are done below to support the new subtype-checking fields
   ik->set_nonstatic_field_size(_field_info->_nonstatic_field_size);
   ik->set_has_nonstatic_fields(_field_info->_has_nonstatic_fields);
-  if (_field_info->_is_naturally_atomic && ik->is_value()) {
+  if (_field_info->_is_naturally_atomic && ik->is_inline_klass()) {
     ik->set_is_naturally_atomic();
   }
   if (_is_empty_inline_type) {
     ik->set_is_empty_inline_type();
   }
@@ -6428,11 +6428,11 @@
       JvmtiExport::add_default_read_edges(module_handle, THREAD);
     }
   }
 
   int nfields = ik->java_fields_count();
-  if (ik->is_value()) nfields++;
+  if (ik->is_inline_klass()) nfields++;
   for (int i = 0; i < nfields; i++) {
     if (ik->field_is_inline_type(i)) {
       Symbol* klass_name = ik->field_signature(i)->fundamental_name(CHECK);
       // Inline classes for instance fields must have been pre-loaded
       // Inline classes for static fields might not have been loaded yet
