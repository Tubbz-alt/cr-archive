diff a/src/hotspot/share/opto/split_if.cpp b/src/hotspot/share/opto/split_if.cpp
--- a/src/hotspot/share/opto/split_if.cpp
+++ b/src/hotspot/share/opto/split_if.cpp
@@ -23,13 +23,13 @@
  */
 
 #include "precompiled.hpp"
 #include "memory/allocation.inline.hpp"
 #include "opto/callnode.hpp"
+#include "opto/inlinetypenode.hpp"
 #include "opto/loopnode.hpp"
 #include "opto/movenode.hpp"
-#include "opto/valuetypenode.hpp"
 
 
 //------------------------------split_thru_region------------------------------
 // Split Node 'n' through merge point.
 Node *PhaseIdealLoop::split_thru_region( Node *n, Node *region ) {
@@ -237,16 +237,16 @@
   const Type* rtype = NULL;
   if (n->Opcode() == Op_ConvI2L && n->bottom_type() != TypeLong::INT) {
     rtype = TypeLong::INT;
   }
 
-  // Value types should not be split through Phis but each value input
-  // needs to be merged individually. At this point, value types should
+  // Inline types should not be split through Phis but each value input
+  // needs to be merged individually. At this point, inline types should
   // only be used by AllocateNodes. Try to remove redundant allocations
-  // and unlink the now dead value type node.
-  if (n->is_ValueType()) {
-    n->as_ValueType()->remove_redundant_allocations(&_igvn, this);
+  // and unlink the now dead inline type node.
+  if (n->is_InlineType()) {
+    n->as_InlineType()->remove_redundant_allocations(&_igvn, this);
     return true; // n is now dead
   }
 
   // Now actually split-up this guy.  One copy per control path merging.
   Node *phi = PhiNode::make_blank(blk1, n);
