diff a/src/hotspot/share/oops/instanceKlass.hpp b/src/hotspot/share/oops/instanceKlass.hpp
--- a/src/hotspot/share/oops/instanceKlass.hpp
+++ b/src/hotspot/share/oops/instanceKlass.hpp
@@ -71,11 +71,11 @@
 class jniIdMapBase;
 class JNIid;
 class JvmtiCachedClassFieldMap;
 class nmethodBucket;
 class OopMapCache;
-class BufferedValueTypeBlob;
+class BufferedInlineTypeBlob;
 class InterpreterOopMap;
 class PackageEntry;
 class ModuleEntry;
 
 // This is used in iterators below.
@@ -440,11 +440,11 @@
   void set_is_naturally_atomic() {
     _misc_flags |= _misc_is_naturally_atomic;
   }
 
   // Query if this class implements jl.NonTearable or was
-  // mentioned in the JVM option AlwaysAtomicValueTypes.
+  // mentioned in the JVM option ForceNonTearable.
   // This bit can occur anywhere, but is only significant
   // for inline classes *and* their super types.
   // It inherits from supers along with NonTearable.
   bool is_declared_atomic() const {
     return (_misc_flags & _misc_is_declared_atomic) != 0;
