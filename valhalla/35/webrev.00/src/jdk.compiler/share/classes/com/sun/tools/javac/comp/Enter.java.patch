diff a/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Enter.java b/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Enter.java
--- a/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Enter.java
+++ b/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Enter.java
@@ -469,10 +469,14 @@
         // Fill out class fields.
         c.completer = Completer.NULL_COMPLETER; // do not allow the initial completer linger on.
         c.flags_field = chk.checkFlags(tree.pos(), tree.mods.flags, c, tree);
         c.sourcefile = env.toplevel.sourcefile;
         c.members_field = WriteableScope.create(c);
+        if (c.projection != null) {
+            // Do not carry around symbols from prior round.
+            c.projection.members_field = WriteableScope.create(c.projection);
+        }
         c.clearAnnotationMetadata();
 
         ClassType ct = (ClassType)c.type;
         if (owner.kind != PCK && (c.flags_field & STATIC) == 0) {
             // We are seeing a local or inner class.
@@ -490,10 +494,16 @@
         }
 
         // Enter type parameters.
         ct.typarams_field = classEnter(tree.typarams, localEnv);
         ct.allparams_field = null;
+        if (ct.isValue()) {
+            if (ct.projection != null) {
+                ct.projection.typarams_field = ct.typarams_field;
+                ct.projection.allparams_field = ct.allparams_field;
+            }
+        }
 
         // install further completer for this type.
         c.completer = typeEnter;
 
         // Add non-local class to uncompleted, to make sure it will be
