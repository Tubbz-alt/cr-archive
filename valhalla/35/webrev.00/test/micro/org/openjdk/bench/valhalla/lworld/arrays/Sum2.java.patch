diff a/test/micro/org/openjdk/bench/valhalla/lworld/arrays/Sum2.java b/test/micro/org/openjdk/bench/valhalla/lworld/arrays/Sum2.java
--- a/test/micro/org/openjdk/bench/valhalla/lworld/arrays/Sum2.java
+++ b/test/micro/org/openjdk/bench/valhalla/lworld/arrays/Sum2.java
@@ -7,16 +7,16 @@
 import org.openjdk.bench.valhalla.lworld.types.Val2;
 
 public class Sum2 extends SizedBase {
 
     Val2[] values;
-    Val2?[] boxed;
+    Val2.ref[] boxed;
 
     @Setup
     public void setup() {
         values = Utils.fillV(new Val2[size]);
-        boxed = Utils.fillB(new Val2?[size]);
+        boxed = Utils.fillB(new Val2.ref[size]);
     }
 
     @Benchmark
     public int value() {
         Val2[] v = this.values;
@@ -39,21 +39,21 @@
         return f0 + f1;
     }
 
     @Benchmark
     public int boxed() {
-        Val2?[] v = this.boxed;
-        Val2? sum = new Val2(0, 0);
+        Val2.ref[] v = this.boxed;
+        Val2.ref sum = new Val2(0, 0);
         for (int i = 0; i < size; i++) {
             sum = sum.add((Val2)v[i]);
         }
         return sum.reduce();
     }
 
     @Benchmark
     public int boxScalarized() {
-        Val2?[] v = this.boxed;
+        Val2.ref[] v = this.boxed;
         int f0 = 0;
         int f1 = 0;
         for (int i = 0; i < size; i++) {
             f0 += v[i].f0;
             f1 += v[i].f1;
