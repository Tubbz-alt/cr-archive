diff a/test/micro/org/openjdk/bench/valhalla/lworld/arrays/Sum1.java b/test/micro/org/openjdk/bench/valhalla/lworld/arrays/Sum1.java
--- a/test/micro/org/openjdk/bench/valhalla/lworld/arrays/Sum1.java
+++ b/test/micro/org/openjdk/bench/valhalla/lworld/arrays/Sum1.java
@@ -7,16 +7,16 @@
 import org.openjdk.bench.valhalla.lworld.types.Val1;
 
 public class Sum1 extends SizedBase {
 
     Val1[] values;
-    Val1?[] boxed;
+    Val1.ref[] boxed;
 
     @Setup
     public void setup() {
         values = Utils.fillV(new Val1[size]);
-        boxed = Utils.fillB(new Val1?[size]);
+        boxed = Utils.fillB(new Val1.ref[size]);
     }
 
     @Benchmark
     public int value() {
         Val1[] v = this.values;
@@ -37,21 +37,21 @@
         return sum;
     }
 
     @Benchmark
     public int boxed() {
-        Val1?[] v = this.boxed;
-        Val1? sum = new Val1(0);
+        Val1.ref[] v = this.boxed;
+        Val1.ref sum = new Val1(0);
         for (int i = 0; i < size; i++) {
             sum = sum.add((Val1)v[i]);
         }
         return sum.reduce();
     }
 
     @Benchmark
     public int boxScalarized() {
-        Val1?[] v = this.boxed;
+        Val1.ref[] v = this.boxed;
         int sum = 0;
         for (int i = 0; i < size; i++) {
             sum += v[i].f0;
         }
         return sum;
