diff a/test/micro/org/openjdk/bench/valhalla/lworld/arrays/Sum8.java b/test/micro/org/openjdk/bench/valhalla/lworld/arrays/Sum8.java
--- a/test/micro/org/openjdk/bench/valhalla/lworld/arrays/Sum8.java
+++ b/test/micro/org/openjdk/bench/valhalla/lworld/arrays/Sum8.java
@@ -7,16 +7,16 @@
 import org.openjdk.bench.valhalla.lworld.types.Val8;
 
 public class Sum8 extends SizedBase {
 
     Val8[] values;
-    Val8?[] boxed;
+    Val8.ref[] boxed;
 
     @Setup
     public void setup() {
         values = Utils.fillV(new Val8[size]);
-        boxed = Utils.fillB(new Val8?[size]);
+        boxed = Utils.fillB(new Val8.ref[size]);
     }
 
     @Benchmark
     public int value() {
         Val8[] v = this.values;
@@ -51,21 +51,21 @@
         return f0 + f1 + f2 + f3 + f4 + f5 + f6 + f7;
     }
 
     @Benchmark
     public int boxed() {
-        Val8?[] v = this.boxed;
-        Val8? sum = new Val8(0,0,0,0,0,0,0,0);
+        Val8.ref[] v = this.boxed;
+        Val8.ref sum = new Val8(0,0,0,0,0,0,0,0);
         for (int i = 0; i < size; i++) {
             sum = sum.add((Val8)v[i]);
         }
         return sum.reduce();
     }
 
     @Benchmark
     public int boxScalarized() {
-        Val8?[] v = this.boxed;
+        Val8.ref[] v = this.boxed;
         int f0 = 0;
         int f1 = 0;
         int f2 = 0;
         int f3 = 0;
         int f4 = 0;
