diff a/src/hotspot/share/opto/callnode.cpp b/src/hotspot/share/opto/callnode.cpp
--- a/src/hotspot/share/opto/callnode.cpp
+++ b/src/hotspot/share/opto/callnode.cpp
@@ -730,11 +730,11 @@
         assert(con == TypeFunc::Parms+1, "only one return value");
         assert(range_cc->field_at(TypeFunc::Parms+1) == Type::HALF, "");
         return new MachProjNode(this,con, RegMask::Empty, (uint)OptoReg::Bad);
       }
     } else {
-      // The Call may return multiple values (value type fields): we
+      // The Call may return multiple values (inline type fields): we
       // create one projection per returned values.
       assert(con <= TypeFunc::Parms+1 || InlineTypeReturnedAsFields, "only for multi value return");
       uint ideal_reg = range_cc->field_at(con)->ideal_reg();
       return new MachProjNode(this, con, mask[con-TypeFunc::Parms], ideal_reg);
     }
