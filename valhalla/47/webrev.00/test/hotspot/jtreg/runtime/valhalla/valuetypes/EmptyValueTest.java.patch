diff a/test/hotspot/jtreg/runtime/valhalla/valuetypes/EmptyValueTest.java b/test/hotspot/jtreg/runtime/valhalla/valuetypes/EmptyValueTest.java
--- a/test/hotspot/jtreg/runtime/valhalla/valuetypes/EmptyValueTest.java
+++ b/test/hotspot/jtreg/runtime/valhalla/valuetypes/EmptyValueTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2019, 2019 Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2019, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -30,11 +30,11 @@
  * @test
  * @summary Test support for empty value types (no instance fields)
  * @library /test/lib
  * @compile -XDallowEmptyValues EmptyValueTest.java
  * @run main/othervm -XX:+EnableValhalla runtime.valhalla.valuetypes.EmptyValueTest
- 
+
  */
 
 public class EmptyValueTest {
 
     static inline class EmptyValue {
@@ -52,19 +52,19 @@
     }
 
     static class WithInt {
 	int i;
     }
-    
+
     static class WithEmptyField extends WithInt  {
 	// With current layout strategy for reference classs, the empty
 	// value field would be placed between the int and the Object
 	// fields, along with some padding.
 	Object o;
 	EmptyValue empty;
     }
-    
+
     public static void main(String[] args) {
 	// Create an empty value
 	EmptyValue empty = new EmptyValue();
 	Asserts.assertTrue(empty.isEmpty());
 
@@ -79,11 +79,11 @@
 	Asserts.assertEquals(w.empty.getClass(), EmptyValue.class);
 	Asserts.assertTrue(w.empty.isEmpty());
 	w.empty = new EmptyValue();
 	Asserts.assertEquals(w.empty.getClass(), EmptyValue.class);
 	Asserts.assertTrue(w.empty.isEmpty());
-	
+
 	// Create an array of empty values
 	EmptyValue[] emptyArray = new EmptyValue[100];
 	for(EmptyValue element : emptyArray) {
 	    Asserts.assertEquals(element.getClass(), EmptyValue.class);
 	    Asserts.assertTrue(element.isEmpty());
@@ -107,11 +107,11 @@
 	System.arraycopy(emptyArray, 10, emptyArray, 20, 50);
 	for(EmptyValue element : emptyArray) {
 	    Asserts.assertEquals(element.getClass(), EmptyValue.class);
 	    Asserts.assertTrue(element.isEmpty());
 	}
-	
+
 	// Passing an empty value in argument
 	assert isEmpty(empty);
 
 	// Returning an empty value
 	assert getEmpty().isEmpty();
