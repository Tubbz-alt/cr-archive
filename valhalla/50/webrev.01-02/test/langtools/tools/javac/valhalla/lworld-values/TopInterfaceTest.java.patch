diff a/test/langtools/tools/javac/valhalla/lworld-values/TopInterfaceTest.java b/test/langtools/tools/javac/valhalla/lworld-values/TopInterfaceTest.java
--- a/test/langtools/tools/javac/valhalla/lworld-values/TopInterfaceTest.java
+++ b/test/langtools/tools/javac/valhalla/lworld-values/TopInterfaceTest.java
@@ -45,18 +45,18 @@
     public static void main(String args[]) {
 
         V inln_o = new V();
         C id_o = new C();
 
-        // Check that InlineObject is injected as a super interface for inline types.
+
         Class<?> [] ca = inln_o.getClass().getInterfaces();
-        if (ca.length != 1)
-            throw new AssertionError("Found wrong super interfaces");
-        if (!ca[0].getCanonicalName().equals("java.lang.InlineObject"))
+        if (ca.length != 0)
             throw new AssertionError("Found wrong super interfaces");
-        if (!(inln_o instanceof InlineObject)) // really really make sure...
-            throw new AssertionError("Expected inline Object");
+
+
+
+
 
         // Check that V's super class is V.ref in class file.
         Class<?> vrefCls = inln_o.getClass().getSuperclass();
         if (!vrefCls.getCanonicalName().equals("TopInterfaceTest.V$ref"))
             throw new AssertionError("Wrong super type for value type");
@@ -68,12 +68,12 @@
         if (jlo.getInterfaces().length != 0)
             throw new AssertionError("Wrong number of super interfaces for jlO");
 
         if (!(id_o instanceof IdentityObject))
             throw new AssertionError("Expected identity Object");
-        if (id_o instanceof InlineObject)
-            throw new AssertionError("Expected identity object, found inline object");
+
+
 
         // Check that no super interface injection has happened for interfaces.
         if (I.class.getInterfaces().length != 0)
             throw new AssertionError("Found extraneous super interfaces");
 
