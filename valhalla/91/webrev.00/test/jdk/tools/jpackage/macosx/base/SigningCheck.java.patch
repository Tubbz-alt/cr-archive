diff a/test/jdk/tools/jpackage/macosx/base/SigningCheck.java b/test/jdk/tools/jpackage/macosx/base/SigningCheck.java
--- a/test/jdk/tools/jpackage/macosx/base/SigningCheck.java
+++ b/test/jdk/tools/jpackage/macosx/base/SigningCheck.java
@@ -82,18 +82,23 @@
 
         TKit.throwSkippedException("Cannot find required certifciates: " + key);
     }
 
     private static void validateCertificateTrust(String name) {
-        List<String> result = new Executor()
-                .setExecutable("security")
-                .addArguments("dump-trust-settings")
-                .executeWithoutExitCodeCheckAndGetOutput();
-        result.stream().forEachOrdered(TKit::trace);
-        TKit.assertTextStream(name)
-                .predicate((line, what) -> line.trim().endsWith(what))
-                .orElseThrow(() -> TKit.throwSkippedException(
-                        "Certifcate not trusted by current user: " + name))
-                .apply(result.stream());
+        // Certificates using the default user name must be trusted by user.
+        // User supplied certs whose trust is set to "Use System Defaults"
+        // will not be listed as trusted by dump-trust-settings
+        if (SigningBase.DEV_NAME.equals("jpackage.openjdk.java.net")) {
+            List<String> result = new Executor()
+                    .setExecutable("security")
+                    .addArguments("dump-trust-settings")
+                    .executeWithoutExitCodeCheckAndGetOutput();
+            result.stream().forEachOrdered(TKit::trace);
+            TKit.assertTextStream(name)
+                    .predicate((line, what) -> line.trim().endsWith(what))
+                    .orElseThrow(() -> TKit.throwSkippedException(
+                            "Certifcate not trusted by current user: " + name))
+                    .apply(result.stream());
+        }
     }
 
 }
