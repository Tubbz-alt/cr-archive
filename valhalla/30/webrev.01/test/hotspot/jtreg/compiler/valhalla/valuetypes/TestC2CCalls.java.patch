diff a/test/hotspot/jtreg/compiler/valhalla/valuetypes/TestC2CCalls.java b/test/hotspot/jtreg/compiler/valhalla/valuetypes/TestC2CCalls.java
--- a/test/hotspot/jtreg/compiler/valhalla/valuetypes/TestC2CCalls.java
+++ b/test/hotspot/jtreg/compiler/valhalla/valuetypes/TestC2CCalls.java
@@ -73,14 +73,14 @@
         }
     }
 
     static interface MyInterface1 {
         public MyInterface1 test1(OtherVal other, int y);
-        public MyInterface1 test2(OtherVal other1, OtherVal? other2, int y);
-        public MyInterface1 test3(OtherVal other1, OtherVal? other2, int y, boolean deopt);
-        public MyInterface1 test4(OtherVal other1, OtherVal? other2, int y);
-        public MyInterface1 test5(OtherVal other1, OtherVal? other2, int y);
+        public MyInterface1 test2(OtherVal other1, OtherVal.ref other2, int y);
+        public MyInterface1 test3(OtherVal other1, OtherVal.ref other2, int y, boolean deopt);
+        public MyInterface1 test4(OtherVal other1, OtherVal.ref other2, int y);
+        public MyInterface1 test5(OtherVal other1, OtherVal.ref other2, int y);
         public MyInterface1 test6();
         public MyInterface1 test7(int i1, int i2, int i3, int i4, int i5, int i6);
         public MyInterface1 test8(int i1, int i2, int i3, int i4, int i5, int i6, int i7);
         public MyInterface1 test9(MyValue3 other, int i1, int i2, int i3, int i4, int i5, int i6);
         public MyInterface1 test10(MyValue4 other, int i1, int i2, int i3, int i4, int i5, int i6);
@@ -104,31 +104,31 @@
         public MyValue1 test1(OtherVal other, int y) {
             return new MyValue1(x + other.x + y);
         }
 
         @Override
-        public MyValue1 test2(OtherVal other1, OtherVal? other2, int y) {
+        public MyValue1 test2(OtherVal other1, OtherVal.ref other2, int y) {
             return new MyValue1(x + other1.x + other2.x + y);
         }
 
         @Override
-        public MyValue1 test3(OtherVal other1, OtherVal? other2, int y, boolean deopt) {
+        public MyValue1 test3(OtherVal other1, OtherVal.ref other2, int y, boolean deopt) {
             if (!deopt) {
               return new MyValue1(x + other1.x + other2.x + y);
             } else {
               // Uncommon trap
               return test1(other1, y);
             }
         }
 
         @Override
-        public MyValue1 test4(OtherVal other1, OtherVal? other2, int y) {
+        public MyValue1 test4(OtherVal other1, OtherVal.ref other2, int y) {
             return new MyValue1(x + other1.x + other2.x + y);
         }
 
         @Override
-        public MyValue1 test5(OtherVal other1, OtherVal? other2, int y) {
+        public MyValue1 test5(OtherVal other1, OtherVal.ref other2, int y) {
             return new MyValue1(x + other1.x + other2.x + y);
         }
 
         @Override
         public MyValue1 test6() {
@@ -170,31 +170,31 @@
         public MyValue2 test1(OtherVal other, int y) {
             return new MyValue2(x + other.x + y);
         }
 
         @Override
-        public MyValue2 test2(OtherVal other1, OtherVal? other2, int y) {
+        public MyValue2 test2(OtherVal other1, OtherVal.ref other2, int y) {
             return new MyValue2(x + other1.x + other2.x + y);
         }
 
         @Override
-        public MyValue2 test3(OtherVal other1, OtherVal? other2, int y, boolean deopt) {
+        public MyValue2 test3(OtherVal other1, OtherVal.ref other2, int y, boolean deopt) {
             if (!deopt) {
               return new MyValue2(x + other1.x + other2.x + y);
             } else {
               // Uncommon trap
               return test1(other1, y);
             }
         }
 
         @Override
-        public MyValue2 test4(OtherVal other1, OtherVal? other2, int y) {
+        public MyValue2 test4(OtherVal other1, OtherVal.ref other2, int y) {
             return new MyValue2(x + other1.x + other2.x + y);
         }
 
         @Override
-        public MyValue2 test5(OtherVal other1, OtherVal? other2, int y) {
+        public MyValue2 test5(OtherVal other1, OtherVal.ref other2, int y) {
             return new MyValue2(x + other1.x + other2.x + y);
         }
 
         @Override
         public MyValue2 test6() {
@@ -239,17 +239,17 @@
         }
 
         @Override
         public MyValue3 test1(OtherVal other, int y) { return MyValue3.default; }
         @Override
-        public MyValue3 test2(OtherVal other1, OtherVal? other2, int y)  { return MyValue3.default; }
+        public MyValue3 test2(OtherVal other1, OtherVal.ref other2, int y)  { return MyValue3.default; }
         @Override
-        public MyValue3 test3(OtherVal other1, OtherVal? other2, int y, boolean deopt)  { return MyValue3.default; }
+        public MyValue3 test3(OtherVal other1, OtherVal.ref other2, int y, boolean deopt)  { return MyValue3.default; }
         @Override
-        public MyValue3 test4(OtherVal other1, OtherVal? other2, int y)  { return MyValue3.default; }
+        public MyValue3 test4(OtherVal other1, OtherVal.ref other2, int y)  { return MyValue3.default; }
         @Override
-        public MyValue3 test5(OtherVal other1, OtherVal? other2, int y)  { return MyValue3.default; }
+        public MyValue3 test5(OtherVal other1, OtherVal.ref other2, int y)  { return MyValue3.default; }
         @Override
         public MyValue3 test6()  { return MyValue3.default; }
 
         @Override
         public MyValue3 test7(int i1, int i2, int i3, int i4, int i5, int i6)  {
@@ -289,17 +289,17 @@
         }
 
         @Override
         public MyValue4 test1(OtherVal other, int y) { return MyValue4.default; }
         @Override
-        public MyValue4 test2(OtherVal other1, OtherVal? other2, int y)  { return MyValue4.default; }
+        public MyValue4 test2(OtherVal other1, OtherVal.ref other2, int y)  { return MyValue4.default; }
         @Override
-        public MyValue4 test3(OtherVal other1, OtherVal? other2, int y, boolean deopt)  { return MyValue4.default; }
+        public MyValue4 test3(OtherVal other1, OtherVal.ref other2, int y, boolean deopt)  { return MyValue4.default; }
         @Override
-        public MyValue4 test4(OtherVal other1, OtherVal? other2, int y)  { return MyValue4.default; }
+        public MyValue4 test4(OtherVal other1, OtherVal.ref other2, int y)  { return MyValue4.default; }
         @Override
-        public MyValue4 test5(OtherVal other1, OtherVal? other2, int y)  { return MyValue4.default; }
+        public MyValue4 test5(OtherVal other1, OtherVal.ref other2, int y)  { return MyValue4.default; }
         @Override
         public MyValue4 test6()  { return MyValue4.default; }
 
         @Override
         public MyValue4 test7(int i1, int i2, int i3, int i4, int i5, int i6)  {
@@ -336,31 +336,31 @@
         public MyObject test1(OtherVal other, int y) {
             return new MyObject(x + other.x + y);
         }
 
         @Override
-        public MyObject test2(OtherVal other1, OtherVal? other2, int y) {
+        public MyObject test2(OtherVal other1, OtherVal.ref other2, int y) {
             return new MyObject(x + other1.x + other2.x + y);
         }
 
         @Override
-        public MyObject test3(OtherVal other1, OtherVal? other2, int y, boolean deopt) {
+        public MyObject test3(OtherVal other1, OtherVal.ref other2, int y, boolean deopt) {
             if (!deopt) {
               return new MyObject(x + other1.x + other2.x + y);
             } else {
               // Uncommon trap
               return test1(other1, y);
             }
         }
 
         @Override
-        public MyObject test4(OtherVal other1, OtherVal? other2, int y) {
+        public MyObject test4(OtherVal other1, OtherVal.ref other2, int y) {
             return new MyObject(x + other1.x + other2.x + y);
         }
 
         @Override
-        public MyObject test5(OtherVal other1, OtherVal? other2, int y) {
+        public MyObject test5(OtherVal other1, OtherVal.ref other2, int y) {
             return new MyObject(x + other1.x + other2.x + y);
         }
 
         @Override
         public MyObject test6() {
