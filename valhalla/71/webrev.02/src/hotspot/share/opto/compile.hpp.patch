diff a/src/hotspot/share/opto/compile.hpp b/src/hotspot/share/opto/compile.hpp
--- a/src/hotspot/share/opto/compile.hpp
+++ b/src/hotspot/share/opto/compile.hpp
@@ -316,11 +316,11 @@
   GrowableArray<Node*>* _macro_nodes;           // List of nodes which need to be expanded before matching.
   GrowableArray<Node*>* _predicate_opaqs;       // List of Opaque1 nodes for the loop predicates.
   GrowableArray<Node*>* _expensive_nodes;       // List of nodes that are expensive to compute and that we'd better not let the GVN freely common
   GrowableArray<Node*>* _range_check_casts;     // List of CastII nodes with a range check dependency
   GrowableArray<Node*>* _opaque4_nodes;         // List of Opaque4 nodes that have a default value
-  Unique_Node_List*     _value_type_nodes;      // List of ValueType nodes
+  GrowableArray<Node*>* _value_type_nodes;      // List of ValueType nodes
   ConnectionGraph*      _congraph;
 #ifndef PRODUCT
   IdealGraphPrinter*    _printer;
   static IdealGraphPrinter* _debug_file_printer;
   static IdealGraphPrinter* _debug_network_printer;
@@ -712,12 +712,11 @@
   void  remove_opaque4_nodes(PhaseIterGVN &igvn);
 
   // Keep track of value type nodes for later processing
   void add_value_type(Node* n);
   void remove_value_type(Node* n);
-  void process_value_types(PhaseIterGVN &igvn);
-  bool can_add_value_type() const { return _value_type_nodes != NULL; }
+  void process_value_types(PhaseIterGVN &igvn, bool post_ea = false);
 
   void adjust_flattened_array_access_aliases(PhaseIterGVN& igvn);
 
   void sort_macro_nodes();
 
