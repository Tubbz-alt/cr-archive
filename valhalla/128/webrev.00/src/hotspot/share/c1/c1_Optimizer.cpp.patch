diff a/src/hotspot/share/c1/c1_Optimizer.cpp b/src/hotspot/share/c1/c1_Optimizer.cpp
--- a/src/hotspot/share/c1/c1_Optimizer.cpp
+++ b/src/hotspot/share/c1/c1_Optimizer.cpp
@@ -414,11 +414,11 @@
           if (!con || !ifop) {
             ifop = if_->y()->as_IfOp();
             con  = if_->x()->as_Constant();
             swapped = true;
           }
-          if (con && ifop) {
+          if (con && ifop && !ifop->substitutability_check()) {
             Constant* tval = ifop->tval()->as_Constant();
             Constant* fval = ifop->fval()->as_Constant();
             if (tval && fval) {
               // Find the instruction before if_, starting with ifop.
               // When if_ and ifop are not in the same block, prev
@@ -439,11 +439,11 @@
 
                 BlockBegin* tblock = tval->compare(cond, con, tsux, fsux);
                 BlockBegin* fblock = fval->compare(cond, con, tsux, fsux);
                 if (tblock != fblock && !if_->is_safepoint()) {
                   If* newif = new If(ifop->x(), ifop->cond(), false, ifop->y(),
-                                     tblock, fblock, if_->state_before(), if_->is_safepoint(), if_->substitutability_check());
+                                     tblock, fblock, if_->state_before(), if_->is_safepoint(), ifop->substitutability_check());
                   newif->set_state(if_->state()->copy());
 
                   assert(prev->next() == if_, "must be guaranteed by above search");
                   NOT_PRODUCT(newif->set_printable_bci(if_->printable_bci()));
                   prev->set_next(newif);
