diff a/src/hotspot/share/c1/c1_LIRGenerator.cpp b/src/hotspot/share/c1/c1_LIRGenerator.cpp
--- a/src/hotspot/share/c1/c1_LIRGenerator.cpp
+++ b/src/hotspot/share/c1/c1_LIRGenerator.cpp
@@ -1691,14 +1691,11 @@
 bool LIRGenerator::needs_flattened_array_store_check(StoreIndexed* x) {
   if (x->elt_type() == T_OBJECT && x->array()->maybe_flattened_array()) {
     ciType* type = x->value()->declared_type();
     if (type != NULL && type->is_klass()) {
       ciKlass* klass = type->as_klass();
-      if (klass->is_loaded() &&
-          !(klass->is_valuetype() && klass->as_value_klass()->flatten_array()) &&
-          !klass->is_java_lang_Object() &&
-          !klass->is_interface()) {
+      if (!klass->can_be_value_klass() || (klass->is_valuetype() && !klass->as_value_klass()->flatten_array())) {
         // This is known to be a non-flattenable object. If the array is flattened,
         // it will be caught by the code generated by array_store_check().
         return false;
       }
     }
