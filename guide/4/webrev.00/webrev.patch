diff a/Makefile b/Makefile
--- /dev/null
+++ b/Makefile
@@ -0,0 +1,21 @@
+ALL_MD=$(wildcard src/*.md)
+ALL_HTML=$(ALL_MD:src/%.md=build/%.html)
+
+.PHONY: all clean
+
+all: build build/guidestyle.css build/devModel.gif $(ALL_HTML)
+
+clean:
+	rm -rf build
+
+build:
+	mkdir build
+
+build/%.html: src/%.md
+	pandoc -o $@ $< --css guidestyle.css --strip-comments --standalone --title-prefix "The OpenJDK Developers' Guide"
+
+build/guidestyle.css: build src/guidestyle.css
+	cp src/guidestyle.css build/guidestyle.css
+
+build/devModel.gif: build src/devModel.gif
+	cp src/devModel.gif build/devModel.gif
diff a/src/bugDatabase.md b/src/bugDatabase.md
--- /dev/null
+++ b/src/bugDatabase.md
@@ -0,0 +1,20 @@
+% Bug Database
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](next.html) • [TOC](index.html) • [Next »](faq.html)
+:::
+
+The Bug Database section will include the guidelines for triage, priorities,
+and status.
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](next.html) • [TOC](index.html) • [Next »](faq.html)
+:::
diff a/src/changePlanning.md b/src/changePlanning.md
--- /dev/null
+++ b/src/changePlanning.md
@@ -0,0 +1,307 @@
+% Change Planning and Guidelines
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](codeConventions.html) • [TOC](index.html) • [Next »](reviewBodies.html)
+:::
+
+This section describes the development process of identifying a bug or
+enhancement (formerly "Request for Enhancement" (RFE)) and providing a
+solution. The instructions assume that the
+[Contributor](/bylaws#contributor) already has a
+working build environment and has some familiarity with an existing OpenJDK
+[Project](bylaws#_6) and its repositories.
+
+Three classes of changes are treated in separate sections:
+
+* [Fixing a Bug](#fixing-a-bug) provides a step-by-step
+workflow for fixing a simple bug. Of particular note is the list of
+[noreg bug labels](#noreg) for changes which do not have regression tests.
+* [Adding an API](#adding-an-api) is TBD.
+* [Adding a Feature/JSR](#adding-a-featurejsr) is TBD.
+
+## Fixing a Bug
+
+This is the list of steps which should be performed when fixing a small bug.
+Small bugs include typos in code or specification, algorithm improvements for
+correctness or performance, and code changes required to correctly implement
+the specification.
+
+> ---
+> Some steps refer to operations which can not be performed directly without the
+> assistance of a [Project Committer](http://openjdk.java.net/bylaws#committer).
+> For example, any changes to the
+> [bug database](http://bugs.openjdk.java.net) fall into
+> this category. Since these steps are required,
+> [Contributors](http://openjdk.java.net/bylaws#contributor)
+> are urged to work with their [Sponsors](/sponsor/)
+> to complete these tasks.
+
+> ---
+
+For the purposes of brevity this document will use the term "bug" to refer to
+both bugs and enhancements unless otherwise noted. Hence "fix for a bug" could
+also imply "implementation for an enhancement".
+
+#. **Discuss the intended change**
+
+   Send an e-mail to the appropriate development mailing list for the Project that
+   maintains the code. The e-mail should have a subject line of the form:
+
+   >     6543210: My favorite bug
+
+   where `6543210` is replaced with the actual bug id number or
+   "[NEW BUG]" if the bug id is not known and `My favorite bug` is
+   replaced with the bug's summary.  The message should describe the intended
+   change, which components may be affected, and any other risks or
+   concerns.
+
+#. **Does a bug id exist for the work?**
+
+   ---  -----------------------------------------------------------------------
+    Y   Continue
+
+    N   Create a bug in an appropriate component/sub-component.
+   ---  -----------------------------------------------------------------------
+
+#. **Set the bug status to "Open"**
+
+   This communicates intent to fix the bug to other members of the Project. It
+   also sets the expectation for downstream teams such as SQE and JCK that the bug
+   will be fixed in an upcoming integration.
+
+#. **Does the fix for the bug require a specification change,
+   directly affect an external interface, or otherwise have a compatibility
+   impact?**
+
+   ---  -----------------------------------------------------------------------
+    Y   Submission of a CCC request is required. Work may begin after the
+        request has been [accepted](glossary.html#accepted) by the CCC; the
+        changeset implementing the fix may be committed to a team forest
+        after the request has been [approved](glossary.html#approved) by the CCC.
+        A description of the CCC requirements may be found in
+        [Review Bodies](reviewBodies.html).
+
+    N   Continue
+   ---  -----------------------------------------------------------------------
+
+#. **Fix the bug**
+
+   Assuming that the development team approves of the intended approach, begin
+   working on the code using the latest source available from the appropriate
+   OpenJDK Project [repository](http://hg.openjdk.java.net).
+
+#. **Is it possible to write a test to detect the bug?**
+
+   +:-:+:---------------------------------------------------------------------+
+   | Y | For bugs, provide a [jtreg](../jtreg/) regression test               |
+   |   | as part of the changeset. For enhancements that directly affect      |
+   |   | one or more exported interfaces, add an adequate set of jtreg unit   |
+   |   | tests as part of the changeset. By convention all regression and     |
+   |   | unit tests should contain a                                          |
+   |   | [\@bug tag](http://openjdk.java.net/jtreg/tag-spec.html#INFORMATIONAL_TAGS9) |
+   |   | referencing at least one bugid.                                      |
+   |   |                                                                      |
+   |   | An entirely new test (or tests) may not be required. For             |
+   |   | example, if the bug is an existing regression test failure, then     |
+   |   | when fixing the bug you should just add the new bug ID to the list   |
+   |   | of space-delimited bugs in the                                       |
+   |   | [\@bug tag](http://openjdk.java.net/jtreg/tag-spec.html#INFORMATIONAL_TAGS) |
+   |   | of the failing regression test, even if the test did not need to     |
+   |   | be updated.                                                          |
+   +---+----------------------------------------------------------------------+
+   | N | An explanation for why a test is unnecessary or infeasible is        |
+   |   | required.  Such an explanation is recorded by adding a label, and    |
+   |   | possibly a comment, to the bug report.  The label has the prefix     |
+   |   | "noreg" for regression tests and "nounit" for unit tests.  The       |
+   |   | suffixes and their meanings are as follows:                          |
+   |   |                                                                      |
+   |   | **-sqe**                                                             |
+   |   | :    Change can be verified by running an existing SQE test suite;   |
+   |   |      the bug should identify the suite and the specific test case(s). |
+   |   |                                                                      |
+   |   | **-jck**                                                             |
+   |   | :    Change can be verified by running the JCK; the bug should       |
+   |   |      identify the specific test case(s).                             |
+   |   |                                                                      |
+   |   | **-external**                                                        |
+   |   | :    Change can be verified by running an existing external test     |
+   |   |      suite; the bug should identify the suite and the specific test  |
+   |   |      case(s).                                                        |
+   |   |                                                                      |
+   |   | **-doc**                                                             |
+   |   | :    Change only affects documentation.                              |
+   |   |                                                                      |
+   |   | **-demo**                                                            |
+   |   | :    Change only affects demo code.                                  |
+   |   |                                                                      |
+   |   | **-build**                                                           |
+   |   | :    Change only affects build infrastructure (makefiles,            |
+   |   |      copyrights, scripts, etc.).                                     |
+   |   |                                                                      |
+   |   | **-self**                                                            |
+   |   | :    Change is a fix to a regression or unit test itself.            |
+   |   |                                                                      |
+   |   | **-perf**                                                            |
+   |   | :    Change is for a performance bug for which writing a regression  |
+   |   |      test is infeasible; the bug should describe how to verify the   |
+   |   |      fix.                                                            |
+   |   |                                                                      |
+   |   | **-hard**                                                            |
+   |   | :    It is too hard to write a regression or unit test for this bug  |
+   |   |      (e.g., theoretical race condition, complex setup, reboot        |
+   |   |      required, editing of installed files required, specific         |
+   |   |      graphics card required); the bug should explain why.            |
+   |   |                                                                      |
+   |   | **-long**                                                            |
+   |   | :    Testing requires a very long running time (e.g., more than a    |
+   |   |      few minutes).                                                   |
+   |   |                                                                      |
+   |   | **-big**                                                             |
+   |   | :    Testing requires an unreasonable quantity of resources (e.g.,   |
+   |   |      tens of gigabytes of filesystem space).                         |
+   |   |                                                                      |
+   |   | **-trivial**                                                         |
+   |   | :    Change is so trivial that nothing could possibly go wrong with  |
+   |   |      it.                                                             |
+   |   |                                                                      |
+   |   | **-cleanup**                                                         |
+   |   | :    Change is a cleanup or refactoring of existing code that is     |
+   |   |      covered by existing tests.                                      |
+   |   |                                                                      |
+   |   | **-l10n**                                                            |
+   |   | :    Change only affects localized text.                             |
+   |   |                                                                      |
+   |   | **-undo**                                                            |
+   |   | :    Change is a reversion of a previous faulty change.              |
+   |   |                                                                      |
+   |   | **-other**                                                           |
+   |   | :    Regression or unit test is unnecessary or infeasible for some   |
+   |   |      other reason; the bug report should explain why.                |
+   |   |                                                                      |
+   |   | Examples:  If a bug fix only corrects a change in the build system,  |
+   |   | then add the "noreg-build" label to the corresponding bug. If the    |
+   |   | change improves loop optimizations in HotSpot, then add              |
+   |   | "nounit-perf" to the corresponding bug.                              |
+   +---+----------------------------------------------------------------------+
+
+#. **Is modification of shared Java code needed?**
+
+   ---  -----------------------------------------------------------------------
+    Y   It is often sufficient to build and test on a single platform,
+        but sometimes it is not. Use discretion.
+
+    N   Continue
+   ---  -----------------------------------------------------------------------
+
+#. **Is modification of shared C code needed?**
+
+   ---  -----------------------------------------------------------------------
+    Y   Build and test on at least one instance of all three of the
+        supported operating systems (Solaris, Linux, and
+        Windows).
+
+    N   Continue
+   ---  -----------------------------------------------------------------------
+
+#. **Is modification of C or Java platform-specific code needed?**
+
+   ---  -----------------------------------------------------------------------
+    Y   Build and test on all relevant platforms.  Code under
+        `src/solaris` builds on Solaris, Linux, and MacOS X
+        despite its name.
+
+    N   Continue
+   ---  -----------------------------------------------------------------------
+
+#. **Run relevant regression and unit tests on all relevant platforms**
+
+   These include tests for external interfaces as well as other kinds of tests,
+   e.g., HotSpot tests that use internal verification mechanisms. See
+   [Testing Changes](testingChanges.html) for more details.
+
+#. **Run relevant JCK tests on all relevant platforms**
+
+   Running JCK tests is particularly important if the change may have unexpected
+   side-effects. See [JCK Acquisition](jckAcquisition.html) for more details.
+
+#. **Request a review of the changes by sending an e-mail to
+the development alias**
+
+   A patch can be submitted as described in [Contributing](../contribute/). Alternatively, a
+   ["webrev"](webrevHelp.html) may be generated and
+   uploaded to the [community code review](http://cr.openjdk.java.net/) server.
+   The complete webrev generation and upload procedure is described at
+   [http://cr.openjdk.java.net](http://cr.openjdk.java.net/).
+
+   Changeset pushes before the
+   [Feature Complete](/projects/jdk8/milestones#Feature_Complete)
+   require at least one [Reviewer](/bylaws#reviewer); pushes after
+   the Feature Complete require at least two Reviewers. In either case, the
+   more the merrier. Some teams may require more Reviewers. Check with
+   members of the Project.
+
+   Reviewers should examine not only the code being added or
+   changed but also the relevant unit or regression tests.
+
+   A change may require multiple Reviewers because it affects
+   multiple areas.  Reviewers should be aware that they take full
+   responsibility for the appropriateness and correctness of any changes in
+   their area of expertise.  If something goes wrong (e.g., the build breaks)
+   and the change&apos;s author is unavailable, they may be asked to deal with
+   the problem.  Potential Reviewers are encouraged to refuse to review code
+   for which they are not qualified.
+
+#. **Create a changeset**
+
+   Follow the instructions in [Producing a Changeset](producingChangeset.html).
+
+#. **Update the bug content**
+
+   Bug descriptions and comments should be written
+   in a professional manner.
+
+#. **Push the changeset into the Project's forest**
+
+   Follow the instructions in [Producing a Changeset](producingChangeset.html).
+   If working with a Sponsor, send the changeset to the
+   development mailing list so that they can handle the final push.
+
+   The push will trigger a update to the bug which will make the
+   following changes:
+    
+    * Set the bug's "Status" to "Resolved" and "Resolution to "Fixed".
+    * Set the bug's "Fix Version/s" to an appropriate release.
+    * Set the bug's "Resolved in Build" to "team".
+    * Add a Comment containing a reference to the changeset.
+
+_Congratulations!_ Your changeset will now make its
+way towards a promoted build. When the changeset becomes part of a promoted
+build, the bug's "Resolved in Build" will have a value of \"b\[1-9\]\[0-9\]&ast;\"
+to indicate the build number.
+
+## Adding an API
+
+TBD
+
+This section will cover additional considerations for changes that add new
+public APIs. For instance, they need to be implementable on all platforms.
+
+## Adding a Feature/JSR
+
+TBD
+
+This section will describe the process for adding new functionality which
+requires more than just a few new APIs. In particular, this will cover how the
+JSR process interacts with the OpenJDK development life cycle.
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](codeConventions.html) • [TOC](index.html) • [Next »](reviewBodies.html)
+:::
diff a/src/codeConventions.md b/src/codeConventions.md
--- /dev/null
+++ b/src/codeConventions.md
@@ -0,0 +1,20 @@
+% Code Conventions
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](mailinglists.html) • [TOC](index.html) • [Next »](changePlanning.html)
+:::
+
+This section will contain a major revision of our antiquated code conventions
+[document](https://www.oracle.com/technetwork/java/codeconvtoc-136057.html).
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](mailinglists.html) • [TOC](index.html) • [Next »](changePlanning.html)
+:::
diff a/src/codeReview.md b/src/codeReview.md
--- /dev/null
+++ b/src/codeReview.md
@@ -0,0 +1,117 @@
+% Community Code Review
+
+## General
+
+The cr.openjdk.java.net server provides storage and display of code review
+materials such as webrevs and other artifacts related to the
+[OpenJDK](http://openjdk.java.net/) Community. If you
+are interested in monitoring recent reviews, try our review feed
+[here](http://cr.openjdk.java.net/feed.atom).
+
+Any user with push access to the OpenJDK
+[Mercurial](http://hg.openjdk.java.net) server can publish
+materials on the cr.openjdk.java.net server.
+Users can upload files to temporary
+storage using secure methods (rsync, scp, and sftp).
+
+## Terms and conditions
+
+This site is for open source materials related to the OpenJDK
+Community only. Users uploading inappropriate materials will lose
+access and the material will be deleted. Please review the
+[Terms of Use](http://openjdk.java.net/legal/terms.html).
+
+Special note to developers working on closed code and tests:
+This cr.openjdk.java.net
+server is intended for OpenJDK materials only. Please use your
+current process for webrevs and reviews of closed code and
+tests.
+
+## Webrev
+
+So, what is webrev?
+
+[Webrev](webrevHelp.html) is
+a script that will crawl over your changes, compare the modified
+files with your parent forest, then generate a set of web pages to
+display the differences.
+
+When you are asking reviewers to check over your proposed
+changes, it helps to make that job as easy for them as possible,
+and webrev is one way to do it.
+
+For more information about webrev, refer to:
+
+* See the [the webrev help page](webrevHelp.html)
+
+## Example
+
+* A developer called "username" runs `webrev -f`
+  on their work done in a Mercurial forest. This creates output under
+  a webrev directory.
+
+* For clarity, they add the bug ID they are working on, and
+  perhaps add a sequence number:
+
+>>     mkdir 6543210
+>>     mv webrev 6543210/webrev.00
+
+  This will allow subsequent webrevs (if there are any) to be
+  added as webrev.01 and so on without clobbering the original
+  files.
+
+* **Optional:** If they would like to dress up their entry in
+  the [Atom feed](http://cr.openjdk.java.net/feed.atom),
+  create `.title` and/or `.description` files:
+
+>>     echo "A suitable review title or bug synopsis" > 6543210/.title
+>>     echo "Short description of the change to be reviewed" > 6543210/.description
+
+  Syndication does not recognize line endings or formatting tags,
+  so it would be a good idea to keep the information in these files
+  as simple as possible.
+
+  If these file(s) are not found by the cr.openjdk.java.net
+  server, the subdirectory
+  name (6543210 in this example) will be used for title and/or
+  description in the stream.
+
+* They transfer the webrev tree to their home directory on
+  cr.openjdk.java.net using scp or rsync:
+
+>>     scp -r 6543210 username@cr.openjdk.java.net:
+
+> or
+
+>>     rsync -av 6543210 username@cr.openjdk.java.net:
+
+  Note the final : on the command line. If you omit that, you will
+  copy the bits into a directory called
+  "username@cr.openjdk.java.net" on your local system.
+
+* The results will be published at:
+
+>>     http://cr.openjdk.java.net/~username/6543210
+
+* In ten minutes or less, the new information will appear on the
+  feed:
+
+  [http://cr.openjdk.java.net/feed.atom](http://cr.openjdk.java.net/feed.atom)
+
+* Later on, if it is time to clean up, use sftp to access your
+  code review directory:
+
+>>     sftp username@cr.openjdk.java.net
+
+  Use the `rm` command to delete individual files. If you
+  want to delete a tree of files and directories, use the
+  `rename` command to move them into your ~/.trash
+  subdirectory. To continue with the example for bug ID 6543210:
+
+>>     rename 6543210 .trash/6543210
+
+  A cron job on the cr.openjdk.java.net
+  server will periodically empty the trash for
+  all users.
+
+Please send feedback to `web-discuss at openjdk dot java dot net`
diff a/src/devModel.gif b/src/devModel.gif
Binary files /dev/null and src/devModel.gif differ
diff a/src/faq.md b/src/faq.md
--- /dev/null
+++ b/src/faq.md
@@ -0,0 +1,22 @@
+% Frequently Asked Questions
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](bugDatabase.html) • [TOC](index.html) • [Next »](glossary.html)
+:::
+
+The FAQ is transient. It should only contain things that have not been
+integrated into the main document. If questions remain in the FAQ over more
+than a few revisions, it will be to provide a pointer to the section in the
+main document which contains the answer.
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](bugDatabase.html) • [TOC](index.html) • [Next »](glossary.html)
+:::
diff a/src/getSource.md b/src/getSource.md
--- /dev/null
+++ b/src/getSource.md
@@ -0,0 +1,115 @@
+% `get_source.sh` Output
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](repositories.html#cloneForest) • [TOC](index.html) • [Next »](repositories.html#cloneSingle)
+:::
+
+>     $ sh ./get_source.sh
+>     # Repositories:  corba jaxp jaxws langtools jdk hotspot nashorn
+>
+>                     corba:   hg clone http://hg.openjdk.java.net/jdk9/dev/corba corba
+>                      jaxp:   hg clone http://hg.openjdk.java.net/jdk9/dev/jaxp jaxp
+>                      jaxp:   requesting all changes
+>                     corba:   requesting all changes
+>                      jaxp:   adding changesets
+>                     corba:   adding changesets
+>                     corba:   adding manifests
+>                      jaxp:   adding manifests
+>                     corba:   adding file changes
+>                      jaxp:   adding file changes
+>     Waiting 5 secs before spawning next background command.
+>                     corba:   added 567 changesets with 3577 changes to 1398 files
+>                     corba:   updating to branch default
+>                     corba:   1195 files updated, 0 files merged, 0 files removed, 0 files unresolved
+>                     jaxws:   hg clone http://hg.openjdk.java.net/jdk9/dev/jaxws jaxws
+>                 langtools:   hg clone http://hg.openjdk.java.net/jdk9/dev/langtools langtools
+>                     jaxws:   requesting all changes
+>                 langtools:   requesting all changes
+>                     jaxws:   adding changesets
+>                 langtools:   adding changesets
+>                     jaxws:   adding manifests
+>                      jaxp:   added 570 changesets with 6285 changes to 4230 files
+>                      jaxp:   updating to branch default
+>     Waiting 5 secs before spawning next background command.
+>                     jaxws:   adding file changes
+>                      jaxp:   2078 files updated, 0 files merged, 0 files removed, 0 files unresolved
+>                 langtools:   adding manifests
+>                 langtools:   adding file changes
+>                       jdk:   hg clone http://hg.openjdk.java.net/jdk9/dev/jdk jdk
+>                   hotspot:   hg clone http://hg.openjdk.java.net/jdk9/dev/hotspot hotspot
+>                   hotspot:   requesting all changes
+>                       jdk:   requesting all changes
+>                   hotspot:   adding changesets
+>                       jdk:   adding changesets
+>     Waiting 5 secs before spawning next background command.
+>                   hotspot:   adding manifests
+>                   nashorn:   hg clone http://hg.openjdk.java.net/jdk9/dev/nashorn nashorn
+>                   nashorn:   requesting all changes
+>                   nashorn:   adding changesets
+>                   nashorn:   adding manifests
+>                   nashorn:   adding file changes
+>                   hotspot:   adding file changes
+>                   nashorn:   added 766 changesets with 6302 changes to 2248 files
+>                   nashorn:   updating to branch default
+>                   nashorn:   2121 files updated, 0 files merged, 0 files removed, 0 files unresolved
+>                     jaxws:   added 471 changesets with 15683 changes to 6727 files
+>                     jaxws:   updating to branch default
+>                       jdk:   adding manifests
+>                 langtools:   added 2326 changesets with 21344 changes to 7022 files
+>                     jaxws:   3710 files updated, 0 files merged, 0 files removed, 0 files unresolved
+>                 langtools:   updating to branch default
+>                 langtools:   6212 files updated, 0 files merged, 0 files removed, 0 files unresolved
+>                   hotspot:   added 5876 changesets with 35016 changes to 5071 files
+>                   hotspot:   updating to branch default
+>                   hotspot:   4183 files updated, 0 files merged, 0 files removed, 0 files unresolved
+>                       jdk:   adding file changes
+>                       jdk:   added 9280 changesets with 86814 changes to 26475 files
+>                       jdk:   updating to branch default
+>                       jdk:   22161 files updated, 0 files merged, 0 files removed, 0 files unresolved
+>     # Repositories:  ./corba . ./hotspot ./jaxp ./jaxws ./jdk ./langtools ./nashorn
+>
+>                   ./corba:   cd ./corba && hg pull -u
+>                         .:   cd . && hg pull -u
+>                 ./hotspot:   cd ./hotspot && hg pull -u
+>                    ./jaxp:   cd ./jaxp && hg pull -u
+>                   ./jaxws:   cd ./jaxws && hg pull -u
+>                     ./jdk:   cd ./jdk && hg pull -u
+>               ./langtools:   cd ./langtools && hg pull -u
+>                 ./nashorn:   cd ./nashorn && hg pull -u
+>                   ./corba:   pulling from http://hg.openjdk.java.net/jdk9/dev/corba
+>                         .:   pulling from http://hg.openjdk.java.net/jdk9/dev
+>                   ./jaxws:   pulling from http://hg.openjdk.java.net/jdk9/dev/jaxws
+>                   ./corba:   searching for changes
+>                   ./corba:   no changes found
+>                     ./jdk:   pulling from http://hg.openjdk.java.net/jdk9/dev/jdk
+>                 ./nashorn:   pulling from http://hg.openjdk.java.net/jdk9/dev/nashorn
+>                         .:   searching for changes
+>                         .:   no changes found
+>                   ./jaxws:   searching for changes
+>                   ./jaxws:   no changes found
+>               ./langtools:   pulling from http://hg.openjdk.java.net/jdk9/dev/langtools
+>                 ./nashorn:   searching for changes
+>                 ./nashorn:   no changes found
+>                     ./jdk:   searching for changes
+>                     ./jdk:   no changes found
+>               ./langtools:   searching for changes
+>               ./langtools:   no changes found
+>                    ./jaxp:   pulling from http://hg.openjdk.java.net/jdk9/dev/jaxp
+>                 ./hotspot:   pulling from http://hg.openjdk.java.net/jdk9/dev/hotspot
+>                    ./jaxp:   searching for changes
+>                    ./jaxp:   no changes found
+>                 ./hotspot:   searching for changes
+>                 ./hotspot:   no changes found
+>     Waiting 5 secs before spawning next background command.
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](repositories.html#cloneForest) • [TOC](index.html) • [Next »](repositories.html#cloneSingle)
+:::
diff a/src/glossary.md b/src/glossary.md
--- /dev/null
+++ b/src/glossary.md
@@ -0,0 +1,73 @@
+% Glossary
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](faq.html) • [TOC](index.html)
+:::
+
+**accepted** (by the CCC)
+:   The stage of the CCC process after "DRAFT", and "PROPOSED". At this stage the
+    primary goals are to ensure that the proposed changes are suitable for the
+    release in a general sense and that the requisite JCK and SQE resources will be
+    available.
+
+**approved** (by the CCC)
+:   The stage of the CCC process after "FINAL". The CCC has approved the final
+   version of the request which permits push into the project forest.
+
+**changeset**
+:   A collection of changes with respect to the current clone of a repository.
+
+**development freeze**
+:   The date by which all planned work should be complete for a particular line of
+    development. After a line's development freeze, only exit-criteria bugs may be
+    fixed in that line.
+
+**forest**
+:   A collection of Mercurial repositories which can be managed as a set of nested
+    repositories. The name "Forest" originally came from the Mercurial "Forest
+    Extension" which can be used with some versions of Mercurial, but in general is
+    no longer recommended. The script
+    `common/bin/hgforest.sh` can be used to apply a
+    Mercurial `hg` command to all the repositories in
+    a forest.
+
+**Group**
+:   A collection of [Participants](/bylaws#participant) who engage in
+    open conversation about a common interest. That interest may be in the
+    creation, enhancement, or maintenance of a specific body of code or it may lie
+    in other areas, e.g., quality, documentation, or evangelism. See the
+    [Group overview](../groups/).
+
+**Mercurial**
+:   A free, cross-platform, distributed source management tool. Source bundles and
+    binary packages for Mercurial are available at
+    [http://www.selenic.com/mercurial/wiki/index.cgi](http://www.selenic.com/mercurial/wiki/index.cgi/Mercurial).
+    The main Mercurial documentation is available at
+    [http://hgbook.red-bean.com](http://hgbook.red-bean.com/).
+
+**Project**
+:   A collaborative effort to produce a specific artifact, which may be a body of
+    code, or documentation, or some other material. See the
+    [Project overview](../projects/).
+
+**repository**
+:   A directory tree in the filesystem that Mercurial treats specially. This tree
+   contains the source files and their revision history.
+
+**webrev**
+:   A tool and its output. In JDK release forests, the script,
+    [`webrev.ksh`](http://hg.openjdk.java.net/code-tools/webrev/raw-file/tip/webrev.ksh),
+    examines a forest or repository to generate a set of web-based views of
+    differences.
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](faq.html) • [TOC](index.html)
+:::
diff a/src/guidestyle.css b/src/guidestyle.css
--- /dev/null
+++ b/src/guidestyle.css
@@ -0,0 +1,4 @@
+DIV.version {text-align: right ; font-style: italic }
+TD.aligned  {vertical-align: top ; padding-right: 1em }
+H3 { font-size: 10pt; font-weight: bold; font-style: italic;
+     padding: 0pt; margin: 1.5ex 0pt 0pt 0pt; }
diff a/src/hgHelp.md b/src/hgHelp.md
--- /dev/null
+++ b/src/hgHelp.md
@@ -0,0 +1,102 @@
+%`hg help` Output
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](repositories.html#verify) • [TOC](index.html) • [Next »](repositories.html#cloneSandbox)
+:::
+
+>     $ hg help
+>     Mercurial Distributed SCM
+
+>     list of commands:
+
+>      add           add the specified files on the next commit
+>      addremove     add all new files, delete all missing files
+>      annotate      show changeset information by line for each file
+>      archive       create an unversioned archive of a repository revision
+>      backout       reverse effect of earlier changeset
+>      bisect        subdivision search of changesets
+>      bookmarks     track a line of development with movable markers
+>      branch        set or show the current branch name
+>      branches      list repository named branches
+>      bundle        create a changegroup file
+>      cat           output the current or given revision of files
+>      clone         make a copy of an existing repository
+>      commit        commit the specified files or all outstanding changes
+>      copy          mark files as copied for the next commit
+>      diff          diff repository (or selected files)
+>      export        dump the header and diffs for one or more changesets
+>      forget        forget the specified files on the next commit
+>      graft         copy changes from other branches onto the current branch
+>      grep          search for a pattern in specified files and revisions
+>      heads         show branch heads
+>      help          show help for a given topic or a help overview
+>      identify      identify the working copy or specified revision
+>      import        import an ordered set of patches
+>      incoming      show new changesets found in source
+>      init          create a new repository in the given directory
+>      locate        locate files matching specific patterns
+>      log           show revision history of entire repository or files
+>      manifest      output the current or given revision of the project manifest
+>      merge         merge working directory with another revision
+>      outgoing      show changesets not found in the destination
+>      parents       show the parents of the working directory or revision
+>      paths         show aliases for remote repositories
+>      phase         set or show the current phase name
+>      pull          pull changes from the specified source
+>      push          push changes to the specified destination
+>      recover       roll back an interrupted transaction
+>      remove        remove the specified files on the next commit
+>      rename        rename files; equivalent of copy + remove
+>      resolve       redo merges or set/view the merge status of files
+>      revert        restore files to their checkout state
+>      root          print the root (top) of the current working directory
+>      serve         start stand-alone webserver
+>      showconfig    show combined config settings from all hgrc files
+>      status        show changed files in the working directory
+>      summary       summarize working directory state
+>      tag           add one or more tags for the current or given revision
+>      tags          list repository tags
+>      unbundle      apply one or more changegroup files
+>      update        update working directory (or switch revisions)
+>      verify        verify the integrity of the repository
+>      version       output version and copyright information
+
+>     enabled extensions:
+
+>      jcheck        (no help text available)
+>      trees         manage loosely-coupled nested repositories
+
+>     additional help topics:
+
+>      config        Configuration Files
+>      dates         Date Formats
+>      diffs         Diff Formats
+>      environment   Environment Variables
+>      extensions    Using Additional Features
+>      filesets      Specifying File Sets
+>      glossary      Glossary
+>      hgignore      Syntax for Mercurial Ignore Files
+>      hgweb         Configuring hgweb
+>      merge-tools   Merge Tools
+>      multirevs     Specifying Multiple Revisions
+>      patterns      File Name Patterns
+>      phases        Working with Phases
+>      revisions     Specifying Single Revisions
+>      revsets       Specifying Revision Sets
+>      subrepos      Subrepositories
+>      templating    Template Usage
+>      urls          URL Paths
+
+>     use "hg -v help" to show builtin aliases and global options
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](repositories.html#verify) • [TOC](index.html) • [Next »](repositories.html#cloneSandbox)
+:::
diff a/src/index.md b/src/index.md
--- /dev/null
+++ b/src/index.md
@@ -0,0 +1,43 @@
+% Index
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[Next »](intro.html)
+:::
+
+* [Introduction](intro.html)
+  * [Release Notes](intro.html#release-notes)
+* [Process Workflow](processWorkflow.html)
+* [Repositories](repositories.html)
+  * [Terminology and Naming Scheme](repositories.html#terminology-and-naming-scheme)
+  * [Installing and Configuring Mercurial](repositories.html#installing-and-configuring-mercurial)
+  * [Cloning](repositories.html#cloning)
+* [Mailing Lists](mailingLists.html)
+* [Code Conventions](codeConventions.html)
+* [Change Planning and Guidelines](changePlanning.html)
+  * [Fixing a Bug](changePlanning.html#fixing-a-bug)
+  * [Adding an API](changePlanning.html#adding-an-api)
+  * [Adding a Feature](changePlanning.html#adding-a-featurejsr)
+* [Review Bodies](reviewBodies.html)
+* [Testing Changes](testingChanges.html)
+* [JCK Acquisition](jckAcquisition.html)
+* [Producing a Changeset](producingChangeset.html)
+  * [Setting a JDK User Name](producingChangeset.html#setting-a-jdk-user-name)
+  * [Creating](producingChangeset.html#creating)
+  * [Merging](producingChangeset.html#merging)
+  * [Pushing](producingChangeset.html#pushing)
+* [What Happens Next](next.html)
+* [Bug Database](bugDatabase.html)
+* [Frequently Asked Questions](faq.html)
+* [Glossary](glossary.html)
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[Next »](intro.html)
+:::
diff a/src/intro.md b/src/intro.md
--- /dev/null
+++ b/src/intro.md
@@ -0,0 +1,33 @@
+% Introduction
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](index.html) • [TOC](index.html) • [Next »](processWorkflow.html)
+:::
+
+When the JDK was released under the GPLv2 license in May 2007, the need for a
+detailed document for contributors was anticipated. Translating rather
+sophisticated institutional knowledge into a format suitable for non-Oracle
+employees is always a challenge. This document attempts to address the needs of
+developers who wish to participate in the future of the JDK.
+
+Comments may be sent to [guide-dev (at) openjdk.java.net](mailto:guide-dev-at-openjdk.java.net).
+
+
+## Release Notes
+
+Revision   Date         Description
+---------  -----------  ------------
+0.02       2012-11-06   Quick pass to remove the obviously incorrect, validate HTML
+0.01       2008-02-14   Initial revision containing the "Repositories", "Change Planning and Guidelines: Fixing a Bug", and "Producing a Changeset" sections.
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](index.html) • [TOC](index.html) • [Next »](processWorkflow.html)
+:::
diff a/src/jckAcquisition.md b/src/jckAcquisition.md
--- /dev/null
+++ b/src/jckAcquisition.md
@@ -0,0 +1,20 @@
+% JCK Acquisition
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](testingChanges.html) • [TOC](index.html) • [Next »](producingChangeset.html)
+:::
+
+This section will primarily consist of links to the documentation provided by
+the OpenJDK [Conformance Group](../groups/conformance). Tips for when the test suite should be run may be provided.
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](testingChanges.html) • [TOC](index.html) • [Next »](producingChangeset.html)
+:::
diff a/src/mailingLists.md b/src/mailingLists.md
--- /dev/null
+++ b/src/mailingLists.md
@@ -0,0 +1,27 @@
+% Mailing Lists
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](repositories.html) • [TOC](index.html) • [Next »](codeConventions.html)
+:::
+
+The mailing lists are the key communications mechanism for all OpenJDK work.
+
+This section will contain a pointer to the existing
+[mailing list page](http://mail.openjdk.java.net/mailman/listinfo)
+and any associated infrastructure. It will describe the
+naming conventions, for instance _&ast;-dev_ and
+_&ast;-discuss_ and other suffixes such as those for code
+review requests, changeset notifications, and automatic bug updates as these
+services become available.
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](repositories.html) • [TOC](index.html) • [Next »](codeConventions.html)
+:::
diff a/src/next.md b/src/next.md
--- /dev/null
+++ b/src/next.md
@@ -0,0 +1,20 @@
+% What Happens Next
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](producingChangeset.html) • [TOC](index.html) • [Next »](bugDatabase.html)
+:::
+
+This section describes what might happen after a changeset gets into the build,
+for example a bug might be filed or a backport could be requested.
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](producingChangeset.html) • [TOC](index.html) • [Next »](bugDatabase.html)
+:::
diff a/src/processWorkflow.md b/src/processWorkflow.md
--- /dev/null
+++ b/src/processWorkflow.md
@@ -0,0 +1,22 @@
+% Process Workflow
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](intro.html) • [TOC](index.html) • [Next »](repositories.html)
+:::
+
+This is the main navigation for the document and the primary entry point. It is
+intended to be a quick start and overview which will have a hyperlinked diagram
+indicating sample work flows for common operations such as submitting a bug fix
+and adding a new API.
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](intro.html) • [TOC](index.html) • [Next »](repositories.html)
+:::
diff a/src/producingChangeset.md b/src/producingChangeset.md
--- /dev/null
+++ b/src/producingChangeset.md
@@ -0,0 +1,412 @@
+% Producing a Changeset
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](jckAcquisition.html) • [TOC](index.html) • [Next »](next.html)
+:::
+
+This section is confined to the actual Mercurial mechanics required to produce
+a changeset:
+
+* [Setting a JDK User Name](#setting-a-jdk-user-name) reminds
+the user to confirm proper configuration.
+* [Creating](#creating) includes instructions for the
+required format of a changeset comment and describes how to commit files to a
+changeset.
+* [Merging](#merging) describes how to pull changes
+from a parent forest or clone and incorporate the changes into the current
+working set of files.
+* [Pushing](#pushing) covers configuring ssh, setting
+the `default-push` path, and pushing changesets.
+
+## Setting a JDK User Name
+
+Ensure that _ui.username_ has a value in the
+`~/.hgrc` file as described in
+[Verifying the Configuration](repositories.html#verify).
+
+## Creating
+
+The timing for creating a changeset is important. Creating the changeset long
+before it gets pushed into the parent repository may require complex merges. If
+a changeset is created before sufficient review or testing, a rollback may be
+required and a new changeset may be required to correct previous mistakes. The
+[mq extension](http://hgbook.red-bean.com/hgbookch12.html#x16-26500012) is
+recommended for managing changes before they become
+committed to a changeset.
+
+In the examples below, the script
+`common/bin/hgforest.sh` can be used to apply the
+Mercurial command to all the repositories in the forest. So when you see
+_**`hg`**_, if you are dealing with one repository, just use
+"`hg`", if it's a forest, use "`sh common/bin/hgforest.sh`".
+
+
+Each repository in the forest is managed independently. After editing files in
+the individual cloned repositories of the forest, the `hg
+status` command may be used to see the changes in a single
+repository.
+
+>     $ hg root
+>     /u/iris/sandbox/box
+>     $ hg status
+>     ? duke/images/DukeTubbingSmall.png
+>     $ hg add duke/images/DukeTubbingSmall.png
+>     $ hg status
+>     A duke/images/DukeTubbingSmall.png
+
+To see changes made to the repositories use _**`hg`**_ `status`:
+
+>     $ hg status
+>     [.]
+>     A duke/images/DukeTubbingSmall.png
+
+In this example, the repository was previously cloned as described in
+[Cloning a Sandbox Repository](repositories.html#cloneSandbox). A new file
+`DukeTubbingSmall.png` was added to a new subdirectory.
+
+#### Formatting a Changeset Comment
+
+A single change is described by a block of text of the following form:
+
+>     <bugid>: <synopsis-of-symptom>
+>     Summary: <summary-of-code-change>
+>     Reviewed-by: <reviewer>+
+>     Contributed-by: <contributor-email>
+
+There may be more than one _bugid_ line, but there
+must be at least one.
+
+The _summary_ line is optional, but authors are
+strongly encouraged to include one if the nature of the change is not obvious
+from the synopsis. It's just one line, meant to give the reader a clue as to
+how the code changed. A more complete description of the change belongs in the
+bug report.
+
+A _reviewed-by_ line is required. Reviewers must have
+the ability to deal with any adverse consequences of the change, and so must
+themselves be authors. They are therefore identified by their OpenJDK usernames
+rather than full e-mail addresses.
+
+The _contributed-by_ line is optional. If present, it
+is a list of comma-separated email addresses. It should be included only when
+the author or authors of the change do not have commit rights to the target
+repository and thus would not otherwise receive acknowledgment.
+
+There will be exceptions for merge changesets, tag changesets, etc.
+
+Example:
+
+>     1234567: NPE thrown on FileInputStream("")
+>     Summary: Rewrite precondition-checking code in io.c
+>     Reviewed-by: mr
+>     Contributed-by: Ben Bitdiddle <ben at bits.org>
+
+If a changeset contains multiple unrelated changes (this is frowned upon, but
+may happen from time to time) then its comment will contain multiple blocks of
+the above form, separated by blank lines.
+
+The required format of the comments will be enforced whenever the changeset is
+pushed into the JDK master or team repository forests. Other Projects may copy
+these conventions, adopt some other conventions, or have no conventions,
+depending upon their goals.
+
+#### Committing a Changeset
+
+The following commands commit all of the changes in a repository to a
+changeset.
+
+>     $ cat ../message
+>     1111111: Missing Duke gif
+>     Summary:  Add missing file
+>     Reviewed-by: iag
+>     $ hg commit -l ../message
+>     $ hg toutgoing
+>     [.]
+>     comparing with http://hg.openjdk.java.net/sandbox/box
+>     searching for changes
+>     changeset:   23:fb12953f3a35
+>     tag:         tip
+>     user:        iris
+>     date:        Wed Dec 12 21:05:59 2007 -0800
+>     summary:     1111111: Missing Duke gif
+
+## Merging
+
+It is often necessary to merge local changes with those made in the parent
+repositories. The first step in a merge process is to retrieve (or pull) the
+collection of changesets which have been pushed since the last merge or initial
+clone. If there if there are merge conflicts, then they must be resolved.
+[Chapter 3](http://hgbook.red-bean.com/hgbookch3.html#x7-530003) of
+the Mercurial book contains detailed information on the
+merging process.
+
+There are two basic ways to update the working set files in the repositories:
+
+Option 1: _**`hg`**_ `pull`
+
+> One way to merge the parent repository with the working set of files is to use
+> _**`hg`**_ `pull` all by itself. This option allows merging off-line or at a
+> later time.
+>
+>>     $ hg pull
+>>     [.]
+>>     pulling from http://hg.openjdk.java.net/sandbox/box
+>>     searching for changes
+>>     no changes found
+>
+> In Mercurial, pulling changesets will not update or merge into the working set
+> of files. To update the clone, run _**`hg`**_ `update`. If the update
+> reports conflicts, run _**`hg`**_ `merge` to resolve them.
+
+Option 2: _**`hg`**_ `fetch`
+
+> Alternatively, use _**`hg`**_ `fetch` to pull the changes, update the
+> working set files, and create simple merge changesets as necessary. The
+> fetch extension is distributed with Mercurial but needs to be enabled. Edit
+> the `.hgrc` to include the following entries:
+>
+>>     [extensions]
+>>     fetch=
+>
+> Once the fetch extension has been enabled, _**`hg`**_ `fetch` may be invoked as follows:
+>
+>>     $ hg fetch
+>>     [.]
+>>     pulling from http://hg.openjdk.java.net/sandbox/box
+>>     searching for changes
+>>     no changes found
+
+> ---
+> Actual file merging will be done with the selected Mercurial merging tool see
+> [MergeProgram](http://www.selenic.com/mercurial/wiki/index.cgi/MergeProgram)
+> for the details on how to define the selected merge tool in ` ~/.hgrc`.
+
+> ---
+
+## Pushing
+
+In order to push changesets into the parent repository, some additional
+configuration is required. The following sections describe the operations that
+will be performed by users with push access.
+
+#### Generating an SSH Key
+
+All pushes require an ssh key which must be installed on the Mercurial server.
+The `ssh-keygen` command generates an ssh key. The
+`-b` option overrides the default number of bits
+for the key. Allow a few minutes to generate a 4096 bit key; a key of at least
+2048 bits is recommended. While it is possible to use ssh without a passphrase,
+this is **strongly** discouraged. Empty or
+insecure passphrases may be reset using `ssh-keygen
+-p`; this does not change the keys.
+
+>     $ ssh-keygen -t rsa -b 4096
+>     Enter file in which to save the key(/u/iris/.ssh/id_rsa):
+>     Generating public/private rsa key pair.
+>     Enter passphrase(empty for no passphrase):
+>     Enter same passphrase again:
+>     Your identification has been saved in /u/iris/.ssh/id_rsa.
+>     Your public key has been saved in /u/iris/.ssh/id_rsa.pub.
+>     The key fingerprint is:
+>     md5 4096 c2:b7:00:e6:4b:da:ea:ec:32:30:f5:bd:12:26:04:83 iris@duke
+>     The key's randomart image is:
+>     +--[ RSA 4096]----+
+>     |    E.=          |
+>     |     . *         |
+>     |      o .   .    |
+>     |         + o     |
+>     |        S + .    |
+>     |       .   + .   |
+>     |        + + +..  |
+>     |       * . oo+.  |
+>     |      o . .o..   |
+>     +-----------------+
+
+The `~/.ssh/id_rsa.pub` is a text file
+containing the public ssh key. This file should be mailed as an attachment
+along with the JDK username to
+[keys(at)openjdk.java.net](mailto:keys-at-openjdk.java.net).
+An administrator will install your key on the server and notify you on
+completion. This process may take a couple of days.
+
+> ---
+> Users behind a SOCKS firewall can add a directive to the
+> `~/.ssh/config` file to connect to the OpenJDK
+> Mercurial server:
+> 
+>>     Host *.openjdk.java.net
+>>     ProxyCommand /usr/lib/ssh/ssh-socks5-proxy-connect -h [socks_proxy_address] %h %p
+>
+> See the `ssh-socks5-proxy-connect` man page and
+> `ssh-config` man page for more information. Other
+> systems may require proxy access via other programs. Some Linux distributions
+> provide the `corkscrew` package which provides ssh
+> access through HTTP proxies.
+> 
+> **It is recommended that all users check with their network
+> administrators before installing any kind of TCP forwarding tool on their
+> network. Many corporations and institutions have strict security policies in
+> this area.**
+
+> ---
+
+#### SSH Shortcuts
+
+The following section provides some tips for improving the usability of
+ssh-related operations.
+
+* _Using SSH in multiple shells_
+
+  To avoid having to constantly type in the passphrase, use the ssh-agent on your
+  local client to cache your pashphrase:
+
+  >     $ eval `ssh-agent`
+  >     Agent pid 17450
+  >     $ ssh-add
+  >     Enter passphrase for /u/iris/.ssh/id_rsa:
+  >     Identity added: /u/iris/.ssh/id_rsa(/u/iris/.ssh/id_rsa)
+
+  The same ssh-agent process can be shared with multiple shells. There are
+  various ways to do this. Bash users can accomplish this with the following code
+  in `.bashrc`:
+
+  >     if [ "$PS1" -a -d $HOME/.ssh ]; then
+  >       if [ "x$SSH_AUTH_SOCK" = x ]; then
+  >         eval `ssh-agent | grep -v 'echo Agent pid'`
+  >         ssh-add
+  >         trap "echo Killing SSH agent $SSH_AGENT_PID; kill $SSH_AGENT_PID" 0
+  >       fi
+  >     fi
+
+  For secure operation, only start an ssh-agent when needed and kill it off when
+  the shell completes. Test this by running `ssh 'hostname' echo
+  hello` multiple times.
+
+* _Logging in without a password_
+
+  To avoid needing to constantly type in the password, add the public key to the
+  list of ssh authorized keys.
+
+  >     $ cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
+  >     $ chmod 600 ~/.ssh/authorized_keys
+
+#### Setting the `default-push` Path to the Server Repositories
+
+<!-- 
+#. Option 1: Add default-push path to every <code>.hg/hgrc</code>
+-->
+
+This is the typical development model:
+
+:::{style="text-align:center;"}
+![Diagram of server repos and user's clone](devModel.gif)
+:::
+
+Changesets need to be _pushed_ via ssh to the
+read/write repository which resides on the OpenJDK Mercurial server. The
+easiest way to do this is to have each repository define the "default-push"
+path in every repository's `.hg/hgrc` file. The
+`.hg/hgrc` file in is not a managed file - it is
+private to the repository. The following example defines the "default" and
+"default-push" paths for clones of the jdk9/dev team repository.
+
+>     [paths]
+>     default = http://hg.openjdk.java.net/jdk9/dev
+>     default-push = ssh://<JDK_username>@hg.openjdk.java.net/jdk9/dev
+
+Given a `JDK_username` this simple script will
+attempt to do this for all the repositories:
+
+>     #!/bin/sh
+>     username=$1
+>     hgdirs="`find . -type d -name .hg`"
+>     for i in ${hgdirs}; do
+>       d="`dirname ${i}`"
+>       defpush="`(cd ${d} && hg paths default-push 2> /dev/null)`"
+>       if [ "${defpush}" = "" ] ; then
+>         defpath="`(cd ${d} && hg paths default 2> /dev/null)`"
+>         if [ "${defpath}" != "" ] ; then
+>           defpush="`echo ${defpath} | sed -e 's@http://\([^/]*/[^/]*/[^/]*\)/\(.*\)@ssh://$username\@\1/\2@'`"
+>           cp ${i}/hgrc ${i}/hgrc.orig
+>           echo "default-push = ${defpush}" >> ${i}/hgrc
+>           echo "Added default-push: ${defpush}"
+>         fi
+>       fi
+>     done
+>     for i in ${hgdirs}; do
+>       d="`dirname ${i}`"
+>       echo "(cd ${d} && hg paths)"
+>       (cd ${d} && hg paths)
+>     done
+>     exit 0
+
+<!--
+#. Option 2: Use the <code>defpath</code> ExtensionAnother way to setup the default-push path is to use the Mercurial defpath
+    extension, which is available in /java/jdk/lib/hgext/defpath.py. To enable
+    this extension add the following to the <code>~/hgrc</code> file:
+<blockquote><pre>
+[extensions]
+defpath = /java/jdk/lib/hgext/defpath.py  # Or the pathname of a local copy
+</pre></blockquote>
+     The defpath extension actually adds two new Mercurial subcommands:
+    defpath to operate upon a single repository and fdefpath for an entire
+    forest. hg help defpath or hg help fdefpath will tell you more. For a
+    freshly cloned open/closed forest the command you probably want is
+<blockquote><pre>
+$ hg fdefpath -dgv
+</pre></blockquote>
+     Be sure to try this with the -n flag first to see if it will do what
+    you actually expect. If your OpenJDK username differs from your Oracle
+    username then add -u name to the command line.
+     The defpath extension defines the default-push path, which is the path
+    that Mercurial uses by default in push operations.
+-->
+
+#### Pushing a Changeset
+
+[Committers](http://openjdk.java.net/bylaws#committer)
+can use the _**hg**_ `push` command to propagate changesets into the repositories.
+
+Most developers will only find a need to create changesets in one or two
+repositories. However, it is important that before any changesets are pushed,
+the corresponding forest pull and merge with the destination forest be
+performed; otherwise there is a risk of breaking the build.
+
+>     $ hg push
+
+After the push has been accepted, an automatic e-mail notification will be sent
+to the [mailing list](http://mail.openjdk.java.net) associated with the
+repository. In most cases notifications
+are sent to the Project's _-dev_ mailing list. Some
+Projects with high traffic _-dev_ mailing lists use a
+dedicated _-changes_ list for notifications.
+
+> ---
+> Who has push access?
+>
+> All of a Project's [Committers](http://openjdk.java.net/bylaws#committer)
+> can push to all of the the Project's repositories.
+>
+> Some Projects may chose to restrict the set of Committers with push to key
+> repositories. For instance, JDK Release Projects restrict push access to MASTER
+> repositories to Committers who are either integrators or members of the Release
+> Engineering Team.
+>
+> Refer to the
+> [Nominating a Contributor or Author to be a Committer](../projects/index.html#project-committer)
+> section of the [Project](../projects/index.html) page for
+> information about becoming a Project Committer.
+
+> ---
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](jckAcquisition.html) • [TOC](index.html) • [Next »](next.html)
+:::
diff a/src/repositories.md b/src/repositories.md
--- /dev/null
+++ b/src/repositories.md
@@ -0,0 +1,270 @@
+% Repositories
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](processWorkflow.html) • [TOC](index.html) • [Next »](mailingLists.html)
+:::
+
+This section describes the OpenJDK repository terminology and naming scheme. It
+also includes minimal instructions to acquire source from the OpenJDK
+repository,
+[`http://hg.openjdk.java.net/`](http://hg.openjdk.java.net/).
+
+> ---
+> Note that source may be available from other locations, for example
+> `src.zip` from a full JDK distribution. However,
+> OpenJDK contributions must use source from the
+> [OpenJDK Mercurial repository](http://hg.openjdk.java.net/)
+> since other source distributions may contain older code
+> or code which differs due to licensing.
+
+> ---
+
+Operations which are performed repeatedly, such as creating changesets,
+merging, and pushing are described in [Producing a Changeset](producingChangeset.html).
+
+* [Terminology and Naming Scheme](#terminology-and-naming-scheme) defines the
+nomenclature used by OpenJDK.
+* [Installing and Configuring Mercurial](#installing-and-configuring) enumerates the required software, provides links for
+download, and describes basic installation and configuration.
+* [Cloning](#clone) covers the procedure for
+obtaining private copies of source repositories.
+
+This document assumes familiarity with the first two chapters of the free
+on-line book [Mercurial: The Definitive Guide](http://hgbook.red-bean.com).
+
+## Terminology and Naming Scheme
+
+The OpenJDK code base for all
+[Projects](http://openjdk.java.net/bylaws#_6) is
+stored in Mercurial repositories which contain the source files and their
+change history. Some Projects may choose to organize their code into multiple,
+possibly related, Mercurial repositories. For instance,
+[JDK 9](http://openjdk.java.net/projects/jdk9)
+uses a forest of multiple related repositories which contain components of the
+entire JDK. Projects which are based on the JDK, such as
+[IcedTea](http://openjdk.java.net/projects/icedtea)
+and
+[Jigsaw](http://openjdk.java.net/projects/jigsaw)
+also use this model. In contrast,
+[Code Tools](http://openjdk.java.net/projects/code-tools) uses an unrelated repository for each tool and
+[Graal](http://openjdk.java.net/projects/graal)
+uses only a single repository. Regardless of how a Project has chosen to store
+their code, each
+[Contributor](http://openjdk.java.net/bylaws#contributor)
+clones the repository associated with the code they are modifying.
+
+> ---
+> Consult the Project's documentation or
+> [mailing list](http://mail.openjdk.java.net) to
+> determine the appropriate repository, development conventions, and helpful
+> tools.
+
+> ---
+
+This is the typical development model:
+
+::: {style="text-align:center;"}
+![Diagram of server repos and user's clone](devModel.gif)
+:::
+
+A Contributor creates a _clone_ (a local copy called
+"9dev") of a read/write repository ("jdk9/dev") which resides on the OpenJDK
+Mercurial server. They work on their change in the clone and locally
+_commit_ a changeset. After the new changeset(s) are
+verified, they're either _pushed_ directly from the
+clone or _exported_ and delivered to a
+[Committer](http://openjdk.java.net/bylaws#committer)
+who can perform the push into the server repository for all to see.
+
+> ---
+> The use of _gate repositories_ was eliminated when the
+> Mercurial servers were upgraded in March 2014.
+
+> ---
+
+The repositories use the following naming scheme:
+
+> `<project>/<component_path>`
+
+where
+
+> ------------------  ----  ----------------------------------------------------
+> _project_            ::   the short name of an OpenJDK [Project](http://openjdk.java.net/bylaws#_6) such as "jdk9", "openjfx", or "sumatra"
+> _component_path_     ::   the path to a repository containing the code base as designated by the [Project Lead](http://openjdk.java.net/bylaws#project-lead).
+> ------------------  ----  ----------------------------------------------------
+
+## Installing and Configuring Mercurial
+
+Mercurial is a free, cross-platform, distributed source management tool. Source
+bundles and binary packages for Mercurial are available at
+[http://www.selenic.com/mercurial/wiki/index.cgi](http://www.selenic.com/mercurial/wiki/index.cgi/Mercurial).
+The OpenJDK repositories recommend installation of Mercurial 2.6.3 (or later).
+A Mercurial installation is sufficient to clone a repository. Contributors who
+wish to submit changes will need some additional configuration as described
+below.
+
+Some Projects may recommend additional tools or scripts that help with
+repository manipulation and code development. For instance, in JDK 9, the
+utility script `common/bin/hgforest.sh` may be
+used to apply commands to all the repositories in the
+[forest](glossary.html#forest). Popular extensions for OpenJDK developers include
+[jcheck](http://openjdk.java.net/projects/code-tools/jcheck/),
+[trees](http://openjdk.java.net/projects/code-tools/trees/), and
+[Mercurial Queues](http://hgbook.red-bean.com/read/managing-change-with-mercurial-queues.html)
+(mq). Note that `trees` is enabled on the OpenJDK Mercurial server.
+
+Create and edit the `~/.hgrc` file to minimally contain the following entry:
+
+>     [ui]
+>     username = <openjdk_username>
+
+_openjdk\_username_ is a plain lowercase, alphanumeric
+token (not an e-mail address) with twelve characters or less. The first
+character should be alphabetic. This username will be publicly visible in all
+Mercurial changeset logs. It will be used to verify that the changeset author
+is at least an
+[Author](http://openjdk.java.net/bylaws#author)
+for the Project and that the person pushing the changeset is at least a
+[Committer](http://openjdk.java.net/bylaws#committer).
+It is recommended that the _openjdk\_username_ be
+somehow related to the Author's full name, such as the first character of the
+Author's first name followed by the Author's last name. Refer to the
+[Becoming an Author](../projects/index.html#project-author) section of the
+[Project](../projects/index.html) page for
+additional information.
+
+An alphabetical list of all of the assigned
+_openjdk\_usernames_ may be found on the
+[OpenJDK people](http://db.openjdk.java.net/people) list. The
+[Census](../census) shows the structure of the OpenJDK Community.
+
+#### Verifying the Configuration
+
+After installing and configuring Mercurial, validate the configuration using
+the following steps.
+
+#. Verify that Mercurial is version 2.6.3 (or newer).
+
+   >     $ hg version
+   >     Mercurial Distributed SCM (version 2.9)
+   >     (see http://mercurial.selenic.com for more information)
+   >
+   >     Copyright (C) 2005-2014 Matt Mackall and others
+   >     This is free software; see the source for copying conditions. There is NO
+   >     warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+
+#. Verify that the list of enabled extensions includes fetch and mq.
+
+   >     $ hg help
+   > [full output](hgHelp.html)
+
+#. Verify that the `~/.hgrc` configuration looks correct. Minimally it should contain the following entries:
+
+   >     $ hg showconfig
+   >     ui.username=iris
+
+At this point, it should be possible to start retrieving source from the
+repositories.
+
+## Cloning
+
+With Mercurial each developer works with a clone of the repository which is a
+snapshot of the files at the time the clone was taken. To update the clone, see
+[Producing a Changeset](producingChangeset.html).
+
+#### ... a Sandbox Repository {#cloneSandbox}
+
+In addition to the Project repositories, there are some test repositories that
+may be used to run test commands against Mercurial without fear of causing
+damage to development source. Use them freely but with discretion; content in
+them may be deleted at any time.
+
+>     $ mkdir sandbox; cd sandbox
+>     $ hg clone http://hg.openjdk.java.net/sandbox/box
+>     destination directory: box
+>     requesting all changes
+>     adding changesets
+>     adding manifests
+>     adding file changes
+>     added 23 changesets with 24 changes to 5 files
+>     4 files updated, 0 files merged, 0 files removed, 0 files unresolved
+>     $ du -s box
+>     46      box
+
+#### ... a Forest {#cloneForest}
+
+If a Project uses a forest, It is strongly recommended for developers to clone
+an entire forest, rather than a single repository. This is the only means to
+ensure consistency in builds. The following examples illustrate two
+alternatives for cloning the entire _jdk9/dev_ forest
+into the directory `9dev`.
+
+#. To clone the forest using the
+[trees](http://openjdk.java.net/projects/code-tools/trees/)
+extension just use `tclone`:
+
+   >     $ hg tclone http://hg.openjdk.java.net/jdk9/dev 9dev
+   > [full output](tClone.html)
+
+#. To clone the forest using `get_source.sh`, first
+clone the main tree:
+
+   >     $ hg clone http://hg.openjdk.java.net/jdk9/dev 9dev
+   >     requesting all changes
+   >     adding changesets
+   >     adding manifests
+   >     adding file changes
+   >     added 997 changesets with 1477 changes to 138 files
+   >     updating to branch default
+   >     82 files updated, 0 files merged, 0 files removed, 0 files unresolved
+
+   Then clone the repositories in the forest:
+
+   >     $ cd 9dev
+   >     $ sh ./get_source.sh
+   > [full output](getSource.html)
+
+Regardless of how the forest was cloned, this is the resulting populated
+forest.
+
+>     $ du -s
+>     934532  .
+>     $ ls
+>     ASSEMBLY_EXCEPTION  hotspot    LICENSE   README-builds.html
+>     common              jaxp       make      test
+>     configure           jaxws      Makefile  THIRD_PARTY_README
+>     corba               jdk        nashorn
+>     get_source.sh       langtools  README
+
+#### ... a Single Repository {#cloneSingle}
+
+If the source for the Project is contained within a single repository or
+reading a limited portion of the source is the only goal, it is possible to
+clone a single repository (even if it's part of a forest). For instance, this
+example shows how to clone the `langtools`
+repository from _jdk9/dev_ into the default
+destination directory.
+
+>     $ hg clone http://hg.openjdk.java.net/jdk9/dev/langtools
+>     destination directory: langtools
+>     requesting all changes
+>     adding changesets
+>     adding manifests
+>     adding file changes
+>     added 2289 changesets with 21194 changes to 7004 files
+>     updating to branch default
+>     6212 files updated, 0 files merged, 0 files removed, 0 files unresolved
+>     $ du -s langtools
+>     84396   langtools
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](processWorkflow.html) • [TOC](index.html) • [Next »](mailingLists.html)
+:::
diff a/src/reviewBodies.md b/src/reviewBodies.md
--- /dev/null
+++ b/src/reviewBodies.md
@@ -0,0 +1,21 @@
+% Review Bodies
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](changePlanning.html) • [TOC](index.html) • [Next »](testingChanges.html)
+:::
+
+For now, this corresponds to the current processes referred to as
+[_JEP_](http://openjdk.java.net/jeps/0)
+and _ccc_. Other processes may be identified later.
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](changePlanning.html) • [TOC](index.html) • [Next »](testingChanges.html)
+:::
diff a/src/tClone.md b/src/tClone.md
--- /dev/null
+++ b/src/tClone.md
@@ -0,0 +1,99 @@
+%`tclone` Output
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](repositories.html#cloneForest) • [TOC](index.html) • [Next »](repositories.html#cloneSingle)
+:::
+
+>     $ hg tclone http://hg.openjdk.java.net/jdk9/dev 9dev
+>     $ hg tclone http://hg.openjdk.java.net/jdk9/dev 9dev
+>     cloning http://hg.openjdk.java.net/jdk9/dev
+>     requesting all changes
+>     adding changesets
+>     adding manifests
+>     adding file changes
+>     added 997 changesets with 1477 changes to 138 files
+>     updating to branch default
+>     82 files updated, 0 files merged, 0 files removed, 0 files unresolved
+>     created /home/iris/9dev
+
+>     cloning http://hg.openjdk.java.net/jdk9/dev/corba
+>     requesting all changes
+>     adding changesets
+>     adding manifests
+>     adding file changes
+>     added 567 changesets with 3577 changes to 1398 files
+>     updating to branch default
+>     1195 files updated, 0 files merged, 0 files removed, 0 files unresolved
+>     created /home/iris/9dev/corba
+
+>     cloning http://hg.openjdk.java.net/jdk9/dev/hotspot
+>     requesting all changes
+>     adding changesets
+>     adding manifests
+>     adding file changes
+>     added 6126 changesets with 36489 changes to 5247 files
+>     updating to branch default
+>     4357 files updated, 0 files merged, 0 files removed, 0 files unresolved
+>     created /home/iris/9dev/hotspot
+
+>     cloning http://hg.openjdk.java.net/jdk9/dev/jaxp
+>     requesting all changes
+>     adding changesets
+>     adding manifests
+>     adding file changes
+>     added 570 changesets with 6285 changes to 4230 files
+>     updating to branch default
+>     2078 files updated, 0 files merged, 0 files removed, 0 files unresolved
+>     created /home/iris/9dev/jaxp
+
+>     cloning http://hg.openjdk.java.net/jdk9/dev/jaxws
+>     requesting all changes
+>     adding changesets
+>     adding manifests
+>     adding file changes
+>     added 471 changesets with 15683 changes to 6727 files
+>     updating to branch default
+>     3710 files updated, 0 files merged, 0 files removed, 0 files unresolved
+>     created /home/iris/9dev/jaxws
+
+>     cloning http://hg.openjdk.java.net/jdk9/dev/jdk
+>     requesting all changes
+>     adding changesets
+>     adding manifests
+>     adding file changes
+>     added 9507 changesets with 91840 changes to 26823 files
+>     updating to branch default
+>     22251 files updated, 0 files merged, 0 files removed, 0 files unresolved
+>     created /home/iris/9dev/jdk
+
+>     cloning http://hg.openjdk.java.net/jdk9/dev/langtools
+>     requesting all changes
+>     adding changesets
+>     adding manifests
+>     adding file changes
+>     added 2326 changesets with 21344 changes to 7022 files
+>     updating to branch default
+>     6196 files updated, 0 files merged, 0 files removed, 0 files unresolved
+>     created /home/iris/9dev/langtools
+
+>     cloning http://hg.openjdk.java.net/jdk9/dev/nashorn
+>     requesting all changes
+>     adding changesets
+>     adding manifests
+>     adding file changes
+>     added 766 changesets with 6302 changes to 2248 files
+>     updating to branch default
+>     2121 files updated, 0 files merged, 0 files removed, 0 files unresolved
+>     created /home/iris/9dev/nashorn
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](repositories.html#cloneForest) • [TOC](index.html) • [Next »](repositories.html#cloneSingle)
+:::
diff a/src/testingChanges.md b/src/testingChanges.md
--- /dev/null
+++ b/src/testingChanges.md
@@ -0,0 +1,27 @@
+% Testing Changes
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](reviewBodies.html) • [TOC](index.html) • [Next »](jckAcquisition.html)
+:::
+
+This section will describe the need for tests and will provide an engineering
+perspective to the different kinds of test suites, including regression tests
+as run by the [jtreg harness](../jtreg/) and JCK
+tests. Characteristics of a good regression test will be provided.
+
+<!--
+ See also the <a href="http://openjdk.java.net/groups/quality/">OpenJDK
+Quality Group</a>. 
+-->
+
+::: {.version}
+version 0.02
+:::
+
+::: {.NavBit}
+[« Previous](reviewBodies.html) • [TOC](index.html) • [Next »](jckAcquisition.html)
+:::
diff a/src/webrevHelp.md b/src/webrevHelp.md
--- /dev/null
+++ b/src/webrevHelp.md
@@ -0,0 +1,45 @@
+% Webrev Help
+
+So, what is webrev?
+
+`webrev` refers to both the tool and its output. The script,
+[`webrev.ksh`](http://hg.openjdk.java.net/code-tools/webrev/raw-file/tip/webrev.ksh),
+is maintained in the [Code Tools](../projects/code-tools) Project.
+The latest version of the tool may be downloaded from
+[http://hg.openjdk.java.net/code-tools/webrev/raw-file/tip/webrev.ksh](http://hg.openjdk.java.net/code-tools/webrev/raw-file/tip/webrev.ksh).
+
+`webrev.ksh` crawls over your changes to generate a
+set of web-based views of the differences in your code. The different views
+allow reviewers to easily look at your proposed changes, selecting the
+appropriate difference format based on the type of file, the type of change,
+and their own preferences.
+
+## Examples
+
+`ksh ./webrev.ksh -N -r <REV>`
+
+>    Generate diffs between revision _`<REV>`_ and the `tip`. Output created under the
+>    `./webrev/` directory.
+
+`ksh ./webrev.ksh -m -N -c <BUGID>`
+
+>    Force the use of Mercurial to generate diffs between all
+>    modified files and the current `tip`. At the top of
+>    the main page Include a clickable link to _`<BUGID>`_ in the
+>    [OpenJDK Bug System](http://bugs.openjdk.java.net). Output to `./webrev/`.
+
+`ksh WDIR=<OUTDIR> ./webrev.ksh <FILE>`
+
+>    Useful when generating diffs across multiple repositories in
+>    the forest, the _`<FILE>`_
+>    contains a list of files to diff. Output to alternate location
+>    _`<OUTDIR>`_.
+
+`ksh ./webrev.ksh -help`
+
+>    Complete list of options.
+
+## Further information
+
+* [Source repository](http://hg.openjdk.java.net/code-tools/webrev)
+* [Mailing list](http://mail.openjdk.java.net/pipermail/webrev-dev/)
