diff a/src/next.md b/src/next.md
--- a/src/next.md
+++ b/src/next.md
@@ -7,11 +7,11 @@
 This section describes what might happen after a changeset gets into the build,
 for example a bug might be filed or a backport could be requested.
 
 * [Requesting a Backport](#requesting-a-backport)
 * [Filing a Bug](#filing-a-bug)
-* [ProblemListing or Ignoring a test](#problemlisting-or-ignore-ing-a-test)
+* [ProblemListing or `@ignore`-ing a Test](#problemlisting-or-ignore-ing-a-test)
 * [Backing Out a Change](#backing-out-a-change)
 
 ## Requesting a Backport
 
 TBD
@@ -21,11 +21,11 @@
 When a new failure is found in the JDK a bug should be filed to describe and track the issue. Depending on your role in the OpenJDK you can either use the [Bug Report Tool](https://bugreport.java.com/) or, if you are Author in an OpenJDK Project, report the bug directly in the [JDK Bug System](https://bugs.openjdk.java.net/). Try to make the bug report as complete as possible to make it easier to triage and investigate the bug. It's not the reporter's responsibility to set a correct priority, but a good guess is always better than a default value. To help with setting the right priority consider things like how the bug impacts the product and our testing, how likely is it that the bug triggers, and how difficult is it to work around the bug if it's not fixed soon.
 
 A few things to keep in mind when filing a new bug:
 
 * Before filing a bug, verify that there isn't already a bug filed for this issue.
-* Add relevant labels like `intermittent`, `regression`, `testbug` etc.
+* Add relevant labels like `intermittent`, `regression`, `noreg-self` etc.
 * Set affects version to the JDK version(s) where the failure was seen.
 * In the description, always include (if possible):
   * full name of the failing tests
   * error messages
   * assert messages
@@ -64,31 +64,52 @@
 ~~~
 
 Use the suitable ProblemList and add a line like this in the proper section:
 
 ~~~
-sun.tools.jcmd.MyTest.java                        4711   windows-all
+foo/bar/MyTest.java                        4711   windows-all
 ~~~
 
 In this example, `MyTest.java` is ProblemListed on windows, tracked by bug `JDK-4711`.
 
 Currently there's [no support for multiple lines for the same test](https://bugs.openjdk.java.net/browse/CODETOOLS-7902481). For this reason it's important to always make sure there's no existing entry for the test before adding a new one, as multiple entries might lead to unexpected results, e.g.
 
 ~~~
-sun.tools.jcmd.MyTest.java                        4710   generic-all
+foo/bar/MyTest.java                        4710   generic-all
 ...
-sun.tools.jcmd.MyTest.java                        4711   windows-all
+foo/bar/MyTest.java                        4711   windows-all
 ~~~
 
 This would lead to `sun.tools.jcmd.MyTest.java` being ProblemListed only on `windows-all`. The proper way to write this is:
 
 ~~~
-sun.tools.jcmd.MyTest.java                        4710,4711   generic-all,windows-all
+foo/bar/MyTest.java                        4710,4711   generic-all,windows-all
 ~~~
 
 Although `windows-all` isn't strictly required in this example, it's preferable to specify platforms for each bugid (unless they are all `generic-all`), this makes it easier to remove one of the bugs from the list.
 
+#### ProblemListing some, but not all, test cases in a file
+
+Some tests contain several test cases and there may be a need to ProblemList only a few of them. To do this use the full test name, i.e. `<filename> + # + <test case id>`, where test case id can be specified in the test header. If no id is specified each test case can be referenced with `id` + ordinary number of the test case in the test file.
+
+Let's assume we have four test cases in `foo/bar/MyTest.java`:
+
+~~~
+/* @test */
+/* @test id=fancy_name */
+/* @test */
+/* @test */
+~~~
+
+A ProblemList entry that excludes the first, second, and third test case would look like this:
+
+~~~
+foo/bar/MyTest.java#id0          4720  generic-all
+foo/bar/MyTest.java#fancy_name   4721  generic-all
+foo/bar/MyTest.java#id2          4722  generic-all
+~~~
+
 #### Running ProblemListed tests
 
 To run ad-hoc runs of ProblemListed tests use `RUN_PROBLEM_LISTS=true`.
 
 ~~~
