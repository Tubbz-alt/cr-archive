diff a/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/IMCMethod.java b/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/IMCMethod.java
--- a/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/IMCMethod.java
+++ b/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/IMCMethod.java
@@ -90,6 +90,14 @@
 	 *
 	 * @return {@code Boolean.TRUE} if the method is native, {@code Boolean.FALSE} if not, or
 	 *         {@code null} if the information is not available
 	 */
 	Boolean isNative();
+	
+	/**
+	 * Whether this method is hidden.
+	 *
+	 * @return {@code Boolean.TRUE} if the method is hidden, {@code Boolean.FALSE} if not, or
+	 *         {@code null} if the information is not available
+	 */
+	Boolean isHidden();
 }
diff a/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/util/MCMethod.java b/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/util/MCMethod.java
--- a/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/util/MCMethod.java
+++ b/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/util/MCMethod.java
@@ -96,10 +96,15 @@
 
 	@Override
 	public final Boolean isNative() {
 		return m_isNative;
 	}
+	
+	@Override
+	public final Boolean isHidden() {
+		return null;
+	}
 
 	@Override
 	public int hashCode() {
 		final int prime = 31;
 		int result = 1;
diff a/core/org.openjdk.jmc.flightrecorder/src/main/java/org/openjdk/jmc/flightrecorder/internal/parser/v1/StructTypes.java b/core/org.openjdk.jmc.flightrecorder/src/main/java/org/openjdk/jmc/flightrecorder/internal/parser/v1/StructTypes.java
--- a/core/org.openjdk.jmc.flightrecorder/src/main/java/org/openjdk/jmc/flightrecorder/internal/parser/v1/StructTypes.java
+++ b/core/org.openjdk.jmc.flightrecorder/src/main/java/org/openjdk/jmc/flightrecorder/internal/parser/v1/StructTypes.java
@@ -604,10 +604,15 @@
 
 		@Override
 		public Boolean isNative() {
 			return null;
 		}
+		
+		@Override
+		public Boolean isHidden() {
+			return (Boolean) hidden;
+		}
 
 		@Override
 		public int hashCode() {
 			final int prime = 31;
 			int result = 1;
diff a/core/tests/org.openjdk.jmc.flightrecorder.test/src/test/java/org/openjdk/jmc/flightrecorder/test/util/MockStacktraceGenerator.java b/core/tests/org.openjdk.jmc.flightrecorder.test/src/test/java/org/openjdk/jmc/flightrecorder/test/util/MockStacktraceGenerator.java
--- a/core/tests/org.openjdk.jmc.flightrecorder.test/src/test/java/org/openjdk/jmc/flightrecorder/test/util/MockStacktraceGenerator.java
+++ b/core/tests/org.openjdk.jmc.flightrecorder.test/src/test/java/org/openjdk/jmc/flightrecorder/test/util/MockStacktraceGenerator.java
@@ -151,10 +151,15 @@
 
 		@Override
 		public Boolean isNative() {
 			return isNative;
 		}
+		
+		@Override
+		public Boolean isHidden() {
+			return null;
+		}
 
 	}
 
 	private static class MockType implements IMCType {
 
