diff a/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/views/stacktrace/StacktraceView.java b/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/views/stacktrace/StacktraceView.java
--- a/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/views/stacktrace/StacktraceView.java
+++ b/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/views/stacktrace/StacktraceView.java
@@ -30,10 +30,12 @@
  * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 package org.openjdk.jmc.flightrecorder.ui.views.stacktrace;
 
+import static org.openjdk.jmc.flightrecorder.stacktrace.StacktraceModel.getLastSelectedBranch;
+
 import java.util.Arrays;
 import java.util.List;
 import java.util.Optional;
 import java.util.concurrent.CompletableFuture;
 import java.util.logging.Level;
@@ -86,11 +88,10 @@
 import org.eclipse.ui.IWorkbenchPart;
 import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.forms.widgets.FormText;
 import org.eclipse.ui.part.ViewPart;
-
 import org.openjdk.jmc.common.IDisplayable;
 import org.openjdk.jmc.common.IMCFrame;
 import org.openjdk.jmc.common.IState;
 import org.openjdk.jmc.common.collection.SimpleArray;
 import org.openjdk.jmc.common.item.IItemCollection;
@@ -866,22 +867,10 @@
 			input.addAll(selectedBranch.getTailFrames());
 			addSelectedBranches(selectedBranch.getEndFork(), input, backwards);
 		}
 	}
 
-	// See JMC-6787
-	@SuppressWarnings("deprecation")
-	private static Branch getLastSelectedBranch(Fork fromFork) {
-		Branch lastSelectedBranch = null;
-		Branch branch = fromFork.getSelectedBranch();
-		while (branch != null) {
-			lastSelectedBranch = branch;
-			branch = branch.getEndFork().getSelectedBranch();
-		}
-		return lastSelectedBranch;
-	}
-
 	private static Fork getRootFork(Fork fork) {
 		while (fork.getParentBranch() != null) {
 			fork = fork.getParentBranch().getParentFork();
 		}
 		return fork;
