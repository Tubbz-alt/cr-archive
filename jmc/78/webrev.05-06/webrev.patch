diff a/application/org.openjdk.jmc.flightrecorder.flameview/src/main/java/org/openjdk/jmc/flightrecorder/flameview/views/FlameGraphView.java b/application/org.openjdk.jmc.flightrecorder.flameview/src/main/java/org/openjdk/jmc/flightrecorder/flameview/views/FlameGraphView.java
--- a/application/org.openjdk.jmc.flightrecorder.flameview/src/main/java/org/openjdk/jmc/flightrecorder/flameview/views/FlameGraphView.java
+++ b/application/org.openjdk.jmc.flightrecorder.flameview/src/main/java/org/openjdk/jmc/flightrecorder/flameview/views/FlameGraphView.java
@@ -396,11 +396,13 @@
 	@Override
 	public void selectionChanged(IWorkbenchPart part, ISelection selection) {
 		if (selection instanceof IStructuredSelection) {
 			Object first = ((IStructuredSelection) selection).getFirstElement();
 			IItemCollection items = AdapterUtil.getAdapter(first, IItemCollection.class);
-			if (items != null && !items.equals(currentItems)) {
+			if (items == null) {
+				setItems(ItemCollectionToolkit.build(Stream.empty()));
+			} else if (!items.equals(currentItems)) {
 				setItems(items);
 			}
 		}
 	}
 
@@ -412,10 +414,11 @@
 
 	private void rebuildModel() {
 		if (modelCalculationActive.get()) {
 			modelCalculationActive.set(false);
 		}
+
 		final CompletableFuture<ModelsContainer> currentModelCalculator = getModelPreparer(createStacktraceModel(),
 				true);
 		currentModelCalculator.thenAcceptAsync(this::setModel, DisplayToolkit.inDisplayThread())
 				.exceptionally(FlameGraphView::handleModelBuildException);
 	}
@@ -446,13 +449,13 @@
 		}, MODEL_EXECUTOR);
 	}
 
 	private void setModel(ModelsContainer container) {
 		// Check that the models are prepared and up to date 
-		if (container.isReady() && container.isEqualStacktraceModel(createStacktraceModel()) && !browser.isDisposed()) {
+		if (container.isReady() && !browser.isDisposed() && container.isEqualStacktraceModel(createStacktraceModel())) {
 			setViewerInput(container.root());
-		}
+		} 
 	}
 
 	private void setViewerInput(TraceNode root) {
 		Stream.of(exportActions).forEach((action) -> action.setEnabled(false));
 		browser.setText(HTML_PAGE);
