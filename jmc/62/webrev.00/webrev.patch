diff a/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/io/IOToolkit.java b/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/io/IOToolkit.java
--- a/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/io/IOToolkit.java
+++ b/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/io/IOToolkit.java
@@ -56,10 +56,12 @@
 import java.util.ArrayList;
 import java.util.List;
 import java.util.zip.GZIPInputStream;
 import java.util.zip.ZipInputStream;
 
+import org.openjdk.jmc.common.messages.internal.Messages;
+
 /**
  * Common functionality you might want when you're working with I/O.
  */
 public final class IOToolkit {
 	/**
@@ -70,10 +72,15 @@
 	/**
 	 * Magic bytes for recognizing GZip.
 	 */
 	private static final int MAGIC_GZ[] = new int[] {31, 139};
 
+	/**
+	 * Magic bytes for recognizing LZ4.
+	 */
+	private static final int MAGIC_LZ4[] = new int[] {4, 34, 77, 24};
+
 	private IOToolkit() {
 		throw new Error("Don't"); //$NON-NLS-1$
 	}
 
 	/**
@@ -111,10 +118,13 @@
 				return new GZIPInputStream(in);
 			} else if (hasMagic(file, MAGIC_ZIP)) {
 				ZipInputStream zin = new ZipInputStream(in);
 				zin.getNextEntry();
 				return zin;
+			} else if (hasMagic(file, MAGIC_LZ4)) {
+				throw new UnsupportedFormatException(
+						Messages.getString(Messages.UnsupportedFormatException_LZ4_NOT_SUPPORTED)); //$NON-NLS-1$
 			}
 			return in;
 		} catch (RuntimeException e) {
 			closeSilently(fin);
 			throw e;
@@ -153,10 +163,14 @@
 			in.reset();
 			ZipInputStream zin = new ZipInputStream(in);
 			zin.getNextEntry();
 			return zin;
 		}
+		if (hasMagic(in, MAGIC_LZ4)) {
+			throw new UnsupportedFormatException(
+					Messages.getString(Messages.UnsupportedFormatException_LZ4_NOT_SUPPORTED)); //$NON-NLS-1$
+		}
 		in.reset();
 		return in;
 	}
 
 	/**
diff a/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/io/UnsupportedFormatException.java b/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/io/UnsupportedFormatException.java
--- /dev/null
+++ b/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/io/UnsupportedFormatException.java
@@ -0,0 +1,15 @@
+package org.openjdk.jmc.common.io;
+
+import java.io.IOException;
+
+/**
+ * Thrown when an unsupported compression format is discovered.
+ */
+public class UnsupportedFormatException extends IOException {
+	public UnsupportedFormatException(String message) {
+		super(message);
+	}
+
+	private static final long serialVersionUID = 1L;
+
+}
diff a/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/messages/internal/Messages.java b/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/messages/internal/Messages.java
--- a/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/messages/internal/Messages.java
+++ b/core/org.openjdk.jmc.common/src/main/java/org/openjdk/jmc/common/messages/internal/Messages.java
@@ -70,10 +70,11 @@
 	public static final String RangeContentType_FIELD_START = "RangeContentType_FIELD_START"; //$NON-NLS-1$
 	public static final String RangeContentType_NAME = "RangeContentType_NAME"; //$NON-NLS-1$
 	public static final String TimestampKind_SINCE_1970_MSG = "TimestampKind_SINCE_1970_MSG"; //$NON-NLS-1$
 	public static final String TypeHandling_MESSAGE_SIZE = "TypeHandling_MESSAGE_SIZE"; //$NON-NLS-1$
 	public static final String UnitLookup_TIMESTAMP_OUT_OF_RANGE = "UnitLookup_TIMESTAMP_OUT_OF_RANGE"; //$NON-NLS-1$
+	public static final String UnsupportedFormatException_LZ4_NOT_SUPPORTED = "UnsupportedFormatException_LZ4_NOT_SUPPORTED"; //$NON-NLS-1$
 
 	private Messages() {
 	}
 
 	public static String getString(String key) {
diff a/core/org.openjdk.jmc.common/src/main/resources/org/openjdk/jmc/common/messages/internal/messages.properties b/core/org.openjdk.jmc.common/src/main/resources/org/openjdk/jmc/common/messages/internal/messages.properties
--- a/core/org.openjdk.jmc.common/src/main/resources/org/openjdk/jmc/common/messages/internal/messages.properties
+++ b/core/org.openjdk.jmc.common/src/main/resources/org/openjdk/jmc/common/messages/internal/messages.properties
@@ -180,5 +180,6 @@
 # {0} is a type name
 RangeContentType_NAME=Range of {0}
 # {0} is a string
 MISSING_VALUE=N/A
 MISSING_VALUE_TOOLTIP=N/A ({0})
+UnsupportedFormatException_LZ4_NOT_SUPPORTED=LZ4 compression is not supported in this version
