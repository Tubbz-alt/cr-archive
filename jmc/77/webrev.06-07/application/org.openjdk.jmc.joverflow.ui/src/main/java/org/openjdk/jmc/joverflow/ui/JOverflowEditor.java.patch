diff a/application/org.openjdk.jmc.joverflow.ui/src/main/java/org/openjdk/jmc/joverflow/ui/JOverflowEditor.java b/application/org.openjdk.jmc.joverflow.ui/src/main/java/org/openjdk/jmc/joverflow/ui/JOverflowEditor.java
--- a/application/org.openjdk.jmc.joverflow.ui/src/main/java/org/openjdk/jmc/joverflow/ui/JOverflowEditor.java
+++ b/application/org.openjdk.jmc.joverflow.ui/src/main/java/org/openjdk/jmc/joverflow/ui/JOverflowEditor.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2018, 2020, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2018, 2019, Oracle and/or its affiliates. All rights reserved.
  *
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * The contents of this file are subject to the terms of either the Universal Permissive License
  * v 1.0 as shown at http://oss.oracle.com/licenses/upl
@@ -265,28 +265,28 @@
 	@Override
 	public boolean isSaveAsAllowed() {
 		return false;
 	}
 
-	public JOverflowUi getJOverflowUi() {
+	JOverflowUi getJOverflowUi() {
 		return mJOverflowUi;
 	}
 
-	public Snapshot getSnapshot() {
+	Snapshot getSnapshot() {
 		return mSnapshot;
 	}
 
-	public void addUiLoadedListener(UiLoadedListener listener) {
+	void addUiLoadedListener(UiLoadedListener listener) {
 		mUiLoadedListeners.add(listener);
 		if (mJOverflowUi != null) {
 			listener.uiLoaded(mJOverflowUi);
 		}
 	}
 
-	public void removeUiLoadedListener(UiLoadedListener listener) {
+	void removeUiLoadedListener(UiLoadedListener listener) {
 		mUiLoadedListeners.remove(listener);
 	}
 
-	public interface UiLoadedListener {
+	interface UiLoadedListener {
 		void uiLoaded(JOverflowUi ui);
 	}
 }
