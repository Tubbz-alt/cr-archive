diff a/core/org.openjdk.jmc.flightrecorder/src/main/java/org/openjdk/jmc/flightrecorder/internal/parser/v0/ReaderFactory.java b/core/org.openjdk.jmc.flightrecorder/src/main/java/org/openjdk/jmc/flightrecorder/internal/parser/v0/ReaderFactory.java
--- a/core/org.openjdk.jmc.flightrecorder/src/main/java/org/openjdk/jmc/flightrecorder/internal/parser/v0/ReaderFactory.java
+++ b/core/org.openjdk.jmc.flightrecorder/src/main/java/org/openjdk/jmc/flightrecorder/internal/parser/v0/ReaderFactory.java
@@ -55,11 +55,12 @@
 	private final FastAccessNumberMap<ConstantMap> constants = new FastAccessNumberMap<>(100, 5);
 	private final ChunkMetadata metadata;
 	private final FastAccessNumberMap<LabeledIdentifier> types = new FastAccessNumberMap<>();
 	private final ChunkStructure header;
 
-	ReaderFactory(ChunkMetadata metadata, byte[] chunkData, LoaderContext context, ChunkStructure header) throws InvalidJfrFileException {
+	ReaderFactory(ChunkMetadata metadata, byte[] chunkData, LoaderContext context, ChunkStructure header)
+			throws InvalidJfrFileException {
 		this.metadata = metadata;
 		this.header = header;
 		for (ProducerDescriptor pd : metadata.getProducers()) {
 			for (ContentTypeDescriptor ct : pd.getContentTypes()) {
 				IValueReader reader = createReader(ct.getDataStructure());
@@ -123,11 +124,12 @@
 
 	IValueReader createReader(ValueDescriptor vd, String valueType) throws InvalidJfrFileException {
 		if (vd.getDataType().isPrimitive()) {
 			return createPrimitiveReader(vd.getDataType(), vd.getContentType(), valueType);
 		} else if (vd.getDataType() == DataType.ARRAY) {
-			return new ArrayReader(createPrimitiveReader(vd.getInnerDataType(), vd.getContentType(), valueType), header);
+			return new ArrayReader(createPrimitiveReader(vd.getInnerDataType(), vd.getContentType(), valueType),
+					header);
 		} else if (vd.getDataType() == DataType.STRUCTARRAY) {
 			return new ArrayReader(createReader(vd.getChildren()), header);
 		} else if (vd.getDataType() == DataType.STRUCT) {
 			return createReader(vd.getChildren());
 		} else {
