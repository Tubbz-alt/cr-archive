diff a/core/org.openjdk.jmc.flightrecorder.rules.jdk/src/main/java/org/openjdk/jmc/flightrecorder/rules/jdk/latency/VMOperationRule.java b/core/org.openjdk.jmc.flightrecorder.rules.jdk/src/main/java/org/openjdk/jmc/flightrecorder/rules/jdk/latency/VMOperationRule.java
--- a/core/org.openjdk.jmc.flightrecorder.rules.jdk/src/main/java/org/openjdk/jmc/flightrecorder/rules/jdk/latency/VMOperationRule.java
+++ b/core/org.openjdk.jmc.flightrecorder.rules.jdk/src/main/java/org/openjdk/jmc/flightrecorder/rules/jdk/latency/VMOperationRule.java
@@ -112,11 +112,11 @@
 			String operation = RulesToolkit.getValue(longestEvent, JdkAttributes.OPERATION);
 			IMCThread caller = RulesToolkit.getValue(longestEvent, JdkAttributes.CALLER);
 			return new Result(this, score,
 					MessageFormat.format(Messages.getString(Messages.VMOperationRuleFactory_TEXT_WARN), peakDuration),
 					MessageFormat.format(Messages.getString(Messages.VMOperationRuleFactory_TEXT_WARN_LONG),
-							peakDuration, operation, Encode.forHtml(caller.getThreadName()), timeStr),
+							peakDuration, Encode.forHtml(operation), Encode.forHtml(caller.getThreadName()), timeStr),
 					JdkQueries.VM_OPERATIONS_BLOCKING);
 		}
 		return new Result(this, score,
 				MessageFormat.format(Messages.getString(Messages.VMOperationRuleFactory_TEXT_OK), peakDuration), null,
 				JdkQueries.FILE_READ);
