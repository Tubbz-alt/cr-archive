diff a/core/org.openjdk.jmc.flightrecorder.rules.jdk/src/main/java/org/openjdk/jmc/flightrecorder/rules/jdk/latency/VMOperationRule.java b/core/org.openjdk.jmc.flightrecorder.rules.jdk/src/main/java/org/openjdk/jmc/flightrecorder/rules/jdk/latency/VMOperationRule.java
--- a/core/org.openjdk.jmc.flightrecorder.rules.jdk/src/main/java/org/openjdk/jmc/flightrecorder/rules/jdk/latency/VMOperationRule.java
+++ b/core/org.openjdk.jmc.flightrecorder.rules.jdk/src/main/java/org/openjdk/jmc/flightrecorder/rules/jdk/latency/VMOperationRule.java
@@ -140,11 +140,10 @@
 		List<IItem> sortedEvents = sortEventsByStartTime(items);
 		for (IItem event : sortedEvents) {
 			if (curStartingEvent == null) {
 				curStartingEvent = event;
 				curCombinedDur = getDuration(event);
-				longestDuration = curCombinedDur;
 			} else {
 				IQuantity startTime = getStartTime(event);
 				IQuantity duration = getDuration(event);
 				double timeBetweenEvents = startTime.subtract(prevEndTime).doubleValueIn(UnitLookup.SECOND);
 				if (getOperation(curStartingEvent).equals(getOperation(event))
@@ -155,11 +154,11 @@
 					curCombinedDur = duration;
 					curStartingEvent = event;
 				}
 			}
 
-			if (longestDuration.compareTo(curCombinedDur) < 0) {
+			if (longestDuration == null || longestDuration.compareTo(curCombinedDur) < 0) {
 				longestDuration = curCombinedDur;
 				startingEvent = curStartingEvent;
 			}
 			prevEndTime = getEndTime(event);
 		}
