diff a/application/org.openjdk.jmc.flightrecorder.flameview/src/main/js/flameview.js b/application/org.openjdk.jmc.flightrecorder.flameview/src/main/js/flameview.js
--- a/application/org.openjdk.jmc.flightrecorder.flameview/src/main/js/flameview.js
+++ b/application/org.openjdk.jmc.flightrecorder.flameview/src/main/js/flameview.js
@@ -139,40 +139,32 @@
 		} else {
 			return element;
 		}}).join('');
 };
 
+
 const adjustTip = function(d) {
-	var tipMessage = d.data.n + htmlTagBr;
+	var tipMessage = "".concat(d.data.n, htmlTagBr);
 	if (d.data.v === undefined) {
-		tipMessage += createTable(d.data.d);
-	} else if (d.data.d === undefined) {
-		tipMessage +=  "package: " + d.data.p + htmlTagBr;
+		tipMessage += createRootTable(d.data.d);
 	} else {
-		tipMessage += "description: " + d.data.d + htmlTagBr;
+		tipMessage += createNodeTipTable(d.data);
 	}
-	if (d.data.v !== undefined) {
-		tipMessage += "samples: " + d.data.v;
-	} 
 	return tipMessage;
-};
+}
 
-const tagOpen = function(tag, cssClass) {
-	var result = "\u003C" + tag;
-	if (cssClass === undefined) {
-		result +="\u003E";
+const createNodeTipTable = function(data) {
+	var table = "".concat(tagOpen("table class='d3-flame-graph-tip'"), tagOpen("tbody"))
+	if (data.d === undefined) {
+		table = table.concat(addTableRow(tootlipPackage, data.p), addTableRow(tootlipSamples, data.v));
 	} else {
-		var cssExtended = " class='" + cssClass + "' \u003E";
-		result += cssExtended;
+		table += addTableRow(tootlipDescription, data.d);
 	}
-	return result;
-}
-const tagClose = function(tag) {
-	return "\u003C\u002F "+ tag + "\u003E";
+	return table.concat(tagClose("tbody"), tagClose("table"));
 }
 
-const createTable = function(input) {
+const createRootTable = function(input) {
 	var table = "";
 	var tableRows = input.split("|");
 	if(tableRows.length > 1) {
 		table = table.concat(tagOpen("table class='d3-flame-graph-tip'"), createTableHeader(), tagOpen("tbody"));
 		var prevCount = 0;
@@ -183,16 +175,30 @@
 		table = table.concat(tagClose("tbody"), tagClose("table"));
 	}
 	return table;
 }
 
+const tagOpen = function(tag, cssClass) {
+	var result = "\u003C" + tag;
+	if (cssClass === undefined) {
+		result +="\u003E";
+	} else {
+		var cssExtended = " class='" + cssClass + "' \u003E";
+		result += cssExtended;
+	}
+	return result;
+}
+const tagClose = function(tag) {
+	return "\u003C\u002F "+ tag + "\u003E";
+}
+
 const addTableRow = function(eventCount, eventName) {
 	return tableTr(tableTd(eventCount, "tdCount"), tableTd(eventName));
 }
 
 const createTableHeader = function() { 
-	return tagOpen("thead").concat(tableTr(tableTh("Count", "tdCount"), tableTh("Event Type")),tagClose("thead"));
+	return tagOpen("thead").concat(tableTr(tableTh(tooltipTableThCount, "tdCount"), tableTh(tooltipTableThCount)),tagClose("thead"));
 }
 
 const tableTh = function(value, css) {
 	return tagOpen("th", css).concat(value, tagClose("th"));
 }
