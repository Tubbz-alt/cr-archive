diff a/core/org.openjdk.jmc.flightrecorder/src/main/java/org/openjdk/jmc/flightrecorder/stacktrace/StacktraceModel.java b/core/org.openjdk.jmc.flightrecorder/src/main/java/org/openjdk/jmc/flightrecorder/stacktrace/StacktraceModel.java
--- a/core/org.openjdk.jmc.flightrecorder/src/main/java/org/openjdk/jmc/flightrecorder/stacktrace/StacktraceModel.java
+++ b/core/org.openjdk.jmc.flightrecorder/src/main/java/org/openjdk/jmc/flightrecorder/stacktrace/StacktraceModel.java
@@ -88,11 +88,11 @@
  * Examining the contents of a branch can be done by using {@link Branch#getFirstFrame()} and
  * {@link Branch#getTailFrames()}. These methods return {@link StacktraceFrame} entries that can be
  * queried for more information.
  */
 public class StacktraceModel {
-
+	@SuppressWarnings("deprecation")
 	private final IMemberAccessor<IMCStackTrace, IItem> accessor = ItemToolkit.accessor(JfrAttributes.EVENT_STACKTRACE);
 	private final boolean threadRootAtTop;
 	private final FrameSeparator frameSeparator;
 	private final IItemCollection items;
 	private Fork rootFork;
@@ -140,10 +140,11 @@
 	 * you use the methods on the {@link Fork} and {@link Branch} classes to navigate the model.
 	 * <p>
 	 * The first call may take some time due to calculations, so it may be useful to call this in a
 	 * background thread if used in a UI.
 	 */
+	@SuppressWarnings("deprecation")
 	public Fork getRootFork() {
 		if (rootFork == null) {
 			rootFork = new Fork(ItemToolkit.asIterable(items));
 		}
 		return rootFork;
