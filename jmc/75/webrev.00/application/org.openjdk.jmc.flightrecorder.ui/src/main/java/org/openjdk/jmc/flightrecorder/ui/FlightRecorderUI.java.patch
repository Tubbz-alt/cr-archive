diff a/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/FlightRecorderUI.java b/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/FlightRecorderUI.java
--- a/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/FlightRecorderUI.java
+++ b/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/FlightRecorderUI.java
@@ -40,20 +40,20 @@
 import org.eclipse.ui.IEditorPart;
 import org.eclipse.ui.IEditorReference;
 import org.eclipse.ui.IWorkbench;
 import org.eclipse.ui.IWorkbenchPage;
 import org.eclipse.ui.IWorkbenchWindow;
-import org.osgi.framework.BundleContext;
-
+import org.eclipse.ui.PlatformUI;
 import org.openjdk.jmc.common.unit.IQuantity;
 import org.openjdk.jmc.common.unit.QuantityConversionException;
 import org.openjdk.jmc.common.unit.UnitLookup;
 import org.openjdk.jmc.flightrecorder.ui.common.ImageConstants;
 import org.openjdk.jmc.flightrecorder.ui.messages.internal.Messages;
 import org.openjdk.jmc.flightrecorder.ui.preferences.PreferenceKeys;
 import org.openjdk.jmc.ui.MCAbstractUIPlugin;
 import org.openjdk.jmc.ui.misc.DisplayToolkit;
+import org.osgi.framework.BundleContext;
 
 /**
  * The activator class controls the life cycle for the Flight Recording plug-in.
  */
 public final class FlightRecorderUI extends MCAbstractUIPlugin {
@@ -200,11 +200,11 @@
 		return dir;
 	}
 
 	public PageManager getPageManager() {
 		if (pageManager == null) {
-			IWorkbench workbench = getWorkbench();
+			IWorkbench workbench = PlatformUI.getWorkbench();
 			Runnable callback = () -> DisplayToolkit.safeAsyncExec(() -> refreshJfrEditors(workbench));
 			pageManager = new PageManager(getPreferences().get(PAGE_MANAGER_ID, null), callback);
 		}
 		return pageManager;
 	}
