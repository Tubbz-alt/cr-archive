diff a/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/views/stacktrace/StacktraceView.java b/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/views/stacktrace/StacktraceView.java
--- a/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/views/stacktrace/StacktraceView.java
+++ b/application/org.openjdk.jmc.flightrecorder.ui/src/main/java/org/openjdk/jmc/flightrecorder/ui/views/stacktrace/StacktraceView.java
@@ -281,10 +281,12 @@
 					}
 				});
 			}
 		}
 
+		// See JMC-6787
+		@SuppressWarnings("deprecation")
 		@Override
 		public void run() {
 			StacktraceFrame frame = (StacktraceFrame) getStructuredSelection().getFirstElement();
 			// FIXME: Would like to move the table cursor after changing sibling state, not just the selection.
 			if (isInOpenFork(frame)) {
@@ -332,10 +334,12 @@
 		}
 
 		@Override
 		public void run() {
 			Branch branch = ((StacktraceFrame) getStructuredSelection().getFirstElement()).getBranch();
+			// See JMC-6787
+			@SuppressWarnings("deprecation")
 			Branch selectedSibling = branch.selectSibling(offset);
 			provider.refresh();
 			provider.setSelection(new StructuredSelection(selectedSibling.getFirstFrame()));
 		}
 
@@ -434,10 +438,12 @@
 		if (viewer instanceof TreeViewer) {
 			viewer.setContentProvider(createTreeContentProvider());
 		}
 	}
 
+	// See JMC-6787
+	@SuppressWarnings("deprecation")
 	private void rebuildViewer() {
 		boolean hasFocus = viewer.getControl().isFocusControl();
 		ISelection oldSelection = viewer.getSelection();
 		Fork oldInput = (Fork) viewer.getInput();
 		Composite parent = viewer.getControl().getParent();
@@ -821,10 +827,12 @@
 
 	private static boolean isNavigationFrame(StacktraceFrame frame) {
 		return isFirstInBranchWithSiblings(frame) && !isInOpenFork(frame);
 	}
 
+	// See JMC-6787
+	@SuppressWarnings("deprecation")
 	private static boolean isInOpenFork(StacktraceFrame frame) {
 		return frame.getBranch().getParentFork().getSelectedBranch() == null;
 	}
 
 	private static boolean isFirstInBranchWithSiblings(StacktraceFrame frame) {
@@ -839,10 +847,12 @@
 	 * FIXME: 'backwards' argument was used for displaying trace groups built from thread roots with
 	 * the thread roots at the bottom. If we don't want to support that scenario then we can remove
 	 * this argument.
 	 */
 	private static void addSelectedBranches(Fork fork, SimpleArray<StacktraceFrame> input, boolean backwards) {
+		// See JMC-6787
+		@SuppressWarnings("deprecation")
 		Branch selectedBranch = fork.getSelectedBranch();
 		if (selectedBranch == null) {
 			Stream.of(fork.getFirstFrames()).forEach(input::add);
 		} else if (backwards) {
 			addSelectedBranches(selectedBranch.getEndFork(), input, backwards);
@@ -856,10 +866,12 @@
 			input.addAll(selectedBranch.getTailFrames());
 			addSelectedBranches(selectedBranch.getEndFork(), input, backwards);
 		}
 	}
 
+	// See JMC-6787
+	@SuppressWarnings("deprecation")
 	private static Branch getLastSelectedBranch(Fork fromFork) {
 		Branch lastSelectedBranch = null;
 		Branch branch = fromFork.getSelectedBranch();
 		while (branch != null) {
 			lastSelectedBranch = branch;
