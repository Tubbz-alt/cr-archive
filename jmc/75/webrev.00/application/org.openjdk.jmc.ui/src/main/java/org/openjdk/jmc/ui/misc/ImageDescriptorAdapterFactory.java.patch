diff a/application/org.openjdk.jmc.ui/src/main/java/org/openjdk/jmc/ui/misc/ImageDescriptorAdapterFactory.java b/application/org.openjdk.jmc.ui/src/main/java/org/openjdk/jmc/ui/misc/ImageDescriptorAdapterFactory.java
--- a/application/org.openjdk.jmc.ui/src/main/java/org/openjdk/jmc/ui/misc/ImageDescriptorAdapterFactory.java
+++ b/application/org.openjdk.jmc.ui/src/main/java/org/openjdk/jmc/ui/misc/ImageDescriptorAdapterFactory.java
@@ -32,12 +32,11 @@
  */
 package org.openjdk.jmc.ui.misc;
 
 import org.eclipse.core.runtime.IAdapterFactory;
 import org.eclipse.jface.resource.ImageDescriptor;
-import org.eclipse.ui.plugin.AbstractUIPlugin;
-
+import org.eclipse.jface.resource.ResourceLocator;
 import org.openjdk.jmc.ui.common.resource.IImageResource;
 import org.openjdk.jmc.ui.common.resource.Resource;
 import org.openjdk.jmc.ui.common.util.AdapterUtil;
 
 public class ImageDescriptorAdapterFactory implements IAdapterFactory {
@@ -48,12 +47,12 @@
 		if (ImageDescriptor.class == adapterType) {
 			IImageResource imageResource = AdapterUtil.getAdapter(adaptableObject, IImageResource.class);
 			if (imageResource != null) {
 				Resource r = imageResource.getImageResource();
 				if (r != null) {
-					return adapterType
-							.cast(AbstractUIPlugin.imageDescriptorFromPlugin(r.getPluginId(), r.getResourcePath()));
+					return adapterType.cast(ResourceLocator
+							.imageDescriptorFromBundle(r.getPluginId(), r.getResourcePath()).orElse(null));
 				}
 			}
 			IGraphical g = AdapterUtil.getAdapter(adaptableObject, IGraphical.class);
 			return adapterType.cast(g == null ? null : g.getImageDescriptor());
 		}
