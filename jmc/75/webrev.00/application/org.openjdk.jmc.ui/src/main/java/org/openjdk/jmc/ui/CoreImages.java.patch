diff a/application/org.openjdk.jmc.ui/src/main/java/org/openjdk/jmc/ui/CoreImages.java b/application/org.openjdk.jmc.ui/src/main/java/org/openjdk/jmc/ui/CoreImages.java
--- a/application/org.openjdk.jmc.ui/src/main/java/org/openjdk/jmc/ui/CoreImages.java
+++ b/application/org.openjdk.jmc.ui/src/main/java/org/openjdk/jmc/ui/CoreImages.java
@@ -33,11 +33,11 @@
 package org.openjdk.jmc.ui;
 
 import java.util.MissingResourceException;
 
 import org.eclipse.jface.resource.ImageDescriptor;
-import org.eclipse.ui.plugin.AbstractUIPlugin;
+import org.eclipse.jface.resource.ResourceLocator;
 
 /**
  * Storage for common ImageDescriptors.
  */
 public class CoreImages {
@@ -175,11 +175,11 @@
 	private static ImageDescriptor icon(String filename) {
 		return createDescriptor("$nl$/icons/" + filename); //$NON-NLS-1$
 	}
 
 	private static ImageDescriptor createDescriptor(String relPath) {
-		ImageDescriptor desc = AbstractUIPlugin.imageDescriptorFromPlugin(UIPlugin.PLUGIN_ID, relPath);
+		ImageDescriptor desc = ResourceLocator.imageDescriptorFromBundle(UIPlugin.PLUGIN_ID, relPath).orElse(null);
 		if (desc == null) {
 			// FIXME: Throwing an exception has the development time advantage of being very intrusive. For release time, logging might be better.
 			throw new MissingResourceException("Missing image '" + relPath + '\'', ImageDescriptor.class.getName(), //$NON-NLS-1$
 					UIPlugin.PLUGIN_ID + '/' + relPath);
 		}
