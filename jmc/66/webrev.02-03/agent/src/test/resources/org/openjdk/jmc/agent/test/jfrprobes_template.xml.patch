diff a/agent/src/test/resources/org/openjdk/jmc/agent/test/jfrprobes_template.xml b/agent/src/test/resources/org/openjdk/jmc/agent/test/jfrprobes_template.xml
--- a/agent/src/test/resources/org/openjdk/jmc/agent/test/jfrprobes_template.xml
+++ b/agent/src/test/resources/org/openjdk/jmc/agent/test/jfrprobes_template.xml
@@ -34,46 +34,51 @@
 <jfragent>
 	<!-- Global configuration options -->
 	<config>
 		<!-- This is the prefix to use when generating event class names -->
 		<classprefix>__JFREvent</classprefix>
-		<!-- Will allow the recording of arrays and object parameters as Strings. This will cause toString to be called
-		     for array elements and objects other than strings, which in turn can cause trouble if the toString 
-		     method is badly implemented. Use with care. -->
+		<!-- Will allow the recording of arrays and object parameters as Strings. 
+			This will cause toString to be called for array elements and objects other 
+			than strings, which in turn can cause trouble if the toString method is badly 
+			implemented. Use with care. -->
 		<allowtostring>true</allowtostring>
-		<!-- Allows converters to be used. If a converter is badly implemented, you are on your own. -->
+		<!-- Allows converters to be used. If a converter is badly implemented, 
+			you are on your own. -->
 		<allowconverter>true</allowconverter>
 	</config>
 	<events>
 		<event id="demo.jfr.test1">
 			<name>JFR Hello World Event 1 %TEST_NAME%</name>
-			<description>Defined in the xml file and added by the agent.</description>
+			<description>Defined in the xml file and added by the agent.
+			</description>
 			<path>demo/jfrhelloworldevent1</path>
 			<stacktrace>true</stacktrace>
 			<class>org.openjdk.jmc.agent.test.InstrumentMe</class>
 			<method>
 				<name>printHelloWorldJFR1</name>
 				<descriptor>()V</descriptor>
 			</method>
-			<!-- location {ENTRY, EXIT, WRAP}-->
+			<!-- location {ENTRY, EXIT, WRAP} -->
 			<location>WRAP</location>
 		</event>
 		<event id="demo.jfr.test2">
 			<name>JFR Hello World Event 2 %TEST_NAME%</name>
-			<description>Defined in the xml file and added by the agent. Should record the parameters.</description>
+			<description>Defined in the xml file and added by the agent. Should
+				record the parameters.
+			</description>
 			<path>demo/jfrhelloworldevent2</path>
 			<stacktrace>true</stacktrace>
 			<class>org.openjdk.jmc.agent.test.InstrumentMe</class>
 			<method>
 				<name>printHelloWorldJFR2</name>
 				<descriptor>(Ljava/lang/String;J)I</descriptor>
 				<parameters>
 					<parameter index="0">
 						<name>String Attribute</name>
 						<description>The first parameter</description>
-						<!-- See com.oracle.jrockit.jfr.ContentType
-							 {None, Bytes, Timestamp, Millis, Nanos, Ticks, Address, OSThread, JavaThread, StackTrace, Class, Percentage} -->
+						<!-- See com.oracle.jrockit.jfr.ContentType {None, Bytes, Timestamp, 
+							Millis, Nanos, Ticks, Address, OSThread, JavaThread, StackTrace, Class, Percentage} -->
 						<contenttype>None</contenttype>
 					</parameter>
 					<parameter index="1">
 						<name>Long Attribute</name>
 						<description>The second parameter</description>
@@ -83,16 +88,17 @@
 				<returnvalue>
 					<description>The return value</description>
 					<contenttype>None</contenttype>
 				</returnvalue>
 			</method>
-			<!-- location {ENTRY, EXIT, WRAP}-->
+			<!-- location {ENTRY, EXIT, WRAP} -->
 			<location>WRAP</location>
 		</event>
 		<event id="demo.jfr.test11">
 			<name>JFR Hello World Event 11 %TEST_NAME%</name>
-			<description>Defined in the xml file and added by the agent. Should record the value of static reference
+			<description>Defined in the xml file and added by the agent. Should
+				record the value of static reference
 				'STATIC_STRING_FIELD'
 			</description>
 			<path>demo/jfrhelloworldevent11</path>
 			<stacktrace>true</stacktrace>
 			<class>org.openjdk.jmc.agent.test.InstrumentMe</class>
@@ -101,29 +107,38 @@
 				<descriptor>()V</descriptor>
 			</method>
 			<fields>
 				<field>
 					<name>'STATIC_STRING_FIELD'</name>
-					<description>Capturing static field with simple field name</description>
+					<description>Capturing static field with simple field name
+					</description>
 					<expression>STATIC_STRING_FIELD</expression>
 				</field>
 				<field>
 					<name>'InstrumentMe.STATIC_STRING_FIELD'</name>
-					<description>Capturing static field with class name prefixed field name</description>
+					<description>Capturing static field with class name prefixed field
+						name
+					</description>
 					<expression>InstrumentMe.STATIC_STRING_FIELD</expression>
 				</field>
 				<field>
-					<name>'org.openjdk.jmc.agent.test.InstrumentMe.STATIC_STRING_FIELD'</name>
-					<description>Capturing static field with full qualified class prefixed name</description>
-					<expression>org.openjdk.jmc.agent.test.InstrumentMe.STATIC_STRING_FIELD</expression>
+					<name>'org.openjdk.jmc.agent.test.InstrumentMe.STATIC_STRING_FIELD'
+					</name>
+					<description>Capturing static field with full qualified class
+						prefixed name
+					</description>
+					<expression>org.openjdk.jmc.agent.test.InstrumentMe.STATIC_STRING_FIELD
+					</expression>
 				</field>
 			</fields>
 		</event>
 		<event id="demo.jfr.test12">
 			<name>JFR Hello World Event 12 %TEST_NAME%</name>
-			<description>Defined in the xml file and added by the agent. Should record the values of
-				'STATIC_OBJECT_FIELD.STATIC_STRING_FIELD' and 'STATIC_OBJECT_FIELD.instanceStringField'
+			<description>Defined in the xml file and added by the agent. Should
+				record the values of
+				'STATIC_OBJECT_FIELD.STATIC_STRING_FIELD' and
+				'STATIC_OBJECT_FIELD.instanceStringField'
 			</description>
 			<path>demo/jfrhelloworldevent12</path>
 			<stacktrace>true</stacktrace>
 			<class>org.openjdk.jmc.agent.test.InstrumentMe</class>
 			<method>
@@ -131,24 +146,28 @@
 				<descriptor>()V</descriptor>
 			</method>
 			<fields>
 				<field>
 					<name>'STATIC_OBJECT_FIELD.STATIC_STRING_FIELD'</name>
-					<description>Capturing static field on a object reference</description>
+					<description>Capturing static field on a object reference
+					</description>
 					<expression>STATIC_OBJECT_FIELD.STATIC_STRING_FIELD</expression>
 				</field>
 				<field>
 					<name>'STATIC_OBJECT_FIELD.instanceStringField'</name>
-					<description>Capturing non-static field on a object reference</description>
+					<description>Capturing non-static field on a object reference
+					</description>
 					<expression>STATIC_OBJECT_FIELD.instanceStringField</expression>
 				</field>
 			</fields>
 		</event>
 		<event id="demo.jfr.test13">
 			<name>JFR Hello World Event 13 %TEST_NAME%</name>
-			<description>Defined in the xml file and added by the agent. Should record the values of static
-				'STATIC_NULL_FIELD.STATIC_STRING_FIELD' and 'STATIC_NULL_FIELD.instanceStringField'
+			<description>Defined in the xml file and added by the agent. Should
+				record the values of static
+				'STATIC_NULL_FIELD.STATIC_STRING_FIELD'
+				and 'STATIC_NULL_FIELD.instanceStringField'
 			</description>
 			<path>demo/jfrhelloworldevent13</path>
 			<stacktrace>true</stacktrace>
 			<class>org.openjdk.jmc.agent.test.InstrumentMe</class>
 			<method>
@@ -156,36 +175,41 @@
 				<descriptor>()V</descriptor>
 			</method>
 			<fields>
 				<field>
 					<name>'STATIC_NULL_FIELD.STATIC_STRING_FIELD'</name>
-					<description>Capturing static field on a null object reference</description>
+					<description>Capturing static field on a null object reference
+					</description>
 					<expression>STATIC_NULL_FIELD.STATIC_STRING_FIELD</expression>
 				</field>
 				<field>
 					<name>'STATIC_NULL_FIELD.instanceStringField'</name>
-					<description>Capturing non-static field on a null object reference</description>
+					<description>Capturing non-static field on a null object reference
+					</description>
 					<expression>STATIC_NULL_FIELD.instanceStringField</expression>
 				</field>
 			</fields>
 		</event>
 		<event id="demo.jfr.testI1">
 			<name>JFR Hello World Instance Event 1 %TEST_NAME%</name>
-			<description>Defined in the xml file and added by the agent.</description>
+			<description>Defined in the xml file and added by the agent.
+			</description>
 			<path>demo/jfrhelloworldeventI1</path>
 			<stacktrace>true</stacktrace>
 			<class>org.openjdk.jmc.agent.test.InstrumentMe</class>
 			<method>
 				<name>printInstanceHelloWorldJFR1</name>
 				<descriptor>()V</descriptor>
 			</method>
-			<!-- location {ENTRY, EXIT, WRAP}-->
+			<!-- location {ENTRY, EXIT, WRAP} -->
 			<location>WRAP</location>
 		</event>
 		<event id="demo.jfr.testI2">
 			<name>JFR Hello World Instance Event 2 %TEST_NAME%</name>
-			<description>Defined in the xml file and added by the agent. Should record the parameters.</description>
+			<description>Defined in the xml file and added by the agent. Should
+				record the parameters.
+			</description>
 			<path>demo/jfrhelloworldeventI2</path>
 			<stacktrace>true</stacktrace>
 			<class>org.openjdk.jmc.agent.test.InstrumentMe</class>
 			<method>
 				<name>printInstanceHelloWorldJFR2</name>
@@ -208,11 +232,13 @@
 				</returnvalue>
 			</method>
 		</event>
 		<event id="demo.jfr.testI3">
 			<name>JFR Hello World Instance Event 3 %TEST_NAME%</name>
-			<description>Defined in the xml file and added by the agent. Should record the parameters.</description>
+			<description>Defined in the xml file and added by the agent. Should
+				record the parameters.
+			</description>
 			<path>demo/jfrhelloworldeventI3</path>
 			<stacktrace>true</stacktrace>
 			<class>org.openjdk.jmc.agent.test.InstrumentMe</class>
 			<method>
 				<name>printInstanceHelloWorldJFR3</name>
@@ -227,11 +253,13 @@
 				</parameters>
 			</method>
 		</event>
 		<event id="demo.jfr.testI4">
 			<name>JFR Hello World Instance Event 4 %TEST_NAME%</name>
-			<description>Defined in the xml file and added by the agent. Should record the parameters.</description>
+			<description>Defined in the xml file and added by the agent. Should
+				record the parameters.
+			</description>
 			<path>demo/jfrhelloworldeventI4</path>
 			<stacktrace>true</stacktrace>
 			<class>org.openjdk.jmc.agent.test.InstrumentMe</class>
 			<method>
 				<name>printInstanceHelloWorldJFR4</name>
@@ -246,11 +274,13 @@
 				</parameters>
 			</method>
 		</event>
 		<event id="demo.jfr.testI5">
 			<name>JFR Hello World Instance Event 5 %TEST_NAME%</name>
-			<description>Defined in the xml file and added by the agent. Should record the parameters.</description>
+			<description>Defined in the xml file and added by the agent. Should
+				record the parameters.
+			</description>
 			<path>demo/jfrhelloworldeventI5</path>
 			<stacktrace>true</stacktrace>
 			<class>org.openjdk.jmc.agent.test.InstrumentMe</class>
 			<method>
 				<name>printInstanceHelloWorldJFR5</name>
@@ -265,11 +295,13 @@
 				</parameters>
 			</method>
 		</event>
 		<event id="demo.jfr.testI6">
 			<name>JFR Hello World Instance Event 6 %TEST_NAME%</name>
-			<description>Defined in the xml file and added by the agent. Should record the return value.</description>
+			<description>Defined in the xml file and added by the agent. Should
+				record the return value.
+			</description>
 			<path>demo/jfrhelloworldeventI6</path>
 			<stacktrace>true</stacktrace>
 			<class>org.openjdk.jmc.agent.test.InstrumentMe</class>
 			<method>
 				<name>printInstanceHelloWorldJFR6</name>
@@ -281,11 +313,12 @@
 				</returnvalue>
 			</method>
 		</event>
 		<event id="demo.jfr.testI7">
 			<name>JFR Hello World Instance Event 7 %TEST_NAME%</name>
-			<description>Defined in the xml file and added by the agent. The original method contains a try-catch
+			<description>Defined in the xml file and added by the agent. The
+				original method contains a try-catch
 				clause.
 			</description>
 			<path>demo/jfrhelloworldeventI7</path>
 			<stacktrace>true</stacktrace>
 			<class>org.openjdk.jmc.agent.test.InstrumentMe</class>
@@ -294,11 +327,12 @@
 				<descriptor>()V</descriptor>
 			</method>
 		</event>
 		<event id="demo.jfr.testI8">
 			<name>JFR Hello World Instance Event 8 %TEST_NAME%</name>
-			<description>Defined in the xml file and added by the agent. Should record even if an exception is raised.
+			<description>Defined in the xml file and added by the agent. Should
+				record even if an exception is raised.
 			</description>
 			<path>demo/jfrhelloworldeventI8</path>
 			<stacktrace>true</stacktrace>
 			<class>org.openjdk.jmc.agent.test.InstrumentMe</class>
 			<method>
@@ -307,11 +341,12 @@
 			</method>
 			<rethrow>true</rethrow>
 		</event>
 		<event id="demo.jfr.testI9">
 			<name>JFR Hello World Instance Event 9 %TEST_NAME%</name>
-			<description>Defined in the xml file and added by the agent. Should not record if an exception is raised.
+			<description>Defined in the xml file and added by the agent. Should
+				not record if an exception is raised.
 			</description>
 			<path>demo/jfrhelloworldeventI9</path>
 			<stacktrace>true</stacktrace>
 			<class>org.openjdk.jmc.agent.test.InstrumentMe</class>
 			<method>
@@ -319,12 +354,14 @@
 				<descriptor>()V</descriptor>
 			</method>
 		</event>
 		<event id="demo.jfr.testI10">
 			<name>JFR Hello World Instance Event 10 %TEST_NAME%</name>
-			<description>Defined in the xml file and added by the agent. Should record even if an exception is raised,
-				but should not overwrite the existing try-catch clause.
+			<description>Defined in the xml file and added by the agent. Should
+				record even if an exception is raised,
+				but should not overwrite the
+				existing try-catch clause.
 			</description>
 			<path>demo/jfrhelloworldeventI10</path>
 			<stacktrace>true</stacktrace>
 			<class>org.openjdk.jmc.agent.test.InstrumentMe</class>
 			<method>
@@ -333,11 +370,12 @@
 			</method>
 			<rethrow>true</rethrow>
 		</event>
 		<event id="demo.jfr.testI11">
 			<name>JFR Hello World Instance Event 11 %TEST_NAME%</name>
-			<description>Defined in the xml file and added by the agent. Should record the value of instance reference
+			<description>Defined in the xml file and added by the agent. Should
+				record the value of instance reference
 				'instanceStringField'
 			</description>
 			<path>demo/jfrhelloworldeventI11</path>
 			<stacktrace>true</stacktrace>
 			<class>org.openjdk.jmc.agent.test.InstrumentMe</class>
@@ -346,28 +384,34 @@
 				<descriptor>()V</descriptor>
 			</method>
 			<fields>
 				<field>
 					<name>'instanceStringField'</name>
-					<description>Capturing instance field with simple field name</description>
+					<description>Capturing instance field with simple field name
+					</description>
 					<expression>instanceStringField</expression>
 				</field>
 				<field>
 					<name>'this.instanceStringField'</name>
-					<description>Capturing instance field with "this" prefixed field name</description>
+					<description>Capturing instance field with "this" prefixed field
+						name
+					</description>
 					<expression>this.instanceStringField</expression>
 				</field>
 				<field>
 					<name>'InstrumentMe.this.instanceStringField'</name>
-					<description>Capturing instance field with qualified "this" prefixed field name</description>
+					<description>Capturing instance field with qualified "this"
+						prefixed field name
+					</description>
 					<expression>InstrumentMe.this.instanceStringField</expression>
 				</field>
 			</fields>
 		</event>
 		<event id="demo.jfr.testI12">
 			<name>JFR Hello World Instance Event 12 %TEST_NAME%</name>
-			<description>Defined in the xml file and added by the agent. Should record the values of various
+			<description>Defined in the xml file and added by the agent. Should
+				record the values of various
 				references
 			</description>
 			<path>demo/jfrhelloworldeventI12</path>
 			<stacktrace>true</stacktrace>
 			<class>org.openjdk.jmc.agent.test.InstrumentMe$MyInnerClass</class>
@@ -376,43 +420,54 @@
 				<descriptor>()V</descriptor>
 			</method>
 			<fields>
 				<field>
 					<name>'innerClassField'</name>
-					<description>Capturing inner class field with simple field name</description>
+					<description>Capturing inner class field with simple field name
+					</description>
 					<expression>innerClassField</expression>
 				</field>
 				<field>
 					<name>'this.innerClassField'</name>
-					<description>Capturing inner class field with "this" prefixed field name</description>
+					<description>Capturing inner class field with "this" prefixed field
+						name
+					</description>
 					<expression>this.innerClassField</expression>
 				</field>
 
 				<field>
 					<name>'instanceStringField'</name>
-					<description>Capturing outer class field with simple field name</description>
+					<description>Capturing outer class field with simple field name
+					</description>
 					<expression>instanceStringField</expression>
 				</field>
 				<field>
 					<name>'InstrumentMe.this.instanceStringField'</name>
-					<description>Capturing outer class field with qualified "this" prefixed field name</description>
+					<description>Capturing outer class field with qualified "this"
+						prefixed field name
+					</description>
 					<expression>InstrumentMe.this.instanceStringField</expression>
 				</field>
 				<field>
 					<name>'super.instanceStringField'</name>
-					<description>Capturing super class field with "super" prefixed field name</description>
+					<description>Capturing super class field with "super" prefixed
+						field name
+					</description>
 					<expression>super.instanceStringField</expression>
 				</field>
 
 				<field>
 					<name>'STATIC_STRING_FIELD'</name>
-					<description>Capturing outer class field with simple field name</description>
+					<description>Capturing outer class field with simple field name
+					</description>
 					<expression>STATIC_STRING_FIELD</expression>
 				</field>
 				<field>
 					<name>'InstrumentMe.STATIC_STRING_FIELD'</name>
-					<description>Capturing outer class field with class name prefixed field name</description>
+					<description>Capturing outer class field with class name prefixed
+						field name
+					</description>
 					<expression>InstrumentMe.STATIC_STRING_FIELD</expression>
 				</field>
 			</fields>
 		</event>
 	</events>
