diff a/core/tests/org.openjdk.jmc.common.test/src/test/java/org/openjdk/jmc/common/test/mock/item/MockItemCollection.java b/core/tests/org.openjdk.jmc.common.test/src/test/java/org/openjdk/jmc/common/test/mock/item/MockItemCollection.java
--- a/core/tests/org.openjdk.jmc.common.test/src/test/java/org/openjdk/jmc/common/test/mock/item/MockItemCollection.java
+++ b/core/tests/org.openjdk.jmc.common.test/src/test/java/org/openjdk/jmc/common/test/mock/item/MockItemCollection.java
@@ -31,21 +31,25 @@
  * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 package org.openjdk.jmc.common.test.mock.item;
 
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.Iterator;
 import java.util.List;
+import java.util.Set;
 
 import org.openjdk.jmc.common.collection.IteratorToolkit;
 import org.openjdk.jmc.common.item.IAggregator;
 import org.openjdk.jmc.common.item.IItem;
 import org.openjdk.jmc.common.item.IItemCollection;
 import org.openjdk.jmc.common.item.IItemConsumer;
 import org.openjdk.jmc.common.item.IItemFilter;
 import org.openjdk.jmc.common.item.IItemIterable;
 import org.openjdk.jmc.common.item.IType;
+import org.openjdk.jmc.common.unit.IQuantity;
+import org.openjdk.jmc.common.unit.IRange;
 
 public class MockItemCollection<T, CT extends IType<?>> implements IItemCollection {
 	private List<IItem> items = new ArrayList<>();
 	private IType<?> type;
 
@@ -119,6 +123,11 @@
 			public void remove() {
 				throw new UnsupportedOperationException();
 			}
 		});
 	}
+
+	@Override
+	public Set<IRange<IQuantity>> getTimeRanges() {
+		return Collections.emptySet();
+	}
 }
