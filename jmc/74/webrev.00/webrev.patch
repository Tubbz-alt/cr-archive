diff a/agent/.classpath b/agent/.classpath
--- a/agent/.classpath
+++ b/agent/.classpath
@@ -4,11 +4,15 @@
 		<attributes>
 			<attribute name="optional" value="true"/>
 			<attribute name="maven.pomderived" value="true"/>
 		</attributes>
 	</classpathentry>
-	<classpathentry kind="src" path="src/main/resources"/>
+	<classpathentry excluding="**" kind="src" output="target/classes" path="src/main/resources">
+		<attributes>
+			<attribute name="maven.pomderived" value="true"/>
+		</attributes>
+	</classpathentry>
 	<classpathentry kind="src" output="target/test-classes" path="src/test/java">
 		<attributes>
 			<attribute name="test" value="true"/>
 			<attribute name="optional" value="true"/>
 			<attribute name="maven.pomderived" value="true"/>
diff a/agent/.settings/org.eclipse.jdt.core.prefs b/agent/.settings/org.eclipse.jdt.core.prefs
--- a/agent/.settings/org.eclipse.jdt.core.prefs
+++ b/agent/.settings/org.eclipse.jdt.core.prefs
@@ -1,11 +1,13 @@
 eclipse.preferences.version=1
 org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.7
 org.eclipse.jdt.core.compiler.compliance=1.7
+org.eclipse.jdt.core.compiler.problem.enablePreviewFeatures=disabled
 org.eclipse.jdt.core.compiler.problem.forbiddenReference=ignore
 org.eclipse.jdt.core.compiler.problem.invalidJavadocTags=disabled
 org.eclipse.jdt.core.compiler.problem.missingJavadocTagDescription=no_tag
 org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
 org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=ignore
+org.eclipse.jdt.core.compiler.problem.reportPreviewFeatures=ignore
 org.eclipse.jdt.core.compiler.problem.unusedWarningToken=ignore
 org.eclipse.jdt.core.compiler.release=disabled
 org.eclipse.jdt.core.compiler.source=1.7
diff a/agent/src/main/java/org/openjdk/jmc/agent/util/expression/IllegalSyntaxException.java b/agent/src/main/java/org/openjdk/jmc/agent/util/expression/IllegalSyntaxException.java
--- a/agent/src/main/java/org/openjdk/jmc/agent/util/expression/IllegalSyntaxException.java
+++ b/agent/src/main/java/org/openjdk/jmc/agent/util/expression/IllegalSyntaxException.java
@@ -31,10 +31,12 @@
  * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 package org.openjdk.jmc.agent.util.expression;
 
 public class IllegalSyntaxException extends Exception {
+	private static final long serialVersionUID = 1L;
+
 	public IllegalSyntaxException() {
 		super();
 	}
 
 	public IllegalSyntaxException(String message) {
diff a/agent/src/test/java/org/openjdk/jmc/agent/test/InstrumentMe.java b/agent/src/test/java/org/openjdk/jmc/agent/test/InstrumentMe.java
--- a/agent/src/test/java/org/openjdk/jmc/agent/test/InstrumentMe.java
+++ b/agent/src/test/java/org/openjdk/jmc/agent/test/InstrumentMe.java
@@ -51,10 +51,11 @@
 		public String instanceStringField = "org.openjdk.jmc.agent.test.InstrumentMe.MyPojo.instanceStringField";
 		public static String STATIC_STRING_FIELD = "org.openjdk.jmc.agent.test.InstrumentMe.MyPojo.STATIC_STRING_FIELD";
 	}
 	
 	public class MyInnerClass extends InstrumentMe{
+		@SuppressWarnings("unused")
 		private final String innerClassField = "org.openjdk.jmc.agent.test.InstrumentMe.MyInnerClass.innerClassField";
 
 		public void instrumentationPoint() {
 			// no op
 		}
