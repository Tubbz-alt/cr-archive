diff a/agent/src/main/java/org/openjdk/jmc/agent/jfr/JFRTransformDescriptor.java b/agent/src/main/java/org/openjdk/jmc/agent/jfr/JFRTransformDescriptor.java
--- a/agent/src/main/java/org/openjdk/jmc/agent/jfr/JFRTransformDescriptor.java
+++ b/agent/src/main/java/org/openjdk/jmc/agent/jfr/JFRTransformDescriptor.java
@@ -64,10 +64,11 @@
 	private final String eventPath;
 	private final boolean recordStackTrace;
 	private final boolean useRethrow;
 	private final boolean allowToString;
 	private final boolean allowConverter;
+	private final boolean emitOnException;
 	private final List<Parameter> parameters;
 	private final ReturnValue returnValue;
 	private final List<Field> fields;
 
 	public JFRTransformDescriptor(String id, String className, Method method,
@@ -80,10 +81,11 @@
 		eventDescription = initializeEventDescription();
 		recordStackTrace = getBoolean(ATTRIBUTE_STACK_TRACE, true);
 		useRethrow = getBoolean(ATTRIBUTE_RETHROW, false);
 		allowToString = getBoolean(ATTRIBUTE_ALLOW_TO_STRING, false);
 		allowConverter = getBoolean(ATTRIBUTE_ALLOW_CONVERTER, false);
+		emitOnException = getBoolean(ATTRIBUTE_EMIT_ON_EXCEPTION, false);
 		this.parameters = parameters;
 		this.fields = fields;
 		this.returnValue = returnValue;
 	}
 
@@ -147,10 +149,14 @@
 	}
 	
 	public boolean isAllowConverter() {
 		return allowConverter;
 	}
+	
+	public boolean isEmitOnException() {
+		return emitOnException;
+	}
 
 	private String initializeClassPrefix() {
 		String prefix = getTransformationAttribute(ATTRIBUTE_CLASS_PREFIX);
 		if (prefix != null && TypeUtils.isValidJavaIdentifier(prefix)) {
 			return prefix;
